[["\\code\n (defun foo (&key radix (type 'integer)) ...)\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(&key[\\n\\s]*radix[\\n\\s]*\\(type[\\n\\s]*'integer\\)\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defun foo (&key ((:radix radix)) ((:type type) 'integer)) ...)\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(&key[\\n\\s]*\\(\\(:radix[\\n\\s]*radix\\)\\)[\\n\\s]*\\(\\(:type[\\n\\s]*type\\)[\\n\\s]*'integer\\)\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n;;; The caller can supply :ALLOW-OTHER-KEYS T to suppress checking.\n ((lambda (&key x) x) :x 1 :y 2 :allow-other-keys t) *→* 1\n;;; The callee can use &ALLOW-OTHER-KEYS to suppress checking.\n ((lambda (&key x &allow-other-keys) x) :x 1 :y 2) *→* 1\n;;; :ALLOW-OTHER-KEYS NIL is always permitted.\n ((lambda (&key) t) :allow-other-keys nil) *→* T\n;;; As with other keyword arguments, only the left-most pair\n;;; named :ALLOW-OTHER-KEYS has any effect.\n ((lambda (&key x) x) \n  :x 1 :y 2 :allow-other-keys t :allow-other-keys nil)\n*→* 1\n;;; Only the left-most pair named :ALLOW-OTHER-KEYS has any effect,\n;;; so in safe code this signals a PROGRAM-ERROR (and might enter the\n;;; debugger).  In unsafe code, the consequences are undefined.\n ((lambda (&key x) x)                   ;This call is not valid\n  :x 1 :y 2 :allow-other-keys nil :allow-other-keys t)\n\\endcode",";;;[\\n\\s]*The[\\n\\s]*caller[\\n\\s]*can[\\n\\s]*supply[\\n\\s]*:ALLOW-OTHER-KEYS[\\n\\s]*T[\\n\\s]*to[\\n\\s]*suppress[\\n\\s]*checking\\.[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&key[\\n\\s]*x\\)[\\n\\s]*x\\)[\\n\\s]*:x[\\n\\s]*1[\\n\\s]*:y[\\n\\s]*2[\\n\\s]*:allow-other-keys[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*callee[\\n\\s]*can[\\n\\s]*use[\\n\\s]*&ALLOW-OTHER-KEYS[\\n\\s]*to[\\n\\s]*suppress[\\n\\s]*checking\\.[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&key[\\n\\s]*x[\\n\\s]*&allow-other-keys\\)[\\n\\s]*x\\)[\\n\\s]*:x[\\n\\s]*1[\\n\\s]*:y[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*;;;[\\n\\s]*:ALLOW-OTHER-KEYS[\\n\\s]*NIL[\\n\\s]*is[\\n\\s]*always[\\n\\s]*permitted\\.[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&key\\)[\\n\\s]*t\\)[\\n\\s]*:allow-other-keys[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*;;;[\\n\\s]*As[\\n\\s]*with[\\n\\s]*other[\\n\\s]*keyword[\\n\\s]*arguments,[\\n\\s]*only[\\n\\s]*the[\\n\\s]*left-most[\\n\\s]*pair[\\n\\s]*;;;[\\n\\s]*named[\\n\\s]*:ALLOW-OTHER-KEYS[\\n\\s]*has[\\n\\s]*any[\\n\\s]*effect\\.[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&key[\\n\\s]*x\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:x[\\n\\s]*1[\\n\\s]*:y[\\n\\s]*2[\\n\\s]*:allow-other-keys[\\n\\s]*t[\\n\\s]*:allow-other-keys[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*;;;[\\n\\s]*Only[\\n\\s]*the[\\n\\s]*left-most[\\n\\s]*pair[\\n\\s]*named[\\n\\s]*:ALLOW-OTHER-KEYS[\\n\\s]*has[\\n\\s]*any[\\n\\s]*effect,[\\n\\s]*;;;[\\n\\s]*so[\\n\\s]*in[\\n\\s]*safe[\\n\\s]*code[\\n\\s]*this[\\n\\s]*signals[\\n\\s]*a[\\n\\s]*PROGRAM-ERROR[\\n\\s]*\\(and[\\n\\s]*might[\\n\\s]*enter[\\n\\s]*the[\\n\\s]*;;;[\\n\\s]*debugger\\)\\.[\\n\\s]*[\\n\\s]*In[\\n\\s]*unsafe[\\n\\s]*code,[\\n\\s]*the[\\n\\s]*consequences[\\n\\s]*are[\\n\\s]*undefined\\.[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&key[\\n\\s]*x\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;This[\\n\\s]*call[\\n\\s]*is[\\n\\s]*not[\\n\\s]*valid[\\n\\s]*[\\n\\s]*[\\n\\s]*:x[\\n\\s]*1[\\n\\s]*:y[\\n\\s]*2[\\n\\s]*:allow-other-keys[\\n\\s]*nil[\\n\\s]*:allow-other-keys[\\n\\s]*t\\)"],["\\code\n (lambda (x y &aux (a (car x)) (b 2) c) (list x y a b c))\n    \\EQ (lambda (x y) (let* ((a (car x)) (b 2) c) (list x y a b c)))\n\\endcode","\\(lambda[\\n\\s]*\\(x[\\n\\s]*y[\\n\\s]*&aux[\\n\\s]*\\(a[\\n\\s]*\\(car[\\n\\s]*x\\)\\)[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*c\\)[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(lambda[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(a[\\n\\s]*\\(car[\\n\\s]*x\\)\\)[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*c\\)[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)"],["\\code\n ((lambda (a b) (+ a (* b 3))) 4 5) *→* 19\n ((lambda (a &optional (b 2)) (+ a (* b 3))) 4 5) *→* 19\n ((lambda (a &optional (b 2)) (+ a (* b 3))) 4) *→* 10\n ((lambda (&optional (a 2 b) (c 3 d) &rest x) (list a b c d x)))\n*→* (2 NIL 3 NIL NIL)\n ((lambda (&optional (a 2 b) (c 3 d) &rest x) (list a b c d x)) 6)\n*→* (6 T 3 NIL NIL)\n ((lambda (&optional (a 2 b) (c 3 d) &rest x) (list a b c d x)) 6 3)\n*→* (6 T 3 T NIL)\n ((lambda (&optional (a 2 b) (c 3 d) &rest x) (list a b c d x)) 6 3 8)\n*→* (6 T 3 T (8))\n ((lambda (&optional (a 2 b) (c 3 d) &rest x) (list a b c d x))\n  6 3 8 9 10 11)\n*→* (6 t 3 t (8 9 10 11))\n\\endcode","\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*\\(\\*[\\n\\s]*b[\\n\\s]*3\\)\\)\\)[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*19[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*\\(\\*[\\n\\s]*b[\\n\\s]*3\\)\\)\\)[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*19[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*\\(\\*[\\n\\s]*b[\\n\\s]*3\\)\\)\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(a[\\n\\s]*2[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*3[\\n\\s]*d\\)[\\n\\s]*&rest[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*NIL[\\n\\s]*3[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(a[\\n\\s]*2[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*3[\\n\\s]*d\\)[\\n\\s]*&rest[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*T[\\n\\s]*3[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(a[\\n\\s]*2[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*3[\\n\\s]*d\\)[\\n\\s]*&rest[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*6[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*T[\\n\\s]*3[\\n\\s]*T[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(a[\\n\\s]*2[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*3[\\n\\s]*d\\)[\\n\\s]*&rest[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*6[\\n\\s]*3[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*T[\\n\\s]*3[\\n\\s]*T[\\n\\s]*\\(8\\)\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(a[\\n\\s]*2[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*3[\\n\\s]*d\\)[\\n\\s]*&rest[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*6[\\n\\s]*3[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10[\\n\\s]*11\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*t[\\n\\s]*3[\\n\\s]*t[\\n\\s]*\\(8[\\n\\s]*9[\\n\\s]*10[\\n\\s]*11\\)\\)"],["\\code\n ((lambda (a b &key c d) (list a b c d)) 1 2) *→* (1 2 NIL NIL)\n ((lambda (a b &key c d) (list a b c d)) 1 2 :c 6) *→* (1 2 6 NIL)\n ((lambda (a b &key c d) (list a b c d)) 1 2 :d 8) *→* (1 2 NIL 8)\n ((lambda (a b &key c d) (list a b c d)) 1 2 :c 6 :d 8) *→* (1 2 6 8)\n ((lambda (a b &key c d) (list a b c d)) 1 2 :d 8 :c 6) *→* (1 2 6 8)\n ((lambda (a b &key c d) (list a b c d)) :a 1 :d 8 :c 6) *→* (:a 1 6 8)\n ((lambda (a b &key c d) (list a b c d)) :a :b :c :d) *→* (:a :b :d NIL)\n ((lambda (a b &key ((:sea c)) d) (list a b c d)) 1 2 :sea 6) *→* (1 2 6 NIL)\n ((lambda (a b &key ((c c)) d) (list a b c d)) 1 2 'c 6) *→* (1 2 6 NIL)\n\\endcode","\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*:c[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*6[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*:d[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*NIL[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*:c[\\n\\s]*6[\\n\\s]*:d[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*6[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*:d[\\n\\s]*8[\\n\\s]*:c[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*6[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*:a[\\n\\s]*1[\\n\\s]*:d[\\n\\s]*8[\\n\\s]*:c[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:a[\\n\\s]*1[\\n\\s]*6[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*:a[\\n\\s]*:b[\\n\\s]*:c[\\n\\s]*:d\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:a[\\n\\s]*:b[\\n\\s]*:d[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*\\(\\(:sea[\\n\\s]*c\\)\\)[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*:sea[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*6[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&key[\\n\\s]*\\(\\(c[\\n\\s]*c\\)\\)[\\n\\s]*d\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*'c[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*6[\\n\\s]*NIL\\)"],["\\code\n ((lambda (a &optional (b 3) &rest x &key c (d a))\n    (list a b c d x)) 1)   \n*→* (1 3 NIL 1 ()) \n ((lambda (a &optional (b 3) &rest x &key c (d a))\n    (list a b c d x)) 1 2)\n*→* (1 2 NIL 1 ())\n ((lambda (a &optional (b 3) &rest x &key c (d a))\n    (list a b c d x)) :c 7)\n*→* (:c 7 NIL :c ())\n ((lambda (a &optional (b 3) &rest x &key c (d a))\n    (list a b c d x)) 1 6 :c 7)\n*→* (1 6 7 1 (:c 7))\n ((lambda (a &optional (b 3) &rest x &key c (d a))\n    (list a b c d x)) 1 6 :d 8)\n*→* (1 6 NIL 8 (:d 8))\n ((lambda (a &optional (b 3) &rest x &key c (d a))\n    (list a b c d x)) 1 6 :d 8 :c 9 :d 10)\n*→* (1 6 9 8 (:d 8 :c 9 :d 10))\n\\endcode","\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*NIL[\\n\\s]*1[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*NIL[\\n\\s]*1[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*:c[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:c[\\n\\s]*7[\\n\\s]*NIL[\\n\\s]*:c[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*1[\\n\\s]*6[\\n\\s]*:c[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*6[\\n\\s]*7[\\n\\s]*1[\\n\\s]*\\(:c[\\n\\s]*7\\)\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*1[\\n\\s]*6[\\n\\s]*:d[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*6[\\n\\s]*NIL[\\n\\s]*8[\\n\\s]*\\(:d[\\n\\s]*8\\)\\)[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*x\\)\\)[\\n\\s]*1[\\n\\s]*6[\\n\\s]*:d[\\n\\s]*8[\\n\\s]*:c[\\n\\s]*9[\\n\\s]*:d[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*6[\\n\\s]*9[\\n\\s]*8[\\n\\s]*\\(:d[\\n\\s]*8[\\n\\s]*:c[\\n\\s]*9[\\n\\s]*:d[\\n\\s]*10\\)\\)"],["\\code\n (defun array-of-strings (str dims &rest named-pairs\n                          &key (start 0) end &allow-other-keys)\n   (apply #'make-array dims\n          :initial-element (subseq str start end)\n          :allow-other-keys t\n          named-pairs))\n\\endcode","\\(defun[\\n\\s]*array-of-strings[\\n\\s]*\\(str[\\n\\s]*dims[\\n\\s]*&rest[\\n\\s]*named-pairs[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&key[\\n\\s]*\\(start[\\n\\s]*0\\)[\\n\\s]*end[\\n\\s]*&allow-other-keys\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'make-array[\\n\\s]*dims[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*\\(subseq[\\n\\s]*str[\\n\\s]*start[\\n\\s]*end\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:allow-other-keys[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*named-pairs\\)\\)"],["\\code\n (:constructor create-foo\n         (a &optional b (c 'sea) &rest d &aux e (f 'eff)))\n\\endcode","\\(:constructor[\\n\\s]*create-foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*b[\\n\\s]*\\(c[\\n\\s]*'sea\\)[\\n\\s]*&rest[\\n\\s]*d[\\n\\s]*&aux[\\n\\s]*e[\\n\\s]*\\(f[\\n\\s]*'eff\\)\\)\\)"],["\\code\n (defstruct (foo (:constructor CREATE-FOO (a &optional b (c 'sea)\n                                             &key (d 2)\n                                             &aux e (f 'eff))))\n   (a 1) (b 2) (c 3) (d 4) (e 5) (f 6))\n \n (create-foo 10) *→* #S(FOO A 10 B 2 C SEA D 2 E \\term&#123;implemention-dependent&#125; F EFF)\n (create-foo 10 'bee 'see :d 'dee) \n*→* #S(FOO A 10 B BEE C SEE D DEE E \\term&#123;implemention-dependent&#125; F EFF)\n\\endcode","\\(defstruct[\\n\\s]*\\(foo[\\n\\s]*\\(:constructor[\\n\\s]*CREATE-FOO[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*b[\\n\\s]*\\(c[\\n\\s]*'sea\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&key[\\n\\s]*\\(d[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&aux[\\n\\s]*e[\\n\\s]*\\(f[\\n\\s]*'eff\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*\\(c[\\n\\s]*3\\)[\\n\\s]*\\(d[\\n\\s]*4\\)[\\n\\s]*\\(e[\\n\\s]*5\\)[\\n\\s]*\\(f[\\n\\s]*6\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(create-foo[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(FOO[\\n\\s]*A[\\n\\s]*10[\\n\\s]*B[\\n\\s]*2[\\n\\s]*C[\\n\\s]*SEA[\\n\\s]*D[\\n\\s]*2[\\n\\s]*E[\\n\\s]*\\\\term&#123;implemention-dependent&#125;[\\n\\s]*F[\\n\\s]*EFF\\)[\\n\\s]*[\\n\\s]*\\(create-foo[\\n\\s]*10[\\n\\s]*'bee[\\n\\s]*'see[\\n\\s]*:d[\\n\\s]*'dee\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(FOO[\\n\\s]*A[\\n\\s]*10[\\n\\s]*B[\\n\\s]*BEE[\\n\\s]*C[\\n\\s]*SEE[\\n\\s]*D[\\n\\s]*DEE[\\n\\s]*E[\\n\\s]*\\\\term&#123;implemention-dependent&#125;[\\n\\s]*F[\\n\\s]*EFF\\)"],["\\code\n (create-foo 1 2)\n\\endcode","\\(create-foo[\\n\\s]*1[\\n\\s]*2\\)"],["\\code\n (make-foo :a 1 :b 2)\n\\endcode","\\(make-foo[\\n\\s]*:a[\\n\\s]*1[\\n\\s]*:b[\\n\\s]*2\\)"],["\\code\n (defstruct (frob (:constructor create-frob\n                  (a &key (b 3 have-b) (c-token 'c) \n                          (c (list c-token (if have-b 7 2))))))\n         a b c)\n\\endcode","\\(defstruct[\\n\\s]*\\(frob[\\n\\s]*\\(:constructor[\\n\\s]*create-frob[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*&key[\\n\\s]*\\(b[\\n\\s]*3[\\n\\s]*have-b\\)[\\n\\s]*\\(c-token[\\n\\s]*'c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(c[\\n\\s]*\\(list[\\n\\s]*c-token[\\n\\s]*\\(if[\\n\\s]*have-b[\\n\\s]*7[\\n\\s]*2\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)"],["\\code\n A&#60;B&#60;C&#60;D&#60;E&#60;F&#60;G&#60;H&#60;I&#60;J&#60;K&#60;L&#60;M&#60;N&#60;O&#60;P&#60;Q&#60;R&#60;S&#60;T&#60;U&#60;V&#60;W&#60;X&#60;Y&#60;Z\n a&#60;b&#60;c&#60;d&#60;e&#60;f&#60;g&#60;h&#60;i&#60;j&#60;k&#60;l&#60;m&#60;n&#60;o&#60;p&#60;q&#60;r&#60;s&#60;t&#60;u&#60;v&#60;w&#60;x&#60;y&#60;z\n 0&#60;1&#60;2&#60;3&#60;4&#60;5&#60;6&#60;7&#60;8&#60;9\n either 9&#60;A or Z&#60;0\n either 9&#60;a or z&#60;0                                                      \n\\endcode","A&#60;B&#60;C&#60;D&#60;E&#60;F&#60;G&#60;H&#60;I&#60;J&#60;K&#60;L&#60;M&#60;N&#60;O&#60;P&#60;Q&#60;R&#60;S&#60;T&#60;U&#60;V&#60;W&#60;X&#60;Y&#60;Z[\\n\\s]*[\\n\\s]*a&#60;b&#60;c&#60;d&#60;e&#60;f&#60;g&#60;h&#60;i&#60;j&#60;k&#60;l&#60;m&#60;n&#60;o&#60;p&#60;q&#60;r&#60;s&#60;t&#60;u&#60;v&#60;w&#60;x&#60;y&#60;z[\\n\\s]*[\\n\\s]*0&#60;1&#60;2&#60;3&#60;4&#60;5&#60;6&#60;7&#60;8&#60;9[\\n\\s]*[\\n\\s]*either[\\n\\s]*9&#60;A[\\n\\s]*or[\\n\\s]*Z&#60;0[\\n\\s]*[\\n\\s]*either[\\n\\s]*9&#60;a[\\n\\s]*or[\\n\\s]*z&#60;0"],["\\code\n (defclass C1 () \n     ((S1 :initform 5.4 :type number) \n      (S2 :allocation :class)))\n \n (defclass C2 (C1) \n     ((S1 :initform 5 :type integer)\n      (S2 :allocation :instance)\n      (S3 :accessor C2-S3)))\n\\endcode","\\(defclass[\\n\\s]*C1[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(S1[\\n\\s]*:initform[\\n\\s]*5\\.4[\\n\\s]*:type[\\n\\s]*number\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(S2[\\n\\s]*:allocation[\\n\\s]*:class\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*C2[\\n\\s]*\\(C1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(S1[\\n\\s]*:initform[\\n\\s]*5[\\n\\s]*:type[\\n\\s]*integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(S2[\\n\\s]*:allocation[\\n\\s]*:instance\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(S3[\\n\\s]*:accessor[\\n\\s]*C2-S3\\)\\)\\)"],["\\code\n (defclass pie (apple cinnamon) ())\n \n (defclass apple (fruit) ())\n \n (defclass cinnamon (spice) ())\n \n (defclass fruit (food) ())\n\n (defclass spice (food) ())\n\n (defclass food () ())\n\\endcode","\\(defclass[\\n\\s]*pie[\\n\\s]*\\(apple[\\n\\s]*cinnamon\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*apple[\\n\\s]*\\(fruit\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*cinnamon[\\n\\s]*\\(spice\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*fruit[\\n\\s]*\\(food\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*spice[\\n\\s]*\\(food\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*food[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)"],["\\code\n (defclass new-class (fruit apple) ())\n \n (defclass apple (fruit) ())\n\\endcode","\\(defclass[\\n\\s]*new-class[\\n\\s]*\\(fruit[\\n\\s]*apple\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*apple[\\n\\s]*\\(fruit\\)[\\n\\s]*\\(\\)\\)"],["\\code\n (defclass pie (apple cinnamon) ())\n \n (defclass pastry (cinnamon apple) ())\n \n (defclass apple () ())\n \n (defclass cinnamon () ())\n\\endcode","\\(defclass[\\n\\s]*pie[\\n\\s]*\\(apple[\\n\\s]*cinnamon\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*pastry[\\n\\s]*\\(cinnamon[\\n\\s]*apple\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*apple[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*cinnamon[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)"],["\\code\n (defmacro foo (x) `(car ,x))\n (eval-when (:execute :compile-toplevel :load-toplevel)\n   (print (foo '(a b c))))\n\\endcode","\\(defmacro[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*`\\(car[\\n\\s]*,x\\)\\)[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:compile-toplevel[\\n\\s]*:load-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(foo[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)\\)"],["\\code\n (eval-when (:execute :compile-toplevel :load-toplevel)\n   (defmacro foo (x) `(car ,x))\n   (print (foo '(a b c))))\n\\endcode","\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:compile-toplevel[\\n\\s]*:load-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*`\\(car[\\n\\s]*,x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(foo[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)\\)"],["\\code\n (typep \\param&#123;c&#125; 'condition) *→ true*\n\\endcode","\\(typep[\\n\\s]*\\\\param&#123;c&#125;[\\n\\s]*'condition\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (apply #'make-condition \\param&#123;datum&#125; \\param&#123;arguments&#125;)\n\\endcode","\\(apply[\\n\\s]*#'make-condition[\\n\\s]*\\\\param&#123;datum&#125;[\\n\\s]*\\\\param&#123;arguments&#125;\\)"],["\\code\n (make-condition \\param&#123;defaulted-type&#125; \n                 :format-control \\param&#123;datum&#125;\n                 :format-arguments \\param&#123;arguments&#125;)\n\\endcode","\\(make-condition[\\n\\s]*\\\\param&#123;defaulted-type&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-control[\\n\\s]*\\\\param&#123;datum&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-arguments[\\n\\s]*\\\\param&#123;arguments&#125;\\)"],["\\code\n(let ((c (make-condition 'arithmetic-error :operator '/ :operands '(7 0))))\n  (error c))\n\\EQ (error 'arithmetic-error :operator '/ :operands '(7 0))\n\n(error \"Bad luck.\")\n\\EQ (error 'simple-error :format-control \"Bad luck.\" :format-arguments '())\n\\endcode","\\(let[\\n\\s]*\\(\\(c[\\n\\s]*\\(make-condition[\\n\\s]*'arithmetic-error[\\n\\s]*:operator[\\n\\s]*'/[\\n\\s]*:operands[\\n\\s]*'\\(7[\\n\\s]*0\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*c\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(error[\\n\\s]*'arithmetic-error[\\n\\s]*:operator[\\n\\s]*'/[\\n\\s]*:operands[\\n\\s]*'\\(7[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Bad[\\n\\s]*luck\\.\"\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(error[\\n\\s]*'simple-error[\\n\\s]*:format-control[\\n\\s]*\"Bad[\\n\\s]*luck\\.\"[\\n\\s]*:format-arguments[\\n\\s]*'\\(\\)\\)"],["\\code\n (error \"This is a message\")  ; Not recommended\n (error \"this is a message.\") ; Not recommended\n\n (error \"This is a message.\") ; Recommended instead\n\\endcode","\\(error[\\n\\s]*\"This[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\"\\)[\\n\\s]*[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*recommended[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"this[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\\.\"\\)[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*recommended[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"This[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\\.\"\\)[\\n\\s]*;[\\n\\s]*Recommended[\\n\\s]*instead"],["\\code\n (error \"This is a message.~%\")   ; Not recommended\n (error \"~&This is a message.\")   ; Not recommended\n (error \"~&This is a message.~%\") ; Not recommended\n\n (error \"This is a message.\")     ; Recommended instead\n\\endcode","\\(error[\\n\\s]*\"This[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\\.~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*recommended[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"~&This[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*recommended[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"~&This[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\\.~%\"\\)[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*recommended[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"This[\\n\\s]*is[\\n\\s]*a[\\n\\s]*message\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*Recommended[\\n\\s]*instead"],["\\code\n (defun test ()\n   (error \"This is an error message.~\\%It has two lines.\"))\n\n ;; Implementation A\n (test)\n This is an error message.\n It has two lines.\n\n ;; Implementation B\n (test)\n ;; Error: This is an error message.\n ;;        It has two lines.\n\n ;; Implementation C\n (test)\n &#62;&#62; Error: This is an error message. \n           It has two lines.\n\\endcode","\\(defun[\\n\\s]*test[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"This[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error[\\n\\s]*message\\.~\\\\%It[\\n\\s]*has[\\n\\s]*two[\\n\\s]*lines\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(test\\)[\\n\\s]*[\\n\\s]*This[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error[\\n\\s]*message\\.[\\n\\s]*[\\n\\s]*It[\\n\\s]*has[\\n\\s]*two[\\n\\s]*lines\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*B[\\n\\s]*[\\n\\s]*\\(test\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Error:[\\n\\s]*This[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error[\\n\\s]*message\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*It[\\n\\s]*has[\\n\\s]*two[\\n\\s]*lines\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*C[\\n\\s]*[\\n\\s]*\\(test\\)[\\n\\s]*[\\n\\s]*&#62;&#62;[\\n\\s]*Error:[\\n\\s]*This[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error[\\n\\s]*message\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*It[\\n\\s]*has[\\n\\s]*two[\\n\\s]*lines\\."],["\\code\n (evenp most-positive-fixnum) *→* \\term&#123;implementation-dependent&#125;\n (random) *→* \\term&#123;implementation-dependent&#125;\n (&#62; lambda-parameters-limit 93) *→* \\term&#123;implementation-dependent&#125;\n (char-name #\\\\A) *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(evenp[\\n\\s]*most-positive-fixnum\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(random\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(&#62;[\\n\\s]*lambda-parameters-limit[\\n\\s]*93\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n(defun foo ()\n  \\#+ACME (acme:initialize-something)\n  (print 'hello-there))\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\#\\+ACME[\\n\\s]*\\(acme:initialize-something\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'hello-there\\)\\)"],["\\code\n% %  (defun bar (x y)           ;[1] 1st occurrence of x\n% %    (let ((old-x x)          ;[2] 2nd occurrence of x \n% %          (x y))             ;[3] 3rd occurrence of x\n% %      (declare (special x))\n% %      (list old-x x)))\n% % \\endcode","%[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*bar[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*1st[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(old-x[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*2nd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*3rd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*old-x[\\n\\s]*x\\)\\)\\)[\\n\\s]*%[\\n\\s]*%"],["\\code\n%  (let ((x 1))                ;[1] 1st occurrence of x\n%    (declare (special x))     ;[2] 2nd occurrence of x\n%    (let ((x 2))              ;[3] 3rd occurrence of x\n%      (let ((old-x x)         ;[4] 4th occurrence of x\n%            (x 3))            ;[5] 5th occurrence of x\n%        (declare (special x)) ;[6] 6th occurrence of x\n%        (list old-x x))))     ;[7] 7th occurrence of x\n% *→* (2 3)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*1st[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*2nd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*3rd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(old-x[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*4th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*5th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*;\\[6\\][\\n\\s]*6th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*old-x[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[7\\][\\n\\s]*7th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*%"],["\\code\n%  (lambda (&optional (x (foo 1))) ;[1]\n%    (declare (notinline foo))     ;[2]\n%    (foo x))                      ;[3]\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(x[\\n\\s]*\\(foo[\\n\\s]*1\\)\\)\\)[\\n\\s]*;\\[1\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*%"],["\\code\n%  (locally (declare (notinline foo)) ;[1]\n%    (lambda (&optional (x (foo 1)))  ;[2]\n%      (foo x)))                      ;[3]\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*;\\[1\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(x[\\n\\s]*\\(foo[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*%"],["\\code\n%  (lambda (&optional                               ;[1]\n%             (x (locally (declare (notinline foo)) ;[2]\n%                  (foo 1))))                       ;[3]\n%    (declare (notinline foo))                      ;[4]\n%    (foo x))                                       ;[5]\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*;\\[2\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*%"],["\\code\n%  (defun foo (x)                               ;[1]\n%    (if (typep x 'integer)                     ;[2]\n%        (list (let ((y (+ x 42)))              ;[3]\n%                (declare (fixnum x y))         ;[4]\n%                y)                             ;[5]\n%              (+ x 42))                        ;[6]\n%        `(foo ,x)))                            ;[7]\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(typep[\\n\\s]*x[\\n\\s]*'integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*42\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*42\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[6\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(foo[\\n\\s]*,x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[7\\][\\n\\s]*%"],["\\code\n%  (foo (- most-negative-fixnum 1))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*\\(-[\\n\\s]*most-negative-fixnum[\\n\\s]*1\\)\\)[\\n\\s]*%"],["\\code\n%  (defun foo (x)                               ;[1]\n%    (if (typep x 'integer)                     ;[2]\n%        (list (let ((y (+ x 42)))              ;[3]\n%                (declare (fixnum x))           ;[4]\n%                x                              ;[5]\n%                y)                             ;[6]\n%              (+ x 42))                        ;[7]\n%        `(foo ,x)))                            ;[8]\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(typep[\\n\\s]*x[\\n\\s]*'integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*42\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[6\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*42\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[7\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(foo[\\n\\s]*,x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[8\\][\\n\\s]*%"],["\\code\n%  (foo most-positive-fixnum)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*most-positive-fixnum\\)[\\n\\s]*%"],["\\code\n%  (defun foo (x)                               ;[1]\n%    (if (typep x 'integer)                     ;[2]\n%        (list (let ((y (the fixnum (+ x 42)))) ;[3]\n%                (declare (fixnum x y))         ;[4]\n%                x                              ;[5]\n%                y)                             ;[6]\n%              (+ x 42))                        ;[7]\n%        `(foo ,x)))                            ;[8]\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(typep[\\n\\s]*x[\\n\\s]*'integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*42\\)\\)\\)\\)[\\n\\s]*;\\[3\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[6\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*42\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[7\\][\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(foo[\\n\\s]*,x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[8\\][\\n\\s]*%"],["\\code\n (let ((x 1))                ;[1] 1st occurrence of x\n   (declare (special x))     ;[2] 2nd occurrence of x\n   (let ((x 2))              ;[3] 3rd occurrence of x\n     (let ((old-x x)         ;[4] 4th occurrence of x\n           (x 3))            ;[5] 5th occurrence of x\n       (declare (special x)) ;[6] 6th occurrence of x\n       (list old-x x))))     ;[7] 7th occurrence of x\n*→* (2 3)\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*1st[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*2nd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*3rd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(old-x[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*4th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*5th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*;\\[6\\][\\n\\s]*6th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*old-x[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[7\\][\\n\\s]*7th[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3\\)"],["\\code\n (lambda (&optional (x (foo 1))) ;[1]\n   (declare (notinline foo))     ;[2]\n   (foo x))                      ;[3]\n\\endcode","\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(x[\\n\\s]*\\(foo[\\n\\s]*1\\)\\)\\)[\\n\\s]*;\\[1\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\]"],["\\code\n (locally (declare (notinline foo)) ;[1]\n   (lambda (&optional (x (foo 1)))  ;[2]\n     (foo x)))                      ;[3]\n\\endcode","\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*;\\[1\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(x[\\n\\s]*\\(foo[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\]"],["\\code\n (lambda (&optional                               ;[1]\n            (x (locally (declare (notinline foo)) ;[2]\n                 (foo 1))))                       ;[3]\n   (declare (notinline foo))                      ;[4]\n   (foo x))                                       ;[5]\n\\endcode","\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*;\\[2\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[5\\]"],["\\code\n (let ((x  1))                     ;[1]\n   (declare (special x))           ;[2]\n     (let ((x 2))                  ;[3]\n       (dotimes (i x x)            ;[4]\n         (declare (special x)))))  ;[5]\n*→* 1\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[4\\][\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*;\\[5\\][\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (x y)\n (x B A C y)\n (x A B B B B B C y)\n (x C B A B B B y)\n\\endcode","\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*B[\\n\\s]*A[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*A[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*C[\\n\\s]*B[\\n\\s]*A[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*y\\)"],["\\code\n (x B B A A C C y)\n (x C B C y)\n\\endcode","\\(x[\\n\\s]*B[\\n\\s]*B[\\n\\s]*A[\\n\\s]*A[\\n\\s]*C[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*C[\\n\\s]*B[\\n\\s]*C[\\n\\s]*y\\)"],["\\code\n (x B y)\n (x B A C y)\n (x A B B B B B C y)\n (x C B A B B B y)\n\\endcode","\\(x[\\n\\s]*B[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*B[\\n\\s]*A[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*A[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*C[\\n\\s]*B[\\n\\s]*A[\\n\\s]*B[\\n\\s]*B[\\n\\s]*B[\\n\\s]*y\\)"],["\\code\n (x y)\n (x B B A A C C y)\n (x C B C y)\n\\endcode","\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*B[\\n\\s]*B[\\n\\s]*A[\\n\\s]*A[\\n\\s]*C[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*C[\\n\\s]*B[\\n\\s]*C[\\n\\s]*y\\)"],["\\code\n (x A B C y)\n (x A C B y)\n (x A B y)\n (x B A C y)\n (x B C A y)\n (x B A y)\n (x C A B y)\n (x C B A y)\n\\endcode","\\(x[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*A[\\n\\s]*C[\\n\\s]*B[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*A[\\n\\s]*B[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*B[\\n\\s]*A[\\n\\s]*C[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*B[\\n\\s]*C[\\n\\s]*A[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*B[\\n\\s]*A[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*C[\\n\\s]*A[\\n\\s]*B[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*C[\\n\\s]*B[\\n\\s]*A[\\n\\s]*y\\)"],["\\code\n (+ 4 5) *→* 9 \n\\endcode","\\(\\+[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9"],["\\code\n (truncate 7 5)\n*→* 1 2\n (truncate 7 5) \n*→* 1\n   2\n (truncate 7 5)\n*→* 1, 2\n\\endcode","\\(truncate[\\n\\s]*7[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(truncate[\\n\\s]*7[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(truncate[\\n\\s]*7[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2"],["\\code\n (char-name #\\\\a)\n*→* NIL\n\\OV \"LOWERCASE-a\"\n\\OV \"Small-A\"\n\\OV \"LA01\"\n\\endcode","\\(char-name[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\"LOWERCASE-a\"[\\n\\s]*\\\\OV[\\n\\s]*\"Small-A\"[\\n\\s]*\\\\OV[\\n\\s]*\"LA01\""],["\\code\n (char-name #\\\\a) *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(char-name[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (function-lambda-expression \n    (funcall #'(lambda (x) #'(lambda () x)) nil))\n*→* NIL, true, NIL\n\\OV (LAMBDA () X), true, NIL\n\\NV NIL, false, NIL\n\\NV (LAMBDA () X), false, NIL\n\\endcode","\\(function-lambda-expression[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*x\\)\\)[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*X\\),[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\NV[\\n\\s]*NIL,[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*\\\\NV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*X\\),[\\n\\s]*false,[\\n\\s]*NIL"],["\\code\n (gcd x (gcd y z)) \\EQ (gcd (gcd x y) z)\n\\endcode","\\(gcd[\\n\\s]*x[\\n\\s]*\\(gcd[\\n\\s]*y[\\n\\s]*z\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(gcd[\\n\\s]*\\(gcd[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*z\\)"],["\\code\n (+ 1 (print (+ (sqrt (read)) (sqrt (read)))))\n\\OUT \\IN&#123;9 16 &#125;\n\\OUT 7\n*→* 8\n\\endcode","\\(\\+[\\n\\s]*1[\\n\\s]*\\(print[\\n\\s]*\\(\\+[\\n\\s]*\\(sqrt[\\n\\s]*\\(read\\)\\)[\\n\\s]*\\(sqrt[\\n\\s]*\\(read\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\\\IN&#123;9[\\n\\s]*16[\\n\\s]*&#125;[\\n\\s]*\\\\OUT[\\n\\s]*7[\\n\\s]*\\*\\→\\*[\\n\\s]*8"],["\\code\n (progn (format t \"~&Who? \") (read-line))\n\\OUT Who? \\IN&#123;Fred, Mary, and Sally\\CRLF&#125;\n*→* \"Fred, Mary, and Sally\", false\n\\endcode","\\(progn[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Who\\?[\\n\\s]*\"\\)[\\n\\s]*\\(read-line\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Who\\?[\\n\\s]*\\\\IN&#123;Fred,[\\n\\s]*Mary,[\\n\\s]*and[\\n\\s]*Sally\\\\CRLF&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Fred,[\\n\\s]*Mary,[\\n\\s]*and[\\n\\s]*Sally\",[\\n\\s]*false"],["\\code\n (print ())                          ;avoided\n (defun three nil 3)                 ;avoided \n '(nil nil)                          ;list of two symbols\n '(() ())                            ;list of empty lists\n (defun three () 3)                  ;Emphasize empty parameter list.\n (append '() '()) *→* ()              ;Emphasize use of empty lists\n (not nil) *→ true*                   ;Emphasize use as Boolean false\n (get 'nil 'color)                   ;Emphasize use as a symbol\n\\endcode","\\(print[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;avoided[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*three[\\n\\s]*nil[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;avoided[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(nil[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;list[\\n\\s]*of[\\n\\s]*two[\\n\\s]*symbols[\\n\\s]*[\\n\\s]*'\\(\\(\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;list[\\n\\s]*of[\\n\\s]*empty[\\n\\s]*lists[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*three[\\n\\s]*\\(\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Emphasize[\\n\\s]*empty[\\n\\s]*parameter[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*'\\(\\)[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Emphasize[\\n\\s]*use[\\n\\s]*of[\\n\\s]*empty[\\n\\s]*lists[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Emphasize[\\n\\s]*use[\\n\\s]*as[\\n\\s]*Boolean[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*'nil[\\n\\s]*'color\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Emphasize[\\n\\s]*use[\\n\\s]*as[\\n\\s]*a[\\n\\s]*symbol"],["\\code\n (defun add-some (x) \n   (defun add-some (x) (+ x 2))\n   (+ x 1)) *→* ADD-SOME\n (mapcar 'add-some '(1 2 3 4))\n*→* (2 3 4 5)\n\\OV (2 4 5 6)\n\\endcode","\\(defun[\\n\\s]*add-some[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*add-some[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ADD-SOME[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*'add-some[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(2[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)"],["\\code\n (defun foo (x) (+ x 1))\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*1\\)\\)"],["\\code\n (find 'a '(a b . c))\n\\endcode","\\(find[\\n\\s]*'a[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*\\.[\\n\\s]*c\\)\\)"],["\\code\n (find 'd '(a b . c))\n\\endcode","\\(find[\\n\\s]*'d[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*\\.[\\n\\s]*c\\)\\)"],["\\code\n (find 'd '#1=(a b . #1#))\n\\endcode","\\(find[\\n\\s]*'d[\\n\\s]*'#1=\\(a[\\n\\s]*b[\\n\\s]*\\.[\\n\\s]*#1#\\)\\)"],["\\code\n (let ((a (list 2 1 4 3 7 6 'five)))\n   (ignore-errors (sort a #'&#60;))\n   a)\n*→* (1 2 3 4 6 7 FIVE)\n\\OV (2 1 4 3 7 6 FIVE)\n\\OV (2)\n\n (prog foo ((a (list 1 2 3 4 5 6 7 8 9 10)))\n   (sort a #'(lambda (x y) (if (zerop (random 5)) (return-from foo a) (&#62; x y)))))\n*→* (1 2 3 4 5 6 7 8 9 10)\n\\OV (3 4 5 6 2 7 8 9 10 1)\n\\OV (1 2 4 3)\n\\endcode","\\(let[\\n\\s]*\\(\\(a[\\n\\s]*\\(list[\\n\\s]*2[\\n\\s]*1[\\n\\s]*4[\\n\\s]*3[\\n\\s]*7[\\n\\s]*6[\\n\\s]*'five\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ignore-errors[\\n\\s]*\\(sort[\\n\\s]*a[\\n\\s]*#'&#60;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*6[\\n\\s]*7[\\n\\s]*FIVE\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(2[\\n\\s]*1[\\n\\s]*4[\\n\\s]*3[\\n\\s]*7[\\n\\s]*6[\\n\\s]*FIVE\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prog[\\n\\s]*foo[\\n\\s]*\\(\\(a[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sort[\\n\\s]*a[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(if[\\n\\s]*\\(zerop[\\n\\s]*\\(random[\\n\\s]*5\\)\\)[\\n\\s]*\\(return-from[\\n\\s]*foo[\\n\\s]*a\\)[\\n\\s]*\\(&#62;[\\n\\s]*x[\\n\\s]*y\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*2[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10[\\n\\s]*1\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*3\\)"],["\\code\n (let ((x 1))            ;Binds a special variable X\n   (declare (special x))\n   (let ((x 2))          ;Binds a lexical variable X\n     (+ x                ;Reads a lexical variable X\n        (locally (declare (special x))\n                 x))))   ;Reads a special variable X\n*→* 3\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Binds[\\n\\s]*a[\\n\\s]*special[\\n\\s]*variable[\\n\\s]*X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Binds[\\n\\s]*a[\\n\\s]*lexical[\\n\\s]*variable[\\n\\s]*X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Reads[\\n\\s]*a[\\n\\s]*lexical[\\n\\s]*variable[\\n\\s]*X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Reads[\\n\\s]*a[\\n\\s]*special[\\n\\s]*variable[\\n\\s]*X[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (defun foo (x) (+ x 3))\n (defun bar () (setf (symbol-function 'foo) #'(lambda (x) (+ x 4))))\n (foo (progn (bar) 20))\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*bar[\\n\\s]*\\(\\)[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*4\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*\\(progn[\\n\\s]*\\(bar\\)[\\n\\s]*20\\)\\)"],["\\code\n 3 *→* 3\n #c(2/3 5/8) *→* #C(2/3 5/8)\n #p\"S:[BILL]OTHELLO.TXT\" *→* #P\"S:[BILL]OTHELLO.TXT\"\n #(a b c) *→* #(A B C)\n \"fred smith\" *→* \"fred smith\"\n\\endcode","3[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*#c\\(2/3[\\n\\s]*5/8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(2/3[\\n\\s]*5/8\\)[\\n\\s]*[\\n\\s]*#p\"S:\\[BILL\\]OTHELLO\\.TXT\"[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"S:\\[BILL\\]OTHELLO\\.TXT\"[\\n\\s]*[\\n\\s]*#\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\"fred[\\n\\s]*smith\"[\\n\\s]*\\*\\→\\*[\\n\\s]*\"fred[\\n\\s]*smith\""],["\\code\n (defun two-funs (x)\n   (list (function (lambda () x))\n         (function (lambda (y) (setq x y)))))\n (setq funs (two-funs 6))\n (funcall (car funs)) *→* 6\n (funcall (cadr funs) 43) *→* 43\n (funcall (car funs)) *→* 43\n\\endcode","\\(defun[\\n\\s]*two-funs[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(y\\)[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*y\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*funs[\\n\\s]*\\(two-funs[\\n\\s]*6\\)\\)[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(car[\\n\\s]*funs\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(cadr[\\n\\s]*funs\\)[\\n\\s]*43\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*43[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(car[\\n\\s]*funs\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*43"],["\\code\n (let ((x 5) (funs '()))\n   (dotimes (j 10)                          \n     (push #'(lambda (z)                        \n               (if (null z) (setq x 0) (+ x z)))\n           funs))\n   funs)\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)[\\n\\s]*\\(funs[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*#'\\(lambda[\\n\\s]*\\(z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(null[\\n\\s]*z\\)[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*0\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)"],["\\code\n (let ((funs '()))     \n   (dotimes (j 10)\n     (let ((x 5))\n       (push (function (lambda (z)\n                        (if (null z) (setq x 0) (+ x z))))\n             funs)))\n  funs)\n\\endcode","\\(let[\\n\\s]*\\(\\(funs[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(null[\\n\\s]*z\\)[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*0\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*z\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)"],["\\code\n (let ((funs '()))\n   (dotimes (j 10)\n     (let ((x 5))\n       (push (function (lambda (z) (+ x z)))\n            funs)))\n   funs)\n\\endcode","\\(let[\\n\\s]*\\(\\(funs[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(z\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)"],["\\code\n (let ((funs '()))\n   (dotimes (j 10)\n     (push (function (lambda (z) (+ 5 z)))\n           funs))\n  funs)\n\\endcode","\\(let[\\n\\s]*\\(\\(funs[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(z\\)[\\n\\s]*\\(\\+[\\n\\s]*5[\\n\\s]*z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*funs\\)"],["\\code\n (mapcar (function (lambda (x) (+ x 2))) y)\n\\endcode","\\(mapcar[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*2\\)\\)\\)[\\n\\s]*y\\)"],["\\code\n (defun test (x z)\n   (let ((z (* x 2)))\n     (print z))\n   z)\n\\endcode","\\(defun[\\n\\s]*test[\\n\\s]*\\(x[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(z[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*z\\)"],["\\code\n (defun contorted-example (f g x)\n   (if (= x 0)\n       (funcall f)\n       (block here\n          (+ 5 (contorted-example g\n                                  #'(lambda () (return-from here 4))\n                                  (- x 1))))))\n\\endcode","\\(defun[\\n\\s]*contorted-example[\\n\\s]*\\(f[\\n\\s]*g[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*x[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*here[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*5[\\n\\s]*\\(contorted-example[\\n\\s]*g[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*here[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*1\\)\\)\\)\\)\\)\\)"],["\\code\n (contorted-example nil nil 2)\n   (block here\\ssso ...)\n     (contorted-example nil #'(lambda () (return-from here\\ssso 4)) 1)\n       (block here\\ssst ...)\n         (contorted-example #'(lambda () (return-from here\\ssso 4))\n                            #'(lambda () (return-from here\\ssst 4))\n                            0)\n             (funcall f)\n                    where f *→* #'(lambda () (return-from here\\ssso 4))\n                 (return-from here\\ssso 4)\n\\endcode","\\(contorted-example[\\n\\s]*nil[\\n\\s]*nil[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*here\\\\ssso[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(contorted-example[\\n\\s]*nil[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*here\\\\ssso[\\n\\s]*4\\)\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*here\\\\ssst[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(contorted-example[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*here\\\\ssso[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*here\\\\ssst[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*where[\\n\\s]*f[\\n\\s]*\\*\\→\\*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*here\\\\ssso[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*here\\\\ssso[\\n\\s]*4\\)"],["\\code\n (defun invalid-example ()\n   (let ((y (block here #'(lambda (z) (return-from here z)))))\n     (if (numberp y) y (funcall y 5))))\n\\endcode","\\(defun[\\n\\s]*invalid-example[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*\\(block[\\n\\s]*here[\\n\\s]*#'\\(lambda[\\n\\s]*\\(z\\)[\\n\\s]*\\(return-from[\\n\\s]*here[\\n\\s]*z\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*y\\)[\\n\\s]*y[\\n\\s]*\\(funcall[\\n\\s]*y[\\n\\s]*5\\)\\)\\)\\)"],["\\code\n (defun fun1 (x)\n   (catch 'trap (+ 3 (fun2 x))))\n (defun fun2 (y)\n   (catch 'trap (* 5 (fun3 y))))\n (defun fun3 (z)\n   (throw 'trap z))\n\\endcode","\\(defun[\\n\\s]*fun1[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'trap[\\n\\s]*\\(\\+[\\n\\s]*3[\\n\\s]*\\(fun2[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*fun2[\\n\\s]*\\(y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'trap[\\n\\s]*\\(\\*[\\n\\s]*5[\\n\\s]*\\(fun3[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*fun3[\\n\\s]*\\(z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'trap[\\n\\s]*z\\)\\)"],["\\code\n (defun fun2 (y)\n   (catch 'snare (* 5 (fun3 y))))\n\\endcode","\\(defun[\\n\\s]*fun2[\\n\\s]*\\(y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'snare[\\n\\s]*\\(\\*[\\n\\s]*5[\\n\\s]*\\(fun3[\\n\\s]*y\\)\\)\\)\\)"],["\\code\n (format nil \"~C\" #\\\\A) *→* \"A\"\n (format nil \"~C\" #\\\\Space) *→* \" \"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~C\"[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"A\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~C\"[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*\""],["\\code\n (format nil \"~:C\" #\\\\A) *→* \"A\"\n (format nil \"~:C\" #\\\\Space) *→* \"Space\"\n;; This next example assumes an implementation-defined \"Control\" attribute.\n (format nil \"~:C\" #\\\\Control-Space)\n*→* \"Control-Space\"\n\\OV \"c-Space\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~:C\"[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"A\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~:C\"[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Space\"[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*next[\\n\\s]*example[\\n\\s]*assumes[\\n\\s]*an[\\n\\s]*implementation-defined[\\n\\s]*\"Control\"[\\n\\s]*attribute\\.[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~:C\"[\\n\\s]*#\\\\\\\\Control-Space\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Control-Space\"[\\n\\s]*\\\\OV[\\n\\s]*\"c-Space\""],["\\code\n (format nil \"~:@C\" #\\\\Control-Partial) *→* \"Control-&#123;\\Partial&#125; (Top-F)\"  \n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~:@C\"[\\n\\s]*#\\\\\\\\Control-Partial\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Control-&#123;\\\\Partial&#125;[\\n\\s]*\\(Top-F\\)\""],["\\code\n (format nil \"~,,' ,4:B\" 13) *→* \"1101\"\n (format nil \"~,,' ,4:B\" 17) *→* \"1 0001\"\n (format nil \"~19,0,' ,4:B\" 3333) *→* \"0000 1101 0000 0101\"\n (format nil \"~3,,,' ,2:R\" 17) *→* \"1 22\"\n (format nil \"~,,'|,2:D\" #xFFFF) *→*  \"6|55|35\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~,,'[\\n\\s]*,4:B\"[\\n\\s]*13\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1101\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~,,'[\\n\\s]*,4:B\"[\\n\\s]*17\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1[\\n\\s]*0001\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~19,0,'[\\n\\s]*,4:B\"[\\n\\s]*3333\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0000[\\n\\s]*1101[\\n\\s]*0000[\\n\\s]*0101\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~3,,,'[\\n\\s]*,2:R\"[\\n\\s]*17\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1[\\n\\s]*22\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~,,'|,2:D\"[\\n\\s]*#xFFFF\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"6|55|35\""],["\\code\n \"~%;; ~\\lbr\\ ~&#60;~%;; ~1:; ~S~&#62;~\\hat\\ ,~\\rbr\\ .~%\"\n\\endcode","\"~%;;[\\n\\s]*~\\\\lbr\\\\[\\n\\s]*~&#60;~%;;[\\n\\s]*~1:;[\\n\\s]*~S~&#62;~\\\\hat\\\\[\\n\\s]*,~\\\\rbr\\\\[\\n\\s]*\\.~%\""],["\\code\n \"~%;; ~\\lbr\\ ~&#60;~%;; ~1,50:; ~S~&#62;~\\hat\\ ,~\\rbr \\ .~%\"\n\\endcode","\"~%;;[\\n\\s]*~\\\\lbr\\\\[\\n\\s]*~&#60;~%;;[\\n\\s]*~1,50:;[\\n\\s]*~S~&#62;~\\\\hat\\\\[\\n\\s]*,~\\\\rbr[\\n\\s]*\\\\[\\n\\s]*\\.~%\""],["\\code\n (setq *print-level* nil *print-length* 5)\n (format nil\n        \"~@[ print level = ~D~]~@[ print length = ~D~]\"\n        *print-level* *print-length*)\n*→*  \" print length = 5\"\n\\endcode","\\(setq[\\n\\s]*\\*print-level\\*[\\n\\s]*nil[\\n\\s]*\\*print-length\\*[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"~@\\[[\\n\\s]*print[\\n\\s]*level[\\n\\s]*=[\\n\\s]*~D~\\]~@\\[[\\n\\s]*print[\\n\\s]*length[\\n\\s]*=[\\n\\s]*~D~\\]\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*print-level\\*[\\n\\s]*\\*print-length\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"[\\n\\s]*print[\\n\\s]*length[\\n\\s]*=[\\n\\s]*5\""],["\\code\n (format \\param&#123;stream&#125; \"...~@[\\param&#123;str&#125;~]...\" ...)\n\\EQ (format \\param&#123;stream&#125; \"...~:[~;~:*\\param&#123;str&#125;~]...\" ...)\n\\endcode","\\(format[\\n\\s]*\\\\param&#123;stream&#125;[\\n\\s]*\"\\.\\.\\.~@\\[\\\\param&#123;str&#125;~\\]\\.\\.\\.\"[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(format[\\n\\s]*\\\\param&#123;stream&#125;[\\n\\s]*\"\\.\\.\\.~:\\[~;~:\\*\\\\param&#123;str&#125;~\\]\\.\\.\\.\"[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (setq foo \"Items:~#[ none~; ~S~; ~S and ~S~\n           ~:;~@\\&#123;~#[~; and~] ~S~\\hat\\ ,~\\&#125;~].\")\n (format nil foo) *→*  \"Items: none.\"\n (format nil foo 'foo) *→*  \"Items: FOO.\"\n (format nil foo 'foo 'bar) *→*  \"Items: FOO and BAR.\"\n (format nil foo 'foo 'bar 'baz) *→*  \"Items: FOO, BAR, and BAZ.\"\n (format nil foo 'foo 'bar 'baz 'quux) *→*  \"Items: FOO, BAR, BAZ, and QUUX.\"\n\\endcode","\\(setq[\\n\\s]*foo[\\n\\s]*\"Items:~#\\[[\\n\\s]*none~;[\\n\\s]*~S~;[\\n\\s]*~S[\\n\\s]*and[\\n\\s]*~S~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~:;~@\\\\&#123;~#\\[~;[\\n\\s]*and~\\][\\n\\s]*~S~\\\\hat\\\\[\\n\\s]*,~\\\\&#125;~\\]\\.\"\\)[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"Items:[\\n\\s]*none\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*foo[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"Items:[\\n\\s]*FOO\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*foo[\\n\\s]*'foo[\\n\\s]*'bar\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"Items:[\\n\\s]*FOO[\\n\\s]*and[\\n\\s]*BAR\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*foo[\\n\\s]*'foo[\\n\\s]*'bar[\\n\\s]*'baz\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"Items:[\\n\\s]*FOO,[\\n\\s]*BAR,[\\n\\s]*and[\\n\\s]*BAZ\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*foo[\\n\\s]*'foo[\\n\\s]*'bar[\\n\\s]*'baz[\\n\\s]*'quux\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"Items:[\\n\\s]*FOO,[\\n\\s]*BAR,[\\n\\s]*BAZ,[\\n\\s]*and[\\n\\s]*QUUX\\.\""],["\\code\n (format nil \"The winners are:~\\&#123; ~S~\\&#125;.\" \n         '(fred harry jill)) \n*→* \"The winners are: FRED HARRY JILL.\"                           \n (format nil \"Pairs:~\\&#123; &#60;~S,~S&#62;~\\&#125;.\" \n         '(a 1 b 2 c 3))\n*→* \"Pairs: &#60;A,1&#62; &#60;B,2&#62; &#60;C,3&#62;.\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"The[\\n\\s]*winners[\\n\\s]*are:~\\\\&#123;[\\n\\s]*~S~\\\\&#125;\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(fred[\\n\\s]*harry[\\n\\s]*jill\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"The[\\n\\s]*winners[\\n\\s]*are:[\\n\\s]*FRED[\\n\\s]*HARRY[\\n\\s]*JILL\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"Pairs:~\\\\&#123;[\\n\\s]*&#60;~S,~S&#62;~\\\\&#125;\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2[\\n\\s]*c[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Pairs:[\\n\\s]*&#60;A,1&#62;[\\n\\s]*&#60;B,2&#62;[\\n\\s]*&#60;C,3&#62;\\.\""],["\\code\n (format nil \"Pairs:~:\\lbr &#60;~S,~S&#62;~\\rbr\\ .\" \n                 '((a 1) (b 2) (c 3)))\n*→* \"Pairs: &#60;A,1&#62; &#60;B,2&#62; &#60;C,3&#62;.\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"Pairs:~:\\\\lbr[\\n\\s]*&#60;~S,~S&#62;~\\\\rbr\\\\[\\n\\s]*\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*\\(c[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Pairs:[\\n\\s]*&#60;A,1&#62;[\\n\\s]*&#60;B,2&#62;[\\n\\s]*&#60;C,3&#62;\\.\""],["\\code\n (format nil \"Pairs:~@\\lbr &#60;~S,~S&#62;~\\rbr\\ .\" 'a 1 'b 2 'c 3)\n*→* \"Pairs: &#60;A,1&#62; &#60;B,2&#62; &#60;C,3&#62;.\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"Pairs:~@\\\\lbr[\\n\\s]*&#60;~S,~S&#62;~\\\\rbr\\\\[\\n\\s]*\\.\"[\\n\\s]*'a[\\n\\s]*1[\\n\\s]*'b[\\n\\s]*2[\\n\\s]*'c[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Pairs:[\\n\\s]*&#60;A,1&#62;[\\n\\s]*&#60;B,2&#62;[\\n\\s]*&#60;C,3&#62;\\.\""],["\\code\n (format nil \"Pairs:~:@\\lbr &#60;~S,~S&#62;~\\rbr\\ .\" \n              '(a 1) '(b 2) '(c 3)) \n*→* \"Pairs: &#60;A,1&#62; &#60;B,2&#62; &#60;C,3&#62;.\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"Pairs:~:@\\\\lbr[\\n\\s]*&#60;~S,~S&#62;~\\\\rbr\\\\[\\n\\s]*\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(a[\\n\\s]*1\\)[\\n\\s]*'\\(b[\\n\\s]*2\\)[\\n\\s]*'\\(c[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Pairs:[\\n\\s]*&#60;A,1&#62;[\\n\\s]*&#60;B,2&#62;[\\n\\s]*&#60;C,3&#62;\\.\""],["\\code\n    (apply #'format stream string arguments)\n \\EQ (format stream \"~1\\&#123;~:\\&#125;\" string arguments)\n\\endcode","\\(apply[\\n\\s]*#'format[\\n\\s]*stream[\\n\\s]*string[\\n\\s]*arguments\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"~1\\\\&#123;~:\\\\&#125;\"[\\n\\s]*string[\\n\\s]*arguments\\)"],["\\code\n (format nil \"~? ~D\" \"&#60;~A ~D&#62;\" '(\"Foo\" 5) 7) *→* \"&#60;Foo 5&#62; 7\"\n (format nil \"~? ~D\" \"&#60;~A ~D&#62;\" '(\"Foo\" 5 14) 7) *→* \"&#60;Foo 5&#62; 7\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~\\?[\\n\\s]*~D\"[\\n\\s]*\"&#60;~A[\\n\\s]*~D&#62;\"[\\n\\s]*'\\(\"Foo\"[\\n\\s]*5\\)[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"&#60;Foo[\\n\\s]*5&#62;[\\n\\s]*7\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~\\?[\\n\\s]*~D\"[\\n\\s]*\"&#60;~A[\\n\\s]*~D&#62;\"[\\n\\s]*'\\(\"Foo\"[\\n\\s]*5[\\n\\s]*14\\)[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"&#60;Foo[\\n\\s]*5&#62;[\\n\\s]*7\""],["\\code\n (format nil \"~@? ~D\" \"&#60;~A ~D&#62;\" \"Foo\" 5 7) *→* \"&#60;Foo 5&#62; 7\"\n (format nil \"~@? ~D\" \"&#60;~A ~D&#62;\" \"Foo\" 5 14 7) *→* \"&#60;Foo 5&#62; 14\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~@\\?[\\n\\s]*~D\"[\\n\\s]*\"&#60;~A[\\n\\s]*~D&#62;\"[\\n\\s]*\"Foo\"[\\n\\s]*5[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"&#60;Foo[\\n\\s]*5&#62;[\\n\\s]*7\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~@\\?[\\n\\s]*~D\"[\\n\\s]*\"&#60;~A[\\n\\s]*~D&#62;\"[\\n\\s]*\"Foo\"[\\n\\s]*5[\\n\\s]*14[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"&#60;Foo[\\n\\s]*5&#62;[\\n\\s]*14\""],["\\code\n (format nil \"~@R ~(~@R~)\" 14 14) \n*→* \"XIV xiv\"\n (defun f (n) (format nil \"~@(~R~) error~:P detected.\" n)) *→* F\n (f 0) *→* \"Zero errors detected.\"\n (f 1) *→* \"One error detected.\"\n (f 23) *→* \"Twenty-three errors detected.\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~@R[\\n\\s]*~\\(~@R~\\)\"[\\n\\s]*14[\\n\\s]*14\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"XIV[\\n\\s]*xiv\"[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f[\\n\\s]*\\(n\\)[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~@\\(~R~\\)[\\n\\s]*error~:P[\\n\\s]*detected\\.\"[\\n\\s]*n\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F[\\n\\s]*[\\n\\s]*\\(f[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Zero[\\n\\s]*errors[\\n\\s]*detected\\.\"[\\n\\s]*[\\n\\s]*\\(f[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"One[\\n\\s]*error[\\n\\s]*detected\\.\"[\\n\\s]*[\\n\\s]*\\(f[\\n\\s]*23\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Twenty-three[\\n\\s]*errors[\\n\\s]*detected\\.\""],["\\code\n (format nil \"~@(how is ~:(BOB SMITH~)?~)\")\n *→* \"How is bob smith?\"\n \\NV \"How is Bob Smith?\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~@\\(how[\\n\\s]*is[\\n\\s]*~:\\(BOB[\\n\\s]*SMITH~\\)\\?~\\)\"\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"How[\\n\\s]*is[\\n\\s]*bob[\\n\\s]*smith\\?\"[\\n\\s]*[\\n\\s]*\\\\NV[\\n\\s]*\"How[\\n\\s]*is[\\n\\s]*Bob[\\n\\s]*Smith\\?\""],["\\code\n (format nil \"~D tr~:@P/~D win~:P\" 7 1) *→* \"7 tries/1 win\"\n (format nil \"~D tr~:@P/~D win~:P\" 1 0) *→* \"1 try/0 wins\"\n (format nil \"~D tr~:@P/~D win~:P\" 1 3) *→* \"1 try/3 wins\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~D[\\n\\s]*tr~:@P/~D[\\n\\s]*win~:P\"[\\n\\s]*7[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"7[\\n\\s]*tries/1[\\n\\s]*win\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~D[\\n\\s]*tr~:@P/~D[\\n\\s]*win~:P\"[\\n\\s]*1[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1[\\n\\s]*try/0[\\n\\s]*wins\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~D[\\n\\s]*tr~:@P/~D[\\n\\s]*win~:P\"[\\n\\s]*1[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1[\\n\\s]*try/3[\\n\\s]*wins\""],["\\code\n (setq donestr \"Done.~&#123;\\hat&#125; ~D warning~:P.~&#123;\\hat&#125; ~D error~:P.\")\n*→* \"Done.~&#123;\\hat&#125; ~D warning~:P.~&#123;\\hat&#125; ~D error~:P.\"\n (format nil donestr) *→* \"Done.\"\n (format nil donestr 3) *→* \"Done. 3 warnings.\"\n (format nil donestr 1 5) *→* \"Done. 1 warning. 5 errors.\"\n\\endcode","\\(setq[\\n\\s]*donestr[\\n\\s]*\"Done\\.~&#123;\\\\hat&#125;[\\n\\s]*~D[\\n\\s]*warning~:P\\.~&#123;\\\\hat&#125;[\\n\\s]*~D[\\n\\s]*error~:P\\.\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Done\\.~&#123;\\\\hat&#125;[\\n\\s]*~D[\\n\\s]*warning~:P\\.~&#123;\\\\hat&#125;[\\n\\s]*~D[\\n\\s]*error~:P\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*donestr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Done\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*donestr[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Done\\.[\\n\\s]*3[\\n\\s]*warnings\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*donestr[\\n\\s]*1[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Done\\.[\\n\\s]*1[\\n\\s]*warning\\.[\\n\\s]*5[\\n\\s]*errors\\.\""],["\\code\n (format nil \"~:\\lbr\\ ~@?~:\\hat\\ ...~\\rbr\\ \" '((\"a\") (\"b\"))) *→* \"a...b\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~:\\\\lbr\\\\[\\n\\s]*~@\\?~:\\\\hat\\\\[\\n\\s]*\\.\\.\\.~\\\\rbr\\\\[\\n\\s]*\"[\\n\\s]*'\\(\\(\"a\"\\)[\\n\\s]*\\(\"b\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"a\\.\\.\\.b\""],["\\code\n (setq tellstr \"~@(~@[~R~]~&#123;\\hat&#125; ~A!~)\")\n*→* \"~@(~@[~R~]~&#123;\\hat&#125; ~A!~)\"\n (format nil tellstr 23) *→* \"Twenty-three!\"\n (format nil tellstr nil \"losers\") *→* \" Losers!\"\n (format nil tellstr 23 \"losers\") *→* \"Twenty-three losers!\"\n\\endcode","\\(setq[\\n\\s]*tellstr[\\n\\s]*\"~@\\(~@\\[~R~\\]~&#123;\\\\hat&#125;[\\n\\s]*~A!~\\)\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"~@\\(~@\\[~R~\\]~&#123;\\\\hat&#125;[\\n\\s]*~A!~\\)\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*tellstr[\\n\\s]*23\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Twenty-three!\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*tellstr[\\n\\s]*nil[\\n\\s]*\"losers\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*Losers!\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*tellstr[\\n\\s]*23[\\n\\s]*\"losers\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Twenty-three[\\n\\s]*losers!\""],["\\code\n (format nil \"~15&#60;~S~;~&#123;\\hat&#125;~S~;~&#123;\\hat&#125;~S~&#62;\" 'foo)\n*→*  \"            FOO\"\n (format nil \"~15&#60;~S~;~&#123;\\hat&#125;~S~;~&#123;\\hat&#125;~S~&#62;\" 'foo 'bar)\n*→*  \"FOO         BAR\"\n (format nil \"~15&#60;~S~;~&#123;\\hat&#125;~S~;~&#123;\\hat&#125;~S~&#62;\" 'foo 'bar 'baz)\n*→*  \"FOO   BAR   BAZ\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~15&#60;~S~;~&#123;\\\\hat&#125;~S~;~&#123;\\\\hat&#125;~S~&#62;\"[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*FOO\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~15&#60;~S~;~&#123;\\\\hat&#125;~S~;~&#123;\\\\hat&#125;~S~&#62;\"[\\n\\s]*'foo[\\n\\s]*'bar\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"FOO[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*BAR\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~15&#60;~S~;~&#123;\\\\hat&#125;~S~;~&#123;\\\\hat&#125;~S~&#62;\"[\\n\\s]*'foo[\\n\\s]*'bar[\\n\\s]*'baz\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"FOO[\\n\\s]*[\\n\\s]*[\\n\\s]*BAR[\\n\\s]*[\\n\\s]*[\\n\\s]*BAZ\""],["\\code\n (defun type-clash-error (fn nargs argnum right-type wrong-type)\n   (format *error-output*\n           \"~&~S requires its ~:[~:R~;~*~]~ \n           argument to be of type ~S,~%but it was called ~\n           with an argument of type ~S.~%\"\n           fn (eql nargs 1) argnum right-type wrong-type))\n (type-clash-error 'aref nil 2 'integer 'vector)  prints:\nAREF requires its second argument to be of type INTEGER,\nbut it was called with an argument of type VECTOR.\nNIL\n (type-clash-error 'car 1 1 'list 'short-float)  prints:\nCAR requires its argument to be of type LIST,\nbut it was called with an argument of type SHORT-FLOAT.\nNIL\n\\endcode","\\(defun[\\n\\s]*type-clash-error[\\n\\s]*\\(fn[\\n\\s]*nargs[\\n\\s]*argnum[\\n\\s]*right-type[\\n\\s]*wrong-type\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*\\*error-output\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"~&~S[\\n\\s]*requires[\\n\\s]*its[\\n\\s]*~:\\[~:R~;~\\*~\\]~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*be[\\n\\s]*of[\\n\\s]*type[\\n\\s]*~S,~%but[\\n\\s]*it[\\n\\s]*was[\\n\\s]*called[\\n\\s]*~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*with[\\n\\s]*an[\\n\\s]*argument[\\n\\s]*of[\\n\\s]*type[\\n\\s]*~S\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*fn[\\n\\s]*\\(eql[\\n\\s]*nargs[\\n\\s]*1\\)[\\n\\s]*argnum[\\n\\s]*right-type[\\n\\s]*wrong-type\\)\\)[\\n\\s]*[\\n\\s]*\\(type-clash-error[\\n\\s]*'aref[\\n\\s]*nil[\\n\\s]*2[\\n\\s]*'integer[\\n\\s]*'vector\\)[\\n\\s]*[\\n\\s]*prints:[\\n\\s]*AREF[\\n\\s]*requires[\\n\\s]*its[\\n\\s]*second[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*be[\\n\\s]*of[\\n\\s]*type[\\n\\s]*INTEGER,[\\n\\s]*but[\\n\\s]*it[\\n\\s]*was[\\n\\s]*called[\\n\\s]*with[\\n\\s]*an[\\n\\s]*argument[\\n\\s]*of[\\n\\s]*type[\\n\\s]*VECTOR\\.[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(type-clash-error[\\n\\s]*'car[\\n\\s]*1[\\n\\s]*1[\\n\\s]*'list[\\n\\s]*'short-float\\)[\\n\\s]*[\\n\\s]*prints:[\\n\\s]*CAR[\\n\\s]*requires[\\n\\s]*its[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*be[\\n\\s]*of[\\n\\s]*type[\\n\\s]*LIST,[\\n\\s]*but[\\n\\s]*it[\\n\\s]*was[\\n\\s]*called[\\n\\s]*with[\\n\\s]*an[\\n\\s]*argument[\\n\\s]*of[\\n\\s]*type[\\n\\s]*SHORT-FLOAT\\.[\\n\\s]*NIL"],["\\code\n (format nil \"~:[abc~:@(def~;ghi~\n:@(jkl~]mno~)\" x) ;Invalid!\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~:\\[abc~:@\\(def~;ghi~[\\n\\s]*:@\\(jkl~\\]mno~\\)\"[\\n\\s]*x\\)[\\n\\s]*;Invalid!"],["\\code\n (format nil \"~@?ghi~)\" \"abc~@(def\") ;Invalid!\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~@\\?ghi~\\)\"[\\n\\s]*\"abc~@\\(def\"\\)[\\n\\s]*;Invalid!"],["\\code\n (format nil \"foo\") *→* \"foo\"\n (setq x 5) *→* 5\n (format nil \"The answer is ~D.\" x) *→* \"The answer is 5.\"\n (format nil \"The answer is ~3D.\" x) *→* \"The answer is   5.\"\n (format nil \"The answer is ~3,'0D.\" x) *→* \"The answer is 005.\"\n (format nil \"The answer is ~:D.\" (expt 47 x))\n*→* \"The answer is 229,345,007.\"\n (setq y \"elephant\") *→* \"elephant\"\n (format nil \"Look at the ~A!\" y) *→* \"Look at the elephant!\"\n (setq n 3) *→* 3\n (format nil \"~D item~:P found.\" n) *→* \"3 items found.\"\n (format nil \"~R dog~:[s are~; is~] here.\" n (= n 1))\n*→* \"three dogs are here.\"\n (format nil \"~R dog~:*~[s are~; is~:;s are~] here.\" n)\n*→* \"three dogs are here.\"\n (format nil \"Here ~[are~;is~:;are~] ~:*~R pupp~:@P.\" n)\n*→* \"Here are three puppies.\"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foo\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*~D\\.\"[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*5\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*~3D\\.\"[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*[\\n\\s]*[\\n\\s]*5\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*~3,'0D\\.\"[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*005\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*~:D\\.\"[\\n\\s]*\\(expt[\\n\\s]*47[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"The[\\n\\s]*answer[\\n\\s]*is[\\n\\s]*229,345,007\\.\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\"elephant\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"elephant\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"Look[\\n\\s]*at[\\n\\s]*the[\\n\\s]*~A!\"[\\n\\s]*y\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Look[\\n\\s]*at[\\n\\s]*the[\\n\\s]*elephant!\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~D[\\n\\s]*item~:P[\\n\\s]*found\\.\"[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"3[\\n\\s]*items[\\n\\s]*found\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~R[\\n\\s]*dog~:\\[s[\\n\\s]*are~;[\\n\\s]*is~\\][\\n\\s]*here\\.\"[\\n\\s]*n[\\n\\s]*\\(=[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"three[\\n\\s]*dogs[\\n\\s]*are[\\n\\s]*here\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~R[\\n\\s]*dog~:\\*~\\[s[\\n\\s]*are~;[\\n\\s]*is~:;s[\\n\\s]*are~\\][\\n\\s]*here\\.\"[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"three[\\n\\s]*dogs[\\n\\s]*are[\\n\\s]*here\\.\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"Here[\\n\\s]*~\\[are~;is~:;are~\\][\\n\\s]*~:\\*~R[\\n\\s]*pupp~:@P\\.\"[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Here[\\n\\s]*are[\\n\\s]*three[\\n\\s]*puppies\\.\""],["\\code\n (defun foo (x)\n   (format nil \"~6,2F|~6,2,1,'*F|~6,2,,'?F|~6F|~,2F|~F\"\n           x x x x x x)) *→* FOO\n (foo 3.14159)  *→* \"  3.14| 31.42|  3.14|3.1416|3.14|3.14159\"\n (foo -3.14159) *→* \" -3.14|-31.42| -3.14|-3.142|-3.14|-3.14159\"\n (foo 100.0)    *→* \"100.00|******|100.00| 100.0|100.00|100.0\"\n (foo 1234.0)   *→* \"1234.00|******|??????|1234.0|1234.00|1234.0\"\n (foo 0.006)    *→* \"  0.01|  0.06|  0.01| 0.006|0.01|0.006\"\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~6,2F|~6,2,1,'\\*F|~6,2,,'\\?F|~6F|~,2F|~F\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\.14159\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*3\\.14|[\\n\\s]*31\\.42|[\\n\\s]*[\\n\\s]*3\\.14|3\\.1416|3\\.14|3\\.14159\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*-3\\.14159\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*-3\\.14|-31\\.42|[\\n\\s]*-3\\.14|-3\\.142|-3\\.14|-3\\.14159\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*100\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"100\\.00|\\*\\*\\*\\*\\*\\*|100\\.00|[\\n\\s]*100\\.0|100\\.00|100\\.0\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1234\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1234\\.00|\\*\\*\\*\\*\\*\\*|\\?\\?\\?\\?\\?\\?|1234\\.0|1234\\.00|1234\\.0\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*0\\.006\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*0\\.01|[\\n\\s]*[\\n\\s]*0\\.06|[\\n\\s]*[\\n\\s]*0\\.01|[\\n\\s]*0\\.006|0\\.01|0\\.006\""],["\\code\n (defun foo (x)  \n    (format nil\n           \"~9,2,1,,'*E|~10,3,2,2,'?,,'\\$E|~\n            ~9,3,2,-2,'%@E|~9,2E\"\n           x x x x))\n (foo 3.14159)  *→* \"  3.14E+0| 31.42\\$-01|+.003E+03|  3.14E+0\"\n (foo -3.14159) *→* \" -3.14E+0|-31.42\\$-01|-.003E+03| -3.14E+0\"\n (foo 1100.0)   *→* \"  1.10E+3| 11.00\\$+02|+.001E+06|  1.10E+3\"\n (foo 1100.0L0) *→* \"  1.10L+3| 11.00\\$+02|+.001L+06|  1.10L+3\"\n (foo 1.1E13)   *→* \"*********| 11.00\\$+12|+.001E+16| 1.10E+13\"\n (foo 1.1L120)  *→* \"*********|??????????|%%%%%%%%%|1.10L+120\"\n (foo 1.1L1200) *→* \"*********|??????????|%%%%%%%%%|1.10L+1200\"\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"~9,2,1,,'\\*E|~10,3,2,2,'\\?,,'\\\\$E|~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~9,3,2,-2,'%@E|~9,2E\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\.14159\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*3\\.14E\\+0|[\\n\\s]*31\\.42\\\\$-01|\\+\\.003E\\+03|[\\n\\s]*[\\n\\s]*3\\.14E\\+0\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*-3\\.14159\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*-3\\.14E\\+0|-31\\.42\\\\$-01|-\\.003E\\+03|[\\n\\s]*-3\\.14E\\+0\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1100\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*1\\.10E\\+3|[\\n\\s]*11\\.00\\\\$\\+02|\\+\\.001E\\+06|[\\n\\s]*[\\n\\s]*1\\.10E\\+3\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1100\\.0L0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*1\\.10L\\+3|[\\n\\s]*11\\.00\\\\$\\+02|\\+\\.001L\\+06|[\\n\\s]*[\\n\\s]*1\\.10L\\+3\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1\\.1E13\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\*\\*\\*\\*\\*\\*\\*\\*\\*|[\\n\\s]*11\\.00\\\\$\\+12|\\+\\.001E\\+16|[\\n\\s]*1\\.10E\\+13\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1\\.1L120\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\*\\*\\*\\*\\*\\*\\*\\*\\*|\\?\\?\\?\\?\\?\\?\\?\\?\\?\\?|%%%%%%%%%|1\\.10L\\+120\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*1\\.1L1200\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\*\\*\\*\\*\\*\\*\\*\\*\\*|\\?\\?\\?\\?\\?\\?\\?\\?\\?\\?|%%%%%%%%%|1\\.10L\\+1200\""],["\\code\n (dotimes (k 13)\n   (format t \"~%Scale factor ~2D: |~13,6,2,VE|\"\n           (- k 5) (- k 5) 3.14159))\n\\endcode","\\(dotimes[\\n\\s]*\\(k[\\n\\s]*13\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~%Scale[\\n\\s]*factor[\\n\\s]*~2D:[\\n\\s]*|~13,6,2,VE|\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*k[\\n\\s]*5\\)[\\n\\s]*\\(-[\\n\\s]*k[\\n\\s]*5\\)[\\n\\s]*3\\.14159\\)\\)"],["\\code\nScale factor -5: | 0.000003E+06|\nScale factor -4: | 0.000031E+05|\nScale factor -3: | 0.000314E+04|\nScale factor -2: | 0.003142E+03|\nScale factor -1: | 0.031416E+02|\nScale factor  0: | 0.314159E+01|\nScale factor  1: | 3.141590E+00|\nScale factor  2: | 31.41590E-01|\nScale factor  3: | 314.1590E-02|\nScale factor  4: | 3141.590E-03|\nScale factor  5: | 31415.90E-04|\nScale factor  6: | 314159.0E-05|\nScale factor  7: | 3141590.E-06|\n\\endcode","Scale[\\n\\s]*factor[\\n\\s]*-5:[\\n\\s]*|[\\n\\s]*0\\.000003E\\+06|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*-4:[\\n\\s]*|[\\n\\s]*0\\.000031E\\+05|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*-3:[\\n\\s]*|[\\n\\s]*0\\.000314E\\+04|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*-2:[\\n\\s]*|[\\n\\s]*0\\.003142E\\+03|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*-1:[\\n\\s]*|[\\n\\s]*0\\.031416E\\+02|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*0:[\\n\\s]*|[\\n\\s]*0\\.314159E\\+01|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*1:[\\n\\s]*|[\\n\\s]*3\\.141590E\\+00|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*2:[\\n\\s]*|[\\n\\s]*31\\.41590E-01|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*3:[\\n\\s]*|[\\n\\s]*314\\.1590E-02|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*4:[\\n\\s]*|[\\n\\s]*3141\\.590E-03|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*5:[\\n\\s]*|[\\n\\s]*31415\\.90E-04|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*6:[\\n\\s]*|[\\n\\s]*314159\\.0E-05|[\\n\\s]*Scale[\\n\\s]*factor[\\n\\s]*[\\n\\s]*7:[\\n\\s]*|[\\n\\s]*3141590\\.E-06|"],["\\code\n (defun foo (x)\n   (format nil \"~9,2,1,,'*G|~9,3,2,3,'?,,'\\$G|~9,3,2,0,'%G|~9,2G\"\n          x x x x))                                     \n (foo 0.0314159) *→* \"  3.14E-2|314.2\\$-04|0.314E-01|  3.14E-2\"\n (foo 0.314159)  *→* \"  0.31   |0.314    |0.314    | 0.31    \"\n (foo 3.14159)   *→* \"   3.1   | 3.14    | 3.14    |  3.1    \"\n (foo 31.4159)   *→* \"   31.   | 31.4    | 31.4    |  31.    \"\n (foo 314.159)   *→* \"  3.14E+2| 314.    | 314.    |  3.14E+2\"\n (foo 3141.59)   *→* \"  3.14E+3|314.2\\$+01|0.314E+04|  3.14E+3\"\n (foo 3141.59L0) *→* \"  3.14L+3|314.2\\$+01|0.314L+04|  3.14L+3\"\n (foo 3.14E12)   *→* \"*********|314.0\\$+10|0.314E+13| 3.14E+12\"\n (foo 3.14L120)  *→* \"*********|?????????|%%%%%%%%%|3.14L+120\"\n (foo 3.14L1200) *→* \"*********|?????????|%%%%%%%%%|3.14L+1200\"\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~9,2,1,,'\\*G|~9,3,2,3,'\\?,,'\\\\$G|~9,3,2,0,'%G|~9,2G\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*0\\.0314159\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*3\\.14E-2|314\\.2\\\\$-04|0\\.314E-01|[\\n\\s]*[\\n\\s]*3\\.14E-2\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*0\\.314159\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*0\\.31[\\n\\s]*[\\n\\s]*[\\n\\s]*|0\\.314[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|0\\.314[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*0\\.31[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\.14159\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*3\\.1[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*3\\.14[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*3\\.14[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*[\\n\\s]*3\\.1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*31\\.4159\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*31\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*31\\.4[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*31\\.4[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*[\\n\\s]*31\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*314\\.159\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*3\\.14E\\+2|[\\n\\s]*314\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*314\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*[\\n\\s]*3\\.14E\\+2\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3141\\.59\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*3\\.14E\\+3|314\\.2\\\\$\\+01|0\\.314E\\+04|[\\n\\s]*[\\n\\s]*3\\.14E\\+3\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3141\\.59L0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*3\\.14L\\+3|314\\.2\\\\$\\+01|0\\.314L\\+04|[\\n\\s]*[\\n\\s]*3\\.14L\\+3\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\.14E12\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\*\\*\\*\\*\\*\\*\\*\\*\\*|314\\.0\\\\$\\+10|0\\.314E\\+13|[\\n\\s]*3\\.14E\\+12\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\.14L120\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\*\\*\\*\\*\\*\\*\\*\\*\\*|\\?\\?\\?\\?\\?\\?\\?\\?\\?|%%%%%%%%%|3\\.14L\\+120\"[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\.14L1200\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\*\\*\\*\\*\\*\\*\\*\\*\\*|\\?\\?\\?\\?\\?\\?\\?\\?\\?|%%%%%%%%%|3\\.14L\\+1200\""],["\\code\n (format nil \"~10&#60;foo~;bar~&#62;\")   *→* \"foo    bar\"\n (format nil \"~10:&#60;foo~;bar~&#62;\")  *→* \"  foo  bar\"\n (format nil \"~10&#60;foobar~&#62;\")     *→* \"    foobar\"\n (format nil \"~10:&#60;foobar~&#62;\")    *→* \"    foobar\"\n (format nil \"~10:@&#60;foo~;bar~&#62;\") *→* \"  foo bar \"\n (format nil \"~10@&#60;foobar~&#62;\")    *→* \"foobar    \"\n (format nil \"~10:@&#60;foobar~&#62;\")   *→* \"  foobar  \"\n\\endcode","\\(format[\\n\\s]*nil[\\n\\s]*\"~10&#60;foo~;bar~&#62;\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*bar\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~10:&#60;foo~;bar~&#62;\"\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*foo[\\n\\s]*[\\n\\s]*bar\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~10&#60;foobar~&#62;\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*foobar\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~10:&#60;foobar~&#62;\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*foobar\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~10:@&#60;foo~;bar~&#62;\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*foo[\\n\\s]*bar[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~10@&#60;foobar~&#62;\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foobar[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~10:@&#60;foobar~&#62;\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*[\\n\\s]*foobar[\\n\\s]*[\\n\\s]*\""],["\\code\n  (FORMAT NIL \"Written to ~A.\" #P\"foo.bin\")\n  *→* \"Written to foo.bin.\"\n\\endcode","\\(FORMAT[\\n\\s]*NIL[\\n\\s]*\"Written[\\n\\s]*to[\\n\\s]*~A\\.\"[\\n\\s]*#P\"foo\\.bin\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Written[\\n\\s]*to[\\n\\s]*foo\\.bin\\.\""],["\\code\n (defmethod width ((c character-class) &key font) ...)\n \n (defmethod width ((p picture-class) &key pixel-size) ...)\n\\endcode","\\(defmethod[\\n\\s]*width[\\n\\s]*\\(\\(c[\\n\\s]*character-class\\)[\\n\\s]*&key[\\n\\s]*font\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*width[\\n\\s]*\\(\\(p[\\n\\s]*picture-class\\)[\\n\\s]*&key[\\n\\s]*pixel-size\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (width (make-instance `character-class :char #\\\\Q) \n        :font 'baskerville :pixel-size 10)\n\\endcode","\\(width[\\n\\s]*\\(make-instance[\\n\\s]*`character-class[\\n\\s]*:char[\\n\\s]*#\\\\\\\\Q\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:font[\\n\\s]*'baskerville[\\n\\s]*:pixel-size[\\n\\s]*10\\)"],["\\code\n (width (make-instance `picture-class :glyph (glyph #\\\\Q)) \n        :font 'baskerville :pixel-size 10)\n\\endcode","\\(width[\\n\\s]*\\(make-instance[\\n\\s]*`picture-class[\\n\\s]*:glyph[\\n\\s]*\\(glyph[\\n\\s]*#\\\\\\\\Q\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:font[\\n\\s]*'baskerville[\\n\\s]*:pixel-size[\\n\\s]*10\\)"],["\\code\n (width (make-instance `character-picture-class :char #\\\\Q)\n        :font 'baskerville :pixel-size 10)\n\\endcode","\\(width[\\n\\s]*\\(make-instance[\\n\\s]*`character-picture-class[\\n\\s]*:char[\\n\\s]*#\\\\\\\\Q\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:font[\\n\\s]*'baskerville[\\n\\s]*:pixel-size[\\n\\s]*10\\)"],["\\code\n (setq a (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32536573&#62;\n (setf (gethash 'color a) 'brown) *→* BROWN\n (setf (gethash 'name a) 'fred) *→* FRED\n (gethash 'color a) *→* BROWN, true\n (gethash 'name a) *→* FRED, true\n (gethash 'pointy a) *→* NIL, false\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32536573&#62;[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*'color[\\n\\s]*a\\)[\\n\\s]*'brown\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BROWN[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*'name[\\n\\s]*a\\)[\\n\\s]*'fred\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FRED[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*'color[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BROWN,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*'name[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FRED,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*'pointy[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false"],["\\code\n (loop for i from 1 to (compute-top-value)       ; first clause\n       while (not (unacceptable i))              ; second clause\n       collect (square i)                        ; third clause\n       do (format t \"Working on ~D now\" i)       ; fourth clause\n       when (evenp i)                            ; fifth clause\n         do (format t \"~D is a non-odd number\" i)\n       finally (format t \"About to exit!\"))      ; sixth clause\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*\\(compute-top-value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*first[\\n\\s]*clause[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*while[\\n\\s]*\\(not[\\n\\s]*\\(unacceptable[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*second[\\n\\s]*clause[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(square[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*third[\\n\\s]*clause[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Working[\\n\\s]*on[\\n\\s]*~D[\\n\\s]*now\"[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*fourth[\\n\\s]*clause[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(evenp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*fifth[\\n\\s]*clause[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~D[\\n\\s]*is[\\n\\s]*a[\\n\\s]*non-odd[\\n\\s]*number\"[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"About[\\n\\s]*to[\\n\\s]*exit!\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*sixth[\\n\\s]*clause"],["\\code\n;;; This expression uses the old syntax for type specifiers.\n (loop for i fixnum upfrom 3 ...)\n \n;;; This expression uses the new syntax for type specifiers.\n (loop for i of-type fixnum upfrom 3 ...)\n\n;; Declare X and Y to be of type VECTOR and FIXNUM respectively.\n (loop for (x y) of-type (vector fixnum) \n       in l do ...)\n\\endcode",";;;[\\n\\s]*This[\\n\\s]*expression[\\n\\s]*uses[\\n\\s]*the[\\n\\s]*old[\\n\\s]*syntax[\\n\\s]*for[\\n\\s]*type[\\n\\s]*specifiers\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*fixnum[\\n\\s]*upfrom[\\n\\s]*3[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*expression[\\n\\s]*uses[\\n\\s]*the[\\n\\s]*new[\\n\\s]*syntax[\\n\\s]*for[\\n\\s]*type[\\n\\s]*specifiers\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*of-type[\\n\\s]*fixnum[\\n\\s]*upfrom[\\n\\s]*3[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Declare[\\n\\s]*X[\\n\\s]*and[\\n\\s]*Y[\\n\\s]*to[\\n\\s]*be[\\n\\s]*of[\\n\\s]*type[\\n\\s]*VECTOR[\\n\\s]*and[\\n\\s]*FIXNUM[\\n\\s]*respectively\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*of-type[\\n\\s]*\\(vector[\\n\\s]*fixnum\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*in[\\n\\s]*l[\\n\\s]*do[\\n\\s]*\\.\\.\\.\\)"],["\\code\n;; Collect values by using FOR constructs.\n (loop for numlist in '((1 2 4.0) (5 6 8.3) (8 9 10.4))\n       for a of-type integer = (first numlist)\n       and b of-type integer = (second numlist)\n       and c of-type float = (third numlist)\n       collect (list c b a))\n*→* ((4.0 2 1) (8.3 6 5) (10.4 9 8))\n\\endcode",";;[\\n\\s]*Collect[\\n\\s]*values[\\n\\s]*by[\\n\\s]*using[\\n\\s]*FOR[\\n\\s]*constructs\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*numlist[\\n\\s]*in[\\n\\s]*'\\(\\(1[\\n\\s]*2[\\n\\s]*4\\.0\\)[\\n\\s]*\\(5[\\n\\s]*6[\\n\\s]*8\\.3\\)[\\n\\s]*\\(8[\\n\\s]*9[\\n\\s]*10\\.4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*a[\\n\\s]*of-type[\\n\\s]*integer[\\n\\s]*=[\\n\\s]*\\(first[\\n\\s]*numlist\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*b[\\n\\s]*of-type[\\n\\s]*integer[\\n\\s]*=[\\n\\s]*\\(second[\\n\\s]*numlist\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*c[\\n\\s]*of-type[\\n\\s]*float[\\n\\s]*=[\\n\\s]*\\(third[\\n\\s]*numlist\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*c[\\n\\s]*b[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4\\.0[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*\\(8\\.3[\\n\\s]*6[\\n\\s]*5\\)[\\n\\s]*\\(10\\.4[\\n\\s]*9[\\n\\s]*8\\)\\)"],["\\code\n;; Destructuring simplifies the process.\n (loop for (a b c) of-type (integer integer float) in\n       '((1 2 4.0) (5 6 8.3) (8 9 10.4))\n       collect (list c b a))\n*→* ((4.0 2 1) (8.3 6 5) (10.4 9 8))\n \n\n;; If all the types are the same, this way is even simpler.\n (loop for (a b c) of-type float in\n       '((1.0 2.0 4.0) (5.0 6.0 8.3) (8.0 9.0 10.4))\n       collect (list c b a))\n*→* ((4.0 2.0 1.0) (8.3 6.0 5.0) (10.4 9.0 8.0))\n\\endcode",";;[\\n\\s]*Destructuring[\\n\\s]*simplifies[\\n\\s]*the[\\n\\s]*process\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*of-type[\\n\\s]*\\(integer[\\n\\s]*integer[\\n\\s]*float\\)[\\n\\s]*in[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(1[\\n\\s]*2[\\n\\s]*4\\.0\\)[\\n\\s]*\\(5[\\n\\s]*6[\\n\\s]*8\\.3\\)[\\n\\s]*\\(8[\\n\\s]*9[\\n\\s]*10\\.4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*c[\\n\\s]*b[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4\\.0[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*\\(8\\.3[\\n\\s]*6[\\n\\s]*5\\)[\\n\\s]*\\(10\\.4[\\n\\s]*9[\\n\\s]*8\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*If[\\n\\s]*all[\\n\\s]*the[\\n\\s]*types[\\n\\s]*are[\\n\\s]*the[\\n\\s]*same,[\\n\\s]*this[\\n\\s]*way[\\n\\s]*is[\\n\\s]*even[\\n\\s]*simpler\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*of-type[\\n\\s]*float[\\n\\s]*in[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(1\\.0[\\n\\s]*2\\.0[\\n\\s]*4\\.0\\)[\\n\\s]*\\(5\\.0[\\n\\s]*6\\.0[\\n\\s]*8\\.3\\)[\\n\\s]*\\(8\\.0[\\n\\s]*9\\.0[\\n\\s]*10\\.4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*c[\\n\\s]*b[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4\\.0[\\n\\s]*2\\.0[\\n\\s]*1\\.0\\)[\\n\\s]*\\(8\\.3[\\n\\s]*6\\.0[\\n\\s]*5\\.0\\)[\\n\\s]*\\(10\\.4[\\n\\s]*9\\.0[\\n\\s]*8\\.0\\)\\)"],["\\code\n;; Initialize and declare variables in parallel by using the AND construct.\\kern-7pt\n (loop with (a b) of-type float = '(1.0 2.0)\n       and (c d) of-type integer = '(3 4)\n       and (e f)\n       return (list a b c d e f))\n*→* (1.0 2.0 3 4 NIL NIL)\n\\endcode",";;[\\n\\s]*Initialize[\\n\\s]*and[\\n\\s]*declare[\\n\\s]*variables[\\n\\s]*in[\\n\\s]*parallel[\\n\\s]*by[\\n\\s]*using[\\n\\s]*the[\\n\\s]*AND[\\n\\s]*construct\\.\\\\kern-7pt[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*with[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*of-type[\\n\\s]*float[\\n\\s]*=[\\n\\s]*'\\(1\\.0[\\n\\s]*2\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*\\(c[\\n\\s]*d\\)[\\n\\s]*of-type[\\n\\s]*integer[\\n\\s]*=[\\n\\s]*'\\(3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*\\(e[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0[\\n\\s]*2\\.0[\\n\\s]*3[\\n\\s]*4[\\n\\s]*NIL[\\n\\s]*NIL\\)"],["\\code\n (loop for (a nil b) = '(1 2 3)\n       do (return (list a b)))\n*→* (1 3)\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*\\(a[\\n\\s]*nil[\\n\\s]*b\\)[\\n\\s]*=[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3\\)"],["\\code\n (loop for (x . y) = '(1 . 2)\n       do (return y))\n*→* 2\n (loop for ((a . b) (c . d)) of-type ((float . float) (integer . integer)) in\n       '(((1.2 . 2.4) (3 . 4)) ((3.4 . 4.6) (5 . 6)))\n       collect (list a b c d))\n*→* ((1.2 2.4 3 4) (3.4 4.6 5 6))\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*\\(x[\\n\\s]*\\.[\\n\\s]*y\\)[\\n\\s]*=[\\n\\s]*'\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(return[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*\\.[\\n\\s]*d\\)\\)[\\n\\s]*of-type[\\n\\s]*\\(\\(float[\\n\\s]*\\.[\\n\\s]*float\\)[\\n\\s]*\\(integer[\\n\\s]*\\.[\\n\\s]*integer\\)\\)[\\n\\s]*in[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\\(1\\.2[\\n\\s]*\\.[\\n\\s]*2\\.4\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*4\\)\\)[\\n\\s]*\\(\\(3\\.4[\\n\\s]*\\.[\\n\\s]*4\\.6\\)[\\n\\s]*\\(5[\\n\\s]*\\.[\\n\\s]*6\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\.2[\\n\\s]*2\\.4[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\(3\\.4[\\n\\s]*4\\.6[\\n\\s]*5[\\n\\s]*6\\)\\)"],["\\code\n(let ((x 1)) (loop for i from x by (incf x) to 10 collect i))\n*→* (1 3 5 7 9)\n(let ((x 1)) (loop for i by (incf x) from x to 10 collect i))\n*→* (2 4 6 8 10)\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*x[\\n\\s]*by[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*i\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7[\\n\\s]*9\\)[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*by[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*from[\\n\\s]*x[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*i\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*4[\\n\\s]*6[\\n\\s]*8[\\n\\s]*10\\)"],["\\code\n;; Print some numbers.\n (loop for i from 1 to 3\n       do (print i))\n\\OUT 1\n\\OUT 2\n\\OUT 3\n*→* NIL\n \n;; Print every third number.\n (loop for i from 10 downto 1 by 3\n       do (print i))\n\\OUT 10 \n\\OUT 7 \n\\OUT 4 \n\\OUT 1 \n*→* NIL\n \n;; Step incrementally from the default starting value.\n (loop for i below 3\n       do (print i))\n\\OUT 0\n\\OUT 1\n\\OUT 2\n*→* NIL\n\\endcode",";;[\\n\\s]*Print[\\n\\s]*some[\\n\\s]*numbers\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*i\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Print[\\n\\s]*every[\\n\\s]*third[\\n\\s]*number\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*10[\\n\\s]*downto[\\n\\s]*1[\\n\\s]*by[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*i\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Step[\\n\\s]*incrementally[\\n\\s]*from[\\n\\s]*the[\\n\\s]*default[\\n\\s]*starting[\\n\\s]*value\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*below[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*i\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*0[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n;; Print every item in a list.\n (loop for item in '(1 2 3) do (print item))\n\\OUT 1\n\\OUT 2\n\\OUT 3\n*→* NIL\n \n;; Print every other item in a list.\n (loop for item in '(1 2 3 4 5) by #'cddr\n       do (print item))\n\\OUT 1\n\\OUT 3\n\\OUT 5\n*→* NIL\n \n;; Destructure a list, and sum the x values using fixnum arithmetic.\n (loop for (item . x) of-type (t . fixnum) in '((A . 1) (B . 2) (C . 3))\n       unless (eq item 'B) sum x)\n*→* 4\n\\endcode",";;[\\n\\s]*Print[\\n\\s]*every[\\n\\s]*item[\\n\\s]*in[\\n\\s]*a[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*item[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*item\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Print[\\n\\s]*every[\\n\\s]*other[\\n\\s]*item[\\n\\s]*in[\\n\\s]*a[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*item[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*by[\\n\\s]*#'cddr[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*item\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Destructure[\\n\\s]*a[\\n\\s]*list,[\\n\\s]*and[\\n\\s]*sum[\\n\\s]*the[\\n\\s]*x[\\n\\s]*values[\\n\\s]*using[\\n\\s]*fixnum[\\n\\s]*arithmetic\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(item[\\n\\s]*\\.[\\n\\s]*x\\)[\\n\\s]*of-type[\\n\\s]*\\(t[\\n\\s]*\\.[\\n\\s]*fixnum\\)[\\n\\s]*in[\\n\\s]*'\\(\\(A[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(C[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*unless[\\n\\s]*\\(eq[\\n\\s]*item[\\n\\s]*'B\\)[\\n\\s]*sum[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4"],["\\code\n;; Collect successive tails of a list.\n (loop for sublist on '(a b c d)\n       collect sublist)\n*→* ((A B C D) (B C D) (C D) (D))\n \n;; Print a list by using destructuring with the loop keyword ON.\n (loop for (item) on '(1 2 3)\n       do (print item))\n\\OUT 1 \n\\OUT 2 \n\\OUT 3 \n*→* NIL\n \n\\endcode",";;[\\n\\s]*Collect[\\n\\s]*successive[\\n\\s]*tails[\\n\\s]*of[\\n\\s]*a[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*sublist[\\n\\s]*on[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*sublist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*\\(B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*\\(C[\\n\\s]*D\\)[\\n\\s]*\\(D\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Print[\\n\\s]*a[\\n\\s]*list[\\n\\s]*by[\\n\\s]*using[\\n\\s]*destructuring[\\n\\s]*with[\\n\\s]*the[\\n\\s]*loop[\\n\\s]*keyword[\\n\\s]*ON\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(item\\)[\\n\\s]*on[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*item\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n%;; The original code:\n% (prog (...)\n%       (setq x (some-value))\n%   tag (print x)\n%       (setq x (some-value))\n%       (go tag))\n% \n%;; The expanded code:\n% (prog (...)\n%   tag (setq x (some-value))\n%       (print x)\n%       (go tag))\n%\\endcode","%;;[\\n\\s]*The[\\n\\s]*original[\\n\\s]*code:[\\n\\s]*%[\\n\\s]*\\(prog[\\n\\s]*\\(\\.\\.\\.\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(some-value\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*tag[\\n\\s]*\\(print[\\n\\s]*x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(some-value\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*tag\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*%;;[\\n\\s]*The[\\n\\s]*expanded[\\n\\s]*code:[\\n\\s]*%[\\n\\s]*\\(prog[\\n\\s]*\\(\\.\\.\\.\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*tag[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(some-value\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*tag\\)\\)[\\n\\s]*%"],["\\code\n;; Collect some numbers.\n (loop for item = 1 then (+ item 10)\n       for iteration from 1 to 5\n       collect item)\n*→* (1 11 21 31 41)\n\\endcode",";;[\\n\\s]*Collect[\\n\\s]*some[\\n\\s]*numbers\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*item[\\n\\s]*=[\\n\\s]*1[\\n\\s]*then[\\n\\s]*\\(\\+[\\n\\s]*item[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*iteration[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*item\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*11[\\n\\s]*21[\\n\\s]*31[\\n\\s]*41\\)"],["\\code\n (loop for char across (the simple-string (find-message channel))\n       do (write-char char stream))\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*char[\\n\\s]*across[\\n\\s]*\\(the[\\n\\s]*simple-string[\\n\\s]*\\(find-message[\\n\\s]*channel\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(write-char[\\n\\s]*char[\\n\\s]*stream\\)\\)"],["\\code\n% being \\lbracket\\ each|the\\rbracket \\lbracket\\ hash-value|hash-values|hash-key|hash-key\\rbracket \\lbracket\\ in|of\\rbracket \n% \\endcode","%[\\n\\s]*being[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*each|the\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*hash-value|hash-values|hash-key|hash-key\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*in|of\\\\rbracket[\\n\\s]*[\\n\\s]*%"],["\\code\n% being \\lbracket\\ each|the\\rbracket \\lbracket\\ \\lbracket\\ \\lbracket\\ \n% present|external\\rbracket\\ symbol\\rbracket | \\lbracket\\ \n% \\lbracket\\ present|external\\rbracket symbols\\rbracket\\rbracket \\lbracket\\ in|of\\rbracket\n% \\endcode","%[\\n\\s]*being[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*each|the\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*[\\n\\s]*%[\\n\\s]*present|external\\\\rbracket\\\\[\\n\\s]*symbol\\\\rbracket[\\n\\s]*|[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*[\\n\\s]*%[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*present|external\\\\rbracket[\\n\\s]*symbols\\\\rbracket\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*in|of\\\\rbracket[\\n\\s]*%"],["\\code\n (let ((*package* (make-package \"TEST-PACKAGE-1\")))\n   ;; For effect, intern some symbols\n   (read-from-string \"(THIS IS A TEST)\")\n   (export (intern \"THIS\"))\n   (loop for x being each present-symbol of *package*\n          do (print x)))\n\\OUT A \n\\OUT TEST \n\\OUT THIS\n\\OUT IS \n*→* NIL\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*package\\*[\\n\\s]*\\(make-package[\\n\\s]*\"TEST-PACKAGE-1\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*For[\\n\\s]*effect,[\\n\\s]*intern[\\n\\s]*some[\\n\\s]*symbols[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-from-string[\\n\\s]*\"\\(THIS[\\n\\s]*IS[\\n\\s]*A[\\n\\s]*TEST\\)\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\(intern[\\n\\s]*\"THIS\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*x[\\n\\s]*being[\\n\\s]*each[\\n\\s]*present-symbol[\\n\\s]*of[\\n\\s]*\\*package\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*TEST[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*THIS[\\n\\s]*\\\\OUT[\\n\\s]*IS[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (loop with a = 1 \n       with b = (+ a 2) \n       with c = (+ b 3)\n       return (list a b c))\n*→* (1 3 6)\n\\endcode","\\(loop[\\n\\s]*with[\\n\\s]*a[\\n\\s]*=[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*with[\\n\\s]*b[\\n\\s]*=[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*with[\\n\\s]*c[\\n\\s]*=[\\n\\s]*\\(\\+[\\n\\s]*b[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*6\\)"],["\\code\n (block nil\n   (let* ((a 1)\n          (b (+ a 2))\n          (c (+ b 3)))\n     (tagbody\n         (next-loop (return (list a b c))\n                    (go next-loop)\n                    end-loop))))\n\\endcode","\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(c[\\n\\s]*\\(\\+[\\n\\s]*b[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(next-loop[\\n\\s]*\\(return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*next-loop\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*end-loop\\)\\)\\)\\)"],["\\code\n (loop with a = 1 \n       and b = 2 \n       and c = 3\n       return (list a b c))\n*→* (1 2 3)\n\\endcode","\\(loop[\\n\\s]*with[\\n\\s]*a[\\n\\s]*=[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*b[\\n\\s]*=[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*c[\\n\\s]*=[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)"],["\\code\n (block nil\n   (let ((a 1)\n         (b 2)\n         (c 3))\n     (tagbody\n         (next-loop (return (list a b c))\n                    (go next-loop)\n                    end-loop))))\n\\endcode","\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(c[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(next-loop[\\n\\s]*\\(return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*next-loop\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*end-loop\\)\\)\\)\\)"],["\\code\n;; These bindings occur in sequence.\n (loop with a = 1 \n       with b = (+ a 2) \n       with c = (+ b 3)\n       return (list a b c))\n*→* (1 3 6)\n \n;; These bindings occur in parallel.\n (setq a 5 b 10)\n*→* 10\n (loop with a = 1\n       and b = (+ a 2)\n       and c = (+ b 3)\n       return (list a b c))\n*→* (1 7 13)\n \n;; This example shows a shorthand way to declare local variables \n;; that are of different types.\n (loop with (a b c) of-type (float integer float)\n       return (format nil \"~A ~A ~A\" a b c))\n*→* \"0.0 0 0.0\"\n \n;; This example shows a shorthand way to declare local variables \n;; that are the same type.\n (loop with (a b c) of-type float \n       return (format nil \"~A ~A ~A\" a b c))\n*→* \"0.0 0.0 0.0\"\n\\endcode",";;[\\n\\s]*These[\\n\\s]*bindings[\\n\\s]*occur[\\n\\s]*in[\\n\\s]*sequence\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*with[\\n\\s]*a[\\n\\s]*=[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*with[\\n\\s]*b[\\n\\s]*=[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*with[\\n\\s]*c[\\n\\s]*=[\\n\\s]*\\(\\+[\\n\\s]*b[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*These[\\n\\s]*bindings[\\n\\s]*occur[\\n\\s]*in[\\n\\s]*parallel\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*5[\\n\\s]*b[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*with[\\n\\s]*a[\\n\\s]*=[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*b[\\n\\s]*=[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*c[\\n\\s]*=[\\n\\s]*\\(\\+[\\n\\s]*b[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*7[\\n\\s]*13\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*shows[\\n\\s]*a[\\n\\s]*shorthand[\\n\\s]*way[\\n\\s]*to[\\n\\s]*declare[\\n\\s]*local[\\n\\s]*variables[\\n\\s]*[\\n\\s]*;;[\\n\\s]*that[\\n\\s]*are[\\n\\s]*of[\\n\\s]*different[\\n\\s]*types\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*with[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*of-type[\\n\\s]*\\(float[\\n\\s]*integer[\\n\\s]*float\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~A[\\n\\s]*~A[\\n\\s]*~A\"[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0\\.0[\\n\\s]*0[\\n\\s]*0\\.0\"[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*shows[\\n\\s]*a[\\n\\s]*shorthand[\\n\\s]*way[\\n\\s]*to[\\n\\s]*declare[\\n\\s]*local[\\n\\s]*variables[\\n\\s]*[\\n\\s]*;;[\\n\\s]*that[\\n\\s]*are[\\n\\s]*the[\\n\\s]*same[\\n\\s]*type\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*with[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*of-type[\\n\\s]*float[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~A[\\n\\s]*~A[\\n\\s]*~A\"[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0\\.0[\\n\\s]*0\\.0[\\n\\s]*0\\.0\""],["\\code\n;; Collect every name and the kids in one list by using \n;; COLLECT and APPEND.\n (loop for name in '(fred sue alice joe june)\n       for kids in '((bob ken) () () (kris sunshine) ())\n       collect name\n       append kids)\n*→* (FRED BOB KEN SUE ALICE JOE KRIS SUNSHINE JUNE)\n\\endcode",";;[\\n\\s]*Collect[\\n\\s]*every[\\n\\s]*name[\\n\\s]*and[\\n\\s]*the[\\n\\s]*kids[\\n\\s]*in[\\n\\s]*one[\\n\\s]*list[\\n\\s]*by[\\n\\s]*using[\\n\\s]*[\\n\\s]*;;[\\n\\s]*COLLECT[\\n\\s]*and[\\n\\s]*APPEND\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*name[\\n\\s]*in[\\n\\s]*'\\(fred[\\n\\s]*sue[\\n\\s]*alice[\\n\\s]*joe[\\n\\s]*june\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*kids[\\n\\s]*in[\\n\\s]*'\\(\\(bob[\\n\\s]*ken\\)[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)[\\n\\s]*\\(kris[\\n\\s]*sunshine\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*name[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*append[\\n\\s]*kids\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FRED[\\n\\s]*BOB[\\n\\s]*KEN[\\n\\s]*SUE[\\n\\s]*ALICE[\\n\\s]*JOE[\\n\\s]*KRIS[\\n\\s]*SUNSHINE[\\n\\s]*JUNE\\)"],["\\code\n%;; Count and collect names and ages.\n% (loop for name in '(fred sue alice joe june)\n%       as age in '(22 26 19 20 10)\n%       append (list name age) into name-and-age-list\n%       count name into name-count\n%       sum age into total-age\n%       finally\n%       (return\n%        (values (round total-age name-count)\n%                 name-and-age-list)))\n%*→* 19, (FRED 22 SUE 26 ALICE 19 JOE 20 JUNE 10)\n%\\endcode","%;;[\\n\\s]*Count[\\n\\s]*and[\\n\\s]*collect[\\n\\s]*names[\\n\\s]*and[\\n\\s]*ages\\.[\\n\\s]*%[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*name[\\n\\s]*in[\\n\\s]*'\\(fred[\\n\\s]*sue[\\n\\s]*alice[\\n\\s]*joe[\\n\\s]*june\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*as[\\n\\s]*age[\\n\\s]*in[\\n\\s]*'\\(22[\\n\\s]*26[\\n\\s]*19[\\n\\s]*20[\\n\\s]*10\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*append[\\n\\s]*\\(list[\\n\\s]*name[\\n\\s]*age\\)[\\n\\s]*into[\\n\\s]*name-and-age-list[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*name[\\n\\s]*into[\\n\\s]*name-count[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*sum[\\n\\s]*age[\\n\\s]*into[\\n\\s]*total-age[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(round[\\n\\s]*total-age[\\n\\s]*name-count\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*name-and-age-list\\)\\)\\)[\\n\\s]*%\\*\\→\\*[\\n\\s]*19,[\\n\\s]*\\(FRED[\\n\\s]*22[\\n\\s]*SUE[\\n\\s]*26[\\n\\s]*ALICE[\\n\\s]*19[\\n\\s]*JOE[\\n\\s]*20[\\n\\s]*JUNE[\\n\\s]*10\\)[\\n\\s]*%"],["\\code\n;; Collect all the symbols in a list.\n (loop for i in '(bird 3 4 turtle (1 . 4) horse cat)\n       when (symbolp i) collect i)\n*→* (BIRD TURTLE HORSE CAT)\n \n;; Collect and return odd numbers.\n (loop for i from 1 to 10\n       if (oddp i) collect i)\n*→* (1 3 5 7 9)\n \n;; Collect items into local variable, but don't return them.\n (loop for i in '(a b c d) by #'cddr\n       collect i into my-list\n       finally (print my-list))\n\\OUT (A C) \n*→* NIL\n\\endcode",";;[\\n\\s]*Collect[\\n\\s]*all[\\n\\s]*the[\\n\\s]*symbols[\\n\\s]*in[\\n\\s]*a[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(bird[\\n\\s]*3[\\n\\s]*4[\\n\\s]*turtle[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*horse[\\n\\s]*cat\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(symbolp[\\n\\s]*i\\)[\\n\\s]*collect[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BIRD[\\n\\s]*TURTLE[\\n\\s]*HORSE[\\n\\s]*CAT\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Collect[\\n\\s]*and[\\n\\s]*return[\\n\\s]*odd[\\n\\s]*numbers\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*if[\\n\\s]*\\(oddp[\\n\\s]*i\\)[\\n\\s]*collect[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Collect[\\n\\s]*items[\\n\\s]*into[\\n\\s]*local[\\n\\s]*variable,[\\n\\s]*but[\\n\\s]*don't[\\n\\s]*return[\\n\\s]*them\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*by[\\n\\s]*#'cddr[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*my-list[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(print[\\n\\s]*my-list\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(A[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n;; Use APPEND to concatenate some sublists.\n  (loop for x in '((a) (b) ((c)))\n        append x)\n*→* (A B (C))\n \n;; NCONC some sublists together.  Note that only lists made by the\n;; call to LIST are modified.\n  (loop for i upfrom 0 \n        as x in '(a b (c))\n        nconc (if (evenp i) (list x) nil))\n*→* (A (C))\n\\endcode",";;[\\n\\s]*Use[\\n\\s]*APPEND[\\n\\s]*to[\\n\\s]*concatenate[\\n\\s]*some[\\n\\s]*sublists\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*x[\\n\\s]*in[\\n\\s]*'\\(\\(a\\)[\\n\\s]*\\(b\\)[\\n\\s]*\\(\\(c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*append[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*\\(C\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*NCONC[\\n\\s]*some[\\n\\s]*sublists[\\n\\s]*together\\.[\\n\\s]*[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*only[\\n\\s]*lists[\\n\\s]*made[\\n\\s]*by[\\n\\s]*the[\\n\\s]*;;[\\n\\s]*call[\\n\\s]*to[\\n\\s]*LIST[\\n\\s]*are[\\n\\s]*modified\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*upfrom[\\n\\s]*0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*as[\\n\\s]*x[\\n\\s]*in[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*\\(c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nconc[\\n\\s]*\\(if[\\n\\s]*\\(evenp[\\n\\s]*i\\)[\\n\\s]*\\(list[\\n\\s]*x\\)[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(C\\)\\)"],["\\code\n (loop for i in '(a b nil c nil d e)\n       count i)\n*→* 5\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*nil[\\n\\s]*c[\\n\\s]*nil[\\n\\s]*d[\\n\\s]*e\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5"],["\\code\n (loop for i in '(2 1 5 3 4)\n       maximize i)\n*→* 5\n (loop for i in '(2 1 5 3 4)\n       minimize i)\n*→* 1\n \n;; In this example, FIXNUM applies to the internal variable that holds\n;; the maximum value.\n (setq series '(1.2 4.3 5.7))\n*→* (1.2 4.3 5.7)\n (loop for v in series \n       maximize (round v) of-type fixnum)\n*→* 6\n \n;; In this example, FIXNUM applies to the variable RESULT.\n (loop for v of-type float in series\n       minimize (round v) into result of-type fixnum\n       finally (return result))\n*→* 1\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(2[\\n\\s]*1[\\n\\s]*5[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*maximize[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(2[\\n\\s]*1[\\n\\s]*5[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*minimize[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*FIXNUM[\\n\\s]*applies[\\n\\s]*to[\\n\\s]*the[\\n\\s]*internal[\\n\\s]*variable[\\n\\s]*that[\\n\\s]*holds[\\n\\s]*;;[\\n\\s]*the[\\n\\s]*maximum[\\n\\s]*value\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*series[\\n\\s]*'\\(1\\.2[\\n\\s]*4\\.3[\\n\\s]*5\\.7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.2[\\n\\s]*4\\.3[\\n\\s]*5\\.7\\)[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*v[\\n\\s]*in[\\n\\s]*series[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*maximize[\\n\\s]*\\(round[\\n\\s]*v\\)[\\n\\s]*of-type[\\n\\s]*fixnum\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*FIXNUM[\\n\\s]*applies[\\n\\s]*to[\\n\\s]*the[\\n\\s]*variable[\\n\\s]*RESULT\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*v[\\n\\s]*of-type[\\n\\s]*float[\\n\\s]*in[\\n\\s]*series[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*minimize[\\n\\s]*\\(round[\\n\\s]*v\\)[\\n\\s]*into[\\n\\s]*result[\\n\\s]*of-type[\\n\\s]*fixnum[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(return[\\n\\s]*result\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (loop for i of-type fixnum in '(1 2 3 4 5)\n       sum i)\n*→* 15\n (setq series '(1.2 4.3 5.7))\n*→* (1.2 4.3 5.7)\n (loop for v in series \n       sum (* 2.0 v))\n*→* 22.4\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*of-type[\\n\\s]*fixnum[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*sum[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*series[\\n\\s]*'\\(1\\.2[\\n\\s]*4\\.3[\\n\\s]*5\\.7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.2[\\n\\s]*4\\.3[\\n\\s]*5\\.7\\)[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*v[\\n\\s]*in[\\n\\s]*series[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*sum[\\n\\s]*\\(\\*[\\n\\s]*2\\.0[\\n\\s]*v\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*22\\.4"],["\\code\n (loop repeat 3\n       do (format t \"~&What I say three times is true.~%\"))\n\\OUT What I say three times is true.\n\\OUT What I say three times is true.\n\\OUT What I say three times is true.\n*→* NIL\n (loop repeat -15\n   do (format t \"What you see is what you expect~%\"))\n*→* NIL\n\\endcode","\\(loop[\\n\\s]*repeat[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&What[\\n\\s]*I[\\n\\s]*say[\\n\\s]*three[\\n\\s]*times[\\n\\s]*is[\\n\\s]*true\\.~%\"\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*What[\\n\\s]*I[\\n\\s]*say[\\n\\s]*three[\\n\\s]*times[\\n\\s]*is[\\n\\s]*true\\.[\\n\\s]*\\\\OUT[\\n\\s]*What[\\n\\s]*I[\\n\\s]*say[\\n\\s]*three[\\n\\s]*times[\\n\\s]*is[\\n\\s]*true\\.[\\n\\s]*\\\\OUT[\\n\\s]*What[\\n\\s]*I[\\n\\s]*say[\\n\\s]*three[\\n\\s]*times[\\n\\s]*is[\\n\\s]*true\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*repeat[\\n\\s]*-15[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"What[\\n\\s]*you[\\n\\s]*see[\\n\\s]*is[\\n\\s]*what[\\n\\s]*you[\\n\\s]*expect~%\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n;; Make sure I is always less than 11 (two ways).\n;; The FOR construct terminates these loops.\n (loop for i from 0 to 10\n       always (&#60; i 11))\n*→* T\n (loop for i from 0 to 10\n       never (&#62; i 11))\n*→* T\n \n;; If I exceeds 10 return I; otherwise, return NIL.\n;; The THEREIS construct terminates this loop.\n (loop for i from 0\n       thereis (when (&#62; i 10) i) )\n*→* 11\n\n;;; The FINALLY clause is not evaluated in these examples.\n (loop for i from 0 to 10\n       always (&#60; i 9)\n       finally (print \"you won't see this\"))\n*→* NIL\n (loop never t\n       finally (print \"you won't see this\"))\n*→* NIL\n (loop thereis \"Here is my value\"\n       finally (print \"you won't see this\"))\n*→* \"Here is my value\"\n \n;; The FOR construct terminates this loop, so the FINALLY clause \n;; is evaluated.\n (loop for i from 1 to 10\n       thereis (&#62; i 11)\n       finally (prin1 'got-here))\n\\OUT GOT-HERE\n*→* NIL\n \n;; If this code could be used to find a counterexample to Fermat's\n;; last theorem, it would still not return the value of the\n;; counterexample because all of the THEREIS clauses in this example\n;; only return T.  But if Fermat is right, that won't matter\n;; because this won't terminate.\n \n (loop for z upfrom 2\n       thereis\n         (loop for n upfrom 3 below (log z 2)\n               thereis\n                 (loop for x below z\n                       thereis\n                         (loop for y below z\n                               thereis (= (+ (expt x n) (expt y n))\n                                          (expt z n))))))\n\\endcode",";;[\\n\\s]*Make[\\n\\s]*sure[\\n\\s]*I[\\n\\s]*is[\\n\\s]*always[\\n\\s]*less[\\n\\s]*than[\\n\\s]*11[\\n\\s]*\\(two[\\n\\s]*ways\\)\\.[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*FOR[\\n\\s]*construct[\\n\\s]*terminates[\\n\\s]*these[\\n\\s]*loops\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*0[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*always[\\n\\s]*\\(&#60;[\\n\\s]*i[\\n\\s]*11\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*0[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*never[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*11\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*If[\\n\\s]*I[\\n\\s]*exceeds[\\n\\s]*10[\\n\\s]*return[\\n\\s]*I;[\\n\\s]*otherwise,[\\n\\s]*return[\\n\\s]*NIL\\.[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*THEREIS[\\n\\s]*construct[\\n\\s]*terminates[\\n\\s]*this[\\n\\s]*loop\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*\\(when[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*10\\)[\\n\\s]*i\\)[\\n\\s]*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*11[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*FINALLY[\\n\\s]*clause[\\n\\s]*is[\\n\\s]*not[\\n\\s]*evaluated[\\n\\s]*in[\\n\\s]*these[\\n\\s]*examples\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*0[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*always[\\n\\s]*\\(&#60;[\\n\\s]*i[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(print[\\n\\s]*\"you[\\n\\s]*won't[\\n\\s]*see[\\n\\s]*this\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*never[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(print[\\n\\s]*\"you[\\n\\s]*won't[\\n\\s]*see[\\n\\s]*this\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*thereis[\\n\\s]*\"Here[\\n\\s]*is[\\n\\s]*my[\\n\\s]*value\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(print[\\n\\s]*\"you[\\n\\s]*won't[\\n\\s]*see[\\n\\s]*this\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Here[\\n\\s]*is[\\n\\s]*my[\\n\\s]*value\"[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*FOR[\\n\\s]*construct[\\n\\s]*terminates[\\n\\s]*this[\\n\\s]*loop,[\\n\\s]*so[\\n\\s]*the[\\n\\s]*FINALLY[\\n\\s]*clause[\\n\\s]*[\\n\\s]*;;[\\n\\s]*is[\\n\\s]*evaluated\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*11\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(prin1[\\n\\s]*'got-here\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*GOT-HERE[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*If[\\n\\s]*this[\\n\\s]*code[\\n\\s]*could[\\n\\s]*be[\\n\\s]*used[\\n\\s]*to[\\n\\s]*find[\\n\\s]*a[\\n\\s]*counterexample[\\n\\s]*to[\\n\\s]*Fermat's[\\n\\s]*;;[\\n\\s]*last[\\n\\s]*theorem,[\\n\\s]*it[\\n\\s]*would[\\n\\s]*still[\\n\\s]*not[\\n\\s]*return[\\n\\s]*the[\\n\\s]*value[\\n\\s]*of[\\n\\s]*the[\\n\\s]*;;[\\n\\s]*counterexample[\\n\\s]*because[\\n\\s]*all[\\n\\s]*of[\\n\\s]*the[\\n\\s]*THEREIS[\\n\\s]*clauses[\\n\\s]*in[\\n\\s]*this[\\n\\s]*example[\\n\\s]*;;[\\n\\s]*only[\\n\\s]*return[\\n\\s]*T\\.[\\n\\s]*[\\n\\s]*But[\\n\\s]*if[\\n\\s]*Fermat[\\n\\s]*is[\\n\\s]*right,[\\n\\s]*that[\\n\\s]*won't[\\n\\s]*matter[\\n\\s]*;;[\\n\\s]*because[\\n\\s]*this[\\n\\s]*won't[\\n\\s]*terminate\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*z[\\n\\s]*upfrom[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*n[\\n\\s]*upfrom[\\n\\s]*3[\\n\\s]*below[\\n\\s]*\\(log[\\n\\s]*z[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*x[\\n\\s]*below[\\n\\s]*z[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*y[\\n\\s]*below[\\n\\s]*z[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*\\(=[\\n\\s]*\\(\\+[\\n\\s]*\\(expt[\\n\\s]*x[\\n\\s]*n\\)[\\n\\s]*\\(expt[\\n\\s]*y[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*z[\\n\\s]*n\\)\\)\\)\\)\\)\\)"],["\\code\n (loop while (hungry-p) do (eat))\n \n;; UNTIL NOT is equivalent to WHILE.\n (loop until (not (hungry-p)) do (eat))\n \n;; Collect the length and the items of STACK.\n (let ((stack '(a b c d e f)))\n   (loop for item = (length stack) then (pop stack)\n         collect item\n         while stack))\n*→* (6 A B C D E F)\n \n;; Use WHILE to terminate a loop that otherwise wouldn't terminate.\n;; Note that WHILE occurs after the WHEN.\n (loop for i fixnum from 3\n       when (oddp i) collect i\n       while (&#60; i 5))\n*→* (3 5)\n\\endcode","\\(loop[\\n\\s]*while[\\n\\s]*\\(hungry-p\\)[\\n\\s]*do[\\n\\s]*\\(eat\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*UNTIL[\\n\\s]*NOT[\\n\\s]*is[\\n\\s]*equivalent[\\n\\s]*to[\\n\\s]*WHILE\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*until[\\n\\s]*\\(not[\\n\\s]*\\(hungry-p\\)\\)[\\n\\s]*do[\\n\\s]*\\(eat\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Collect[\\n\\s]*the[\\n\\s]*length[\\n\\s]*and[\\n\\s]*the[\\n\\s]*items[\\n\\s]*of[\\n\\s]*STACK\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(stack[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*item[\\n\\s]*=[\\n\\s]*\\(length[\\n\\s]*stack\\)[\\n\\s]*then[\\n\\s]*\\(pop[\\n\\s]*stack\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*item[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*while[\\n\\s]*stack\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Use[\\n\\s]*WHILE[\\n\\s]*to[\\n\\s]*terminate[\\n\\s]*a[\\n\\s]*loop[\\n\\s]*that[\\n\\s]*otherwise[\\n\\s]*wouldn't[\\n\\s]*terminate\\.[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*WHILE[\\n\\s]*occurs[\\n\\s]*after[\\n\\s]*the[\\n\\s]*WHEN\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*fixnum[\\n\\s]*from[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(oddp[\\n\\s]*i\\)[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*while[\\n\\s]*\\(&#60;[\\n\\s]*i[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*5\\)"],["\\code\n;; Print numbers and their squares.\n;; The DO construct applies to multiple forms.\n (loop for i from 1 to 3\n       do (print i)\n          (print (* i i)))\n\\OUT 1 \n\\OUT 1 \n\\OUT 2 \n\\OUT 4 \n\\OUT 3 \n\\OUT 9 \n*→* NIL\n\n\\endcode",";;[\\n\\s]*Print[\\n\\s]*numbers[\\n\\s]*and[\\n\\s]*their[\\n\\s]*squares\\.[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*DO[\\n\\s]*construct[\\n\\s]*applies[\\n\\s]*to[\\n\\s]*multiple[\\n\\s]*forms\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(\\*[\\n\\s]*i[\\n\\s]*i\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*9[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n;; Signal an exceptional condition.\n (loop for item in '(1 2 3 a 4 5)\n       when (not (numberp item))\n        return (cerror \"enter new value\" \"non-numeric value: ~s\" item))\nError: non-numeric value: A\n \n;; The previous example is equivalent to the following one.\n (loop for item in '(1 2 3 a 4 5)\n       when (not (numberp item))\n        do (return \n            (cerror \"Enter new value\" \"non-numeric value: ~s\" item)))\nError: non-numeric value: A\n\\endcode",";;[\\n\\s]*Signal[\\n\\s]*an[\\n\\s]*exceptional[\\n\\s]*condition\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*item[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*a[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(not[\\n\\s]*\\(numberp[\\n\\s]*item\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*\\(cerror[\\n\\s]*\"enter[\\n\\s]*new[\\n\\s]*value\"[\\n\\s]*\"non-numeric[\\n\\s]*value:[\\n\\s]*~s\"[\\n\\s]*item\\)\\)[\\n\\s]*Error:[\\n\\s]*non-numeric[\\n\\s]*value:[\\n\\s]*A[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*previous[\\n\\s]*example[\\n\\s]*is[\\n\\s]*equivalent[\\n\\s]*to[\\n\\s]*the[\\n\\s]*following[\\n\\s]*one\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*item[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*a[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(not[\\n\\s]*\\(numberp[\\n\\s]*item\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(return[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Enter[\\n\\s]*new[\\n\\s]*value\"[\\n\\s]*\"non-numeric[\\n\\s]*value:[\\n\\s]*~s\"[\\n\\s]*item\\)\\)\\)[\\n\\s]*Error:[\\n\\s]*non-numeric[\\n\\s]*value:[\\n\\s]*A"],["\\code\n;; This example parses a simple printed string representation from \n;; BUFFER (which is itself a string) and returns the index of the\n;; closing double-quote character.\n (let ((buffer \"\\\\\"a\\\\\" \\\\\"b\\\\\"\"))\n   (loop initially (unless (char= (char buffer 0) #\\\\\")\n                     (loop-finish))\n         for i of-type fixnum from 1 below (length (the string buffer))\n         when (char= (char buffer i) #\\\\\")\n          return i))\n*→* 2\n \n;; The collected value is returned.\n (loop for i from 1 to 10\n       when (&#62; i 5)\n         collect i\n       finally (prin1 'got-here))\n\\OUT GOT-HERE\n*→* (6 7 8 9 10) \n\n;; Return both the count of collected numbers and the numbers.\n (loop for i from 1 to 10\n       when (&#62; i 5)\n         collect i into number-list\n         and count i into number-count\n       finally (return (values number-count number-list)))\n*→* 5, (6 7 8 9 10)\n\\endcode",";;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*parses[\\n\\s]*a[\\n\\s]*simple[\\n\\s]*printed[\\n\\s]*string[\\n\\s]*representation[\\n\\s]*from[\\n\\s]*[\\n\\s]*;;[\\n\\s]*BUFFER[\\n\\s]*\\(which[\\n\\s]*is[\\n\\s]*itself[\\n\\s]*a[\\n\\s]*string\\)[\\n\\s]*and[\\n\\s]*returns[\\n\\s]*the[\\n\\s]*index[\\n\\s]*of[\\n\\s]*the[\\n\\s]*;;[\\n\\s]*closing[\\n\\s]*double-quote[\\n\\s]*character\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(buffer[\\n\\s]*\"\\\\\\\\\"a\\\\\\\\\"[\\n\\s]*\\\\\\\\\"b\\\\\\\\\"\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*initially[\\n\\s]*\\(unless[\\n\\s]*\\(char=[\\n\\s]*\\(char[\\n\\s]*buffer[\\n\\s]*0\\)[\\n\\s]*#\\\\\\\\\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop-finish\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*i[\\n\\s]*of-type[\\n\\s]*fixnum[\\n\\s]*from[\\n\\s]*1[\\n\\s]*below[\\n\\s]*\\(length[\\n\\s]*\\(the[\\n\\s]*string[\\n\\s]*buffer\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(char=[\\n\\s]*\\(char[\\n\\s]*buffer[\\n\\s]*i\\)[\\n\\s]*#\\\\\\\\\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*i\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*collected[\\n\\s]*value[\\n\\s]*is[\\n\\s]*returned\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(prin1[\\n\\s]*'got-here\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*GOT-HERE[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Return[\\n\\s]*both[\\n\\s]*the[\\n\\s]*count[\\n\\s]*of[\\n\\s]*collected[\\n\\s]*numbers[\\n\\s]*and[\\n\\s]*the[\\n\\s]*numbers\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*number-list[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*count[\\n\\s]*i[\\n\\s]*into[\\n\\s]*number-count[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(return[\\n\\s]*\\(values[\\n\\s]*number-count[\\n\\s]*number-list\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5,[\\n\\s]*\\(6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)"],["\\code\n;; Just name and return.\n (loop named max\n       for i from 1 to 10\n       do (print i)\n       do (return-from max 'done))\n\\OUT 1 \n*→* DONE\n\\endcode",";;[\\n\\s]*Just[\\n\\s]*name[\\n\\s]*and[\\n\\s]*return\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*named[\\n\\s]*max[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(return-from[\\n\\s]*max[\\n\\s]*'done\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*DONE"],["\\code\n (let ((i 0))                     ; no loop keywords are used\n    (loop (incf i) (if (= i 3) (return i)))) *→* 3\n (let ((i 0)(j 0))\n    (tagbody\n      (loop (incf j 3) (incf i) (if (= i 3) (go exit)))\n      exit)\n    j) *→* 9\n\\endcode","\\(let[\\n\\s]*\\(\\(i[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*no[\\n\\s]*loop[\\n\\s]*keywords[\\n\\s]*are[\\n\\s]*used[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(incf[\\n\\s]*i\\)[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*\\(return[\\n\\s]*i\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(i[\\n\\s]*0\\)\\(j[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(incf[\\n\\s]*j[\\n\\s]*3\\)[\\n\\s]*\\(incf[\\n\\s]*i\\)[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*\\(go[\\n\\s]*exit\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*exit\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*j\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9"],["\\code\n (loop for x from 1 to 10 \n       for y = nil then x \n       collect (list x y))\n*→* ((1 NIL) (2 2) (3 3) (4 4) (5 5) (6 6) (7 7) (8 8) (9 9) (10 10))\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*x[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*y[\\n\\s]*=[\\n\\s]*nil[\\n\\s]*then[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*NIL\\)[\\n\\s]*\\(2[\\n\\s]*2\\)[\\n\\s]*\\(3[\\n\\s]*3\\)[\\n\\s]*\\(4[\\n\\s]*4\\)[\\n\\s]*\\(5[\\n\\s]*5\\)[\\n\\s]*\\(6[\\n\\s]*6\\)[\\n\\s]*\\(7[\\n\\s]*7\\)[\\n\\s]*\\(8[\\n\\s]*8\\)[\\n\\s]*\\(9[\\n\\s]*9\\)[\\n\\s]*\\(10[\\n\\s]*10\\)\\)"],["\\code\n (loop for x from 1 to 10 \n       and y = nil then x \n       collect (list x y))\n*→* ((1 NIL) (2 1) (3 2) (4 3) (5 4) (6 5) (7 6) (8 7) (9 8) (10 9))\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*x[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*y[\\n\\s]*=[\\n\\s]*nil[\\n\\s]*then[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*NIL\\)[\\n\\s]*\\(2[\\n\\s]*1\\)[\\n\\s]*\\(3[\\n\\s]*2\\)[\\n\\s]*\\(4[\\n\\s]*3\\)[\\n\\s]*\\(5[\\n\\s]*4\\)[\\n\\s]*\\(6[\\n\\s]*5\\)[\\n\\s]*\\(7[\\n\\s]*6\\)[\\n\\s]*\\(8[\\n\\s]*7\\)[\\n\\s]*\\(9[\\n\\s]*8\\)[\\n\\s]*\\(10[\\n\\s]*9\\)\\)"],["\\code\n;; Group conditional clauses.\n (loop for i in '(1 324 2345 323 2 4 235 252)\n       when (oddp i)\n         do (print i)\n         and collect i into odd-numbers\n         and do (terpri)\n       else                              ; I is even.\n         collect i into even-numbers\n       finally\n         (return (values odd-numbers even-numbers)))\n\\OUT 1 \n\\OUT \n\\OUT 2345 \n\\OUT \n\\OUT 323 \n\\OUT \n\\OUT 235 \n*→* (1 2345 323 235), (324 2 4 252)\n\n;; Collect numbers larger than 3.\n (loop for i in '(1 2 3 4 5 6)\n       when (and (&#62; i 3) i)\n       collect it)                      ; IT refers to (and (&#62; i 3) i).\n*→* (4 5 6)\n \n;; Find a number in a list.\n (loop for i in '(1 2 3 4 5 6)\n       when (and (&#62; i 3) i)\n       return it)\n*→* 4\n     \n;; The above example is similar to the following one.\n (loop for i in '(1 2 3 4 5 6)\n       thereis (and (&#62; i 3) i))\n*→* 4\n\n\\medbreak\n;; Nest conditional clauses.\n (let ((list '(0 3.0 apple 4 5 9.8 orange banana)))\n   (loop for i in list\n         when (numberp i)\n           when (floatp i)\n             collect i into float-numbers\n           else                                  ; Not (floatp i)\n             collect i into other-numbers\n         else                                    ; Not (numberp i)\n           when (symbolp i) \n             collect i into symbol-list\n           else                                  ; Not (symbolp i)\n             do (error \"found a funny value in list ~S, value ~S~%\" list i)\n         finally (return (values float-numbers other-numbers symbol-list))))\n*→* (3.0 9.8), (0 4 5), (APPLE ORANGE BANANA)\n\n;; Without the END preposition, the last AND would apply to the\n;; inner IF rather than the outer one.\n (loop for x from 0 to 3 \n       do (print x)\n       if (zerop (mod x 2))\n         do (princ \" a\")\n          and if (zerop (floor x 2))\n                do (princ \" b\")\n                end\n          and do (princ \" c\"))\n\\OUT 0  a b c\n\\OUT 1 \n\\OUT 2  a c\n\\OUT 3 \n*→* NIL\n\\endcode",";;[\\n\\s]*Group[\\n\\s]*conditional[\\n\\s]*clauses\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*324[\\n\\s]*2345[\\n\\s]*323[\\n\\s]*2[\\n\\s]*4[\\n\\s]*235[\\n\\s]*252\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(oddp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*odd-numbers[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*do[\\n\\s]*\\(terpri\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*else[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*I[\\n\\s]*is[\\n\\s]*even\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*even-numbers[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*\\(values[\\n\\s]*odd-numbers[\\n\\s]*even-numbers\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*2345[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*323[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*235[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2345[\\n\\s]*323[\\n\\s]*235\\),[\\n\\s]*\\(324[\\n\\s]*2[\\n\\s]*4[\\n\\s]*252\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Collect[\\n\\s]*numbers[\\n\\s]*larger[\\n\\s]*than[\\n\\s]*3\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(and[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*it\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*IT[\\n\\s]*refers[\\n\\s]*to[\\n\\s]*\\(and[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*i\\)\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Find[\\n\\s]*a[\\n\\s]*number[\\n\\s]*in[\\n\\s]*a[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(and[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*return[\\n\\s]*it\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*above[\\n\\s]*example[\\n\\s]*is[\\n\\s]*similar[\\n\\s]*to[\\n\\s]*the[\\n\\s]*following[\\n\\s]*one\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thereis[\\n\\s]*\\(and[\\n\\s]*\\(&#62;[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*i\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\\\medbreak[\\n\\s]*;;[\\n\\s]*Nest[\\n\\s]*conditional[\\n\\s]*clauses\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(list[\\n\\s]*'\\(0[\\n\\s]*3\\.0[\\n\\s]*apple[\\n\\s]*4[\\n\\s]*5[\\n\\s]*9\\.8[\\n\\s]*orange[\\n\\s]*banana\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*list[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(numberp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(floatp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*float-numbers[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*else[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*\\(floatp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*other-numbers[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*else[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*\\(numberp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(symbolp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*i[\\n\\s]*into[\\n\\s]*symbol-list[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*else[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*Not[\\n\\s]*\\(symbolp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(error[\\n\\s]*\"found[\\n\\s]*a[\\n\\s]*funny[\\n\\s]*value[\\n\\s]*in[\\n\\s]*list[\\n\\s]*~S,[\\n\\s]*value[\\n\\s]*~S~%\"[\\n\\s]*list[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(return[\\n\\s]*\\(values[\\n\\s]*float-numbers[\\n\\s]*other-numbers[\\n\\s]*symbol-list\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3\\.0[\\n\\s]*9\\.8\\),[\\n\\s]*\\(0[\\n\\s]*4[\\n\\s]*5\\),[\\n\\s]*\\(APPLE[\\n\\s]*ORANGE[\\n\\s]*BANANA\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Without[\\n\\s]*the[\\n\\s]*END[\\n\\s]*preposition,[\\n\\s]*the[\\n\\s]*last[\\n\\s]*AND[\\n\\s]*would[\\n\\s]*apply[\\n\\s]*to[\\n\\s]*the[\\n\\s]*;;[\\n\\s]*inner[\\n\\s]*IF[\\n\\s]*rather[\\n\\s]*than[\\n\\s]*the[\\n\\s]*outer[\\n\\s]*one\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*x[\\n\\s]*from[\\n\\s]*0[\\n\\s]*to[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(print[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*if[\\n\\s]*\\(zerop[\\n\\s]*\\(mod[\\n\\s]*x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(princ[\\n\\s]*\"[\\n\\s]*a\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*if[\\n\\s]*\\(zerop[\\n\\s]*\\(floor[\\n\\s]*x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(princ[\\n\\s]*\"[\\n\\s]*b\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*end[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*do[\\n\\s]*\\(princ[\\n\\s]*\"[\\n\\s]*c\"\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*0[\\n\\s]*[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*[\\n\\s]*a[\\n\\s]*c[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (loop for \\i&#123;internal-variable&#125; downfrom (- \\i&#123;n&#125; 1) to 0 ...)\n\\endcode","\\(loop[\\n\\s]*for[\\n\\s]*\\\\i&#123;internal-variable&#125;[\\n\\s]*downfrom[\\n\\s]*\\(-[\\n\\s]*\\\\i&#123;n&#125;[\\n\\s]*1\\)[\\n\\s]*to[\\n\\s]*0[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (a b c)\n\\endcode","\\(a[\\n\\s]*b[\\n\\s]*c\\)"],["\\code\n% (defun traffic-light (color)\n%   (case color\n%     (green)\n%     (red (stop))\n%     (amber (accelerate))      ;Insert more colors after this line.\n%     ))\n%\\endcode","%[\\n\\s]*\\(defun[\\n\\s]*traffic-light[\\n\\s]*\\(color\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*color[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(green\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(red[\\n\\s]*\\(stop\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(amber[\\n\\s]*\\(accelerate\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Insert[\\n\\s]*more[\\n\\s]*colors[\\n\\s]*after[\\n\\s]*this[\\n\\s]*line\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)\\)[\\n\\s]*%"],["\\code\n (a b c . d)\n\\endcode","\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.[\\n\\s]*d\\)"],["\\code\n (cons 'a (cons 'b (cons 'c 'd)))\n\\endcode","\\(cons[\\n\\s]*'a[\\n\\s]*\\(cons[\\n\\s]*'b[\\n\\s]*\\(cons[\\n\\s]*'c[\\n\\s]*'d\\)\\)\\)"],["\\code\n (cons 'this-one 'that-one) *→* (this-one . that-one)\n\\endcode","\\(cons[\\n\\s]*'this-one[\\n\\s]*'that-one\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(this-one[\\n\\s]*\\.[\\n\\s]*that-one\\)"],["\\code\n (a b c d . (e f . (g))) \\EQ (a b c d e f g)\n\\endcode","\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*\\.[\\n\\s]*\\(e[\\n\\s]*f[\\n\\s]*\\.[\\n\\s]*\\(g\\)\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f[\\n\\s]*g\\)"],["\\code\n 'foo *→* FOO\n ''foo *→* (QUOTE FOO)\n (car ''foo) *→* QUOTE\n\\endcode","'foo[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*''foo[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*FOO\\)[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*''foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*QUOTE"],["\\code\n (+ 3 ; three\n    4)\n*→* 7    \n\\endcode","\\(\\+[\\n\\s]*3[\\n\\s]*;[\\n\\s]*three[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7"],["\\code\n;;;; Math Utilities\n\n;;; FIB computes the the Fibonacci function in the traditional\n;;; recursive way.\n\n(defun fib (n)\n  (check-type n integer)\n  ;; At this point we're sure we have an integer argument.\n  ;; Now we can get down to some serious computation.\n  (cond ((&#60; n 0)\n         ;; Hey, this is just supposed to be a simple example.\n         ;; Did you really expect me to handle the general case?\n         (error \"FIB got ~D as an argument.\" n))\n        ((&#60; n 2) n)             ;fib[0]=0 and fib[1]=1\n        ;; The cheap cases didn't work.\n        ;; Nothing more to do but recurse.\n        (t (+ (fib (- n 1))     ;The traditional formula\n              (fib (- n 2)))))) ; is fib[n-1]+fib[n-2].\n\\endcode",";;;;[\\n\\s]*Math[\\n\\s]*Utilities[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*FIB[\\n\\s]*computes[\\n\\s]*the[\\n\\s]*the[\\n\\s]*Fibonacci[\\n\\s]*function[\\n\\s]*in[\\n\\s]*the[\\n\\s]*traditional[\\n\\s]*;;;[\\n\\s]*recursive[\\n\\s]*way\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*fib[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*n[\\n\\s]*integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*At[\\n\\s]*this[\\n\\s]*point[\\n\\s]*we're[\\n\\s]*sure[\\n\\s]*we[\\n\\s]*have[\\n\\s]*an[\\n\\s]*integer[\\n\\s]*argument\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Now[\\n\\s]*we[\\n\\s]*can[\\n\\s]*get[\\n\\s]*down[\\n\\s]*to[\\n\\s]*some[\\n\\s]*serious[\\n\\s]*computation\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(&#60;[\\n\\s]*n[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Hey,[\\n\\s]*this[\\n\\s]*is[\\n\\s]*just[\\n\\s]*supposed[\\n\\s]*to[\\n\\s]*be[\\n\\s]*a[\\n\\s]*simple[\\n\\s]*example\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Did[\\n\\s]*you[\\n\\s]*really[\\n\\s]*expect[\\n\\s]*me[\\n\\s]*to[\\n\\s]*handle[\\n\\s]*the[\\n\\s]*general[\\n\\s]*case\\?[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"FIB[\\n\\s]*got[\\n\\s]*~D[\\n\\s]*as[\\n\\s]*an[\\n\\s]*argument\\.\"[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(&#60;[\\n\\s]*n[\\n\\s]*2\\)[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;fib\\[0\\]=0[\\n\\s]*and[\\n\\s]*fib\\[1\\]=1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*cheap[\\n\\s]*cases[\\n\\s]*didn't[\\n\\s]*work\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Nothing[\\n\\s]*more[\\n\\s]*to[\\n\\s]*do[\\n\\s]*but[\\n\\s]*recurse\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(\\+[\\n\\s]*\\(fib[\\n\\s]*\\(-[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*traditional[\\n\\s]*formula[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fib[\\n\\s]*\\(-[\\n\\s]*n[\\n\\s]*2\\)\\)\\)\\)\\)\\)[\\n\\s]*;[\\n\\s]*is[\\n\\s]*fib\\[n-1\\]\\+fib\\[n-2\\]\\."],["\\code\n `(cond ((numberp ,x) ,@y) (t (print ,x) ,@y))\n\\endcode","`\\(cond[\\n\\s]*\\(\\(numberp[\\n\\s]*,x\\)[\\n\\s]*,@y\\)[\\n\\s]*\\(t[\\n\\s]*\\(print[\\n\\s]*,x\\)[\\n\\s]*,@y\\)\\)"],["\\code\n (list 'cond \n       (cons (list 'numberp x) y) \n       (list* 't (list 'print x) y))\n\\endcode","\\(list[\\n\\s]*'cond[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*\\(list[\\n\\s]*'numberp[\\n\\s]*x\\)[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*'t[\\n\\s]*\\(list[\\n\\s]*'print[\\n\\s]*x\\)[\\n\\s]*y\\)\\)"],["\\code\n `(x ,x ,@x foo ,(cadr x) bar ,(cdr x) baz ,@(cdr x))\n*→* (x (a b c) a b c foo b bar (b c) baz b c)\n\\endcode","`\\(x[\\n\\s]*,x[\\n\\s]*,@x[\\n\\s]*foo[\\n\\s]*,\\(cadr[\\n\\s]*x\\)[\\n\\s]*bar[\\n\\s]*,\\(cdr[\\n\\s]*x\\)[\\n\\s]*baz[\\n\\s]*,@\\(cdr[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(x[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*foo[\\n\\s]*b[\\n\\s]*bar[\\n\\s]*\\(b[\\n\\s]*c\\)[\\n\\s]*baz[\\n\\s]*b[\\n\\s]*c\\)"],["\\code\n (append \\lbracket\\ x1\\rbracket \\lbracket\\ x2\\rbracket \\lbracket\\ x3\\rbracket ... \\lbracket\\ xn\\rbracket (quote atom))\n\\endcode","\\(append[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*x1\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*x2\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*x3\\\\rbracket[\\n\\s]*\\.\\.\\.[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*xn\\\\rbracket[\\n\\s]*\\(quote[\\n\\s]*atom\\)\\)"],["\\code\n (append \\lbracket\\ x1\\rbracket \\lbracket\\ x2\\rbracket \\lbracket\\ x3\\rbracket ... \\lbracket\\ xn\\rbracket form)\n\\endcode","\\(append[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*x1\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*x2\\\\rbracket[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*x3\\\\rbracket[\\n\\s]*\\.\\.\\.[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*xn\\\\rbracket[\\n\\s]*form\\)"],["\\code\n `((,a b) ,c ,@d)\n\\endcode","`\\(\\(,a[\\n\\s]*b\\)[\\n\\s]*,c[\\n\\s]*,@d\\)"],["\\code\n (append (list (append (list a) (list 'b) '\\nil)) (list c) d '\\nil)\n\\endcode","\\(append[\\n\\s]*\\(list[\\n\\s]*\\(append[\\n\\s]*\\(list[\\n\\s]*a\\)[\\n\\s]*\\(list[\\n\\s]*'b\\)[\\n\\s]*'\\\\nil\\)\\)[\\n\\s]*\\(list[\\n\\s]*c\\)[\\n\\s]*d[\\n\\s]*'\\\\nil\\)"],["\\code\n (append (list (append (list a) (list 'b))) (list c) d)\n (append (list (append (list a) '(b))) (list c) d)\n (list* (cons a '(b)) c d)\n (list* (cons a (list 'b)) c d)\n (append (list (cons a '(b))) (list c) d)\n (list* (cons a '(b)) c (copy-list d))\n\\endcode","\\(append[\\n\\s]*\\(list[\\n\\s]*\\(append[\\n\\s]*\\(list[\\n\\s]*a\\)[\\n\\s]*\\(list[\\n\\s]*'b\\)\\)\\)[\\n\\s]*\\(list[\\n\\s]*c\\)[\\n\\s]*d\\)[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*\\(list[\\n\\s]*\\(append[\\n\\s]*\\(list[\\n\\s]*a\\)[\\n\\s]*'\\(b\\)\\)\\)[\\n\\s]*\\(list[\\n\\s]*c\\)[\\n\\s]*d\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*'\\(b\\)\\)[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*\\(list[\\n\\s]*'b\\)\\)[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*\\(list[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*'\\(b\\)\\)\\)[\\n\\s]*\\(list[\\n\\s]*c\\)[\\n\\s]*d\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*'\\(b\\)\\)[\\n\\s]*c[\\n\\s]*\\(copy-list[\\n\\s]*d\\)\\)"],["\\code\n(apply #'+ l) \\EQ (apply (function +) l)\n\\endcode","\\(apply[\\n\\s]*#'\\+[\\n\\s]*l\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*\\(function[\\n\\s]*\\+\\)[\\n\\s]*l\\)"],["\\code\n #(a b c c c c)\n #6(a b c c c c)\n #6(a b c)\n #6(a b c c)\n\\endcode","#\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*c[\\n\\s]*c[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*#6\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*c[\\n\\s]*c[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*#6\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*#6\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*c\\)"],["\\code\n #(a b c)               ;A vector of length 3\n #(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47)\n                        ;A vector containing the primes below 50\n #()                    ;An empty vector\n\\endcode","#\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*vector[\\n\\s]*of[\\n\\s]*length[\\n\\s]*3[\\n\\s]*[\\n\\s]*#\\(2[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7[\\n\\s]*11[\\n\\s]*13[\\n\\s]*17[\\n\\s]*19[\\n\\s]*23[\\n\\s]*29[\\n\\s]*31[\\n\\s]*37[\\n\\s]*41[\\n\\s]*43[\\n\\s]*47\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*vector[\\n\\s]*containing[\\n\\s]*the[\\n\\s]*primes[\\n\\s]*below[\\n\\s]*50[\\n\\s]*[\\n\\s]*#\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;An[\\n\\s]*empty[\\n\\s]*vector"],["\\code\n  #*101111\n #6*101111\n #6*101\n #6*1011\n\\endcode","#\\*101111[\\n\\s]*[\\n\\s]*#6\\*101111[\\n\\s]*[\\n\\s]*#6\\*101[\\n\\s]*[\\n\\s]*#6\\*1011"],["\\code\n #*         ;An empty bit-vector\n\\endcode","#\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;An[\\n\\s]*empty[\\n\\s]*bit-vector"],["\\code\n #B1101 \\EQ 13 ;1101\\ssst\n #b101/11 \\EQ 5/3\n\\endcode","#B1101[\\n\\s]*\\\\EQ[\\n\\s]*13[\\n\\s]*;1101\\\\ssst[\\n\\s]*[\\n\\s]*#b101/11[\\n\\s]*\\\\EQ[\\n\\s]*5/3"],["\\code\n #o37/15 \\EQ 31/13\n #o777 \\EQ 511\n #o105 \\EQ 69 ;105\\ssse\n\\endcode","#o37/15[\\n\\s]*\\\\EQ[\\n\\s]*31/13[\\n\\s]*[\\n\\s]*#o777[\\n\\s]*\\\\EQ[\\n\\s]*511[\\n\\s]*[\\n\\s]*#o105[\\n\\s]*\\\\EQ[\\n\\s]*69[\\n\\s]*;105\\\\ssse"],["\\code\n #xF00 \\EQ 3840             \n #x105 \\EQ 261 ;105\\ssss\n\\endcode","#xF00[\\n\\s]*\\\\EQ[\\n\\s]*3840[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#x105[\\n\\s]*\\\\EQ[\\n\\s]*261[\\n\\s]*;105\\\\ssss"],["\\code\n 0       1       5\n foo     2       (hot dog)\n\\endcode","0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*5[\\n\\s]*[\\n\\s]*foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(hot[\\n\\s]*dog\\)"],["\\code\n (0 1 5) (foo 2 (hot dog))\n\\endcode","\\(0[\\n\\s]*1[\\n\\s]*5\\)[\\n\\s]*\\(foo[\\n\\s]*2[\\n\\s]*\\(hot[\\n\\s]*dog\\)\\)"],["\\code\n ((0 1 5) (foo 2 (hot dog)))\n\\endcode","\\(\\(0[\\n\\s]*1[\\n\\s]*5\\)[\\n\\s]*\\(foo[\\n\\s]*2[\\n\\s]*\\(hot[\\n\\s]*dog\\)\\)\\)"],["\\code\n #.(cm keyword1 'value1 keyword2 'value2 ...)\n\\endcode","#\\.\\(cm[\\n\\s]*keyword1[\\n\\s]*'value1[\\n\\s]*keyword2[\\n\\s]*'value2[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (intern (string slotj) (find-package 'keyword))\n\\endcode","\\(intern[\\n\\s]*\\(string[\\n\\s]*slotj\\)[\\n\\s]*\\(find-package[\\n\\s]*'keyword\\)\\)"],["\\code\n (setq x (list 'p 'q))\n (setq y (list (list 'a 'b) x 'foo x))\n (rplacd (last y) (cdr y))\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'p[\\n\\s]*'q\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*x[\\n\\s]*'foo[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*\\(rplacd[\\n\\s]*\\(last[\\n\\s]*y\\)[\\n\\s]*\\(cdr[\\n\\s]*y\\)\\)"],["\\code\n ((a b) . #1=(#2=(p q) foo #2# . #1#))\n\\endcode","\\(\\(a[\\n\\s]*b\\)[\\n\\s]*\\.[\\n\\s]*#1=\\(#2=\\(p[\\n\\s]*q\\)[\\n\\s]*foo[\\n\\s]*#2#[\\n\\s]*\\.[\\n\\s]*#1#\\)\\)"],["\\code\n ((a b) (p q) foo (p q) (p q) foo (p q) (p q) foo (p q) ...)\n\\endcode","\\(\\(a[\\n\\s]*b\\)[\\n\\s]*\\(p[\\n\\s]*q\\)[\\n\\s]*foo[\\n\\s]*\\(p[\\n\\s]*q\\)[\\n\\s]*\\(p[\\n\\s]*q\\)[\\n\\s]*foo[\\n\\s]*\\(p[\\n\\s]*q\\)[\\n\\s]*\\(p[\\n\\s]*q\\)[\\n\\s]*foo[\\n\\s]*\\(p[\\n\\s]*q\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n#-\\param&#123;test&#125; \\param&#123;expression&#125; \\EQ #+(not \\param&#123;test&#125;) \\param&#123;expression&#125;\n\\endcode","#-\\\\param&#123;test&#125;[\\n\\s]*\\\\param&#123;expression&#125;[\\n\\s]*\\\\EQ[\\n\\s]*#\\+\\(not[\\n\\s]*\\\\param&#123;test&#125;\\)[\\n\\s]*\\\\param&#123;expression&#125;"],["\\code\n;;; In this example, some debugging code is commented out with #|...|#\n;;; Note that this kind of comment can occur in the middle of a line\n;;; (because a delimiter marks where the end of the comment occurs)\n;;; where a semicolon comment can only occur at the end of a line \n;;; (because it comments out the rest of the line).\n (defun add3 (n) #|(format t \"~&Adding 3 to ~D.\" n)|# (+ n 3))\n\\goodbreak\n;;; The examples that follow show issues related to #| ... |# nesting.\n\n;;; In this first example, #| and |# always occur properly paired,\n;;; so nesting works naturally.\n (defun mention-fun-fact-1a ()\n   (format t \"CL uses ; and #|...|# in comments.\"))\n*→* MENTION-FUN-FACT-1A\n (mention-fun-fact-1a)\n\\OUT CL uses ; and #|...|# in comments.\n*→* NIL\n #| (defun mention-fun-fact-1b ()\n      (format t \"CL uses ; and #|...|# in comments.\")) |#\n (fboundp 'mention-fun-fact-1b) *→* NIL\n\\goodbreak\n;;; In this example, vertical-bar followed by sharpsign needed to appear\n;;; in a string without any matching sharpsign followed by vertical-bar\n;;; having preceded this.  To compensate, the programmer has included a\n;;; slash separating the two characters.  In case 2a, the slash is \n;;; unnecessary but harmless, but in case 2b, the slash is critical to\n;;; allowing the outer #| ... |# pair match.  If the slash were not present,\n;;; the outer comment would terminate prematurely.\n (defun mention-fun-fact-2a ()\n   (format t \"Don't use |\\\\# unmatched or you'll get in trouble!\"))\n*→* MENTION-FUN-FACT-2A\n (mention-fun-fact-2a)\n\\OUT Don't use |# unmatched or you'll get in trouble!\n*→* NIL\n #| (defun mention-fun-fact-2b ()\n      (format t \"Don't use |\\\\# unmatched or you'll get in trouble!\") |#\n (fboundp 'mention-fun-fact-2b) *→* NIL\n\\goodbreak\n;;; In this example, the programmer attacks the mismatch problem in a\n;;; different way.  The sharpsign vertical bar in the comment is not needed\n;;; for the correct parsing of the program normally (as in case 3a), but \n;;; becomes important to avoid premature termination of a comment when such \n;;; a program is commented out (as in case 3b).\n (defun mention-fun-fact-3a () ; #|\n   (format t \"Don't use |# unmatched or you'll get in trouble!\"))\n*→* MENTION-FUN-FACT-3A\n (mention-fun-fact-3a)\n\\OUT Don't use |# unmatched or you'll get in trouble!\n*→* NIL\n #|\n (defun mention-fun-fact-3b () ; #|\n   (format t \"Don't use |# unmatched or you'll get in trouble!\"))\n |#\n (fboundp 'mention-fun-fact-3b) *→* NIL\n\\endcode",";;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*some[\\n\\s]*debugging[\\n\\s]*code[\\n\\s]*is[\\n\\s]*commented[\\n\\s]*out[\\n\\s]*with[\\n\\s]*#|\\.\\.\\.|#[\\n\\s]*;;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*this[\\n\\s]*kind[\\n\\s]*of[\\n\\s]*comment[\\n\\s]*can[\\n\\s]*occur[\\n\\s]*in[\\n\\s]*the[\\n\\s]*middle[\\n\\s]*of[\\n\\s]*a[\\n\\s]*line[\\n\\s]*;;;[\\n\\s]*\\(because[\\n\\s]*a[\\n\\s]*delimiter[\\n\\s]*marks[\\n\\s]*where[\\n\\s]*the[\\n\\s]*end[\\n\\s]*of[\\n\\s]*the[\\n\\s]*comment[\\n\\s]*occurs\\)[\\n\\s]*;;;[\\n\\s]*where[\\n\\s]*a[\\n\\s]*semicolon[\\n\\s]*comment[\\n\\s]*can[\\n\\s]*only[\\n\\s]*occur[\\n\\s]*at[\\n\\s]*the[\\n\\s]*end[\\n\\s]*of[\\n\\s]*a[\\n\\s]*line[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*\\(because[\\n\\s]*it[\\n\\s]*comments[\\n\\s]*out[\\n\\s]*the[\\n\\s]*rest[\\n\\s]*of[\\n\\s]*the[\\n\\s]*line\\)\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*add3[\\n\\s]*\\(n\\)[\\n\\s]*#|\\(format[\\n\\s]*t[\\n\\s]*\"~&Adding[\\n\\s]*3[\\n\\s]*to[\\n\\s]*~D\\.\"[\\n\\s]*n\\)|#[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*3\\)\\)[\\n\\s]*\\\\goodbreak[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*examples[\\n\\s]*that[\\n\\s]*follow[\\n\\s]*show[\\n\\s]*issues[\\n\\s]*related[\\n\\s]*to[\\n\\s]*#|[\\n\\s]*\\.\\.\\.[\\n\\s]*|#[\\n\\s]*nesting\\.[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*first[\\n\\s]*example,[\\n\\s]*#|[\\n\\s]*and[\\n\\s]*|#[\\n\\s]*always[\\n\\s]*occur[\\n\\s]*properly[\\n\\s]*paired,[\\n\\s]*;;;[\\n\\s]*so[\\n\\s]*nesting[\\n\\s]*works[\\n\\s]*naturally\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*mention-fun-fact-1a[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"CL[\\n\\s]*uses[\\n\\s]*;[\\n\\s]*and[\\n\\s]*#|\\.\\.\\.|#[\\n\\s]*in[\\n\\s]*comments\\.\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MENTION-FUN-FACT-1A[\\n\\s]*[\\n\\s]*\\(mention-fun-fact-1a\\)[\\n\\s]*\\\\OUT[\\n\\s]*CL[\\n\\s]*uses[\\n\\s]*;[\\n\\s]*and[\\n\\s]*#|\\.\\.\\.|#[\\n\\s]*in[\\n\\s]*comments\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*#|[\\n\\s]*\\(defun[\\n\\s]*mention-fun-fact-1b[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"CL[\\n\\s]*uses[\\n\\s]*;[\\n\\s]*and[\\n\\s]*#|\\.\\.\\.|#[\\n\\s]*in[\\n\\s]*comments\\.\"\\)\\)[\\n\\s]*|#[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'mention-fun-fact-1b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\goodbreak[\\n\\s]*;;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*vertical-bar[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*sharpsign[\\n\\s]*needed[\\n\\s]*to[\\n\\s]*appear[\\n\\s]*;;;[\\n\\s]*in[\\n\\s]*a[\\n\\s]*string[\\n\\s]*without[\\n\\s]*any[\\n\\s]*matching[\\n\\s]*sharpsign[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*vertical-bar[\\n\\s]*;;;[\\n\\s]*having[\\n\\s]*preceded[\\n\\s]*this\\.[\\n\\s]*[\\n\\s]*To[\\n\\s]*compensate,[\\n\\s]*the[\\n\\s]*programmer[\\n\\s]*has[\\n\\s]*included[\\n\\s]*a[\\n\\s]*;;;[\\n\\s]*slash[\\n\\s]*separating[\\n\\s]*the[\\n\\s]*two[\\n\\s]*characters\\.[\\n\\s]*[\\n\\s]*In[\\n\\s]*case[\\n\\s]*2a,[\\n\\s]*the[\\n\\s]*slash[\\n\\s]*is[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*unnecessary[\\n\\s]*but[\\n\\s]*harmless,[\\n\\s]*but[\\n\\s]*in[\\n\\s]*case[\\n\\s]*2b,[\\n\\s]*the[\\n\\s]*slash[\\n\\s]*is[\\n\\s]*critical[\\n\\s]*to[\\n\\s]*;;;[\\n\\s]*allowing[\\n\\s]*the[\\n\\s]*outer[\\n\\s]*#|[\\n\\s]*\\.\\.\\.[\\n\\s]*|#[\\n\\s]*pair[\\n\\s]*match\\.[\\n\\s]*[\\n\\s]*If[\\n\\s]*the[\\n\\s]*slash[\\n\\s]*were[\\n\\s]*not[\\n\\s]*present,[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*outer[\\n\\s]*comment[\\n\\s]*would[\\n\\s]*terminate[\\n\\s]*prematurely\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*mention-fun-fact-2a[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Don't[\\n\\s]*use[\\n\\s]*|\\\\\\\\#[\\n\\s]*unmatched[\\n\\s]*or[\\n\\s]*you'll[\\n\\s]*get[\\n\\s]*in[\\n\\s]*trouble!\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MENTION-FUN-FACT-2A[\\n\\s]*[\\n\\s]*\\(mention-fun-fact-2a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Don't[\\n\\s]*use[\\n\\s]*|#[\\n\\s]*unmatched[\\n\\s]*or[\\n\\s]*you'll[\\n\\s]*get[\\n\\s]*in[\\n\\s]*trouble![\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*#|[\\n\\s]*\\(defun[\\n\\s]*mention-fun-fact-2b[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Don't[\\n\\s]*use[\\n\\s]*|\\\\\\\\#[\\n\\s]*unmatched[\\n\\s]*or[\\n\\s]*you'll[\\n\\s]*get[\\n\\s]*in[\\n\\s]*trouble!\"\\)[\\n\\s]*|#[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'mention-fun-fact-2b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\goodbreak[\\n\\s]*;;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*the[\\n\\s]*programmer[\\n\\s]*attacks[\\n\\s]*the[\\n\\s]*mismatch[\\n\\s]*problem[\\n\\s]*in[\\n\\s]*a[\\n\\s]*;;;[\\n\\s]*different[\\n\\s]*way\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*sharpsign[\\n\\s]*vertical[\\n\\s]*bar[\\n\\s]*in[\\n\\s]*the[\\n\\s]*comment[\\n\\s]*is[\\n\\s]*not[\\n\\s]*needed[\\n\\s]*;;;[\\n\\s]*for[\\n\\s]*the[\\n\\s]*correct[\\n\\s]*parsing[\\n\\s]*of[\\n\\s]*the[\\n\\s]*program[\\n\\s]*normally[\\n\\s]*\\(as[\\n\\s]*in[\\n\\s]*case[\\n\\s]*3a\\),[\\n\\s]*but[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*becomes[\\n\\s]*important[\\n\\s]*to[\\n\\s]*avoid[\\n\\s]*premature[\\n\\s]*termination[\\n\\s]*of[\\n\\s]*a[\\n\\s]*comment[\\n\\s]*when[\\n\\s]*such[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*a[\\n\\s]*program[\\n\\s]*is[\\n\\s]*commented[\\n\\s]*out[\\n\\s]*\\(as[\\n\\s]*in[\\n\\s]*case[\\n\\s]*3b\\)\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*mention-fun-fact-3a[\\n\\s]*\\(\\)[\\n\\s]*;[\\n\\s]*#|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Don't[\\n\\s]*use[\\n\\s]*|#[\\n\\s]*unmatched[\\n\\s]*or[\\n\\s]*you'll[\\n\\s]*get[\\n\\s]*in[\\n\\s]*trouble!\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MENTION-FUN-FACT-3A[\\n\\s]*[\\n\\s]*\\(mention-fun-fact-3a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Don't[\\n\\s]*use[\\n\\s]*|#[\\n\\s]*unmatched[\\n\\s]*or[\\n\\s]*you'll[\\n\\s]*get[\\n\\s]*in[\\n\\s]*trouble![\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*#|[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*mention-fun-fact-3b[\\n\\s]*\\(\\)[\\n\\s]*;[\\n\\s]*#|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Don't[\\n\\s]*use[\\n\\s]*|#[\\n\\s]*unmatched[\\n\\s]*or[\\n\\s]*you'll[\\n\\s]*get[\\n\\s]*in[\\n\\s]*trouble!\"\\)\\)[\\n\\s]*[\\n\\s]*|#[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'mention-fun-fact-3b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n #|| (+ #|| 3 ||# 4 5) ||# \n\\endcode","#||[\\n\\s]*\\(\\+[\\n\\s]*#||[\\n\\s]*3[\\n\\s]*||#[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*||#"],["\\code\n #| (+ #| 3 |# 4 5) |#\n\\endcode","#|[\\n\\s]*\\(\\+[\\n\\s]*#|[\\n\\s]*3[\\n\\s]*|#[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*|#"],["\\code\n (+ 1/3 2/3 1.0d0 1.0 1.0e-15)\n\\endcode","\\(\\+[\\n\\s]*1/3[\\n\\s]*2/3[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0[\\n\\s]*1\\.0e-15\\)"],["\\code\n (+ (+ 1/3 2/3) (+ 1.0d0 1.0e-15) 1.0)\n\\endcode","\\(\\+[\\n\\s]*\\(\\+[\\n\\s]*1/3[\\n\\s]*2/3\\)[\\n\\s]*\\(\\+[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0e-15\\)[\\n\\s]*1\\.0\\)"],["\\code\n ;;;; Combining rationals with floats.\n ;;; This example assumes an implementation in which \n ;;; (float-radix 0.5) is 2 (as in IEEE) or 16 (as in IBM/360),\n ;;; or else some other implementation in which 1/2 has an exact \n ;;;  representation in floating point.\n (+ 1/2 0.5) *→* 1.0\n (- 1/2 0.5d0) *→* 0.0d0\n (+ 0.5 -0.5 1/2) *→* 0.5\n\n ;;;; Comparing rationals with floats.\n ;;; This example assumes an implementation in which the default float \n ;;; format is IEEE single-float, IEEE double-float, or some other format\n ;;; in which 5/7 is rounded upwards by FLOAT.\n (&#60; 5/7 (float 5/7)) *→ true*\n (&#60; 5/7 (rational (float 5/7))) *→ true*\n (&#60; (float 5/7) (float 5/7)) *→ false*\n\\endcode",";;;;[\\n\\s]*Combining[\\n\\s]*rationals[\\n\\s]*with[\\n\\s]*floats\\.[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*assumes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*in[\\n\\s]*which[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*\\(float-radix[\\n\\s]*0\\.5\\)[\\n\\s]*is[\\n\\s]*2[\\n\\s]*\\(as[\\n\\s]*in[\\n\\s]*IEEE\\)[\\n\\s]*or[\\n\\s]*16[\\n\\s]*\\(as[\\n\\s]*in[\\n\\s]*IBM/360\\),[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*or[\\n\\s]*else[\\n\\s]*some[\\n\\s]*other[\\n\\s]*implementation[\\n\\s]*in[\\n\\s]*which[\\n\\s]*1/2[\\n\\s]*has[\\n\\s]*an[\\n\\s]*exact[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*representation[\\n\\s]*in[\\n\\s]*floating[\\n\\s]*point\\.[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*1/2[\\n\\s]*0\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*1/2[\\n\\s]*0\\.5d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0d0[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*0\\.5[\\n\\s]*-0\\.5[\\n\\s]*1/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.5[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;;[\\n\\s]*Comparing[\\n\\s]*rationals[\\n\\s]*with[\\n\\s]*floats\\.[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*assumes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*in[\\n\\s]*which[\\n\\s]*the[\\n\\s]*default[\\n\\s]*float[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*format[\\n\\s]*is[\\n\\s]*IEEE[\\n\\s]*single-float,[\\n\\s]*IEEE[\\n\\s]*double-float,[\\n\\s]*or[\\n\\s]*some[\\n\\s]*other[\\n\\s]*format[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*in[\\n\\s]*which[\\n\\s]*5/7[\\n\\s]*is[\\n\\s]*rounded[\\n\\s]*upwards[\\n\\s]*by[\\n\\s]*FLOAT\\.[\\n\\s]*[\\n\\s]*\\(&#60;[\\n\\s]*5/7[\\n\\s]*\\(float[\\n\\s]*5/7\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(&#60;[\\n\\s]*5/7[\\n\\s]*\\(rational[\\n\\s]*\\(float[\\n\\s]*5/7\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(&#60;[\\n\\s]*\\(float[\\n\\s]*5/7\\)[\\n\\s]*\\(float[\\n\\s]*5/7\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n #c(1.0 1.0) *→* #C(1.0 1.0)\n #c(0.0 0.0) *→* #C(0.0 0.0)\n #c(1.0 1) *→* #C(1.0 1.0)\n #c(0.0 0) *→* #C(0.0 0.0)\n #c(1 1) *→* #C(1 1)\n #c(0 0) *→* 0\n (typep #c(1 1) '(complex (eql 1))) *→ true*\n (typep #c(0 0) '(complex (eql 0))) *→ false*\n\\endcode","#c\\(1\\.0[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.0[\\n\\s]*1\\.0\\)[\\n\\s]*[\\n\\s]*#c\\(0\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*[\\n\\s]*#c\\(1\\.0[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.0[\\n\\s]*1\\.0\\)[\\n\\s]*[\\n\\s]*#c\\(0\\.0[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*[\\n\\s]*#c\\(1[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*#c\\(0[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*#c\\(1[\\n\\s]*1\\)[\\n\\s]*'\\(complex[\\n\\s]*\\(eql[\\n\\s]*1\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*#c\\(0[\\n\\s]*0\\)[\\n\\s]*'\\(complex[\\n\\s]*\\(eql[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (defclass q () ((x :initarg a)))\n (defclass r (q) ((x :initarg b))\n   (:default-initargs a 1 b 2))\n\\endcode","\\(defclass[\\n\\s]*q[\\n\\s]*\\(\\)[\\n\\s]*\\(\\(x[\\n\\s]*:initarg[\\n\\s]*a\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*r[\\n\\s]*\\(q\\)[\\n\\s]*\\(\\(x[\\n\\s]*:initarg[\\n\\s]*b\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:default-initargs[\\n\\s]*a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2\\)\\)"],["\\code\n (defmethod make-instance ((class standard-class) &rest initargs)\n   ...\n   (let ((instance (apply #'allocate-instance class initargs)))\n     (apply #'initialize-instance instance initargs)\n     instance))\n\n (defmethod make-instance ((class-name symbol) &rest initargs)\n   (apply #'make-instance (find-class class-name) initargs))\n\\endcode","\\(defmethod[\\n\\s]*make-instance[\\n\\s]*\\(\\(class[\\n\\s]*standard-class\\)[\\n\\s]*&rest[\\n\\s]*initargs\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(instance[\\n\\s]*\\(apply[\\n\\s]*#'allocate-instance[\\n\\s]*class[\\n\\s]*initargs\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'initialize-instance[\\n\\s]*instance[\\n\\s]*initargs\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*instance\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*make-instance[\\n\\s]*\\(\\(class-name[\\n\\s]*symbol\\)[\\n\\s]*&rest[\\n\\s]*initargs\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'make-instance[\\n\\s]*\\(find-class[\\n\\s]*class-name\\)[\\n\\s]*initargs\\)\\)"],["\\code\n (defmethod initialize-instance ((instance standard-object) &rest initargs)\n   (apply #'shared-initialize instance t initargs)))\n\\endcode","\\(defmethod[\\n\\s]*initialize-instance[\\n\\s]*\\(\\(instance[\\n\\s]*standard-object\\)[\\n\\s]*&rest[\\n\\s]*initargs\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'shared-initialize[\\n\\s]*instance[\\n\\s]*t[\\n\\s]*initargs\\)\\)\\)"],["\\code\n ;; In a TOPS-20 implementation, which uses &#123;\\hat&#125;V to quote \n (NAMESTRING (MAKE-PATHNAME :HOST \"OZ\" :NAME \"&#60;TEST&#62;\"))\n*→* #P\"OZ:PS:&#123;\\hat&#125;V&#60;TEST&#123;\\hat&#125;V&#62;\"\n\\NV #P\"OZ:PS:&#60;TEST&#62;\"\n\\endcode",";;[\\n\\s]*In[\\n\\s]*a[\\n\\s]*TOPS-20[\\n\\s]*implementation,[\\n\\s]*which[\\n\\s]*uses[\\n\\s]*&#123;\\\\hat&#125;V[\\n\\s]*to[\\n\\s]*quote[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(NAMESTRING[\\n\\s]*\\(MAKE-PATHNAME[\\n\\s]*:HOST[\\n\\s]*\"OZ\"[\\n\\s]*:NAME[\\n\\s]*\"&#60;TEST&#62;\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"OZ:PS:&#123;\\\\hat&#125;V&#60;TEST&#123;\\\\hat&#125;V&#62;\"[\\n\\s]*\\\\NV[\\n\\s]*#P\"OZ:PS:&#60;TEST&#62;\""],["\\code\n (pathname-type \n   (merge-pathnames (make-pathname :type \"LISP\")\n                    (make-pathname :type \"TEXT\")))\n*→* \"LISP\"\n\\smallbreak\n (pathname-type \n   (merge-pathnames (make-pathname :type nil)\n                    (make-pathname :type \"LISP\")))\n*→* \"LISP\"\n\\smallbreak\n (pathname-type \n   (merge-pathnames (make-pathname :type :unspecific)\n                    (make-pathname :type \"LISP\")))\n*→* :UNSPECIFIC\n\\endcode","\\(pathname-type[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(make-pathname[\\n\\s]*:type[\\n\\s]*\"LISP\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:type[\\n\\s]*\"TEXT\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"LISP\"[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(make-pathname[\\n\\s]*:type[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:type[\\n\\s]*\"LISP\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"LISP\"[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(make-pathname[\\n\\s]*:type[\\n\\s]*:unspecific\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:type[\\n\\s]*\"LISP\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:UNSPECIFIC"],["\\code\n (defmacro wrong-order (x y) `(getf ,y ,x))\n\\endcode","\\(defmacro[\\n\\s]*wrong-order[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(getf[\\n\\s]*,y[\\n\\s]*,x\\)\\)"],["\\code\n (push value (wrong-order place1 place2))\n\\endcode","\\(push[\\n\\s]*value[\\n\\s]*\\(wrong-order[\\n\\s]*place1[\\n\\s]*place2\\)\\)"],["\\code\n (setf place1 value1 place2 value2 ...)\n\\endcode","\\(setf[\\n\\s]*place1[\\n\\s]*value1[\\n\\s]*place2[\\n\\s]*value2[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (let ((ref2 (list '())))\n   (push (progn (princ \"1\") 'ref-1)\n         (car (progn (princ \"2\") ref2)))) \n\\OUT 12\n*→* (REF1)\n\n (let (x)\n    (push (setq x (list 'a))\n          (car (setq x (list 'b))))\n     x)\n*→* (((A) . B))\n\\endcode","\\(let[\\n\\s]*\\(\\(ref2[\\n\\s]*\\(list[\\n\\s]*'\\(\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(progn[\\n\\s]*\\(princ[\\n\\s]*\"1\"\\)[\\n\\s]*'ref-1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(progn[\\n\\s]*\\(princ[\\n\\s]*\"2\"\\)[\\n\\s]*ref2\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*12[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(REF1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'b\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\\(A\\)[\\n\\s]*\\.[\\n\\s]*B\\)\\)"],["\\code\n (setq integer #x69) *→* #x69\n (rotatef (ldb (byte 4 4) integer) \n          (ldb (byte 4 0) integer))\n integer *→* #x96\n;;; This example is trying to swap two independent bit fields \n;;; in an integer.  Note that the generalized variable of \n;;; interest here is just the (possibly local) program variable\n;;; integer.\n\\endcode","\\(setq[\\n\\s]*integer[\\n\\s]*#x69\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#x69[\\n\\s]*[\\n\\s]*\\(rotatef[\\n\\s]*\\(ldb[\\n\\s]*\\(byte[\\n\\s]*4[\\n\\s]*4\\)[\\n\\s]*integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ldb[\\n\\s]*\\(byte[\\n\\s]*4[\\n\\s]*0\\)[\\n\\s]*integer\\)\\)[\\n\\s]*[\\n\\s]*integer[\\n\\s]*\\*\\→\\*[\\n\\s]*#x96[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*is[\\n\\s]*trying[\\n\\s]*to[\\n\\s]*swap[\\n\\s]*two[\\n\\s]*independent[\\n\\s]*bit[\\n\\s]*fields[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*in[\\n\\s]*an[\\n\\s]*integer\\.[\\n\\s]*[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*the[\\n\\s]*generalized[\\n\\s]*variable[\\n\\s]*of[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*interest[\\n\\s]*here[\\n\\s]*is[\\n\\s]*just[\\n\\s]*the[\\n\\s]*\\(possibly[\\n\\s]*local\\)[\\n\\s]*program[\\n\\s]*variable[\\n\\s]*;;;[\\n\\s]*integer\\."],["\\code\n (setq s (setq r (list (list 'a 1 'b 2 'c 3)))) *→* ((a 1 b 2 c 3))\n (setf (getf (car r) 'b) \n       (progn (setq r nil) 6)) *→* 6\n r *→* NIL\n s *→* ((A 1 B 6 C 3))\n;;; Note that the (setq r nil) does not affect the actions of \n;;; the SETF because the value of R had already been saved in \n;;; a temporary variable as part of the step 1. Only the CAR\n;;; of this value will be retrieved, and subsequently modified \n;;; after the value computation.\n\\endcode","\\(setq[\\n\\s]*s[\\n\\s]*\\(setq[\\n\\s]*r[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*1[\\n\\s]*'b[\\n\\s]*2[\\n\\s]*'c[\\n\\s]*3\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2[\\n\\s]*c[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(getf[\\n\\s]*\\(car[\\n\\s]*r\\)[\\n\\s]*'b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*r[\\n\\s]*nil\\)[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*r[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*s[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(A[\\n\\s]*1[\\n\\s]*B[\\n\\s]*6[\\n\\s]*C[\\n\\s]*3\\)\\)[\\n\\s]*;;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*the[\\n\\s]*\\(setq[\\n\\s]*r[\\n\\s]*nil\\)[\\n\\s]*does[\\n\\s]*not[\\n\\s]*affect[\\n\\s]*the[\\n\\s]*actions[\\n\\s]*of[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*SETF[\\n\\s]*because[\\n\\s]*the[\\n\\s]*value[\\n\\s]*of[\\n\\s]*R[\\n\\s]*had[\\n\\s]*already[\\n\\s]*been[\\n\\s]*saved[\\n\\s]*in[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*a[\\n\\s]*temporary[\\n\\s]*variable[\\n\\s]*as[\\n\\s]*part[\\n\\s]*of[\\n\\s]*the[\\n\\s]*step[\\n\\s]*1\\.[\\n\\s]*Only[\\n\\s]*the[\\n\\s]*CAR[\\n\\s]*;;;[\\n\\s]*of[\\n\\s]*this[\\n\\s]*value[\\n\\s]*will[\\n\\s]*be[\\n\\s]*retrieved,[\\n\\s]*and[\\n\\s]*subsequently[\\n\\s]*modified[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*after[\\n\\s]*the[\\n\\s]*value[\\n\\s]*computation\\."],["\\code\n (setf (the integer (cadr x)) (+ y 3))\n\\endcode","\\(setf[\\n\\s]*\\(the[\\n\\s]*integer[\\n\\s]*\\(cadr[\\n\\s]*x\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*y[\\n\\s]*3\\)\\)"],["\\code\n (setf (cadr x) (the integer (+ y 3)))\n\\endcode","\\(setf[\\n\\s]*\\(cadr[\\n\\s]*x\\)[\\n\\s]*\\(the[\\n\\s]*integer[\\n\\s]*\\(\\+[\\n\\s]*y[\\n\\s]*3\\)\\)\\)"],["\\code\n (setf (apply \\#'\\param&#123;name&#125; \\starparam&#123;arg&#125;) \\param&#123;val&#125;)\n \\EQ (apply \\#'(setf \\param&#123;name&#125;) \\param&#123;val&#125; \\starparam&#123;arg&#125;)\n\\endcode","\\(setf[\\n\\s]*\\(apply[\\n\\s]*\\\\#'\\\\param&#123;name&#125;[\\n\\s]*\\\\starparam&#123;arg&#125;\\)[\\n\\s]*\\\\param&#123;val&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*\\\\#'\\(setf[\\n\\s]*\\\\param&#123;name&#125;\\)[\\n\\s]*\\\\param&#123;val&#125;[\\n\\s]*\\\\starparam&#123;arg&#125;\\)"],["\\code\n (let ((#:temp-1 arg1)          ;force correct order of evaluation\n       (#:temp-2 arg2)\n       ...\n       (#:temp-0 \\param&#123;new-value&#125;))\n   (funcall (function (setf \\param&#123;f&#125;)) #:temp-0 #:temp-1 #:temp-2...))\n\\endcode","\\(let[\\n\\s]*\\(\\(#:temp-1[\\n\\s]*arg1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;force[\\n\\s]*correct[\\n\\s]*order[\\n\\s]*of[\\n\\s]*evaluation[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:temp-2[\\n\\s]*arg2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:temp-0[\\n\\s]*\\\\param&#123;new-value&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(function[\\n\\s]*\\(setf[\\n\\s]*\\\\param&#123;f&#125;\\)\\)[\\n\\s]*#:temp-0[\\n\\s]*#:temp-1[\\n\\s]*#:temp-2\\.\\.\\.\\)\\)"],["\\code\n (\\term&#123;operator&#125; \\starparam&#123;preceding-form&#125; \\param&#123;place&#125; \\starparam&#123;following-form&#125;)\n\\endcode","\\(\\\\term&#123;operator&#125;[\\n\\s]*\\\\starparam&#123;preceding-form&#125;[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*\\\\starparam&#123;following-form&#125;\\)"],["\\code\n &#60;-1---&#60;--&#60;--2---3-&#62;--4--&#62;-&#62;\n 000000000000000000000000000\n 11 111111111111111111111111\n           22 222\n              333 3333\n        44444444444444 44444\n\\endcode","&#60;-1---&#60;--&#60;--2---3-&#62;--4--&#62;-&#62;[\\n\\s]*[\\n\\s]*000000000000000000000000000[\\n\\s]*[\\n\\s]*11[\\n\\s]*111111111111111111111111[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*22[\\n\\s]*222[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*333[\\n\\s]*3333[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*44444444444444[\\n\\s]*44444"],["\\code\n(defun simple-pprint-defun (*standard-output* list)\n  (pprint-logical-block (*standard-output* list :prefix \"(\" :suffix \")\")\n    (write (first list))\n    (write-char #\\\\Space)\n    (pprint-newline :miser)\n    (pprint-indent :current 0)\n    (write (second list))\n    (write-char #\\\\Space)\n    (pprint-newline :fill)\n    (write (third list))\n    (pprint-indent :block 1)\n    (write-char #\\\\Space)\n    (pprint-newline :linear)\n    (write (fourth list))))\n\\endcode","\\(defun[\\n\\s]*simple-pprint-defun[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-logical-block[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*list[\\n\\s]*:prefix[\\n\\s]*\"\\(\"[\\n\\s]*:suffix[\\n\\s]*\"\\)\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(first[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:miser\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-indent[\\n\\s]*:current[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(second[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:fill\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(third[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-indent[\\n\\s]*:block[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:linear\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(fourth[\\n\\s]*list\\)\\)\\)\\)"],["\\code\n(simple-pprint-defun *standard-output* '(defun prod (x y) (* x y)))\n\\endcode","\\(simple-pprint-defun[\\n\\s]*\\*standard-output\\*[\\n\\s]*'\\(defun[\\n\\s]*prod[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*y\\)\\)\\)"],["\\code\n (DEFUN PROD (X Y) \n   (* X Y))\n\\endcode","\\(DEFUN[\\n\\s]*PROD[\\n\\s]*\\(X[\\n\\s]*Y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*X[\\n\\s]*Y\\)\\)"],["\\code\n(DEFUN PROD\n       (X Y)\n  (* X Y))\n\\endcode","\\(DEFUN[\\n\\s]*PROD[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(X[\\n\\s]*Y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*X[\\n\\s]*Y\\)\\)"],["\\code\n (DEFUN\n  PROD\n  (X Y)\n  (* X Y))\n\\endcode","\\(DEFUN[\\n\\s]*[\\n\\s]*[\\n\\s]*PROD[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(X[\\n\\s]*Y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*X[\\n\\s]*Y\\)\\)"],["\\code\n (pprint-logical-block (*standard-output* nil :per-line-prefix \";;; \")\n   (simple-pprint-defun *standard-output* '(defun prod (x y) (* x y))))\n \n ;;; (DEFUN PROD\n ;;;        (X Y)\n ;;;   (* X Y))\n\\endcode","\\(pprint-logical-block[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*nil[\\n\\s]*:per-line-prefix[\\n\\s]*\";;;[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(simple-pprint-defun[\\n\\s]*\\*standard-output\\*[\\n\\s]*'\\(defun[\\n\\s]*prod[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*\\(DEFUN[\\n\\s]*PROD[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(X[\\n\\s]*Y\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*X[\\n\\s]*Y\\)\\)"],["\\code\n (defun pprint-let (*standard-output* list)\n   (pprint-logical-block (nil list :prefix \"(\" :suffix \")\")\n     (write (pprint-pop))\n     (pprint-exit-if-list-exhausted)\n     (write-char #\\\\Space)\n     (pprint-logical-block (nil (pprint-pop) :prefix \"(\" :suffix \")\")\n       (pprint-exit-if-list-exhausted)\n       (loop (pprint-logical-block (nil (pprint-pop) :prefix \"(\" :suffix \")\")\n               (pprint-exit-if-list-exhausted)\n               (loop (write (pprint-pop))\n                     (pprint-exit-if-list-exhausted)\n                     (write-char #\\\\Space)\n                     (pprint-newline :linear)))\n             (pprint-exit-if-list-exhausted)\n             (write-char #\\\\Space)\n             (pprint-newline :fill)))\n     (pprint-indent :block 1)\n     (loop (pprint-exit-if-list-exhausted)\n           (write-char #\\\\Space)\n           (pprint-newline :linear)\n           (write (pprint-pop)))))\n\\endcode","\\(defun[\\n\\s]*pprint-let[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-logical-block[\\n\\s]*\\(nil[\\n\\s]*list[\\n\\s]*:prefix[\\n\\s]*\"\\(\"[\\n\\s]*:suffix[\\n\\s]*\"\\)\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(pprint-pop\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-logical-block[\\n\\s]*\\(nil[\\n\\s]*\\(pprint-pop\\)[\\n\\s]*:prefix[\\n\\s]*\"\\(\"[\\n\\s]*:suffix[\\n\\s]*\"\\)\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(pprint-logical-block[\\n\\s]*\\(nil[\\n\\s]*\\(pprint-pop\\)[\\n\\s]*:prefix[\\n\\s]*\"\\(\"[\\n\\s]*:suffix[\\n\\s]*\"\\)\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(write[\\n\\s]*\\(pprint-pop\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:linear\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:fill\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-indent[\\n\\s]*:block[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:linear\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(pprint-pop\\)\\)\\)\\)\\)"],["\\code\n (pprint-let *standard-output*\n             '#1=(let (x (*print-length* (f (g 3))) \n                       (z . 2) (k (car y)))\n                   (setq x (sqrt z)) #1#))\n\\endcode","\\(pprint-let[\\n\\s]*\\*standard-output\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'#1=\\(let[\\n\\s]*\\(x[\\n\\s]*\\(\\*print-length\\*[\\n\\s]*\\(f[\\n\\s]*\\(g[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(z[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(k[\\n\\s]*\\(car[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(sqrt[\\n\\s]*z\\)\\)[\\n\\s]*#1#\\)\\)"],["\\code\n #1=(LET (X (*PRINT-LENGTH* (F #)) (Z . 2) (K (CAR Y))) \n      (SETQ X (SQRT Z))\n      #1#)\n\\endcode","#1=\\(LET[\\n\\s]*\\(X[\\n\\s]*\\(\\*PRINT-LENGTH\\*[\\n\\s]*\\(F[\\n\\s]*#\\)\\)[\\n\\s]*\\(Z[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(K[\\n\\s]*\\(CAR[\\n\\s]*Y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*\\(SQRT[\\n\\s]*Z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#1#\\)"],["\\code\n #1=(LET (X (*PRINT-PRETTY* (F #))\n          (Z . 2) (K (CAR Y)))\n      (SETQ X (SQRT Z))\n      #1#)\n\\endcode","#1=\\(LET[\\n\\s]*\\(X[\\n\\s]*\\(\\*PRINT-PRETTY\\*[\\n\\s]*\\(F[\\n\\s]*#\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(Z[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(K[\\n\\s]*\\(CAR[\\n\\s]*Y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*\\(SQRT[\\n\\s]*Z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#1#\\)"],["\\code\n (LET (X\n       (*PRINT-LENGTH*\n        (F #))\n       (Z . 2) ...)\n   (SETQ X (SQRT Z))\n   ...)\n\\endcode","\\(LET[\\n\\s]*\\(X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*PRINT-LENGTH\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(F[\\n\\s]*#\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(Z[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*\\(SQRT[\\n\\s]*Z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n(defun pprint-vector (*standard-output* v)\n  (pprint-logical-block (nil nil :prefix \"#(\" :suffix \")\")\n    (let ((end (length v)) (i 0))\n      (when (plusp end)\n        (loop (pprint-pop)\n              (write (aref v i))\n              (if (= (incf i) end) (return nil))\n              (write-char #\\\\Space)\n              (pprint-newline :fill))))))\n\\endcode","\\(defun[\\n\\s]*pprint-vector[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*v\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-logical-block[\\n\\s]*\\(nil[\\n\\s]*nil[\\n\\s]*:prefix[\\n\\s]*\"#\\(\"[\\n\\s]*:suffix[\\n\\s]*\"\\)\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(end[\\n\\s]*\\(length[\\n\\s]*v\\)\\)[\\n\\s]*\\(i[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(plusp[\\n\\s]*end\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(pprint-pop\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*\\(aref[\\n\\s]*v[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*\\(incf[\\n\\s]*i\\)[\\n\\s]*end\\)[\\n\\s]*\\(return[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:fill\\)\\)\\)\\)\\)\\)"],["\\code\n (pprint-vector *standard-output* '#(12 34 567 8 9012 34 567 89 0 1 23))\n \n #(12 34 567 8 \n   9012 34 567 \n   89 0 1 23)\n\\endcode","\\(pprint-vector[\\n\\s]*\\*standard-output\\*[\\n\\s]*'#\\(12[\\n\\s]*34[\\n\\s]*567[\\n\\s]*8[\\n\\s]*9012[\\n\\s]*34[\\n\\s]*567[\\n\\s]*89[\\n\\s]*0[\\n\\s]*1[\\n\\s]*23\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#\\(12[\\n\\s]*34[\\n\\s]*567[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*9012[\\n\\s]*34[\\n\\s]*567[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*89[\\n\\s]*0[\\n\\s]*1[\\n\\s]*23\\)"],["\\code\n(defun simple-pprint-defun (*standard-output* list)\n  (format T \"~:&#60;~W ~@_~:I~W ~:_~W~1I ~_~W~:&#62;\" list))\n\n(defun pprint-let (*standard-output* list)\n  (format T \"~:&#60;~W~&#123;\\hat&#125;~:&#60;~@\\&#123;~:&#60;~@\\&#123;~W~&#123;\\hat&#125;~_~\\&#125;~:&#62;~&#123;\\hat&#125;~:_~\\&#125;~:&#62;~1I~@\\&#123;~&#123;\\hat&#125;~_~W~\\&#125;~:&#62;\" list)) \n\\endcode","\\(defun[\\n\\s]*simple-pprint-defun[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*T[\\n\\s]*\"~:&#60;~W[\\n\\s]*~@_~:I~W[\\n\\s]*~:_~W~1I[\\n\\s]*~_~W~:&#62;\"[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*pprint-let[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*T[\\n\\s]*\"~:&#60;~W~&#123;\\\\hat&#125;~:&#60;~@\\\\&#123;~:&#60;~@\\\\&#123;~W~&#123;\\\\hat&#125;~_~\\\\&#125;~:&#62;~&#123;\\\\hat&#125;~:_~\\\\&#125;~:&#62;~1I~@\\\\&#123;~&#123;\\\\hat&#125;~_~W~\\\\&#125;~:&#62;\"[\\n\\s]*list\\)\\)"],["\\code\n (setq *print-pprint-dispatch* (copy-pprint-dispatch nil))\n\n (set-pprint-dispatch 'ratio\n   #'(lambda (s obj)\n       (format s \"#.(/ ~W ~W)\" \n                 (numerator obj) (denominator obj))))\n\n (set-pprint-dispatch '(and ratio (satisfies minusp))\n   #'(lambda (s obj)\n       (format s \"#.(- (/ ~W ~W))\" \n               (- (numerator obj)) (denominator obj)))\n   5)\n\n (pprint '(1/3 -2/3))\n (#.(/ 1 3) \\#.(- (/ 2 3)))\n\\endcode","\\(setq[\\n\\s]*\\*print-pprint-dispatch\\*[\\n\\s]*\\(copy-pprint-dispatch[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-pprint-dispatch[\\n\\s]*'ratio[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(s[\\n\\s]*obj\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*s[\\n\\s]*\"#\\.\\(/[\\n\\s]*~W[\\n\\s]*~W\\)\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(numerator[\\n\\s]*obj\\)[\\n\\s]*\\(denominator[\\n\\s]*obj\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-pprint-dispatch[\\n\\s]*'\\(and[\\n\\s]*ratio[\\n\\s]*\\(satisfies[\\n\\s]*minusp\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(s[\\n\\s]*obj\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*s[\\n\\s]*\"#\\.\\(-[\\n\\s]*\\(/[\\n\\s]*~W[\\n\\s]*~W\\)\\)\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*\\(numerator[\\n\\s]*obj\\)\\)[\\n\\s]*\\(denominator[\\n\\s]*obj\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint[\\n\\s]*'\\(1/3[\\n\\s]*-2/3\\)\\)[\\n\\s]*[\\n\\s]*\\(#\\.\\(/[\\n\\s]*1[\\n\\s]*3\\)[\\n\\s]*\\\\#\\.\\(-[\\n\\s]*\\(/[\\n\\s]*2[\\n\\s]*3\\)\\)\\)"],["\\code\n (set-pprint-dispatch '(cons (member quote)) () \n   #'(lambda (s list)\n       (if (and (consp (cdr list)) (null (cddr list)))\n          (funcall (formatter \"'~W\") s (cadr list))\n          (pprint-fill s list))))\n \n (set-pprint-dispatch '(cons (member my-let)) \n                      (pprint-dispatch '(let) nil))\n\\endcode","\\(set-pprint-dispatch[\\n\\s]*'\\(cons[\\n\\s]*\\(member[\\n\\s]*quote\\)\\)[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(s[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(and[\\n\\s]*\\(consp[\\n\\s]*\\(cdr[\\n\\s]*list\\)\\)[\\n\\s]*\\(null[\\n\\s]*\\(cddr[\\n\\s]*list\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(formatter[\\n\\s]*\"'~W\"\\)[\\n\\s]*s[\\n\\s]*\\(cadr[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-fill[\\n\\s]*s[\\n\\s]*list\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-pprint-dispatch[\\n\\s]*'\\(cons[\\n\\s]*\\(member[\\n\\s]*my-let\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-dispatch[\\n\\s]*'\\(let\\)[\\n\\s]*nil\\)\\)"],["\\code\n (set-pprint-dispatch '(cons (not (and symbol (satisfies fboundp))))\n                      #'pprint-fill -5)\n \n ;; Assume a line length of 9\n (pprint '(0 b c d e f g h i j k))\n (0 b c d\n  e f g h\n  i j k)\n\\endcode","\\(set-pprint-dispatch[\\n\\s]*'\\(cons[\\n\\s]*\\(not[\\n\\s]*\\(and[\\n\\s]*symbol[\\n\\s]*\\(satisfies[\\n\\s]*fboundp\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'pprint-fill[\\n\\s]*-5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Assume[\\n\\s]*a[\\n\\s]*line[\\n\\s]*length[\\n\\s]*of[\\n\\s]*9[\\n\\s]*[\\n\\s]*\\(pprint[\\n\\s]*'\\(0[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f[\\n\\s]*g[\\n\\s]*h[\\n\\s]*i[\\n\\s]*j[\\n\\s]*k\\)\\)[\\n\\s]*[\\n\\s]*\\(0[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*[\\n\\s]*[\\n\\s]*e[\\n\\s]*f[\\n\\s]*g[\\n\\s]*h[\\n\\s]*[\\n\\s]*[\\n\\s]*i[\\n\\s]*j[\\n\\s]*k\\)"],["\\code\n (defstruct family mom kids)\n \n (set-pprint-dispatch 'family\n   #'(lambda (s f)\n       (funcall (formatter \"~@&#60;#&#60;~;~W and ~2I~_~/pprint-fill/~;&#62;~:&#62;\")\n               s (family-mom f) (family-kids f))))\n\\endcode","\\(defstruct[\\n\\s]*family[\\n\\s]*mom[\\n\\s]*kids\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-pprint-dispatch[\\n\\s]*'family[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(s[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(formatter[\\n\\s]*\"~@&#60;#&#60;~;~W[\\n\\s]*and[\\n\\s]*~2I~_~/pprint-fill/~;&#62;~:&#62;\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*s[\\n\\s]*\\(family-mom[\\n\\s]*f\\)[\\n\\s]*\\(family-kids[\\n\\s]*f\\)\\)\\)\\)"],["\\code\n (write (list 'principal-family\n              (make-family :mom \"Lucy\"\n                           :kids '(\"Mark\" \"Bob\" . \"Dan\")))\n        :right-margin 25 :pretty T :escape nil :miser-width nil)\n (PRINCIPAL-FAMILY\n  #&#60;Lucy and\n      Mark Bob . Dan&#62;)\n\\endcode","\\(write[\\n\\s]*\\(list[\\n\\s]*'principal-family[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-family[\\n\\s]*:mom[\\n\\s]*\"Lucy\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:kids[\\n\\s]*'\\(\"Mark\"[\\n\\s]*\"Bob\"[\\n\\s]*\\.[\\n\\s]*\"Dan\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:right-margin[\\n\\s]*25[\\n\\s]*:pretty[\\n\\s]*T[\\n\\s]*:escape[\\n\\s]*nil[\\n\\s]*:miser-width[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*\\(PRINCIPAL-FAMILY[\\n\\s]*[\\n\\s]*[\\n\\s]*#&#60;Lucy[\\n\\s]*and[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Mark[\\n\\s]*Bob[\\n\\s]*\\.[\\n\\s]*Dan&#62;\\)"],["\\code\n 27    27.    #o33    #x1B    #b11011    #.(* 3 3 3)    81/3\n\\endcode","27[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*27\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#o33[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#x1B[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#b11011[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#\\.\\(\\*[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*81/3"],["\\code\n (A B)    (a b)    (  a  b )    (\\\\A |B|) \n(|\\\\A|\n  B\n)\n\\endcode","\\(A[\\n\\s]*B\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\([\\n\\s]*[\\n\\s]*a[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\\\\\A[\\n\\s]*|B|\\)[\\n\\s]*[\\n\\s]*\\(|\\\\\\\\A|[\\n\\s]*[\\n\\s]*[\\n\\s]*B[\\n\\s]*\\)"],["\\code\n (let ((x (make-symbol \"FOO\"))) (list x x))\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(make-symbol[\\n\\s]*\"FOO\"\\)\\)\\)[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*x\\)\\)"],["\\code\n (defun test-readtable-case-printing ()\n   (let ((*readtable* (copy-readtable nil))\n         (*print-case* *print-case*))\n     (format t \"READTABLE-CASE *PRINT-CASE*  Symbol-name  Output~\n              ~%--------------------------------------------------~\n              ~%\")\n     (dolist (readtable-case '(:upcase :downcase :preserve :invert))\n       (setf (readtable-case *readtable*) readtable-case)\n       (dolist (print-case '(:upcase :downcase :capitalize))\n         (dolist (symbol '(|ZEBRA| |Zebra| |zebra|))\n           (setq *print-case* print-case)\n           (format t \"~&:~A~15T:~A~29T~A~42T~A\"\n                   (string-upcase readtable-case)\n                   (string-upcase print-case)\n                   (symbol-name symbol)\n                   (prin1-to-string symbol)))))))\n\\endcode","\\(defun[\\n\\s]*test-readtable-case-printing[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*readtable\\*[\\n\\s]*\\(copy-readtable[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-case\\*[\\n\\s]*\\*print-case\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"READTABLE-CASE[\\n\\s]*\\*PRINT-CASE\\*[\\n\\s]*[\\n\\s]*Symbol-name[\\n\\s]*[\\n\\s]*Output~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~%--------------------------------------------------~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(readtable-case[\\n\\s]*'\\(:upcase[\\n\\s]*:downcase[\\n\\s]*:preserve[\\n\\s]*:invert\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(readtable-case[\\n\\s]*\\*readtable\\*\\)[\\n\\s]*readtable-case\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(print-case[\\n\\s]*'\\(:upcase[\\n\\s]*:downcase[\\n\\s]*:capitalize\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(symbol[\\n\\s]*'\\(|ZEBRA|[\\n\\s]*|Zebra|[\\n\\s]*|zebra|\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*print-case\\*[\\n\\s]*print-case\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&:~A~15T:~A~29T~A~42T~A\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(string-upcase[\\n\\s]*readtable-case\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(string-upcase[\\n\\s]*print-case\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-name[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*symbol\\)\\)\\)\\)\\)\\)\\)"],["\\code\n    READTABLE-CASE *PRINT-CASE*  Symbol-name  Output\n    --------------------------------------------------\n    :UPCASE        :UPCASE       ZEBRA        ZEBRA\n    :UPCASE        :UPCASE       Zebra        |Zebra|\n    :UPCASE        :UPCASE       zebra        |zebra|\n    :UPCASE        :DOWNCASE     ZEBRA        zebra\n    :UPCASE        :DOWNCASE     Zebra        |Zebra|\n    :UPCASE        :DOWNCASE     zebra        |zebra|\n    :UPCASE        :CAPITALIZE   ZEBRA        Zebra\n    :UPCASE        :CAPITALIZE   Zebra        |Zebra|\n    :UPCASE        :CAPITALIZE   zebra        |zebra|\n    :DOWNCASE      :UPCASE       ZEBRA        |ZEBRA|\n    :DOWNCASE      :UPCASE       Zebra        |Zebra|\n    :DOWNCASE      :UPCASE       zebra        ZEBRA\n    :DOWNCASE      :DOWNCASE     ZEBRA        |ZEBRA|\n    :DOWNCASE      :DOWNCASE     Zebra        |Zebra|\n    :DOWNCASE      :DOWNCASE     zebra        zebra\n    :DOWNCASE      :CAPITALIZE   ZEBRA        |ZEBRA|\n    :DOWNCASE      :CAPITALIZE   Zebra        |Zebra|\n    :DOWNCASE      :CAPITALIZE   zebra        Zebra\n    :PRESERVE      :UPCASE       ZEBRA        ZEBRA\n    :PRESERVE      :UPCASE       Zebra        Zebra\n    :PRESERVE      :UPCASE       zebra        zebra\n    :PRESERVE      :DOWNCASE     ZEBRA        ZEBRA\n    :PRESERVE      :DOWNCASE     Zebra        Zebra\n    :PRESERVE      :DOWNCASE     zebra        zebra\n    :PRESERVE      :CAPITALIZE   ZEBRA        ZEBRA\n    :PRESERVE      :CAPITALIZE   Zebra        Zebra\n    :PRESERVE      :CAPITALIZE   zebra        zebra\n    :INVERT        :UPCASE       ZEBRA        zebra\n    :INVERT        :UPCASE       Zebra        Zebra\n    :INVERT        :UPCASE       zebra        ZEBRA\n    :INVERT        :DOWNCASE     ZEBRA        zebra\n    :INVERT        :DOWNCASE     Zebra        Zebra\n    :INVERT        :DOWNCASE     zebra        ZEBRA\n    :INVERT        :CAPITALIZE   ZEBRA        zebra\n    :INVERT        :CAPITALIZE   Zebra        Zebra\n    :INVERT        :CAPITALIZE   zebra        ZEBRA\n\\endcode","READTABLE-CASE[\\n\\s]*\\*PRINT-CASE\\*[\\n\\s]*[\\n\\s]*Symbol-name[\\n\\s]*[\\n\\s]*Output[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*--------------------------------------------------[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|Zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|Zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|Zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|ZEBRA|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|Zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|ZEBRA|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|Zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|ZEBRA|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*|Zebra|[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:CAPITALIZE[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA"],["\\code\n (a . (b . ((c . (d . nil)) . (e . nil))))\n (a b (c d) e)\n\\endcode","\\(a[\\n\\s]*\\.[\\n\\s]*\\(b[\\n\\s]*\\.[\\n\\s]*\\(\\(c[\\n\\s]*\\.[\\n\\s]*\\(d[\\n\\s]*\\.[\\n\\s]*nil\\)\\)[\\n\\s]*\\.[\\n\\s]*\\(e[\\n\\s]*\\.[\\n\\s]*nil\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*\\(c[\\n\\s]*d\\)[\\n\\s]*e\\)"],["\\code\n (a . b)     ;A dotted pair of a and b\n (a.b)       ;A list of one element, the symbol named a.b\n (a. b)      ;A list of two elements a. and b\n (a .b)      ;A list of two elements a and .b\n (a b . c)   ;A dotted list of a and b with c at the end; two conses\n .iot        ;The symbol whose name is .iot\n (. b)       ;Invalid -- an error is signaled if an attempt is made to read \n             ;this syntax.\n (a .)       ;Invalid -- an error is signaled.\n (a .. b)    ;Invalid -- an error is signaled.\n (a . . b)   ;Invalid -- an error is signaled.\n (a b c ...) ;Invalid -- an error is signaled.\n (a \\\\. b)    ;A list of three elements a, ., and b\n (a |.| b)   ;A list of three elements a, ., and b\n (a \\\\... b)  ;A list of three elements a, ..., and b\n (a |...| b) ;A list of three elements a, ..., and b\n\\endcode","\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*dotted[\\n\\s]*pair[\\n\\s]*of[\\n\\s]*a[\\n\\s]*and[\\n\\s]*b[\\n\\s]*[\\n\\s]*\\(a\\.b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*one[\\n\\s]*element,[\\n\\s]*the[\\n\\s]*symbol[\\n\\s]*named[\\n\\s]*a\\.b[\\n\\s]*[\\n\\s]*\\(a\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*two[\\n\\s]*elements[\\n\\s]*a\\.[\\n\\s]*and[\\n\\s]*b[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\.b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*two[\\n\\s]*elements[\\n\\s]*a[\\n\\s]*and[\\n\\s]*\\.b[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*\\.[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*dotted[\\n\\s]*list[\\n\\s]*of[\\n\\s]*a[\\n\\s]*and[\\n\\s]*b[\\n\\s]*with[\\n\\s]*c[\\n\\s]*at[\\n\\s]*the[\\n\\s]*end;[\\n\\s]*two[\\n\\s]*conses[\\n\\s]*[\\n\\s]*\\.iot[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*symbol[\\n\\s]*whose[\\n\\s]*name[\\n\\s]*is[\\n\\s]*\\.iot[\\n\\s]*[\\n\\s]*\\(\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Invalid[\\n\\s]*--[\\n\\s]*an[\\n\\s]*error[\\n\\s]*is[\\n\\s]*signaled[\\n\\s]*if[\\n\\s]*an[\\n\\s]*attempt[\\n\\s]*is[\\n\\s]*made[\\n\\s]*to[\\n\\s]*read[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;this[\\n\\s]*syntax\\.[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Invalid[\\n\\s]*--[\\n\\s]*an[\\n\\s]*error[\\n\\s]*is[\\n\\s]*signaled\\.[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\.\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Invalid[\\n\\s]*--[\\n\\s]*an[\\n\\s]*error[\\n\\s]*is[\\n\\s]*signaled\\.[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\.[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Invalid[\\n\\s]*--[\\n\\s]*an[\\n\\s]*error[\\n\\s]*is[\\n\\s]*signaled\\.[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*;Invalid[\\n\\s]*--[\\n\\s]*an[\\n\\s]*error[\\n\\s]*is[\\n\\s]*signaled\\.[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\\\\\\\\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*three[\\n\\s]*elements[\\n\\s]*a,[\\n\\s]*\\.,[\\n\\s]*and[\\n\\s]*b[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*|\\.|[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*three[\\n\\s]*elements[\\n\\s]*a,[\\n\\s]*\\.,[\\n\\s]*and[\\n\\s]*b[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\\\\\\\\\.\\.\\.[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*three[\\n\\s]*elements[\\n\\s]*a,[\\n\\s]*\\.\\.\\.,[\\n\\s]*and[\\n\\s]*b[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*|\\.\\.\\.|[\\n\\s]*b\\)[\\n\\s]*;A[\\n\\s]*list[\\n\\s]*of[\\n\\s]*three[\\n\\s]*elements[\\n\\s]*a,[\\n\\s]*\\.\\.\\.,[\\n\\s]*and[\\n\\s]*b"],["\\code\n% #3A(\n% ((#\\\\s #\\\\t #\\\\o #\\\\p) (#\\\\s #\\\\p #\\\\o #\\\\t))\n% ((#\\\\p #\\\\o #\\\\s #\\\\t) (#\\\\p #\\\\o #\\\\t #\\\\s))\n% ((#\\\\t #\\\\o #\\\\p #\\\\s) (#\\\\o #\\\\p #\\\\t #\\\\s)))\n%\\endcode","%[\\n\\s]*#3A\\([\\n\\s]*%[\\n\\s]*\\(\\(#\\\\\\\\s[\\n\\s]*#\\\\\\\\t[\\n\\s]*#\\\\\\\\o[\\n\\s]*#\\\\\\\\p\\)[\\n\\s]*\\(#\\\\\\\\s[\\n\\s]*#\\\\\\\\p[\\n\\s]*#\\\\\\\\o[\\n\\s]*#\\\\\\\\t\\)\\)[\\n\\s]*%[\\n\\s]*\\(\\(#\\\\\\\\p[\\n\\s]*#\\\\\\\\o[\\n\\s]*#\\\\\\\\s[\\n\\s]*#\\\\\\\\t\\)[\\n\\s]*\\(#\\\\\\\\p[\\n\\s]*#\\\\\\\\o[\\n\\s]*#\\\\\\\\t[\\n\\s]*#\\\\\\\\s\\)\\)[\\n\\s]*%[\\n\\s]*\\(\\(#\\\\\\\\t[\\n\\s]*#\\\\\\\\o[\\n\\s]*#\\\\\\\\p[\\n\\s]*#\\\\\\\\s\\)[\\n\\s]*\\(#\\\\\\\\o[\\n\\s]*#\\\\\\\\p[\\n\\s]*#\\\\\\\\t[\\n\\s]*#\\\\\\\\s\\)\\)\\)[\\n\\s]*%"],["\\code\n% #3A((\"stop\" \"spot\") (\"post\" \"pots\") (\"tops\" \"opts\"))\n%\\endcode","%[\\n\\s]*#3A\\(\\(\"stop\"[\\n\\s]*\"spot\"\\)[\\n\\s]*\\(\"post\"[\\n\\s]*\"pots\"\\)[\\n\\s]*\\(\"tops\"[\\n\\s]*\"opts\"\\)\\)[\\n\\s]*%"],["\\code\n (let ((a (make-array '(3 3)))\n       (*print-pretty* t)\n       (*print-array* t))\n   (dotimes (i 3) (dotimes (j 3) (setf (aref a i j) (format nil \"&#60;~D,~D&#62;\" i j))))\n   (print a)\n   (print (make-array 9 :displaced-to a)))\n\\OUT #2A((\"&#60;0,0&#62;\" \"&#60;0,1&#62;\" \"&#60;0,2&#62;\") \n\\OUT     (\"&#60;1,0&#62;\" \"&#60;1,1&#62;\" \"&#60;1,2&#62;\") \n\\OUT     (\"&#60;2,0&#62;\" \"&#60;2,1&#62;\" \"&#60;2,2&#62;\")) \n\\OUT #(\"&#60;0,0&#62;\" \"&#60;0,1&#62;\" \"&#60;0,2&#62;\" \"&#60;1,0&#62;\" \"&#60;1,1&#62;\" \"&#60;1,2&#62;\" \"&#60;2,0&#62;\" \"&#60;2,1&#62;\" \"&#60;2,2&#62;\") \n*→* #&#60;ARRAY 9 indirect 36363476&#62;\n\\endcode","\\(let[\\n\\s]*\\(\\(a[\\n\\s]*\\(make-array[\\n\\s]*'\\(3[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-pretty\\*[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-array\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*3\\)[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*3\\)[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*a[\\n\\s]*i[\\n\\s]*j\\)[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"&#60;~D,~D&#62;\"[\\n\\s]*i[\\n\\s]*j\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(make-array[\\n\\s]*9[\\n\\s]*:displaced-to[\\n\\s]*a\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#2A\\(\\(\"&#60;0,0&#62;\"[\\n\\s]*\"&#60;0,1&#62;\"[\\n\\s]*\"&#60;0,2&#62;\"\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"&#60;1,0&#62;\"[\\n\\s]*\"&#60;1,1&#62;\"[\\n\\s]*\"&#60;1,2&#62;\"\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"&#60;2,0&#62;\"[\\n\\s]*\"&#60;2,1&#62;\"[\\n\\s]*\"&#60;2,2&#62;\"\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*#\\(\"&#60;0,0&#62;\"[\\n\\s]*\"&#60;0,1&#62;\"[\\n\\s]*\"&#60;0,2&#62;\"[\\n\\s]*\"&#60;1,0&#62;\"[\\n\\s]*\"&#60;1,1&#62;\"[\\n\\s]*\"&#60;1,2&#62;\"[\\n\\s]*\"&#60;2,0&#62;\"[\\n\\s]*\"&#60;2,1&#62;\"[\\n\\s]*\"&#60;2,2&#62;\"\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*9[\\n\\s]*indirect[\\n\\s]*36363476&#62;"],["\\code\n% #S(RANDOM-STATE DATA #(14 49 98436589 786345 8734658324 ... ))\n%\\endcode","%[\\n\\s]*#S\\(RANDOM-STATE[\\n\\s]*DATA[\\n\\s]*#\\(14[\\n\\s]*49[\\n\\s]*98436589[\\n\\s]*786345[\\n\\s]*8734658324[\\n\\s]*\\.\\.\\.[\\n\\s]*\\)\\)[\\n\\s]*%"],["\\code\n #S(RANDOM-STATE :DATA #(14 49 98436589 786345 8734658324 ... ))\n\\endcode","#S\\(RANDOM-STATE[\\n\\s]*:DATA[\\n\\s]*#\\(14[\\n\\s]*49[\\n\\s]*98436589[\\n\\s]*786345[\\n\\s]*8734658324[\\n\\s]*\\.\\.\\.[\\n\\s]*\\)\\)"],["\\code\n #S(\\param&#123;structure-name&#125; \\star&#123;\\curly&#123;\\param&#123;slot-key&#125; \\param&#123;slot-value&#125;&#125;&#125;)\n\\endcode","#S\\(\\\\param&#123;structure-name&#125;[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\\\param&#123;slot-key&#125;[\\n\\s]*\\\\param&#123;slot-value&#125;&#125;&#125;\\)"],["\\code\n (let ((*print-escape* t)) (fresh-line) (write #\\\\a))\n\\OUT #\\\\a\n*→* #\\\\a\n (let ((*print-escape* nil) (*print-readably* nil))\n   (fresh-line)\n   (write #\\\\a))\n\\OUT a\n*→* #\\\\a\n (progn (fresh-line) (prin1 #\\\\a))\n\\OUT #\\\\a\n*→* #\\\\a\n (progn (fresh-line) (print #\\\\a))\n\\OUT \n\\OUT #\\\\a\n*→* #\\\\a\n (progn (fresh-line) (princ #\\\\a))\n\\OUT a\n*→* #\\\\a\n\\medbreak\n (dolist (val '(t nil))\n   (let ((*print-escape* val) (*print-readably* val))\n     (print '#\\\\a) \n     (prin1 #\\\\a) (write-char #\\\\Space)\n     (princ #\\\\a) (write-char #\\\\Space)\n     (write #\\\\a)))\n\\OUT #\\\\a #\\\\a a #\\\\a\n\\OUT #\\\\a #\\\\a a a\n*→* NIL\n\\medbreak\n (progn (fresh-line) (write '(let ((a 1) (b 2)) (+ a b))))\n\\OUT (LET ((A 1) (B 2)) (+ A B))\n*→* (LET ((A 1) (B 2)) (+ A B))\n\\medbreak\n (progn (fresh-line) (pprint '(let ((a 1) (b 2)) (+ a b))))\n\\OUT (LET ((A 1)\n\\OUT       (B 2))               \n\\OUT   (+ A B))\n*→* (LET ((A 1) (B 2)) (+ A B))\n\\medbreak\n (progn (fresh-line) \n        (write '(let ((a 1) (b 2)) (+ a b)) :pretty t))\n\\OUT (LET ((A 1)\n\\OUT       (B 2))\n\\OUT   (+ A B))                 \n*→* (LET ((A 1) (B 2)) (+ A B))\n\\medbreak\n (with-output-to-string (s)  \n    (write 'write :stream s)\n    (prin1 'prin1 s))\n*→* \"WRITEPRIN1\"\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*print-escape\\*[\\n\\s]*t\\)\\)[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(write[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-escape\\*[\\n\\s]*nil\\)[\\n\\s]*\\(\\*print-readably\\*[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(prin1[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(print[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(princ[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(val[\\n\\s]*'\\(t[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-escape\\*[\\n\\s]*val\\)[\\n\\s]*\\(\\*print-readably\\*[\\n\\s]*val\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'#\\\\\\\\a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*#\\\\\\\\a\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\a[\\n\\s]*a[\\n\\s]*#\\\\\\\\a[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\a[\\n\\s]*a[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(write[\\n\\s]*'\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(pprint[\\n\\s]*'\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(B[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(fresh-line\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*'\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*:pretty[\\n\\s]*t\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(B[\\n\\s]*2\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*2\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*'write[\\n\\s]*:stream[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*'prin1[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"WRITEPRIN1\""],["\\code\n (defun test-readtable-case-reading ()\n   (let ((*readtable* (copy-readtable nil)))\n     (format t \"READTABLE-CASE  Input   Symbol-name~\n              ~%-----------------------------------~\n              ~%\")\n     (dolist (readtable-case '(:upcase :downcase :preserve :invert))\n       (setf (readtable-case *readtable*) readtable-case)\n       (dolist (input '(\"ZEBRA\" \"Zebra\" \"zebra\"))\n         (format t \"~&:~A~16T~A~24T~A\"\n                 (string-upcase readtable-case)\n                 input\n                 (symbol-name (read-from-string input)))))))\n\\endcode","\\(defun[\\n\\s]*test-readtable-case-reading[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*readtable\\*[\\n\\s]*\\(copy-readtable[\\n\\s]*nil\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"READTABLE-CASE[\\n\\s]*[\\n\\s]*Input[\\n\\s]*[\\n\\s]*[\\n\\s]*Symbol-name~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~%-----------------------------------~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(readtable-case[\\n\\s]*'\\(:upcase[\\n\\s]*:downcase[\\n\\s]*:preserve[\\n\\s]*:invert\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(readtable-case[\\n\\s]*\\*readtable\\*\\)[\\n\\s]*readtable-case\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(input[\\n\\s]*'\\(\"ZEBRA\"[\\n\\s]*\"Zebra\"[\\n\\s]*\"zebra\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&:~A~16T~A~24T~A\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(string-upcase[\\n\\s]*readtable-case\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*input[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-name[\\n\\s]*\\(read-from-string[\\n\\s]*input\\)\\)\\)\\)\\)\\)\\)"],["\\code\n READTABLE-CASE     Input Symbol-name\n -------------------------------------\n    :UPCASE         ZEBRA   ZEBRA\n    :UPCASE         Zebra   ZEBRA\n    :UPCASE         zebra   ZEBRA\n    :DOWNCASE       ZEBRA   zebra\n    :DOWNCASE       Zebra   zebra\n    :DOWNCASE       zebra   zebra\n    :PRESERVE       ZEBRA   ZEBRA\n    :PRESERVE       Zebra   Zebra\n    :PRESERVE       zebra   zebra\n    :INVERT         ZEBRA   zebra\n    :INVERT         Zebra   Zebra\n    :INVERT         zebra   ZEBRA\n\\endcode","READTABLE-CASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Input[\\n\\s]*Symbol-name[\\n\\s]*[\\n\\s]*-------------------------------------[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:UPCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:DOWNCASE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:PRESERVE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*Zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:INVERT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*zebra[\\n\\s]*[\\n\\s]*[\\n\\s]*ZEBRA"],["\\code\n (cons '#3=(p q r) '(x y . #3#))\n\\endcode","\\(cons[\\n\\s]*'#3=\\(p[\\n\\s]*q[\\n\\s]*r\\)[\\n\\s]*'\\(x[\\n\\s]*y[\\n\\s]*\\.[\\n\\s]*#3#\\)\\)"],["\\code\n (set-macro-character #\\\\'       ;incorrect\n    #'(lambda (stream char)\n         (declare (ignore char))\n         (list 'quote (read stream))))\n\\endcode","\\(set-macro-character[\\n\\s]*#\\\\\\\\'[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;incorrect[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(stream[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'quote[\\n\\s]*\\(read[\\n\\s]*stream\\)\\)\\)\\)"],["\\code\n (set-macro-character #\\\\'       ;correct\n    #'(lambda (stream char)\n         (declare (ignore char))\n         (list 'quote (read stream t nil t))))\n\\endcode","\\(set-macro-character[\\n\\s]*#\\\\\\\\'[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;correct[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(stream[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'quote[\\n\\s]*\\(read[\\n\\s]*stream[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)\\)\\)\\)"],["\\code\n ;; The following examples assume the readtable case of *readtable* \n ;; and *print-case* are both :upcase.\n (eq 'abc 'ABC) *→ true*\n (eq 'abc '|ABC|) *→ true*\n (eq 'abc 'a|B|c) *→ true*\n (eq 'abc '|abc|) *→ false*\n\\endcode",";;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*examples[\\n\\s]*assume[\\n\\s]*the[\\n\\s]*readtable[\\n\\s]*case[\\n\\s]*of[\\n\\s]*\\*readtable\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*and[\\n\\s]*\\*print-case\\*[\\n\\s]*are[\\n\\s]*both[\\n\\s]*:upcase\\.[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'ABC\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'|ABC|\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'a|B|c\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'|abc|\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n ;; The following examples assume the readtable case of *readtable* \n ;; and *print-case* are both :upcase.\n (eq 'abc '\\\\A\\\\B\\\\C) *→ true*\n (eq 'abc 'a\\\\Bc) *→ true*\n (eq 'abc '\\\\ABC) *→ true*\n (eq 'abc '\\\\abc) *→ false*\n\\endcode",";;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*examples[\\n\\s]*assume[\\n\\s]*the[\\n\\s]*readtable[\\n\\s]*case[\\n\\s]*of[\\n\\s]*\\*readtable\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*and[\\n\\s]*\\*print-case\\*[\\n\\s]*are[\\n\\s]*both[\\n\\s]*:upcase\\.[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'\\\\\\\\A\\\\\\\\B\\\\\\\\C\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'a\\\\\\\\Bc\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'\\\\\\\\ABC\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'abc[\\n\\s]*'\\\\\\\\abc\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (length '(this-that)) *→* 1\n (length '(this - that)) *→* 3\n (length '(a\n           b)) *→* 2\n (+ 34) *→* 34\n (+ 3 4) *→* 7\n\\endcode","\\(length[\\n\\s]*'\\(this-that\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*'\\(this[\\n\\s]*-[\\n\\s]*that\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*'\\(a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*34\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*34[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7"],["\\code\n (remove \"FOO\" '(foo bar \"FOO\" \"BAR\" \"foo\" \"bar\") :test #'equal)\n*→* (foo bar \"BAR\" \"foo\" \"bar\")\n (remove \"FOO\" '(foo bar \"FOO\" \"BAR\" \"foo\" \"bar\") :test #'equalp)\n*→* (foo bar \"BAR\" \"bar\")\n (remove \"FOO\" '(foo bar \"FOO\" \"BAR\" \"foo\" \"bar\") :test #'string-equal)\n*→* (bar \"BAR\" \"bar\")\n (remove \"FOO\" '(foo bar \"FOO\" \"BAR\" \"foo\" \"bar\") :test #'string=)\n*→* (BAR \"BAR\" \"foo\" \"bar\")\n\n (remove 1 '(1 1.0 #C(1.0 0.0) 2 2.0 #C(2.0 0.0)) :test-not #'eql)\n*→* (1)\n (remove 1 '(1 1.0 #C(1.0 0.0) 2 2.0 #C(2.0 0.0)) :test-not #'=)\n*→* (1 1.0 #C(1.0 0.0))\n (remove 1 '(1 1.0 #C(1.0 0.0) 2 2.0 #C(2.0 0.0)) :test (complement #'=))\n*→* (1 1.0 #C(1.0 0.0))\n\n (count 1 '((one 1) (uno 1) (two 2) (dos 2)) :key #'cadr) *→* 2\n\n (count 2.0 '(1 2 3) :test #'eql :key #'float) *→* 1\n\n (count \"FOO\" (list (make-pathname :name \"FOO\" :type \"X\")  \n                    (make-pathname :name \"FOO\" :type \"Y\"))\n        :key #'pathname-name\n        :test #'equal)\n*→* 2\n\\endcode","\\(remove[\\n\\s]*\"FOO\"[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*:test[\\n\\s]*#'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(foo[\\n\\s]*bar[\\n\\s]*\"BAR\"[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*\"FOO\"[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*:test[\\n\\s]*#'equalp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(foo[\\n\\s]*bar[\\n\\s]*\"BAR\"[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*\"FOO\"[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*:test[\\n\\s]*#'string-equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(bar[\\n\\s]*\"BAR\"[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*\"FOO\"[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*:test[\\n\\s]*#'string=\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BAR[\\n\\s]*\"BAR\"[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*1[\\n\\s]*'\\(1[\\n\\s]*1\\.0[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*2[\\n\\s]*2\\.0[\\n\\s]*#C\\(2\\.0[\\n\\s]*0\\.0\\)\\)[\\n\\s]*:test-not[\\n\\s]*#'eql\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*1[\\n\\s]*'\\(1[\\n\\s]*1\\.0[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*2[\\n\\s]*2\\.0[\\n\\s]*#C\\(2\\.0[\\n\\s]*0\\.0\\)\\)[\\n\\s]*:test-not[\\n\\s]*#'=\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*1\\.0[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*1[\\n\\s]*'\\(1[\\n\\s]*1\\.0[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*2[\\n\\s]*2\\.0[\\n\\s]*#C\\(2\\.0[\\n\\s]*0\\.0\\)\\)[\\n\\s]*:test[\\n\\s]*\\(complement[\\n\\s]*#'=\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*1\\.0[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(count[\\n\\s]*1[\\n\\s]*'\\(\\(one[\\n\\s]*1\\)[\\n\\s]*\\(uno[\\n\\s]*1\\)[\\n\\s]*\\(two[\\n\\s]*2\\)[\\n\\s]*\\(dos[\\n\\s]*2\\)\\)[\\n\\s]*:key[\\n\\s]*#'cadr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(count[\\n\\s]*2\\.0[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*:test[\\n\\s]*#'eql[\\n\\s]*:key[\\n\\s]*#'float\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(count[\\n\\s]*\"FOO\"[\\n\\s]*\\(list[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*\"FOO\"[\\n\\s]*:type[\\n\\s]*\"X\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*\"FOO\"[\\n\\s]*:type[\\n\\s]*\"Y\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'pathname-name[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (count-if #'zerop '(1 #C(0.0 0.0) 0 0.0d0 0.0s0 3)) *→* 4\n\n (remove-if-not #'symbolp '(0 1 2 3 4 5 6 7 8 9 A B C D E F))\n*→* (A B C D E F)\n (remove-if (complement #'symbolp) '(0 1 2 3 4 5 6 7 8 9 A B C D E F))\n*→* (A B C D E F)\n\n (count-if #'zerop '(\"foo\" \"\" \"bar\" \"\" \"\" \"baz\" \"quux\") :key #'length)\n*→* 3\n\\endcode","\\(count-if[\\n\\s]*#'zerop[\\n\\s]*'\\(1[\\n\\s]*#C\\(0\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*0[\\n\\s]*0\\.0d0[\\n\\s]*0\\.0s0[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(remove-if-not[\\n\\s]*#'symbolp[\\n\\s]*'\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*\\(remove-if[\\n\\s]*\\(complement[\\n\\s]*#'symbolp\\)[\\n\\s]*'\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(count-if[\\n\\s]*#'zerop[\\n\\s]*'\\(\"foo\"[\\n\\s]*\"\"[\\n\\s]*\"bar\"[\\n\\s]*\"\"[\\n\\s]*\"\"[\\n\\s]*\"baz\"[\\n\\s]*\"quux\"\\)[\\n\\s]*:key[\\n\\s]*#'length\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n \\\\256   25\\\\64   1.0\\\\E6   |100|   3\\\\.14159   |3/4|   3\\\\/4   5||\n\\endcode","\\\\\\\\256[\\n\\s]*[\\n\\s]*[\\n\\s]*25\\\\\\\\64[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0\\\\\\\\E6[\\n\\s]*[\\n\\s]*[\\n\\s]*|100|[\\n\\s]*[\\n\\s]*[\\n\\s]*3\\\\\\\\\\.14159[\\n\\s]*[\\n\\s]*[\\n\\s]*|3/4|[\\n\\s]*[\\n\\s]*[\\n\\s]*3\\\\\\\\/4[\\n\\s]*[\\n\\s]*[\\n\\s]*5||"],["\\code\n (vector double-float 100)\n\\endcode","\\(vector[\\n\\s]*double-float[\\n\\s]*100\\)"],["\\code\n (vector double-float *)\n\\endcode","\\(vector[\\n\\s]*double-float[\\n\\s]*\\*\\)"],["\\code\n (vector * 100)                                      \n\\endcode","\\(vector[\\n\\s]*\\*[\\n\\s]*100\\)"],["\\code\n% (array integer 3)       ;Three-dimensional arrays of integers\n% (array integer (* * *)) ;Three-dimensional arrays of integers\n% (array * (4 5 6))       ;4-by-5-by-6 arrays\n% (array character (3 *)) ;Two-dimensional arrays of characters that have \n%                         ;three rows\n% (array short-float \\empty)   ;Zero-rank arrays of short-floats\n%\\endcode","%[\\n\\s]*\\(array[\\n\\s]*integer[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Three-dimensional[\\n\\s]*arrays[\\n\\s]*of[\\n\\s]*integers[\\n\\s]*%[\\n\\s]*\\(array[\\n\\s]*integer[\\n\\s]*\\(\\*[\\n\\s]*\\*[\\n\\s]*\\*\\)\\)[\\n\\s]*;Three-dimensional[\\n\\s]*arrays[\\n\\s]*of[\\n\\s]*integers[\\n\\s]*%[\\n\\s]*\\(array[\\n\\s]*\\*[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;4-by-5-by-6[\\n\\s]*arrays[\\n\\s]*%[\\n\\s]*\\(array[\\n\\s]*character[\\n\\s]*\\(3[\\n\\s]*\\*\\)\\)[\\n\\s]*;Two-dimensional[\\n\\s]*arrays[\\n\\s]*of[\\n\\s]*characters[\\n\\s]*that[\\n\\s]*have[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;three[\\n\\s]*rows[\\n\\s]*%[\\n\\s]*\\(array[\\n\\s]*short-float[\\n\\s]*\\\\empty\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Zero-rank[\\n\\s]*arrays[\\n\\s]*of[\\n\\s]*short-floats[\\n\\s]*%"],["\\code\n% (typep foo '(array character))\n%\\endcode","%[\\n\\s]*\\(typep[\\n\\s]*foo[\\n\\s]*'\\(array[\\n\\s]*character\\)\\)[\\n\\s]*%"],["\\code\n% (subtypep 'character (array-element-type foo))\n%\\endcode","%[\\n\\s]*\\(subtypep[\\n\\s]*'character[\\n\\s]*\\(array-element-type[\\n\\s]*foo\\)\\)[\\n\\s]*%"],["\\code\n (make-array '(4 2 3) :initial-contents\n             '(((a b c) (1 2 3))\n              ((d e f) (3 1 2))\n              ((g h i) (2 3 1))\n              ((j k l) (0 0 0))))\n\\endcode","\\(make-array[\\n\\s]*'\\(4[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*:initial-contents[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(d[\\n\\s]*e[\\n\\s]*f\\)[\\n\\s]*\\(3[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(g[\\n\\s]*h[\\n\\s]*i\\)[\\n\\s]*\\(2[\\n\\s]*3[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(j[\\n\\s]*k[\\n\\s]*l\\)[\\n\\s]*\\(0[\\n\\s]*0[\\n\\s]*0\\)\\)\\)\\)"],["\\code\n\n (make-array 5) ;; Creates a one-dimensional array of five elements.\n (make-array '(3 4) :element-type '(mod 16)) ;; Creates a \n                ;;two-dimensional array, 3 by 4, with four-bit elements.\n (make-array 5 :element-type 'single-float) ;; Creates an array of single-floats.\n\\endcode","\\(make-array[\\n\\s]*5\\)[\\n\\s]*;;[\\n\\s]*Creates[\\n\\s]*a[\\n\\s]*one-dimensional[\\n\\s]*array[\\n\\s]*of[\\n\\s]*five[\\n\\s]*elements\\.[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*'\\(3[\\n\\s]*4\\)[\\n\\s]*:element-type[\\n\\s]*'\\(mod[\\n\\s]*16\\)\\)[\\n\\s]*;;[\\n\\s]*Creates[\\n\\s]*a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;two-dimensional[\\n\\s]*array,[\\n\\s]*3[\\n\\s]*by[\\n\\s]*4,[\\n\\s]*with[\\n\\s]*four-bit[\\n\\s]*elements\\.[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*5[\\n\\s]*:element-type[\\n\\s]*'single-float\\)[\\n\\s]*;;[\\n\\s]*Creates[\\n\\s]*an[\\n\\s]*array[\\n\\s]*of[\\n\\s]*single-floats\\."],["\\code\n (make-array nil :initial-element nil) *→* #0ANIL\n (make-array 4 :initial-element nil) *→* #(NIL NIL NIL NIL)\n (make-array '(2 4) \n              :element-type '(unsigned-byte 2) \n              :initial-contents '((0 1 2 3) (3 2 1 0)))\n*→* #2A((0 1 2 3) (3 2 1 0))\n (make-array 6\n              :element-type 'character \n              :initial-element #\\\\a \n              :fill-pointer 3) *→* \"aaa\"\n\\endcode","\\(make-array[\\n\\s]*nil[\\n\\s]*:initial-element[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#0ANIL[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*4[\\n\\s]*:initial-element[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*'\\(\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#2A\\(\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'character[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"aaa\""],["\\code\n (setq a (make-array '(4 3))) \n*→* #&#60;ARRAY 4x3 simple 32546632&#62;\n (dotimes (i 4)\n   (dotimes (j 3)\n     (setf (aref a i j) (list i 'x j '= (* i j)))))\n*→* NIL\n (setq b (make-array 8 :displaced-to a\n                       :displaced-index-offset 2))\n*→* #&#60;ARRAY 8 indirect 32550757&#62;\n (dotimes (i 8)\n   (print (list i (aref b i))))\n\\OUT (0 (0 X 2 = 0)) \n\\OUT (1 (1 X 0 = 0)) \n\\OUT (2 (1 X 1 = 1)) \n\\OUT (3 (1 X 2 = 2)) \n\\OUT (4 (2 X 0 = 0)) \n\\OUT (5 (2 X 1 = 2)) \n\\OUT (6 (2 X 2 = 4)) \n\\OUT (7 (3 X 0 = 0)) \n*→* NIL\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\\(make-array[\\n\\s]*'\\(4[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*4x3[\\n\\s]*simple[\\n\\s]*32546632&#62;[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*a[\\n\\s]*i[\\n\\s]*j\\)[\\n\\s]*\\(list[\\n\\s]*i[\\n\\s]*'x[\\n\\s]*j[\\n\\s]*'=[\\n\\s]*\\(\\*[\\n\\s]*i[\\n\\s]*j\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*b[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*:displaced-to[\\n\\s]*a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:displaced-index-offset[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*8[\\n\\s]*indirect[\\n\\s]*32550757&#62;[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(list[\\n\\s]*i[\\n\\s]*\\(aref[\\n\\s]*b[\\n\\s]*i\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(0[\\n\\s]*\\(0[\\n\\s]*X[\\n\\s]*2[\\n\\s]*=[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*X[\\n\\s]*0[\\n\\s]*=[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(2[\\n\\s]*\\(1[\\n\\s]*X[\\n\\s]*1[\\n\\s]*=[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(3[\\n\\s]*\\(1[\\n\\s]*X[\\n\\s]*2[\\n\\s]*=[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(4[\\n\\s]*\\(2[\\n\\s]*X[\\n\\s]*0[\\n\\s]*=[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(5[\\n\\s]*\\(2[\\n\\s]*X[\\n\\s]*1[\\n\\s]*=[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(6[\\n\\s]*\\(2[\\n\\s]*X[\\n\\s]*2[\\n\\s]*=[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(7[\\n\\s]*\\(3[\\n\\s]*X[\\n\\s]*0[\\n\\s]*=[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (setq a1 (make-array 50))\n*→* #&#60;ARRAY 50 simple 32562043&#62;\n (setq b1 (make-array 20 :displaced-to a1 :displaced-index-offset 10))\n*→* #&#60;ARRAY 20 indirect 32563346&#62;\n (length b1) *→* 20\n\n (setq a2 (make-array 50 :fill-pointer 10))\n*→* #&#60;ARRAY 50 fill-pointer 10 46100216&#62;\n (setq b2 (make-array 20 :displaced-to a2 :displaced-index-offset 10))\n*→* #&#60;ARRAY 20 indirect 46104010&#62;\n (length a2) *→* 10\n (length b2) *→* 20\n\n (setq a3 (make-array 50 :fill-pointer 10))\n*→* #&#60;ARRAY 50 fill-pointer 10 46105663&#62;\n (setq b3 (make-array 20 :displaced-to a3 :displaced-index-offset 10\n                         :fill-pointer 5))\n*→* #&#60;ARRAY 20 indirect, fill-pointer 5 46107432&#62;\n (length a3) *→* 10\n (length b3) *→* 5\n\\endcode","\\(setq[\\n\\s]*a1[\\n\\s]*\\(make-array[\\n\\s]*50\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*50[\\n\\s]*simple[\\n\\s]*32562043&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*b1[\\n\\s]*\\(make-array[\\n\\s]*20[\\n\\s]*:displaced-to[\\n\\s]*a1[\\n\\s]*:displaced-index-offset[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*20[\\n\\s]*indirect[\\n\\s]*32563346&#62;[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*b1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*20[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a2[\\n\\s]*\\(make-array[\\n\\s]*50[\\n\\s]*:fill-pointer[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*50[\\n\\s]*fill-pointer[\\n\\s]*10[\\n\\s]*46100216&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*b2[\\n\\s]*\\(make-array[\\n\\s]*20[\\n\\s]*:displaced-to[\\n\\s]*a2[\\n\\s]*:displaced-index-offset[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*20[\\n\\s]*indirect[\\n\\s]*46104010&#62;[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*a2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*b2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*20[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a3[\\n\\s]*\\(make-array[\\n\\s]*50[\\n\\s]*:fill-pointer[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*50[\\n\\s]*fill-pointer[\\n\\s]*10[\\n\\s]*46105663&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*b3[\\n\\s]*\\(make-array[\\n\\s]*20[\\n\\s]*:displaced-to[\\n\\s]*a3[\\n\\s]*:displaced-index-offset[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*20[\\n\\s]*indirect,[\\n\\s]*fill-pointer[\\n\\s]*5[\\n\\s]*46107432&#62;[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*a3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*b3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5"],["\\code\n (adjust-array A ...)\n\\endcode","\\(adjust-array[\\n\\s]*A[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (adjust-array A ... :displaced-to C)\n\\endcode","\\(adjust-array[\\n\\s]*A[\\n\\s]*\\.\\.\\.[\\n\\s]*:displaced-to[\\n\\s]*C\\)"],["\\code\n (adjust-array A ... :displaced-to B)\n (adjust-array A ... :displaced-to C)\n\\endcode","\\(adjust-array[\\n\\s]*A[\\n\\s]*\\.\\.\\.[\\n\\s]*:displaced-to[\\n\\s]*B\\)[\\n\\s]*[\\n\\s]*\\(adjust-array[\\n\\s]*A[\\n\\s]*\\.\\.\\.[\\n\\s]*:displaced-to[\\n\\s]*C\\)"],["\\code\n (adjust-array A ... :displaced-to B)\n (adjust-array A ... :displaced-to nil)\n\\endcode","\\(adjust-array[\\n\\s]*A[\\n\\s]*\\.\\.\\.[\\n\\s]*:displaced-to[\\n\\s]*B\\)[\\n\\s]*[\\n\\s]*\\(adjust-array[\\n\\s]*A[\\n\\s]*\\.\\.\\.[\\n\\s]*:displaced-to[\\n\\s]*nil\\)"],["\\code\n (adjustable-array-p\n  (setq ada (adjust-array\n              (make-array '(2 3)\n                          :adjustable t\n                          :initial-contents '((a b c) (1 2 3)))\n              '(4 6)))) *→* T \n (array-dimensions ada) *→* (4 6) \n (aref ada 1 1) *→* 2 \n (setq beta (make-array '(2 3) :adjustable t))\n*→* #2A((NIL NIL NIL) (NIL NIL NIL)) \n (adjust-array beta '(4 6) :displaced-to ada)\n*→* #2A((A B C NIL NIL NIL)\n       (1 2 3 NIL NIL NIL)\n       (NIL NIL NIL NIL NIL NIL) \n       (NIL NIL NIL NIL NIL NIL))\n (array-dimensions beta) *→* (4 6)\n (aref beta 1 1) *→* 2 \n\\endcode","\\(adjustable-array-p[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*ada[\\n\\s]*\\(adjust-array[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:adjustable[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*'\\(\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(4[\\n\\s]*6\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-dimensions[\\n\\s]*ada\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*ada[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*beta[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3\\)[\\n\\s]*:adjustable[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#2A\\(\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(adjust-array[\\n\\s]*beta[\\n\\s]*'\\(4[\\n\\s]*6\\)[\\n\\s]*:displaced-to[\\n\\s]*ada\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#2A\\(\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)\\)[\\n\\s]*[\\n\\s]*\\(array-dimensions[\\n\\s]*beta\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*beta[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n#2A(( alpha     beta      gamma     delta )\n    ( epsilon   zeta      eta       theta )\n    ( iota      kappa     lambda    mu    )\n    ( nu        xi        omicron   pi    ))\n\\endcode","#2A\\(\\([\\n\\s]*alpha[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*beta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*gamma[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*delta[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\([\\n\\s]*epsilon[\\n\\s]*[\\n\\s]*[\\n\\s]*zeta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*eta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*theta[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\([\\n\\s]*iota[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*kappa[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lambda[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*mu[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\([\\n\\s]*nu[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*xi[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*omicron[\\n\\s]*[\\n\\s]*[\\n\\s]*pi[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)\\)"],["\\code\n (adjust-array m '(3 5) :initial-element 'baz)\n\\endcode","\\(adjust-array[\\n\\s]*m[\\n\\s]*'\\(3[\\n\\s]*5\\)[\\n\\s]*:initial-element[\\n\\s]*'baz\\)"],["\\code\n#2A(( alpha     beta      gamma     delta     baz )\n    ( epsilon   zeta      eta       theta     baz )\n    ( iota      kappa     lambda    mu        baz ))\n\\endcode","#2A\\(\\([\\n\\s]*alpha[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*beta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*gamma[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*delta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\([\\n\\s]*epsilon[\\n\\s]*[\\n\\s]*[\\n\\s]*zeta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*eta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*theta[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\([\\n\\s]*iota[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*kappa[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lambda[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*mu[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\)\\)"],["\\code\n (adjustable-array-p \n   (make-array 5\n               :element-type 'character \n               :adjustable t \n               :fill-pointer 3)) *→ true*\n (adjustable-array-p (make-array 4)) *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(adjustable-array-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'character[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:adjustable[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(adjustable-array-p[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (aref (setq alpha (make-array 4)) 3) *→* \\term&#123;implementation-dependent&#125;\n (setf (aref alpha 3) 'sirens) *→* SIRENS\n (aref alpha 3) *→* SIRENS\n (aref (setq beta (make-array '(2 4) \n                    :element-type '(unsigned-byte 2)\n                    :initial-contents '((0 1 2 3) (3 2 1 0))))\n        1 2) *→* 1\n (setq gamma '(0 2))\n (apply #'aref beta gamma) *→* 2\n (setf (apply #'aref beta gamma) 3) *→* 3\n (apply #'aref beta gamma) *→* 3\n (aref beta 0 2) *→* 3\n\\endcode","\\(aref[\\n\\s]*\\(setq[\\n\\s]*alpha[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*alpha[\\n\\s]*3\\)[\\n\\s]*'sirens\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SIRENS[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*alpha[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SIRENS[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*\\(setq[\\n\\s]*beta[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*'\\(\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*0\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*gamma[\\n\\s]*'\\(0[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'aref[\\n\\s]*beta[\\n\\s]*gamma\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(apply[\\n\\s]*#'aref[\\n\\s]*beta[\\n\\s]*gamma\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'aref[\\n\\s]*beta[\\n\\s]*gamma\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*beta[\\n\\s]*0[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (array-dimension (make-array 4) 0) *→* 4\n (array-dimension (make-array '(2 3)) 1) *→* 3\n\\endcode","\\(array-dimension[\\n\\s]*\\(make-array[\\n\\s]*4\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(array-dimension[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3\\)\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (array-dimension array n) \\EQ (nth n (array-dimensions array))\n\\endcode","\\(array-dimension[\\n\\s]*array[\\n\\s]*n\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nth[\\n\\s]*n[\\n\\s]*\\(array-dimensions[\\n\\s]*array\\)\\)"],["\\code\n (array-dimensions (make-array 4)) *→* (4)\n (array-dimensions (make-array '(2 3))) *→* (2 3)\n (array-dimensions (make-array 4 :fill-pointer 2)) *→* (4)\n\\endcode","\\(array-dimensions[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4\\)[\\n\\s]*[\\n\\s]*\\(array-dimensions[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(array-dimensions[\\n\\s]*\\(make-array[\\n\\s]*4[\\n\\s]*:fill-pointer[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4\\)"],["\\code\n (array-element-type (make-array 4)) *→* T\n (array-element-type (make-array 12 :element-type '(unsigned-byte 8))) \n*→* \\term&#123;implementation-dependent&#125;\n (array-element-type (make-array 12 :element-type '(unsigned-byte 5)))\n*→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*12[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*8\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*12[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*5\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (array-element-type (make-array 5 :element-type '(mod 5)))\n\\endcode","\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*5[\\n\\s]*:element-type[\\n\\s]*'\\(mod[\\n\\s]*5\\)\\)\\)"],["\\code\n (array-has-fill-pointer-p (make-array 4)) *→* \\term&#123;implementation-dependent&#125;\n (array-has-fill-pointer-p (make-array '(2 3))) *→ false*\n (array-has-fill-pointer-p\n   (make-array 8 \n               :fill-pointer 2 \n               :initial-element 'filler)) *→ true*\n\\endcode","\\(array-has-fill-pointer-p[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(array-has-fill-pointer-p[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(array-has-fill-pointer-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*'filler\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (setq a1 (make-array 5)) *→* #&#60;ARRAY 5 simple 46115576&#62;\n (setq a2 (make-array 4 :displaced-to a1\n                        :displaced-index-offset 1))\n*→* #&#60;ARRAY 4 indirect 46117134&#62;\n (array-displacement a2)\n*→* #&#60;ARRAY 5 simple 46115576&#62;, 1\n (setq a3 (make-array 2 :displaced-to a2\n                        :displaced-index-offset 2))\n*→* #&#60;ARRAY 2 indirect 46122527&#62;\n (array-displacement a3)\n*→* #&#60;ARRAY 4 indirect 46117134&#62;, 2\n\\endcode","\\(setq[\\n\\s]*a1[\\n\\s]*\\(make-array[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*5[\\n\\s]*simple[\\n\\s]*46115576&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a2[\\n\\s]*\\(make-array[\\n\\s]*4[\\n\\s]*:displaced-to[\\n\\s]*a1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:displaced-index-offset[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*4[\\n\\s]*indirect[\\n\\s]*46117134&#62;[\\n\\s]*[\\n\\s]*\\(array-displacement[\\n\\s]*a2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*5[\\n\\s]*simple[\\n\\s]*46115576&#62;,[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a3[\\n\\s]*\\(make-array[\\n\\s]*2[\\n\\s]*:displaced-to[\\n\\s]*a2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:displaced-index-offset[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*2[\\n\\s]*indirect[\\n\\s]*46122527&#62;[\\n\\s]*[\\n\\s]*\\(array-displacement[\\n\\s]*a3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY[\\n\\s]*4[\\n\\s]*indirect[\\n\\s]*46117134&#62;,[\\n\\s]*2"],["\\code\n (setq a (make-array '(7 11) :element-type 'string-char))\n (array-in-bounds-p a 0  0) *→ true*\n (array-in-bounds-p a 6 10) *→ true*\n (array-in-bounds-p a 0 -1) *→ false*\n (array-in-bounds-p a 0 11) *→ false*\n (array-in-bounds-p a 7  0) *→ false*\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\\(make-array[\\n\\s]*'\\(7[\\n\\s]*11\\)[\\n\\s]*:element-type[\\n\\s]*'string-char\\)\\)[\\n\\s]*[\\n\\s]*\\(array-in-bounds-p[\\n\\s]*a[\\n\\s]*0[\\n\\s]*[\\n\\s]*0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(array-in-bounds-p[\\n\\s]*a[\\n\\s]*6[\\n\\s]*10\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(array-in-bounds-p[\\n\\s]*a[\\n\\s]*0[\\n\\s]*-1\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(array-in-bounds-p[\\n\\s]*a[\\n\\s]*0[\\n\\s]*11\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(array-in-bounds-p[\\n\\s]*a[\\n\\s]*7[\\n\\s]*[\\n\\s]*0\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (array-in-bounds-p array subscripts)   \n \\EQ (and (not (some #'minusp (list subscripts)))\n         (every #'&#60; (list subscripts) (array-dimensions array)))\n\\endcode","\\(array-in-bounds-p[\\n\\s]*array[\\n\\s]*subscripts\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(and[\\n\\s]*\\(not[\\n\\s]*\\(some[\\n\\s]*#'minusp[\\n\\s]*\\(list[\\n\\s]*subscripts\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(every[\\n\\s]*#'&#60;[\\n\\s]*\\(list[\\n\\s]*subscripts\\)[\\n\\s]*\\(array-dimensions[\\n\\s]*array\\)\\)\\)"],["\\code\n (array-rank (make-array '())) *→* 0\n (array-rank (make-array 4)) *→* 1\n (array-rank (make-array '(4))) *→* 1\n (array-rank (make-array '(2 3))) *→* 2\n\\endcode","\\(array-rank[\\n\\s]*\\(make-array[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(array-rank[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(array-rank[\\n\\s]*\\(make-array[\\n\\s]*'\\(4\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(array-rank[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (setq a (make-array '(4 7) :element-type '(unsigned-byte 8)))\n (array-row-major-index a 1 2) *→* 9\n (array-row-major-index \n    (make-array '(2 3 4) \n                :element-type '(unsigned-byte 8)\n                :displaced-to a\n                :displaced-index-offset 4)\n    0 2 1) *→* 9\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\\(make-array[\\n\\s]*'\\(4[\\n\\s]*7\\)[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*8\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(array-row-major-index[\\n\\s]*a[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9[\\n\\s]*[\\n\\s]*\\(array-row-major-index[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:displaced-to[\\n\\s]*a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:displaced-index-offset[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*0[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9"],["\\code\n (defun array-row-major-index (a &rest subscripts)\n   (apply #'+ (maplist #'(lambda (x y)\n                            (* (car x) (apply #'* (cdr y))))\n                       subscripts\n                       (array-dimensions a))))\n\\endcode","\\(defun[\\n\\s]*array-row-major-index[\\n\\s]*\\(a[\\n\\s]*&rest[\\n\\s]*subscripts\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'\\+[\\n\\s]*\\(maplist[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*\\(apply[\\n\\s]*#'\\*[\\n\\s]*\\(cdr[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*subscripts[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-dimensions[\\n\\s]*a\\)\\)\\)\\)"],["\\code\n (array-total-size (make-array 4)) *→* 4\n (array-total-size (make-array 4 :fill-pointer 2)) *→* 4\n (array-total-size (make-array 0)) *→* 0\n (array-total-size (make-array '(4 2))) *→* 8\n (array-total-size (make-array '(4 0))) *→* 0\n (array-total-size (make-array '())) *→* 1\n\\endcode","\\(array-total-size[\\n\\s]*\\(make-array[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*\\(make-array[\\n\\s]*4[\\n\\s]*:fill-pointer[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*\\(make-array[\\n\\s]*0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*\\(make-array[\\n\\s]*'\\(4[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*8[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*\\(make-array[\\n\\s]*'\\(4[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*\\(make-array[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (array-total-size x)\n    \\EQ (apply #'* (array-dimensions x))\n    \\EQ (reduce #'* (array-dimensions x))\n\\endcode","\\(array-total-size[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*#'\\*[\\n\\s]*\\(array-dimensions[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(reduce[\\n\\s]*#'\\*[\\n\\s]*\\(array-dimensions[\\n\\s]*x\\)\\)"],["\\code\n (arrayp (make-array '(2 3 4) :adjustable t)) *→ true*\n (arrayp (make-array 6)) *→ true*\n (arrayp #*1011) *→ true*\n (arrayp \"hi\") *→ true*\n (arrayp 'hi) *→ false*\n (arrayp 12) *→ false*\n\\endcode","\\(arrayp[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*:adjustable[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(arrayp[\\n\\s]*\\(make-array[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(arrayp[\\n\\s]*#\\*1011\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(arrayp[\\n\\s]*\"hi\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(arrayp[\\n\\s]*'hi\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(arrayp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (arrayp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'array)\n\\endcode","\\(arrayp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'array\\)"],["\\code\n (setq a (make-array 8 :fill-pointer 4)) *→* #(NIL NIL NIL NIL)\n (fill-pointer a) *→* 4\n (dotimes (i (length a)) (setf (aref a i) (* i i))) *→* NIL\n a *→* #(0 1 4 9)\n (setf (fill-pointer a) 3) *→* 3\n (fill-pointer a) *→* 3\n a *→* #(0 1 4)\n (setf (fill-pointer a) 8) *→* 8\n a *→* #(0 1 4 9 NIL NIL NIL NIL)\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*:fill-pointer[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(fill-pointer[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*\\(length[\\n\\s]*a\\)\\)[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*a[\\n\\s]*i\\)[\\n\\s]*\\(\\*[\\n\\s]*i[\\n\\s]*i\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(0[\\n\\s]*1[\\n\\s]*4[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(fill-pointer[\\n\\s]*a\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(fill-pointer[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(0[\\n\\s]*1[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(fill-pointer[\\n\\s]*a\\)[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*8[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(0[\\n\\s]*1[\\n\\s]*4[\\n\\s]*9[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)"],["\\code\n (row-major-aref array index) \\EQ\n   (aref (make-array (array-total-size array)\n                     :displaced-to array\n                     :element-type (array-element-type array))\n         index)\n\n (aref array i1 i2 ...) \\EQ\n     (row-major-aref array (array-row-major-index array i1 i2))\n\\endcode","\\(row-major-aref[\\n\\s]*array[\\n\\s]*index\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*\\(make-array[\\n\\s]*\\(array-total-size[\\n\\s]*array\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:displaced-to[\\n\\s]*array[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*\\(array-element-type[\\n\\s]*array\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*index\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*array[\\n\\s]*i1[\\n\\s]*i2[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(row-major-aref[\\n\\s]*array[\\n\\s]*\\(array-row-major-index[\\n\\s]*array[\\n\\s]*i1[\\n\\s]*i2\\)\\)"],["\\code\n (defun upgraded-array-element-type (type &optional environment)\n   (array-element-type (make-array 0 :element-type type)))\n\\endcode","\\(defun[\\n\\s]*upgraded-array-element-type[\\n\\s]*\\(type[\\n\\s]*&optional[\\n\\s]*environment\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*type\\)\\)\\)"],["\\code\n (simple-vector-p (make-array 6)) *→ true*\n (simple-vector-p \"aaaaaa\") *→ false*\n (simple-vector-p (make-array 6 :fill-pointer t)) *→ false*\n\\endcode","\\(simple-vector-p[\\n\\s]*\\(make-array[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(simple-vector-p[\\n\\s]*\"aaaaaa\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(simple-vector-p[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*:fill-pointer[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (simple-vector-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'simple-vector)\n\\endcode","\\(simple-vector-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'simple-vector\\)"],["\\code\n (simple-vector-p (setq v (vector 1 2 'sirens))) *→ true*\n (svref v 0) *→* 1\n (svref v 2) *→* SIRENS\n (setf (svref v 1) 'newcomer) *→* NEWCOMER               \n v *→* #(1 NEWCOMER SIRENS)\n\\endcode","\\(simple-vector-p[\\n\\s]*\\(setq[\\n\\s]*v[\\n\\s]*\\(vector[\\n\\s]*1[\\n\\s]*2[\\n\\s]*'sirens\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(svref[\\n\\s]*v[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(svref[\\n\\s]*v[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SIRENS[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(svref[\\n\\s]*v[\\n\\s]*1\\)[\\n\\s]*'newcomer\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NEWCOMER[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*v[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(1[\\n\\s]*NEWCOMER[\\n\\s]*SIRENS\\)"],["\\code\n (svref \\param&#123;v&#125; \\param&#123;i&#125;) \\EQ (aref (the simple-vector \\param&#123;v&#125;) \\param&#123;i&#125;)\n\\endcode","\\(svref[\\n\\s]*\\\\param&#123;v&#125;[\\n\\s]*\\\\param&#123;i&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(aref[\\n\\s]*\\(the[\\n\\s]*simple-vector[\\n\\s]*\\\\param&#123;v&#125;\\)[\\n\\s]*\\\\param&#123;i&#125;\\)"],["\\code\n (arrayp (setq v (vector 1 2 'sirens))) *→ true*\n (vectorp v) *→ true*\n (simple-vector-p v) *→ true*         \n (length v) *→* 3\n\\endcode","\\(arrayp[\\n\\s]*\\(setq[\\n\\s]*v[\\n\\s]*\\(vector[\\n\\s]*1[\\n\\s]*2[\\n\\s]*'sirens\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(vectorp[\\n\\s]*v\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(simple-vector-p[\\n\\s]*v\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*v\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (vector a\\ssso a\\ssst ... a\\sssn)\n  \\EQ (make-array (list \\i&#123;n&#125;) :element-type t\n                          :initial-contents \n                            (list a\\ssso a\\ssst ... a\\sssn))\n\\endcode","\\(vector[\\n\\s]*a\\\\ssso[\\n\\s]*a\\\\ssst[\\n\\s]*\\.\\.\\.[\\n\\s]*a\\\\sssn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(make-array[\\n\\s]*\\(list[\\n\\s]*\\\\i&#123;n&#125;\\)[\\n\\s]*:element-type[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a\\\\ssso[\\n\\s]*a\\\\ssst[\\n\\s]*\\.\\.\\.[\\n\\s]*a\\\\sssn\\)\\)"],["\\code\n (vector-push (setq fable (list 'fable))\n              (setq fa (make-array 8\n                                   :fill-pointer 2\n                                   :initial-element 'sisyphus))) *→* 2 \n (fill-pointer fa) *→* 3 \n (eq (vector-pop fa) fable) *→ true*\n (vector-pop fa) *→* SISYPHUS \n (fill-pointer fa) *→* 1 \n\\endcode","\\(vector-push[\\n\\s]*\\(setq[\\n\\s]*fable[\\n\\s]*\\(list[\\n\\s]*'fable\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*fa[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*'sisyphus\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fill-pointer[\\n\\s]*fa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(vector-pop[\\n\\s]*fa\\)[\\n\\s]*fable\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(vector-pop[\\n\\s]*fa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SISYPHUS[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fill-pointer[\\n\\s]*fa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (vector-push (setq fable (list 'fable))\n              (setq fa (make-array 8 \n                                   :fill-pointer 2\n                                   :initial-element 'first-one))) *→* 2 \n (fill-pointer fa) *→* 3 \n (eq (aref fa 2) fable) *→ true*\n (vector-push-extend #\\\\X\n                    (setq aa \n                          (make-array 5\n                                      :element-type 'character\n                                      :adjustable t\n                                      :fill-pointer 3))) *→* 3 \n (fill-pointer aa) *→* 4 \n (vector-push-extend #\\\\Y aa 4) *→* 4 \n (array-total-size aa) *→* at least 5 \n (vector-push-extend #\\\\Z aa 4) *→* 5 \n (array-total-size aa) *→* 9 ;(or more)\n\\endcode","\\(vector-push[\\n\\s]*\\(setq[\\n\\s]*fable[\\n\\s]*\\(list[\\n\\s]*'fable\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*fa[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*'first-one\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fill-pointer[\\n\\s]*fa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(aref[\\n\\s]*fa[\\n\\s]*2\\)[\\n\\s]*fable\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(vector-push-extend[\\n\\s]*#\\\\\\\\X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*aa[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'character[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:adjustable[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fill-pointer[\\n\\s]*aa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(vector-push-extend[\\n\\s]*#\\\\\\\\Y[\\n\\s]*aa[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*aa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*at[\\n\\s]*least[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(vector-push-extend[\\n\\s]*#\\\\\\\\Z[\\n\\s]*aa[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-total-size[\\n\\s]*aa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9[\\n\\s]*;\\(or[\\n\\s]*more\\)"],["\\code\n (vectorp \"aaaaaa\") *→ true*\n (vectorp (make-array 6 :fill-pointer t)) *→ true*\n (vectorp (make-array '(2 3 4))) *→ false*\n (vectorp #*11) *→ true*\n (vectorp #b11) *→ false*\n\\endcode","\\(vectorp[\\n\\s]*\"aaaaaa\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(vectorp[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*:fill-pointer[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(vectorp[\\n\\s]*\\(make-array[\\n\\s]*'\\(2[\\n\\s]*3[\\n\\s]*4\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(vectorp[\\n\\s]*#\\*11\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(vectorp[\\n\\s]*#b11\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (vectorp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'vector)\n\\endcode","\\(vectorp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'vector\\)"],["\\code\n (bit (setq ba (make-array 8 \n                            :element-type 'bit \n                            :initial-element 1))\n       3) *→* 1\n (setf (bit ba 3) 0) *→* 0\n (bit ba 3) *→* 0\n (sbit ba 5) *→* 1\n (setf (sbit ba 5) 1) *→* 1\n (sbit ba 5) *→* 1\n\\endcode","\\(bit[\\n\\s]*\\(setq[\\n\\s]*ba[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'bit[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(bit[\\n\\s]*ba[\\n\\s]*3\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(bit[\\n\\s]*ba[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(sbit[\\n\\s]*ba[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(sbit[\\n\\s]*ba[\\n\\s]*5\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(sbit[\\n\\s]*ba[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (bit-and (setq ba #*11101010) #*01101011) *→* #*01101010\n (bit-and #*1100 #*1010) *→* #*1000      \n (bit-andc1 #*1100 #*1010) *→* #*0010\n (setq rba (bit-andc2 ba #*00110011 t)) *→* #*11001000\n (eq rba ba) *→ true*\n (bit-not (setq ba #*11101010)) *→* #*00010101\n (setq rba (bit-not ba \n                     (setq tba (make-array 8 \n                                           :element-type 'bit))))\n*→* #*00010101\n (equal rba tba) *→ true*\n (bit-xor #*1100 #*1010) *→* #*0110\n\\endcode","\\(bit-and[\\n\\s]*\\(setq[\\n\\s]*ba[\\n\\s]*#\\*11101010\\)[\\n\\s]*#\\*01101011\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*01101010[\\n\\s]*[\\n\\s]*\\(bit-and[\\n\\s]*#\\*1100[\\n\\s]*#\\*1010\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*1000[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(bit-andc1[\\n\\s]*#\\*1100[\\n\\s]*#\\*1010\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*0010[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*rba[\\n\\s]*\\(bit-andc2[\\n\\s]*ba[\\n\\s]*#\\*00110011[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*11001000[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*rba[\\n\\s]*ba\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(bit-not[\\n\\s]*\\(setq[\\n\\s]*ba[\\n\\s]*#\\*11101010\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*00010101[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*rba[\\n\\s]*\\(bit-not[\\n\\s]*ba[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tba[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'bit\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*00010101[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*rba[\\n\\s]*tba\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(bit-xor[\\n\\s]*#\\*1100[\\n\\s]*#\\*1010\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\*0110"],["\\code\n (bit-vector-p (make-array 6 \n                           :element-type 'bit \n                           :fill-pointer t)) *→ true*\n (bit-vector-p #*) *→ true*\n (bit-vector-p (make-array 6)) *→ false*\n\\endcode","\\(bit-vector-p[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'bit[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(bit-vector-p[\\n\\s]*#\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(bit-vector-p[\\n\\s]*\\(make-array[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (bit-vector-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'bit-vector)\n\\endcode","\\(bit-vector-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'bit-vector\\)"],["\\code\n (simple-bit-vector-p (make-array 6)) *→ false*\n (simple-bit-vector-p #*) *→ true*\n\\endcode","\\(simple-bit-vector-p[\\n\\s]*\\(make-array[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(simple-bit-vector-p[\\n\\s]*#\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (simple-bit-vector-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'simple-bit-vector)\n\\endcode","\\(simple-bit-vector-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'simple-bit-vector\\)"],["\\code\n (char= #\\\\d #\\\\d) *→ true*\n (char= #\\\\A #\\\\a) *→ false*\n (char= #\\\\d #\\\\x) *→ false*\n (char= #\\\\d #\\\\D) *→ false*\n (char/= #\\\\d #\\\\d) *→ false*\n (char/= #\\\\d #\\\\x) *→ true*\n (char/= #\\\\d #\\\\D) *→ true*\n (char= #\\\\d #\\\\d #\\\\d #\\\\d) *→ true*\n (char/= #\\\\d #\\\\d #\\\\d #\\\\d) *→ false*\n (char= #\\\\d #\\\\d #\\\\x #\\\\d) *→ false*\n (char/= #\\\\d #\\\\d #\\\\x #\\\\d) *→ false*\n (char= #\\\\d #\\\\y #\\\\x #\\\\c) *→ false*\n (char/= #\\\\d #\\\\y #\\\\x #\\\\c) *→ true*\n (char= #\\\\d #\\\\c #\\\\d) *→ false*\n (char/= #\\\\d #\\\\c #\\\\d) *→ false*\n (char&#60; #\\\\d #\\\\x) *→ true*\n (char&#60;= #\\\\d #\\\\x) *→ true*\n (char&#60; #\\\\d #\\\\d) *→ false*\n (char&#60;= #\\\\d #\\\\d) *→ true*\n (char&#60; #\\\\a #\\\\e #\\\\y #\\\\z) *→ true*\n (char&#60;= #\\\\a #\\\\e #\\\\y #\\\\z) *→ true*\n (char&#60; #\\\\a #\\\\e #\\\\e #\\\\y) *→ false*\n (char&#60;= #\\\\a #\\\\e #\\\\e #\\\\y) *→ true*\n (char&#62; #\\\\e #\\\\d) *→ true*\n (char&#62;= #\\\\e #\\\\d) *→ true*\n (char&#62; #\\\\d #\\\\c #\\\\b #\\\\a) *→ true*\n (char&#62;= #\\\\d #\\\\c #\\\\b #\\\\a) *→ true*\n (char&#62; #\\\\d #\\\\d #\\\\c #\\\\a) *→ false*\n (char&#62;= #\\\\d #\\\\d #\\\\c #\\\\a) *→ true*\n (char&#62; #\\\\e #\\\\d #\\\\b #\\\\c #\\\\a) *→ false*\n (char&#62;= #\\\\e #\\\\d #\\\\b #\\\\c #\\\\a) *→ false*\n (char&#62; #\\\\z #\\\\A) *→* \\term&#123;implementation-dependent&#125;\n (char&#62; #\\\\Z #\\\\a) *→* \\term&#123;implementation-dependent&#125;\n (char-equal #\\\\A #\\\\a) *→ true*\n (stable-sort (list #\\\\b #\\\\A #\\\\B #\\\\a #\\\\c #\\\\C) #'char-lessp)\n*→* (#\\\\A #\\\\a #\\\\b #\\\\B #\\\\c #\\\\C)\n (stable-sort (list #\\\\b #\\\\A #\\\\B #\\\\a #\\\\c #\\\\C) #'char&#60;)\n*→* (#\\\\A #\\\\B #\\\\C #\\\\a #\\\\b #\\\\c) ;Implementation A\n*→* (#\\\\a #\\\\b #\\\\c #\\\\A #\\\\B #\\\\C) ;Implementation B\n*→* (#\\\\a #\\\\A #\\\\b #\\\\B #\\\\c #\\\\C) ;Implementation C\n*→* (#\\\\A #\\\\a #\\\\B #\\\\b #\\\\C #\\\\c) ;Implementation D\n*→* (#\\\\A #\\\\B #\\\\a #\\\\b #\\\\C #\\\\c) ;Implementation E\n\\endcode","\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\x\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\D\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\x\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\D\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\x[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\x[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\y[\\n\\s]*#\\\\\\\\x[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\y[\\n\\s]*#\\\\\\\\x[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char/=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char&#60;[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\x\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#60;=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\x\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#60;[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char&#60;=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#60;[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\y[\\n\\s]*#\\\\\\\\z\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#60;=[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\y[\\n\\s]*#\\\\\\\\z\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#60;[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\y\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char&#60;=[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\y\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#62;[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#62;=[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\d\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#62;[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#62;=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#62;[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char&#62;=[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(char&#62;[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char&#62;=[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\d[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(char&#62;[\\n\\s]*#\\\\\\\\z[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(char&#62;[\\n\\s]*#\\\\\\\\Z[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(char-equal[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(stable-sort[\\n\\s]*\\(list[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\C\\)[\\n\\s]*#'char-lessp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\A[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\C\\)[\\n\\s]*[\\n\\s]*\\(stable-sort[\\n\\s]*\\(list[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\C\\)[\\n\\s]*#'char&#60;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\A[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\C[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*;Implementation[\\n\\s]*A[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\a[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\C\\)[\\n\\s]*;Implementation[\\n\\s]*B[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\a[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\c[\\n\\s]*#\\\\\\\\C\\)[\\n\\s]*;Implementation[\\n\\s]*C[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\A[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\C[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*;Implementation[\\n\\s]*D[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\A[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\a[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\C[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*;Implementation[\\n\\s]*E"],["\\code\n (character #\\\\a) *→* #\\\\a\n (character \"a\") *→* #\\\\a\n (character 'a) *→* #\\\\A\n (character '\\\\a) *→* #\\\\a\n (character 65.) is an error.\n (character 'apple) is an error.\n\\endcode","\\(character[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(character[\\n\\s]*\"a\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(character[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(character[\\n\\s]*'\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(character[\\n\\s]*65\\.\\)[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error\\.[\\n\\s]*[\\n\\s]*\\(character[\\n\\s]*'apple\\)[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error\\."],["\\code\n (character \\param&#123;object&#125;) \\EQ (coerce \\param&#123;object&#125; 'character)\n\\endcode","\\(character[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(coerce[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'character\\)"],["\\code\n (characterp #\\\\a) *→ true*\n (characterp 'a) *→ false*\n (characterp \"a\") *→ false*\n (characterp 65.) *→ false*\n (characterp #\\\\Newline) *→ true*\n ;; This next example presupposes an implementation \n ;; in which #\\\\Rubout is an implementation-defined character.\n (characterp #\\\\Rubout) *→ true*\n\\endcode","\\(characterp[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(characterp[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(characterp[\\n\\s]*\"a\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(characterp[\\n\\s]*65\\.\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(characterp[\\n\\s]*#\\\\\\\\Newline\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*next[\\n\\s]*example[\\n\\s]*presupposes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*in[\\n\\s]*which[\\n\\s]*#\\\\\\\\Rubout[\\n\\s]*is[\\n\\s]*an[\\n\\s]*implementation-defined[\\n\\s]*character\\.[\\n\\s]*[\\n\\s]*\\(characterp[\\n\\s]*#\\\\\\\\Rubout\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (characterp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'character)\n\\endcode","\\(characterp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'character\\)"],["\\code\n (alpha-char-p #\\\\a) *→ true*\n (alpha-char-p #\\\\5) *→ false*\n (alpha-char-p #\\\\Newline) *→ false*\n ;; This next example presupposes an implementation\n ;; in which #\\\\\\alfa is a defined character.\n (alpha-char-p #\\\\\\alfa) *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(alpha-char-p[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(alpha-char-p[\\n\\s]*#\\\\\\\\5\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(alpha-char-p[\\n\\s]*#\\\\\\\\Newline\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*next[\\n\\s]*example[\\n\\s]*presupposes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*[\\n\\s]*;;[\\n\\s]*in[\\n\\s]*which[\\n\\s]*#\\\\\\\\\\\\alfa[\\n\\s]*is[\\n\\s]*a[\\n\\s]*defined[\\n\\s]*character\\.[\\n\\s]*[\\n\\s]*\\(alpha-char-p[\\n\\s]*#\\\\\\\\\\\\alfa\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (alphanumericp #\\\\Z) *→ true*\n (alphanumericp #\\\\9) *→ true*\n (alphanumericp #\\\\Newline) *→ false*\n (alphanumericp #\\\\#) *→ false*\n\\endcode","\\(alphanumericp[\\n\\s]*#\\\\\\\\Z\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(alphanumericp[\\n\\s]*#\\\\\\\\9\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(alphanumericp[\\n\\s]*#\\\\\\\\Newline\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(alphanumericp[\\n\\s]*#\\\\\\\\#\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (alphanumericp x)\n   \\EQ (or (alpha-char-p x) (not (null (digit-char-p x))))\n\\endcode","\\(alphanumericp[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(or[\\n\\s]*\\(alpha-char-p[\\n\\s]*x\\)[\\n\\s]*\\(not[\\n\\s]*\\(null[\\n\\s]*\\(digit-char-p[\\n\\s]*x\\)\\)\\)\\)"],["\\code\n (digit-char 0) *→* #\\\\0\n (digit-char 10 11) *→* #\\\\A\n (digit-char 10 10) *→ false*\n (digit-char 7) *→* #\\\\7\n (digit-char 12) *→ false*\n (digit-char 12 16) *→* #\\\\C  ;not #\\\\c\n (digit-char 6 2) *→ false*\n (digit-char 1 2) *→* #\\\\1\n\\endcode","\\(digit-char[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\0[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*10[\\n\\s]*11\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*10[\\n\\s]*10\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\7[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*12[\\n\\s]*16\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\C[\\n\\s]*[\\n\\s]*;not[\\n\\s]*#\\\\\\\\c[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*6[\\n\\s]*2\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(digit-char[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\1"],["\\code\n (digit-char-p #\\\\5)    *→* 5\n (digit-char-p #\\\\5 2)  *→ false*\n (digit-char-p #\\\\A)    *→ false*\n (digit-char-p #\\\\a)    *→ false*\n (digit-char-p #\\\\A 11) *→* 10\n (digit-char-p #\\\\a 11) *→* 10\n (mapcar #'(lambda (radix) \n             (map 'list #'(lambda (x) (digit-char-p x radix)) \n                  \"059AaFGZ\"))\n         '(2 8 10 16 36))\n *→* ((0 NIL NIL NIL NIL NIL NIL NIL)\n     (0 5 NIL NIL NIL NIL NIL NIL)\n     (0 5 9 NIL NIL NIL NIL NIL)\n     (0 5 9 10 10 15 NIL NIL)\n     (0 5 9 10 10 15 16 35))\n\\endcode","\\(digit-char-p[\\n\\s]*#\\\\\\\\5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(digit-char-p[\\n\\s]*#\\\\\\\\5[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(digit-char-p[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(digit-char-p[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(digit-char-p[\\n\\s]*#\\\\\\\\A[\\n\\s]*11\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(digit-char-p[\\n\\s]*#\\\\\\\\a[\\n\\s]*11\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(radix\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(map[\\n\\s]*'list[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(digit-char-p[\\n\\s]*x[\\n\\s]*radix\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"059AaFGZ\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(2[\\n\\s]*8[\\n\\s]*10[\\n\\s]*16[\\n\\s]*36\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(0[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(0[\\n\\s]*5[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(0[\\n\\s]*5[\\n\\s]*9[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(0[\\n\\s]*5[\\n\\s]*9[\\n\\s]*10[\\n\\s]*10[\\n\\s]*15[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(0[\\n\\s]*5[\\n\\s]*9[\\n\\s]*10[\\n\\s]*10[\\n\\s]*15[\\n\\s]*16[\\n\\s]*35\\)\\)"],["\\code\n (graphic-char-p #\\\\G) *→ true*\n (graphic-char-p #\\\\#) *→ true*\n (graphic-char-p #\\\\Space) *→ true*\n (graphic-char-p #\\\\Newline) *→ false*\n\\endcode","\\(graphic-char-p[\\n\\s]*#\\\\\\\\G\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(graphic-char-p[\\n\\s]*#\\\\\\\\#\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(graphic-char-p[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(graphic-char-p[\\n\\s]*#\\\\\\\\Newline\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (standard-char-p #\\\\Space) *→ true*\n (standard-char-p #\\\\~) *→ true*\n ;; This next example presupposes an implementation\n ;; in which #\\\\Bell is a defined character.\n (standard-char-p #\\\\Bell) *→ false*\n\\endcode","\\(standard-char-p[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(standard-char-p[\\n\\s]*#\\\\\\\\~\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*next[\\n\\s]*example[\\n\\s]*presupposes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*[\\n\\s]*;;[\\n\\s]*in[\\n\\s]*which[\\n\\s]*#\\\\\\\\Bell[\\n\\s]*is[\\n\\s]*a[\\n\\s]*defined[\\n\\s]*character\\.[\\n\\s]*[\\n\\s]*\\(standard-char-p[\\n\\s]*#\\\\\\\\Bell\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (char-upcase #\\\\a) *→* #\\\\A\n (char-upcase #\\\\A) *→* #\\\\A\n (char-downcase #\\\\a) *→* #\\\\a\n (char-downcase #\\\\A) *→* #\\\\a\n (char-upcase #\\\\9) *→* #\\\\9\n (char-downcase #\\\\9) *→* #\\\\9\n (char-upcase #\\\\@) *→* #\\\\@\n (char-downcase #\\\\@) *→* #\\\\@\n ;; Note that this next example might run for a very long time in \n ;; some implementations if CHAR-CODE-LIMIT happens to be very large\n ;; for that implementation.\n (dotimes (code char-code-limit)\n   (let ((char (code-char code)))\n     (when char\n       (unless (cond ((upper-case-p char) (char= (char-upcase (char-downcase char)) char))\n                     ((lower-case-p char) (char= (char-downcase (char-upcase char)) char))\n                     (t (and (char= (char-upcase (char-downcase char)) char)\n                             (char= (char-downcase (char-upcase char)) char))))\n         (return char)))))\n*→* NIL\n\\endcode","\\(char-upcase[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(char-upcase[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(char-downcase[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(char-downcase[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(char-upcase[\\n\\s]*#\\\\\\\\9\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\9[\\n\\s]*[\\n\\s]*\\(char-downcase[\\n\\s]*#\\\\\\\\9\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\9[\\n\\s]*[\\n\\s]*\\(char-upcase[\\n\\s]*#\\\\\\\\@\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\@[\\n\\s]*[\\n\\s]*\\(char-downcase[\\n\\s]*#\\\\\\\\@\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\@[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*this[\\n\\s]*next[\\n\\s]*example[\\n\\s]*might[\\n\\s]*run[\\n\\s]*for[\\n\\s]*a[\\n\\s]*very[\\n\\s]*long[\\n\\s]*time[\\n\\s]*in[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*some[\\n\\s]*implementations[\\n\\s]*if[\\n\\s]*CHAR-CODE-LIMIT[\\n\\s]*happens[\\n\\s]*to[\\n\\s]*be[\\n\\s]*very[\\n\\s]*large[\\n\\s]*[\\n\\s]*;;[\\n\\s]*for[\\n\\s]*that[\\n\\s]*implementation\\.[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(code[\\n\\s]*char-code-limit\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(char[\\n\\s]*\\(code-char[\\n\\s]*code\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*char[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(cond[\\n\\s]*\\(\\(upper-case-p[\\n\\s]*char\\)[\\n\\s]*\\(char=[\\n\\s]*\\(char-upcase[\\n\\s]*\\(char-downcase[\\n\\s]*char\\)\\)[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(lower-case-p[\\n\\s]*char\\)[\\n\\s]*\\(char=[\\n\\s]*\\(char-downcase[\\n\\s]*\\(char-upcase[\\n\\s]*char\\)\\)[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(and[\\n\\s]*\\(char=[\\n\\s]*\\(char-upcase[\\n\\s]*\\(char-downcase[\\n\\s]*char\\)\\)[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(char=[\\n\\s]*\\(char-downcase[\\n\\s]*\\(char-upcase[\\n\\s]*char\\)\\)[\\n\\s]*char\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*char\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (upper-case-p #\\\\A) *→ true*\n (upper-case-p #\\\\a) *→ false*\n (both-case-p #\\\\a) *→ true*\n (both-case-p #\\\\5) *→ false*\n (lower-case-p #\\\\5) *→ false*\n (upper-case-p #\\\\5) *→ false*\n ;; This next example presupposes an implementation \n ;; in which #\\\\Bell is an implementation-defined character.\n (lower-case-p #\\\\Bell) *→ false*\n\\endcode","\\(upper-case-p[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(upper-case-p[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(both-case-p[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(both-case-p[\\n\\s]*#\\\\\\\\5\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(lower-case-p[\\n\\s]*#\\\\\\\\5\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(upper-case-p[\\n\\s]*#\\\\\\\\5\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*next[\\n\\s]*example[\\n\\s]*presupposes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*in[\\n\\s]*which[\\n\\s]*#\\\\\\\\Bell[\\n\\s]*is[\\n\\s]*an[\\n\\s]*implementation-defined[\\n\\s]*character\\.[\\n\\s]*[\\n\\s]*\\(lower-case-p[\\n\\s]*#\\\\\\\\Bell\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n;; An implementation using ASCII character encoding \n;; might return these values:\n(char-code #\\\\$) *→* 36\n(char-code #\\\\a) *→* 97\n\\endcode",";;[\\n\\s]*An[\\n\\s]*implementation[\\n\\s]*using[\\n\\s]*ASCII[\\n\\s]*character[\\n\\s]*encoding[\\n\\s]*[\\n\\s]*;;[\\n\\s]*might[\\n\\s]*return[\\n\\s]*these[\\n\\s]*values:[\\n\\s]*\\(char-code[\\n\\s]*#\\\\\\\\$\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*36[\\n\\s]*\\(char-code[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*97"],["\\code\n (char= \\i&#123;c1&#125; \\i&#123;c2&#125;) \\EQ (= (char-int \\i&#123;c1&#125;) (char-int \\i&#123;c2&#125;))\n\\endcode","\\(char=[\\n\\s]*\\\\i&#123;c1&#125;[\\n\\s]*\\\\i&#123;c2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(=[\\n\\s]*\\(char-int[\\n\\s]*\\\\i&#123;c1&#125;\\)[\\n\\s]*\\(char-int[\\n\\s]*\\\\i&#123;c2&#125;\\)\\)"],["\\code\n (char-int #\\\\A) *→* 65       ; implementation A\n (char-int #\\\\A) *→* 577      ; implementation B\n (char-int #\\\\A) *→* 262145   ; implementation C\n\\endcode","\\(char-int[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*65[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*implementation[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(char-int[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*577[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*implementation[\\n\\s]*B[\\n\\s]*[\\n\\s]*\\(char-int[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*262145[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*implementation[\\n\\s]*C"],["\\code\n(code-char 65.) *→* #\\\\A  ;in an implementation using ASCII codes\n(code-char (char-code #\\\\Space)) *→* #\\\\Space  ;in any implementation\n\\endcode","\\(code-char[\\n\\s]*65\\.\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*;in[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*using[\\n\\s]*ASCII[\\n\\s]*codes[\\n\\s]*\\(code-char[\\n\\s]*\\(char-code[\\n\\s]*#\\\\\\\\Space\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\Space[\\n\\s]*[\\n\\s]*;in[\\n\\s]*any[\\n\\s]*implementation"],["\\code\n (char-name #\\\\ ) *→* \"Space\"\n (char-name #\\\\Space) *→* \"Space\"\n (char-name #\\\\Page) *→* \"Page\"\n\n (char-name #\\\\a)\n*→* NIL\n\\OV \"LOWERCASE-a\"\n\\OV \"Small-A\"\n\\OV \"LA01\"\n\n (char-name #\\\\A)\n*→* NIL\n\\OV \"UPPERCASE-A\"\n\\OV \"Capital-A\"\n\\OV \"LA02\"\n\n ;; Even though its CHAR-NAME can vary, #\\\\A prints as #\\\\A\n (prin1-to-string (read-from-string (format nil \"#\\\\\\\\~A\" (or (char-name #\\\\A) \"A\"))))\n*→* \"#\\\\\\\\A\"\n\\endcode","\\(char-name[\\n\\s]*#\\\\\\\\[\\n\\s]*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Space\"[\\n\\s]*[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\Space\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Space\"[\\n\\s]*[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\Page\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Page\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\"LOWERCASE-a\"[\\n\\s]*\\\\OV[\\n\\s]*\"Small-A\"[\\n\\s]*\\\\OV[\\n\\s]*\"LA01\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\"UPPERCASE-A\"[\\n\\s]*\\\\OV[\\n\\s]*\"Capital-A\"[\\n\\s]*\\\\OV[\\n\\s]*\"LA02\"[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Even[\\n\\s]*though[\\n\\s]*its[\\n\\s]*CHAR-NAME[\\n\\s]*can[\\n\\s]*vary,[\\n\\s]*#\\\\\\\\A[\\n\\s]*prints[\\n\\s]*as[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*\\(read-from-string[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"#\\\\\\\\\\\\\\\\~A\"[\\n\\s]*\\(or[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\"A\"\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"#\\\\\\\\\\\\\\\\A\""],["\\code\n(name-char 'space) *→* #\\\\Space\n(name-char \"space\") *→* #\\\\Space\n(name-char \"Space\") *→* #\\\\Space\n(let ((x (char-name #\\\\a)))\n  (or (not x) (eql (name-char x) #\\\\a))) *→ true*\n\\endcode","\\(name-char[\\n\\s]*'space\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\Space[\\n\\s]*\\(name-char[\\n\\s]*\"space\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\Space[\\n\\s]*\\(name-char[\\n\\s]*\"Space\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\Space[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(char-name[\\n\\s]*#\\\\\\\\a\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(not[\\n\\s]*x\\)[\\n\\s]*\\(eql[\\n\\s]*\\(name-char[\\n\\s]*x\\)[\\n\\s]*#\\\\\\\\a\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (setq x (make-array '(3 5) :initial-element 3))\n*→* #2A((3 3 3 3 3) (3 3 3 3 3) (3 3 3 3 3))\n (setq y (make-array '(3 5) :initial-element 7))\n*→* #2A((7 7 7 7 7) (7 7 7 7 7) (7 7 7 7 7))\n (defun matrix-multiply (a b)\n   (let ((*print-array* nil))\n     (assert (and (= (array-rank a) (array-rank b) 2)\n                  (= (array-dimension a 1) (array-dimension b 0)))\n             (a b)\n             \"Cannot multiply ~S by ~S.\" a b)\n            (really-matrix-multiply a b))) *→* MATRIX-MULTIPLY\n (matrix-multiply x y)\n\\OUT Correctable error in MATRIX-MULTIPLY: \n\\OUT Cannot multiply #&#60;ARRAY ...&#62; by #&#60;ARRAY ...&#62;.\n\\OUT Restart options:\n\\OUT  1: You will be prompted for one or more new values.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Value for A: \\IN&#123;x&#125;\n\\OUT Value for B: \\IN&#123;(make-array '(5 3) :initial-element 6)&#125;\n*→* #2A((54 54 54 54 54)\n       (54 54 54 54 54)\n       (54 54 54 54 54)\n       (54 54 54 54 54)\n       (54 54 54 54 54))\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(make-array[\\n\\s]*'\\(3[\\n\\s]*5\\)[\\n\\s]*:initial-element[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#2A\\(\\(3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(make-array[\\n\\s]*'\\(3[\\n\\s]*5\\)[\\n\\s]*:initial-element[\\n\\s]*7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#2A\\(\\(7[\\n\\s]*7[\\n\\s]*7[\\n\\s]*7[\\n\\s]*7\\)[\\n\\s]*\\(7[\\n\\s]*7[\\n\\s]*7[\\n\\s]*7[\\n\\s]*7\\)[\\n\\s]*\\(7[\\n\\s]*7[\\n\\s]*7[\\n\\s]*7[\\n\\s]*7\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*matrix-multiply[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-array\\*[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assert[\\n\\s]*\\(and[\\n\\s]*\\(=[\\n\\s]*\\(array-rank[\\n\\s]*a\\)[\\n\\s]*\\(array-rank[\\n\\s]*b\\)[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(=[\\n\\s]*\\(array-dimension[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\(array-dimension[\\n\\s]*b[\\n\\s]*0\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Cannot[\\n\\s]*multiply[\\n\\s]*~S[\\n\\s]*by[\\n\\s]*~S\\.\"[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(really-matrix-multiply[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MATRIX-MULTIPLY[\\n\\s]*[\\n\\s]*\\(matrix-multiply[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*MATRIX-MULTIPLY:[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*Cannot[\\n\\s]*multiply[\\n\\s]*#&#60;ARRAY[\\n\\s]*\\.\\.\\.&#62;[\\n\\s]*by[\\n\\s]*#&#60;ARRAY[\\n\\s]*\\.\\.\\.&#62;\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*You[\\n\\s]*will[\\n\\s]*be[\\n\\s]*prompted[\\n\\s]*for[\\n\\s]*one[\\n\\s]*or[\\n\\s]*more[\\n\\s]*new[\\n\\s]*values\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Value[\\n\\s]*for[\\n\\s]*A:[\\n\\s]*\\\\IN&#123;x&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Value[\\n\\s]*for[\\n\\s]*B:[\\n\\s]*\\\\IN&#123;\\(make-array[\\n\\s]*'\\(5[\\n\\s]*3\\)[\\n\\s]*:initial-element[\\n\\s]*6\\)&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*#2A\\(\\(54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54[\\n\\s]*54\\)\\)"],["\\code\n (defun double-safely (x) (assert (numberp x) (x)) (+ x x))\n (double-safely 4) \n*→* 8\n \n (double-safely t)\n\\OUT Correctable error in DOUBLE-SAFELY: The value of (NUMBERP X) must be non-NIL.\n\\OUT Restart options:\n\\OUT  1: You will be prompted for one or more new values.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Value for X: \\IN&#123;7&#125;\n*→* 14\n\\endcode","\\(defun[\\n\\s]*double-safely[\\n\\s]*\\(x\\)[\\n\\s]*\\(assert[\\n\\s]*\\(numberp[\\n\\s]*x\\)[\\n\\s]*\\(x\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*\\(double-safely[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(double-safely[\\n\\s]*t\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*DOUBLE-SAFELY:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*\\(NUMBERP[\\n\\s]*X\\)[\\n\\s]*must[\\n\\s]*be[\\n\\s]*non-NIL\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*You[\\n\\s]*will[\\n\\s]*be[\\n\\s]*prompted[\\n\\s]*for[\\n\\s]*one[\\n\\s]*or[\\n\\s]*more[\\n\\s]*new[\\n\\s]*values\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Value[\\n\\s]*for[\\n\\s]*X:[\\n\\s]*\\\\IN&#123;7&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*14"],["\\code\n (defun factorial (x)\n   (cond ((or (not (typep x 'integer)) (minusp x))\n          (error \"~S is not a valid argument to FACTORIAL.\" x))\n         ((zerop x) 1)\n         (t (* x (factorial (- x 1))))))\n*→* FACTORIAL\n(factorial 20)\n*→* 2432902008176640000\n(factorial -1)\n\\OUT Error: -1 is not a valid argument to FACTORIAL.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Return to Lisp Toplevel.\n\\OUT Debug&#62; \n\\endcode","\\(defun[\\n\\s]*factorial[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(or[\\n\\s]*\\(not[\\n\\s]*\\(typep[\\n\\s]*x[\\n\\s]*'integer\\)\\)[\\n\\s]*\\(minusp[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*valid[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*FACTORIAL\\.\"[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(zerop[\\n\\s]*x\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*\\(factorial[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*1\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FACTORIAL[\\n\\s]*\\(factorial[\\n\\s]*20\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2432902008176640000[\\n\\s]*\\(factorial[\\n\\s]*-1\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*-1[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*valid[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*FACTORIAL\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;"],["\\code\n (setq a 'fred)\n*→* FRED\n (if (numberp a) (1+ a) (error \"~S is not a number.\" A))\n\\OUT Error: FRED is not a number.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:Continue 1&#125;\n\\OUT Return to Lisp Toplevel.\n \n (define-condition not-a-number (error) \n                   ((argument :reader not-a-number-argument :initarg :argument))\n   (:report (lambda (condition stream)\n              (format stream \"~S is not a number.\"\n                      (not-a-number-argument condition)))))\n*→* NOT-A-NUMBER\n \n (if (numberp a) (1+ a) (error 'not-a-number :argument a))\n\\OUT Error: FRED is not a number.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:Continue 1&#125;\n\\OUT Return to Lisp Toplevel.\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*'fred\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FRED[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*a\\)[\\n\\s]*\\(1\\+[\\n\\s]*a\\)[\\n\\s]*\\(error[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.\"[\\n\\s]*A\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*FRED[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:Continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*not-a-number[\\n\\s]*\\(error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(argument[\\n\\s]*:reader[\\n\\s]*not-a-number-argument[\\n\\s]*:initarg[\\n\\s]*:argument\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(not-a-number-argument[\\n\\s]*condition\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NOT-A-NUMBER[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*a\\)[\\n\\s]*\\(1\\+[\\n\\s]*a\\)[\\n\\s]*\\(error[\\n\\s]*'not-a-number[\\n\\s]*:argument[\\n\\s]*a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*FRED[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:Continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\."],["\\code\n (defun wargames:no-win-scenario ()\n   (if (error \"pushing the button would be stupid.\"))\n   (push-the-button))\n\\endcode","\\(defun[\\n\\s]*wargames:no-win-scenario[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(error[\\n\\s]*\"pushing[\\n\\s]*the[\\n\\s]*button[\\n\\s]*would[\\n\\s]*be[\\n\\s]*stupid\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push-the-button\\)\\)"],["\\code\n (defun real-sqrt (n)\n   (when (minusp n)\n     (setq n (- n))\n     (cerror \"Return sqrt(~D) instead.\" \"Tried to take sqrt(-~D).\" n))\n   (sqrt n))\n\n (real-sqrt 4)\n*→* 2.0\n\n (real-sqrt -9)\n\\OUT Correctable error in REAL-SQRT: Tried to take sqrt(-9).\n\\OUT Restart options:\n\\OUT  1: Return sqrt(9) instead.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n*→* 3.0\n \n (define-condition not-a-number (error)\n   ((argument :reader not-a-number-argument :initarg :argument))\n   (:report (lambda (condition stream)\n              (format stream \"~S is not a number.\" \n                      (not-a-number-argument condition)))))\n \n (defun assure-number (n)\n   (loop (when (numberp n) (return n))\n         (cerror \"Enter a number.\"\n                 'not-a-number :argument n)\n         (format t \"~&Type a number: \")\n         (setq n (read))\n         (fresh-line)))\n\n (assure-number 'a)\n\\OUT Correctable error in ASSURE-NUMBER: A is not a number.\n\\OUT Restart options:\n\\OUT  1: Enter a number.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Type a number: \\IN&#123;1/2&#125;\n*→* 1/2\n\n (defun assure-large-number (n)\n   (loop (when (and (numberp n) (&#62; n 73)) (return n))\n         (cerror \"Enter a number~:[~; a bit larger than ~D~].\"\n                 \"~*~A is not a large number.\" \n                 (numberp n) n)\n         (format t \"~&Type a large number: \")\n         (setq n (read))\n         (fresh-line)))\n \n (assure-large-number 10000)\n*→* 10000\n\n (assure-large-number 'a)\n\\OUT Correctable error in ASSURE-LARGE-NUMBER: A is not a large number.\n\\OUT Restart options:\n\\OUT  1: Enter a number.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Type a large number: \\IN&#123;88&#125;\n*→* 88\n\n (assure-large-number 37)\n\\OUT Correctable error in ASSURE-LARGE-NUMBER: 37 is not a large number.\n\\OUT Restart options:\n\\OUT  1: Enter a number a bit larger than 37.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Type a large number: \\IN&#123;259&#125;\n*→* 259\n \n (define-condition not-a-large-number (error)\n   ((argument :reader not-a-large-number-argument :initarg :argument))\n   (:report (lambda (condition stream)\n              (format stream \"~S is not a large number.\" \n                      (not-a-large-number-argument condition)))))\n \n (defun assure-large-number (n)\n   (loop (when (and (numberp n) (&#62; n 73)) (return n))\n         (cerror \"Enter a number~3*~:[~; a bit larger than ~*~D~].\"\n                 'not-a-large-number\n                 :argument n \n                 :ignore (numberp n)\n                 :ignore n\n                 :allow-other-keys t)\n         (format t \"~&Type a large number: \")\n         (setq n (read))\n         (fresh-line)))\n \n\n (assure-large-number 'a)\n\\OUT Correctable error in ASSURE-LARGE-NUMBER: A is not a large number.\n\\OUT Restart options:\n\\OUT  1: Enter a number.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Type a large number: \\IN&#123;88&#125;\n*→* 88\n \n (assure-large-number 37)\n\\OUT Correctable error in ASSURE-LARGE-NUMBER: A is not a large number.\n\\OUT Restart options:\n\\OUT  1: Enter a number a bit larger than 37.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Type a large number: \\IN&#123;259&#125;\n*→* 259\n\\endcode","\\(defun[\\n\\s]*real-sqrt[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(minusp[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(-[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Return[\\n\\s]*sqrt\\(~D\\)[\\n\\s]*instead\\.\"[\\n\\s]*\"Tried[\\n\\s]*to[\\n\\s]*take[\\n\\s]*sqrt\\(-~D\\)\\.\"[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(real-sqrt[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(real-sqrt[\\n\\s]*-9\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*REAL-SQRT:[\\n\\s]*Tried[\\n\\s]*to[\\n\\s]*take[\\n\\s]*sqrt\\(-9\\)\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*sqrt\\(9\\)[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*not-a-number[\\n\\s]*\\(error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(argument[\\n\\s]*:reader[\\n\\s]*not-a-number-argument[\\n\\s]*:initarg[\\n\\s]*:argument\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(not-a-number-argument[\\n\\s]*condition\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*assure-number[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(when[\\n\\s]*\\(numberp[\\n\\s]*n\\)[\\n\\s]*\\(return[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Enter[\\n\\s]*a[\\n\\s]*number\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'not-a-number[\\n\\s]*:argument[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Type[\\n\\s]*a[\\n\\s]*number:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(read\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assure-number[\\n\\s]*'a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*ASSURE-NUMBER:[\\n\\s]*A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Enter[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*number:[\\n\\s]*\\\\IN&#123;1/2&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*1/2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*assure-large-number[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(when[\\n\\s]*\\(and[\\n\\s]*\\(numberp[\\n\\s]*n\\)[\\n\\s]*\\(&#62;[\\n\\s]*n[\\n\\s]*73\\)\\)[\\n\\s]*\\(return[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Enter[\\n\\s]*a[\\n\\s]*number~:\\[~;[\\n\\s]*a[\\n\\s]*bit[\\n\\s]*larger[\\n\\s]*than[\\n\\s]*~D~\\]\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"~\\*~A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(numberp[\\n\\s]*n\\)[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Type[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(read\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assure-large-number[\\n\\s]*10000\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10000[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assure-large-number[\\n\\s]*'a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*ASSURE-LARGE-NUMBER:[\\n\\s]*A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Enter[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number:[\\n\\s]*\\\\IN&#123;88&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*88[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assure-large-number[\\n\\s]*37\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*ASSURE-LARGE-NUMBER:[\\n\\s]*37[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Enter[\\n\\s]*a[\\n\\s]*number[\\n\\s]*a[\\n\\s]*bit[\\n\\s]*larger[\\n\\s]*than[\\n\\s]*37\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number:[\\n\\s]*\\\\IN&#123;259&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*259[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*not-a-large-number[\\n\\s]*\\(error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(argument[\\n\\s]*:reader[\\n\\s]*not-a-large-number-argument[\\n\\s]*:initarg[\\n\\s]*:argument\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(not-a-large-number-argument[\\n\\s]*condition\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*assure-large-number[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(when[\\n\\s]*\\(and[\\n\\s]*\\(numberp[\\n\\s]*n\\)[\\n\\s]*\\(&#62;[\\n\\s]*n[\\n\\s]*73\\)\\)[\\n\\s]*\\(return[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Enter[\\n\\s]*a[\\n\\s]*number~3\\*~:\\[~;[\\n\\s]*a[\\n\\s]*bit[\\n\\s]*larger[\\n\\s]*than[\\n\\s]*~\\*~D~\\]\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'not-a-large-number[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:argument[\\n\\s]*n[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:ignore[\\n\\s]*\\(numberp[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:ignore[\\n\\s]*n[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:allow-other-keys[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Type[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(read\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assure-large-number[\\n\\s]*'a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*ASSURE-LARGE-NUMBER:[\\n\\s]*A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Enter[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number:[\\n\\s]*\\\\IN&#123;88&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*88[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assure-large-number[\\n\\s]*37\\)[\\n\\s]*\\\\OUT[\\n\\s]*Correctable[\\n\\s]*error[\\n\\s]*in[\\n\\s]*ASSURE-LARGE-NUMBER:[\\n\\s]*A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*Restart[\\n\\s]*options:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Enter[\\n\\s]*a[\\n\\s]*number[\\n\\s]*a[\\n\\s]*bit[\\n\\s]*larger[\\n\\s]*than[\\n\\s]*37\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*large[\\n\\s]*number:[\\n\\s]*\\\\IN&#123;259&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*259"],["\\code\n(cerror \"enter a new value to replace ~*~s\" \n        'not-a-number\n        :argument a)\n\\endcode","\\(cerror[\\n\\s]*\"enter[\\n\\s]*a[\\n\\s]*new[\\n\\s]*value[\\n\\s]*to[\\n\\s]*replace[\\n\\s]*~\\*~s\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'not-a-number[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:argument[\\n\\s]*a\\)"],["\\code\n (setq aardvarks '(sam harry fred))\n*→* (SAM HARRY FRED)\n (check-type aardvarks (array * (3)))\n\\OUT Error: The value of AARDVARKS, (SAM HARRY FRED),\n\\OUT        is not a 3-long array.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use instead.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Use Value: \\IN&#123;#(SAM FRED HARRY)&#125;\n*→* NIL\n aardvarks\n*→* #&#60;ARRAY-T-3 13571&#62;\n (map 'list #'identity aardvarks)\n*→* (SAM FRED HARRY)\n (setq aardvark-count 'foo)\n*→* FOO\n (check-type aardvark-count (integer 0 *) \"A positive integer\")\n\\OUT Error: The value of AARDVARK-COUNT, FOO, is not a positive integer.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use instead.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 2&#125;\n\\endcode","\\(setq[\\n\\s]*aardvarks[\\n\\s]*'\\(sam[\\n\\s]*harry[\\n\\s]*fred\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(SAM[\\n\\s]*HARRY[\\n\\s]*FRED\\)[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*aardvarks[\\n\\s]*\\(array[\\n\\s]*\\*[\\n\\s]*\\(3\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*AARDVARKS,[\\n\\s]*\\(SAM[\\n\\s]*HARRY[\\n\\s]*FRED\\),[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*3-long[\\n\\s]*array\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Use[\\n\\s]*Value:[\\n\\s]*\\\\IN&#123;#\\(SAM[\\n\\s]*FRED[\\n\\s]*HARRY\\)&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*aardvarks[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ARRAY-T-3[\\n\\s]*13571&#62;[\\n\\s]*[\\n\\s]*\\(map[\\n\\s]*'list[\\n\\s]*#'identity[\\n\\s]*aardvarks\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(SAM[\\n\\s]*FRED[\\n\\s]*HARRY\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*aardvark-count[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*aardvark-count[\\n\\s]*\\(integer[\\n\\s]*0[\\n\\s]*\\*\\)[\\n\\s]*\"A[\\n\\s]*positive[\\n\\s]*integer\"\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*AARDVARK-COUNT,[\\n\\s]*FOO,[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*positive[\\n\\s]*integer\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*2&#125;"],["\\code\n (defmacro define-adder (name amount)\n   (check-type name (and symbol (not null)) \"a name for an adder function\")\n   (check-type amount integer)\n   `(defun ,name (x) (+ x ,amount)))\n  \n (macroexpand '(define-adder add3 3))\n*→* (defun add3 (x) (+ x 3))\n \n (macroexpand '(define-adder 7 7))\n\\OUT Error: The value of NAME, 7, is not a name for an adder function.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use instead.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:Continue 1&#125;\n\\OUT Specify a value to use instead.\n\\OUT Type a form to be evaluated and used instead: \\IN&#123;'ADD7&#125;\n*→* (defun add7 (x) (+ x 7))\n \n (macroexpand '(define-adder add5 something))\n\\OUT Error: The value of AMOUNT, SOMETHING, is not an integer.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use instead.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:Continue 1&#125;\n\\OUT Type a form to be evaluated and used instead: \\IN&#123;5&#125;\n*→* (defun add5 (x) (+ x 5))\n \n\\endcode","\\(defmacro[\\n\\s]*define-adder[\\n\\s]*\\(name[\\n\\s]*amount\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*name[\\n\\s]*\\(and[\\n\\s]*symbol[\\n\\s]*\\(not[\\n\\s]*null\\)\\)[\\n\\s]*\"a[\\n\\s]*name[\\n\\s]*for[\\n\\s]*an[\\n\\s]*adder[\\n\\s]*function\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*amount[\\n\\s]*integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(defun[\\n\\s]*,name[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*,amount\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(define-adder[\\n\\s]*add3[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(defun[\\n\\s]*add3[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(define-adder[\\n\\s]*7[\\n\\s]*7\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*NAME,[\\n\\s]*7,[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*name[\\n\\s]*for[\\n\\s]*an[\\n\\s]*adder[\\n\\s]*function\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:Continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*form[\\n\\s]*to[\\n\\s]*be[\\n\\s]*evaluated[\\n\\s]*and[\\n\\s]*used[\\n\\s]*instead:[\\n\\s]*\\\\IN&#123;'ADD7&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(defun[\\n\\s]*add7[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*7\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(define-adder[\\n\\s]*add5[\\n\\s]*something\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*AMOUNT,[\\n\\s]*SOMETHING,[\\n\\s]*is[\\n\\s]*not[\\n\\s]*an[\\n\\s]*integer\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:Continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*form[\\n\\s]*to[\\n\\s]*be[\\n\\s]*evaluated[\\n\\s]*and[\\n\\s]*used[\\n\\s]*instead:[\\n\\s]*\\\\IN&#123;5&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(defun[\\n\\s]*add5[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*5\\)\\)"],["\\code\n (check-type \\param&#123;place&#125; \\param&#123;typespec&#125;)\n \\EQ (assert (typep \\param&#123;place&#125; '\\param&#123;typespec&#125;) (\\param&#123;place&#125;)\n            'type-error :datum \\param&#123;place&#125; :expected-type '\\param&#123;typespec&#125;)\n\\endcode","\\(check-type[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*\\\\param&#123;typespec&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(assert[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*'\\\\param&#123;typespec&#125;\\)[\\n\\s]*\\(\\\\param&#123;place&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'type-error[\\n\\s]*:datum[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*:expected-type[\\n\\s]*'\\\\param&#123;typespec&#125;\\)"],["\\code\n (defun handle-division-conditions (condition)\n   (format t \"Considering condition for division condition handling~%\")\n   (when (and (typep condition 'arithmetic-error)\n              (eq '/ (arithmetic-error-operation condition)))\n     (invoke-debugger condition)))\nHANDLE-DIVISION-CONDITIONS\n (defun handle-other-arithmetic-errors (condition)\n   (format t \"Considering condition for arithmetic condition handling~%\")\n   (when (typep condition 'arithmetic-error)\n     (abort)))\nHANDLE-OTHER-ARITHMETIC-ERRORS\n (define-condition a-condition-with-no-handler (condition) ())\nA-CONDITION-WITH-NO-HANDLER\n (signal 'a-condition-with-no-handler)\nNIL\n (handler-bind ((condition #'handle-division-conditions)\n                  (condition #'handle-other-arithmetic-errors))\n   (signal 'a-condition-with-no-handler))\nConsidering condition for division condition handling\nConsidering condition for arithmetic condition handling\nNIL\n (handler-bind ((arithmetic-error #'handle-division-conditions)\n                  (arithmetic-error #'handle-other-arithmetic-errors))\n   (signal 'arithmetic-error :operation '* :operands '(1.2 b)))\nConsidering condition for division condition handling\nConsidering condition for arithmetic condition handling\nBack to Lisp Toplevel\n\\endcode","\\(defun[\\n\\s]*handle-division-conditions[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Considering[\\n\\s]*condition[\\n\\s]*for[\\n\\s]*division[\\n\\s]*condition[\\n\\s]*handling~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(and[\\n\\s]*\\(typep[\\n\\s]*condition[\\n\\s]*'arithmetic-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'/[\\n\\s]*\\(arithmetic-error-operation[\\n\\s]*condition\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-debugger[\\n\\s]*condition\\)\\)\\)[\\n\\s]*HANDLE-DIVISION-CONDITIONS[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*handle-other-arithmetic-errors[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Considering[\\n\\s]*condition[\\n\\s]*for[\\n\\s]*arithmetic[\\n\\s]*condition[\\n\\s]*handling~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(typep[\\n\\s]*condition[\\n\\s]*'arithmetic-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(abort\\)\\)\\)[\\n\\s]*HANDLE-OTHER-ARITHMETIC-ERRORS[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*a-condition-with-no-handler[\\n\\s]*\\(condition\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*A-CONDITION-WITH-NO-HANDLER[\\n\\s]*[\\n\\s]*\\(signal[\\n\\s]*'a-condition-with-no-handler\\)[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(condition[\\n\\s]*#'handle-division-conditions\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(condition[\\n\\s]*#'handle-other-arithmetic-errors\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(signal[\\n\\s]*'a-condition-with-no-handler\\)\\)[\\n\\s]*Considering[\\n\\s]*condition[\\n\\s]*for[\\n\\s]*division[\\n\\s]*condition[\\n\\s]*handling[\\n\\s]*Considering[\\n\\s]*condition[\\n\\s]*for[\\n\\s]*arithmetic[\\n\\s]*condition[\\n\\s]*handling[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(arithmetic-error[\\n\\s]*#'handle-division-conditions\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(arithmetic-error[\\n\\s]*#'handle-other-arithmetic-errors\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(signal[\\n\\s]*'arithmetic-error[\\n\\s]*:operation[\\n\\s]*'\\*[\\n\\s]*:operands[\\n\\s]*'\\(1\\.2[\\n\\s]*b\\)\\)\\)[\\n\\s]*Considering[\\n\\s]*condition[\\n\\s]*for[\\n\\s]*division[\\n\\s]*condition[\\n\\s]*handling[\\n\\s]*Considering[\\n\\s]*condition[\\n\\s]*for[\\n\\s]*arithmetic[\\n\\s]*condition[\\n\\s]*handling[\\n\\s]*Back[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel"],["\\code\n (setq foo (make-condition 'simple-condition\n                          :format-control \"Hi ~S\"\n                          :format-arguments '(ho)))\n*→* #&#60;SIMPLE-CONDITION 26223553&#62;\n (apply #'format nil (simple-condition-format-control foo)\n                     (simple-condition-format-arguments foo))\n*→* \"Hi HO\"\n\\endcode","\\(setq[\\n\\s]*foo[\\n\\s]*\\(make-condition[\\n\\s]*'simple-condition[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-control[\\n\\s]*\"Hi[\\n\\s]*~S\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-arguments[\\n\\s]*'\\(ho\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;SIMPLE-CONDITION[\\n\\s]*26223553&#62;[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'format[\\n\\s]*nil[\\n\\s]*\\(simple-condition-format-control[\\n\\s]*foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(simple-condition-format-arguments[\\n\\s]*foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Hi[\\n\\s]*HO\""],["\\code\n  (defun foo (x)\n    (let ((result (* x 2)))\n      (if (not (typep result 'fixnum))\n          (warn \"You're using very big numbers.\"))\n      result))\n*→* FOO\n \n  (foo 3)\n*→* 6\n \n  (foo most-positive-fixnum)\n\\OUT Warning: You're using very big numbers.\n*→* 4294967294\n \n  (setq *break-on-signals* t)\n*→* T\n \n  (foo most-positive-fixnum)\n\\OUT Break: Caveat emptor.\n\\OUT To continue, type :CONTINUE followed by an option number.\n\\OUT  1: Return from Break.\n\\OUT  2: Abort to Lisp Toplevel.\n\\OUT Debug&#62; :continue 1\n\\OUT Warning: You're using very big numbers.\n*→* 4294967294\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(result[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(not[\\n\\s]*\\(typep[\\n\\s]*result[\\n\\s]*'fixnum\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"You're[\\n\\s]*using[\\n\\s]*very[\\n\\s]*big[\\n\\s]*numbers\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*result\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*most-positive-fixnum\\)[\\n\\s]*\\\\OUT[\\n\\s]*Warning:[\\n\\s]*You're[\\n\\s]*using[\\n\\s]*very[\\n\\s]*big[\\n\\s]*numbers\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*4294967294[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*break-on-signals\\*[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*most-positive-fixnum\\)[\\n\\s]*\\\\OUT[\\n\\s]*Break:[\\n\\s]*Caveat[\\n\\s]*emptor\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*from[\\n\\s]*Break\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Abort[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*:continue[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*Warning:[\\n\\s]*You're[\\n\\s]*using[\\n\\s]*very[\\n\\s]*big[\\n\\s]*numbers\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*4294967294"],["\\code\n (ignore-errors ;Normally, this would suppress debugger entry\n   (handler-bind ((error #'invoke-debugger)) ;But this forces debugger entry\n     (error \"Foo.\")))\nDebug: Foo.\nTo continue, type :CONTINUE followed by an option number:\n 1: Return to Lisp Toplevel.\nDebug&#62;\n\\endcode","\\(ignore-errors[\\n\\s]*;Normally,[\\n\\s]*this[\\n\\s]*would[\\n\\s]*suppress[\\n\\s]*debugger[\\n\\s]*entry[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(error[\\n\\s]*#'invoke-debugger\\)\\)[\\n\\s]*;But[\\n\\s]*this[\\n\\s]*forces[\\n\\s]*debugger[\\n\\s]*entry[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Foo\\.\"\\)\\)\\)[\\n\\s]*Debug:[\\n\\s]*Foo\\.[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*Debug&#62;"],["\\code\n (break \"You got here with arguments: ~:S.\" '(FOO 37 A))\n\\OUT BREAK: You got here with these arguments: FOO, 37, A.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Return from BREAK.\n\\OUT  2: Top level.\n\\OUT Debug&#62; :CONTINUE 1\n\\OUT Return from BREAK.\n*→* NIL\n \n\\endcode","\\(break[\\n\\s]*\"You[\\n\\s]*got[\\n\\s]*here[\\n\\s]*with[\\n\\s]*arguments:[\\n\\s]*~:S\\.\"[\\n\\s]*'\\(FOO[\\n\\s]*37[\\n\\s]*A\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*BREAK:[\\n\\s]*You[\\n\\s]*got[\\n\\s]*here[\\n\\s]*with[\\n\\s]*these[\\n\\s]*arguments:[\\n\\s]*FOO,[\\n\\s]*37,[\\n\\s]*A\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*from[\\n\\s]*BREAK\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*:CONTINUE[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*Return[\\n\\s]*from[\\n\\s]*BREAK\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defun break (&optional (format-control \"Break\") &rest format-arguments)\n   (with-simple-restart (continue \"Return from BREAK.\")\n     (let ((*debugger-hook* nil))\n       (invoke-debugger\n           (make-condition 'simple-condition\n                           :format-control format-control\n                           :format-arguments format-arguments))))\n   nil)\n\\endcode","\\(defun[\\n\\s]*break[\\n\\s]*\\(&optional[\\n\\s]*\\(format-control[\\n\\s]*\"Break\"\\)[\\n\\s]*&rest[\\n\\s]*format-arguments\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-simple-restart[\\n\\s]*\\(continue[\\n\\s]*\"Return[\\n\\s]*from[\\n\\s]*BREAK\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*debugger-hook\\*[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-debugger[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-condition[\\n\\s]*'simple-condition[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-control[\\n\\s]*format-control[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-arguments[\\n\\s]*format-arguments\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nil\\)"],["\\code\n (defun one-of (choices &optional (prompt \"Choice\"))\n   (let ((n (length choices)) (i))\n     (do ((c choices (cdr c)) (i 1 (+ i 1)))\n         ((null c))\n       (format t \"~&[~D] ~A~%\" i (car c)))\n     (do () ((typep i `(integer 1 ,n)))\n       (format t \"~&~A: \" prompt)\n       (setq i (read))\n       (fresh-line))\n     (nth (- i 1) choices)))\n\n (defun my-debugger (condition me-or-my-encapsulation)\n   (format t \"~&Fooey: ~A\" condition)\n   (let ((restart (one-of (compute-restarts))))\n     (if (not restart) (error \"My debugger got an error.\"))\n     (let ((*debugger-hook* me-or-my-encapsulation))\n       (invoke-restart-interactively restart))))\n \n (let ((*debugger-hook* #'my-debugger))\n   (+ 3 'a))\n\\OUT Fooey: The argument to +, A, is not a number.\n\\OUT  [1] Supply a replacement for A.\n\\OUT  [2] Return to Cloe Toplevel.\n\\OUT Choice: 1\n\\OUT  Form to evaluate and use: (+ 5 'b)\n\\OUT  Fooey: The argument to +, B, is not a number.\n\\OUT  [1] Supply a replacement for B.\n\\OUT  [2] Supply a replacement for A.\n\\OUT  [3] Return to Cloe Toplevel.\n\\OUT Choice: 1\n\\OUT  Form to evaluate and use: 1\n*→* 9\n\\endcode","\\(defun[\\n\\s]*one-of[\\n\\s]*\\(choices[\\n\\s]*&optional[\\n\\s]*\\(prompt[\\n\\s]*\"Choice\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*\\(length[\\n\\s]*choices\\)\\)[\\n\\s]*\\(i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(c[\\n\\s]*choices[\\n\\s]*\\(cdr[\\n\\s]*c\\)\\)[\\n\\s]*\\(i[\\n\\s]*1[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&\\[~D\\][\\n\\s]*~A~%\"[\\n\\s]*i[\\n\\s]*\\(car[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\)[\\n\\s]*\\(\\(typep[\\n\\s]*i[\\n\\s]*`\\(integer[\\n\\s]*1[\\n\\s]*,n\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~A:[\\n\\s]*\"[\\n\\s]*prompt\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*i[\\n\\s]*\\(read\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nth[\\n\\s]*\\(-[\\n\\s]*i[\\n\\s]*1\\)[\\n\\s]*choices\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*my-debugger[\\n\\s]*\\(condition[\\n\\s]*me-or-my-encapsulation\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Fooey:[\\n\\s]*~A\"[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(restart[\\n\\s]*\\(one-of[\\n\\s]*\\(compute-restarts\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(not[\\n\\s]*restart\\)[\\n\\s]*\\(error[\\n\\s]*\"My[\\n\\s]*debugger[\\n\\s]*got[\\n\\s]*an[\\n\\s]*error\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*debugger-hook\\*[\\n\\s]*me-or-my-encapsulation\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-restart-interactively[\\n\\s]*restart\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*debugger-hook\\*[\\n\\s]*#'my-debugger\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*3[\\n\\s]*'a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Fooey:[\\n\\s]*The[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*\\+,[\\n\\s]*A,[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\[1\\][\\n\\s]*Supply[\\n\\s]*a[\\n\\s]*replacement[\\n\\s]*for[\\n\\s]*A\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\[2\\][\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Cloe[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Choice:[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*Form[\\n\\s]*to[\\n\\s]*evaluate[\\n\\s]*and[\\n\\s]*use:[\\n\\s]*\\(\\+[\\n\\s]*5[\\n\\s]*'b\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*Fooey:[\\n\\s]*The[\\n\\s]*argument[\\n\\s]*to[\\n\\s]*\\+,[\\n\\s]*B,[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\[1\\][\\n\\s]*Supply[\\n\\s]*a[\\n\\s]*replacement[\\n\\s]*for[\\n\\s]*B\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\[2\\][\\n\\s]*Supply[\\n\\s]*a[\\n\\s]*replacement[\\n\\s]*for[\\n\\s]*A\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\[3\\][\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Cloe[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Choice:[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*Form[\\n\\s]*to[\\n\\s]*evaluate[\\n\\s]*and[\\n\\s]*use:[\\n\\s]*1[\\n\\s]*\\*\\→\\*[\\n\\s]*9"],["\\code\n *break-on-signals* *→* NIL\n (ignore-errors (error 'simple-error :format-control \"Fooey!\"))\n*→* NIL, #&#60;SIMPLE-ERROR 32207172&#62;\n\n (let ((*break-on-signals* 'error))\n   (ignore-errors (error 'simple-error :format-control \"Fooey!\")))\n\\OUT Break: Fooey!\n\\OUT BREAK entered because of *BREAK-ON-SIGNALS*.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Continue to signal.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Continue to signal.\n*→* NIL, #&#60;SIMPLE-ERROR 32212257&#62;\n\n (let ((*break-on-signals* 'error))\n   (error 'simple-error :format-control \"Fooey!\"))\n\\OUT Break: Fooey!\n\\OUT BREAK entered because of *BREAK-ON-SIGNALS*.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Continue to signal.\n\\OUT  2: Top level.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Continue to signal.\n\\OUT Error: Fooey!\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Top level.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Top level.\n\\endcode","\\*break-on-signals\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(ignore-errors[\\n\\s]*\\(error[\\n\\s]*'simple-error[\\n\\s]*:format-control[\\n\\s]*\"Fooey!\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*#&#60;SIMPLE-ERROR[\\n\\s]*32207172&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*break-on-signals\\*[\\n\\s]*'error\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ignore-errors[\\n\\s]*\\(error[\\n\\s]*'simple-error[\\n\\s]*:format-control[\\n\\s]*\"Fooey!\"\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Break:[\\n\\s]*Fooey![\\n\\s]*\\\\OUT[\\n\\s]*BREAK[\\n\\s]*entered[\\n\\s]*because[\\n\\s]*of[\\n\\s]*\\*BREAK-ON-SIGNALS\\*\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Continue[\\n\\s]*to[\\n\\s]*signal\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Continue[\\n\\s]*to[\\n\\s]*signal\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*#&#60;SIMPLE-ERROR[\\n\\s]*32212257&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*break-on-signals\\*[\\n\\s]*'error\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*'simple-error[\\n\\s]*:format-control[\\n\\s]*\"Fooey!\"\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Break:[\\n\\s]*Fooey![\\n\\s]*\\\\OUT[\\n\\s]*BREAK[\\n\\s]*entered[\\n\\s]*because[\\n\\s]*of[\\n\\s]*\\*BREAK-ON-SIGNALS\\*\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Continue[\\n\\s]*to[\\n\\s]*signal\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Continue[\\n\\s]*to[\\n\\s]*signal\\.[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*Fooey![\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Top[\\n\\s]*level\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Top[\\n\\s]*level\\."],["\\code\n (handler-bind ((unbound-variable #'(lambda ...))\n                (error #'(lambda ...)))\n   ...)\n\\endcode","\\(handler-bind[\\n\\s]*\\(\\(unbound-variable[\\n\\s]*#'\\(lambda[\\n\\s]*\\.\\.\\.\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*#'\\(lambda[\\n\\s]*\\.\\.\\.\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defun trap-error-handler (condition)\n   (format *error-output* \"~&~A~&\" condition)\n   (throw 'trap-errors nil))\n\n (defmacro trap-errors (&rest forms)\n   `(catch 'trap-errors\n      (handler-bind ((error #'trap-error-handler))\n        ,@forms)))\n \n (list (trap-errors (signal \"Foo.\") 1)\n       (trap-errors (error  \"Bar.\") 2)\n       (+ 1 2))\n\\OUT Bar.\n*→* (1 NIL 3)\n\\endcode","\\(defun[\\n\\s]*trap-error-handler[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*\\*error-output\\*[\\n\\s]*\"~&~A~&\"[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'trap-errors[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*trap-errors[\\n\\s]*\\(&rest[\\n\\s]*forms\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(catch[\\n\\s]*'trap-errors[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(error[\\n\\s]*#'trap-error-handler\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,@forms\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(trap-errors[\\n\\s]*\\(signal[\\n\\s]*\"Foo\\.\"\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(trap-errors[\\n\\s]*\\(error[\\n\\s]*[\\n\\s]*\"Bar\\.\"\\)[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Bar\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*NIL[\\n\\s]*3\\)"],["\\code\n  (handler-case \\i&#123;form&#125;\n    (\\i&#123;typespec1&#125; (\\i&#123;var1&#125;) \\i&#123;form1&#125;)\n    (\\i&#123;typespec2&#125; (\\i&#123;var2&#125;) \\i&#123;form2&#125;))\n\\endcode","\\(handler-case[\\n\\s]*\\\\i&#123;form&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;typespec1&#125;[\\n\\s]*\\(\\\\i&#123;var1&#125;\\)[\\n\\s]*\\\\i&#123;form1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;typespec2&#125;[\\n\\s]*\\(\\\\i&#123;var2&#125;\\)[\\n\\s]*\\\\i&#123;form2&#125;\\)\\)"],["\\code\n  (\\param&#123;typespec&#125; (\\param&#123;var&#125;) (declare (ignore \\param&#123;var&#125;)) \\param&#123;form&#125;)\n\\endcode","\\(\\\\param&#123;typespec&#125;[\\n\\s]*\\(\\\\param&#123;var&#125;\\)[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*\\\\param&#123;var&#125;\\)\\)[\\n\\s]*\\\\param&#123;form&#125;\\)"],["\\code\n (defun assess-condition (condition)\n   (handler-case (signal condition)\n     (warning () \"Lots of smoke, but no fire.\")\n     ((or arithmetic-error control-error cell-error stream-error)\n        (condition)\n       (format nil \"~S looks especially bad.\" condition))\n     (serious-condition (condition)\n       (format nil \"~S looks serious.\" condition))\n     (condition () \"Hardly worth mentioning.\")))\n*→* ASSESS-CONDITION\n (assess-condition (make-condition 'stream-error :stream *terminal-io*))\n*→* \"#&#60;STREAM-ERROR 12352256&#62; looks especially bad.\"\n (define-condition random-condition (condition) () \n   (:report (lambda (condition stream)\n              (declare (ignore condition))\n              (princ \"Yow\" stream))))\n*→* RANDOM-CONDITION\n (assess-condition (make-condition 'random-condition))\n*→* \"Hardly worth mentioning.\"\n\\endcode","\\(defun[\\n\\s]*assess-condition[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-case[\\n\\s]*\\(signal[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warning[\\n\\s]*\\(\\)[\\n\\s]*\"Lots[\\n\\s]*of[\\n\\s]*smoke,[\\n\\s]*but[\\n\\s]*no[\\n\\s]*fire\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(or[\\n\\s]*arithmetic-error[\\n\\s]*control-error[\\n\\s]*cell-error[\\n\\s]*stream-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~S[\\n\\s]*looks[\\n\\s]*especially[\\n\\s]*bad\\.\"[\\n\\s]*condition\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(serious-condition[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~S[\\n\\s]*looks[\\n\\s]*serious\\.\"[\\n\\s]*condition\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(condition[\\n\\s]*\\(\\)[\\n\\s]*\"Hardly[\\n\\s]*worth[\\n\\s]*mentioning\\.\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ASSESS-CONDITION[\\n\\s]*[\\n\\s]*\\(assess-condition[\\n\\s]*\\(make-condition[\\n\\s]*'stream-error[\\n\\s]*:stream[\\n\\s]*\\*terminal-io\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"#&#60;STREAM-ERROR[\\n\\s]*12352256&#62;[\\n\\s]*looks[\\n\\s]*especially[\\n\\s]*bad\\.\"[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*random-condition[\\n\\s]*\\(condition\\)[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*condition\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*\"Yow\"[\\n\\s]*stream\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*RANDOM-CONDITION[\\n\\s]*[\\n\\s]*\\(assess-condition[\\n\\s]*\\(make-condition[\\n\\s]*'random-condition\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Hardly[\\n\\s]*worth[\\n\\s]*mentioning\\.\""],["\\code\n (handler-case form\n   (\\i&#123;type1&#125; (\\i&#123;var1&#125;) . \\i&#123;body1&#125;)\n   (\\i&#123;type2&#125; (\\i&#123;var2&#125;) . \\i&#123;body2&#125;) ...)\n\\endcode","\\(handler-case[\\n\\s]*form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;type1&#125;[\\n\\s]*\\(\\\\i&#123;var1&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;type2&#125;[\\n\\s]*\\(\\\\i&#123;var2&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body2&#125;\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (block #1=#:g0001\n   (let ((#2=#:g0002 nil))\n     (tagbody\n       (handler-bind ((\\i&#123;type1&#125; #'(lambda (temp)\n                                       (setq #1# temp)\n                                       (go #3=#:g0003)))\n                      (\\i&#123;type2&#125; #'(lambda (temp)\n                                       (setq #2# temp)\n                                       (go #4=#:g0004))) ...)\n       (return-from #1# form))\n         #3# (return-from #1# (let ((\\i&#123;var1&#125; #2#)) . \\i&#123;body1&#125;))\n         #4# (return-from #1# (let ((\\i&#123;var2&#125; #2#)) . \\i&#123;body2&#125;)) ...)))\n\\endcode","\\(block[\\n\\s]*#1=#:g0001[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(#2=#:g0002[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(\\\\i&#123;type1&#125;[\\n\\s]*#'\\(lambda[\\n\\s]*\\(temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*#1#[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*#3=#:g0003\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;type2&#125;[\\n\\s]*#'\\(lambda[\\n\\s]*\\(temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*#2#[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*#4=#:g0004\\)\\)\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*form\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#3#[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\\\i&#123;var1&#125;[\\n\\s]*#2#\\)\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body1&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#4#[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\\\i&#123;var2&#125;[\\n\\s]*#2#\\)\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body2&#125;\\)\\)[\\n\\s]*\\.\\.\\.\\)\\)\\)"],["\\code\n (handler-case form\n   (\\i&#123;type1&#125; \\i&#123;(var1)&#125; . \\i&#123;body1&#125;)\n   ...\n   (:no-error (\\i&#123;varN-1&#125; \\i&#123;varN-2&#125; ...) . \\i&#123;bodyN&#125;))\n\\endcode","\\(handler-case[\\n\\s]*form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;type1&#125;[\\n\\s]*\\\\i&#123;\\(var1\\)&#125;[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:no-error[\\n\\s]*\\(\\\\i&#123;varN-1&#125;[\\n\\s]*\\\\i&#123;varN-2&#125;[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;bodyN&#125;\\)\\)"],["\\code\n\n (block #1=#:error-return\n  (multiple-value-call #'(lambda (\\i&#123;varN-1&#125; \\i&#123;varN-2&#125; ...) . \\i&#123;bodyN&#125;)\n     (block #2=#:normal-return\n       (return-from #1#\n         (handler-case (return-from #2# form)\n           (\\i&#123;type1&#125; (\\i&#123;var1&#125;) . \\i&#123;body1&#125;) ...)))))\n\\endcode","\\(block[\\n\\s]*#1=#:error-return[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-call[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\\\i&#123;varN-1&#125;[\\n\\s]*\\\\i&#123;varN-2&#125;[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;bodyN&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*#2=#:normal-return[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-case[\\n\\s]*\\(return-from[\\n\\s]*#2#[\\n\\s]*form\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;type1&#125;[\\n\\s]*\\(\\\\i&#123;var1&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body1&#125;\\)[\\n\\s]*\\.\\.\\.\\)\\)\\)\\)\\)"],["\\code\n (defun load-init-file (program)\n   (let ((win nil))\n     (ignore-errors ;if this fails, don't enter debugger\n       (load (merge-pathnames (make-pathname :name program :type :lisp)\n                              (user-homedir-pathname)))\n       (setq win t))\n     (unless win (format t \"~&Init file failed to load.~%\"))\n     win))\n \n (load-init-file \"no-such-program\")\n\\OUT Init file failed to load.\nNIL\n\\endcode","\\(defun[\\n\\s]*load-init-file[\\n\\s]*\\(program\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(win[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ignore-errors[\\n\\s]*;if[\\n\\s]*this[\\n\\s]*fails,[\\n\\s]*don't[\\n\\s]*enter[\\n\\s]*debugger[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(load[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*program[\\n\\s]*:type[\\n\\s]*:lisp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(user-homedir-pathname\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*win[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*win[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Init[\\n\\s]*file[\\n\\s]*failed[\\n\\s]*to[\\n\\s]*load\\.~%\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*win\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(load-init-file[\\n\\s]*\"no-such-program\"\\)[\\n\\s]*\\\\OUT[\\n\\s]*Init[\\n\\s]*file[\\n\\s]*failed[\\n\\s]*to[\\n\\s]*load\\.[\\n\\s]*NIL"],["\\code\n (ignore-errors . \\i&#123;forms&#125;)\n\\endcode","\\(ignore-errors[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;forms&#125;\\)"],["\\code\n (handler-case (progn . \\i&#123;forms&#125;)\n   (error (condition) (values nil condition)))\n\\endcode","\\(handler-case[\\n\\s]*\\(progn[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;forms&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\\(condition\\)[\\n\\s]*\\(values[\\n\\s]*nil[\\n\\s]*condition\\)\\)\\)"],["\\code\n (defmethod print-object ((x c) stream)\n   (if *print-escape* (call-next-method) (\\param&#123;report-name&#125; x stream)))\n\\endcode","\\(defmethod[\\n\\s]*print-object[\\n\\s]*\\(\\(x[\\n\\s]*c\\)[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\*print-escape\\*[\\n\\s]*\\(call-next-method\\)[\\n\\s]*\\(\\\\param&#123;report-name&#125;[\\n\\s]*x[\\n\\s]*stream\\)\\)\\)"],["\\code\n (lambda (condition stream)\n   (declare (ignore condition))\n   (write-string \\param&#123;report-name&#125; stream))\n\\endcode","\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*condition\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*\\\\param&#123;report-name&#125;[\\n\\s]*stream\\)\\)"],["\\code\n(define-condition peg/hole-mismatch \n                  (blocks-world-error)\n                  ((peg-shape  :initarg :peg-shape\n                               :reader peg/hole-mismatch-peg-shape)\n                   (hole-shape :initarg :hole-shape\n                               :reader peg/hole-mismatch-hole-shape))\n  (:report (lambda (condition stream)\n             (format stream \"A ~A peg cannot go in a ~A hole.\"\n                     (peg/hole-mismatch-peg-shape  condition)\n                     (peg/hole-mismatch-hole-shape condition)))))\n\\endcode","\\(define-condition[\\n\\s]*peg/hole-mismatch[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(blocks-world-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(peg-shape[\\n\\s]*[\\n\\s]*:initarg[\\n\\s]*:peg-shape[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:reader[\\n\\s]*peg/hole-mismatch-peg-shape\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(hole-shape[\\n\\s]*:initarg[\\n\\s]*:hole-shape[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:reader[\\n\\s]*peg/hole-mismatch-hole-shape\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"A[\\n\\s]*~A[\\n\\s]*peg[\\n\\s]*cannot[\\n\\s]*go[\\n\\s]*in[\\n\\s]*a[\\n\\s]*~A[\\n\\s]*hole\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(peg/hole-mismatch-peg-shape[\\n\\s]*[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(peg/hole-mismatch-hole-shape[\\n\\s]*condition\\)\\)\\)\\)\\)"],["\\code\n(define-condition machine-error \n                  (error)\n                  ((machine-name :initarg :machine-name\n                                 :reader machine-error-machine-name))\n  (:report (lambda (condition stream)\n             (format stream \"There is a problem with ~A.\"\n                     (machine-error-machine-name condition)))))\n\\endcode","\\(define-condition[\\n\\s]*machine-error[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(machine-name[\\n\\s]*:initarg[\\n\\s]*:machine-name[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:reader[\\n\\s]*machine-error-machine-name\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"There[\\n\\s]*is[\\n\\s]*a[\\n\\s]*problem[\\n\\s]*with[\\n\\s]*~A\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(machine-error-machine-name[\\n\\s]*condition\\)\\)\\)\\)\\)"],["\\code\n(define-condition machine-not-available-error (machine-error) ()\n  (:report (lambda (condition stream)\n             (format stream \"The machine ~A is not available.\"\n                     (machine-error-machine-name condition)))))\n\\endcode","\\(define-condition[\\n\\s]*machine-not-available-error[\\n\\s]*\\(machine-error\\)[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"The[\\n\\s]*machine[\\n\\s]*~A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*available\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(machine-error-machine-name[\\n\\s]*condition\\)\\)\\)\\)\\)"],["\\code\n(define-condition my-favorite-machine-not-available-error\n                  (machine-not-available-error)\n  ((machine-name :initform \"mc.lcs.mit.edu\")))\n\\endcode","\\(define-condition[\\n\\s]*my-favorite-machine-not-available-error[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(machine-not-available-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(machine-name[\\n\\s]*:initform[\\n\\s]*\"mc\\.lcs\\.mit\\.edu\"\\)\\)\\)"],["\\code\n (define-condition ate-too-much (error) \n     ((person :initarg :person :reader ate-too-much-person)\n      (weight :initarg :weight :reader ate-too-much-weight)\n      (kind-of-food :initarg :kind-of-food\n                    :reader :ate-too-much-kind-of-food)))\n*→* ATE-TOO-MUCH\n (define-condition ate-too-much-ice-cream (ate-too-much)\n   ((kind-of-food :initform 'ice-cream)\n    (flavor       :initarg :flavor\n                  :reader ate-too-much-ice-cream-flavor\n                  :initform 'vanilla ))\n   (:report (lambda (condition stream)\n              (format stream \"~A ate too much ~A ice-cream\"\n                      (ate-too-much-person condition)\n                      (ate-too-much-ice-cream-flavor condition)))))\n*→* ATE-TOO-MUCH-ICE-CREAM\n (make-condition 'ate-too-much-ice-cream\n                 :person 'fred\n                 :weight 300\n                 :flavor 'chocolate)\n*→* #&#60;ATE-TOO-MUCH-ICE-CREAM 32236101&#62;\n (format t \"~A\" *)\n\\OUT FRED ate too much CHOCOLATE ice-cream\n*→* NIL\n\\endcode","\\(define-condition[\\n\\s]*ate-too-much[\\n\\s]*\\(error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(person[\\n\\s]*:initarg[\\n\\s]*:person[\\n\\s]*:reader[\\n\\s]*ate-too-much-person\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(weight[\\n\\s]*:initarg[\\n\\s]*:weight[\\n\\s]*:reader[\\n\\s]*ate-too-much-weight\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(kind-of-food[\\n\\s]*:initarg[\\n\\s]*:kind-of-food[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:reader[\\n\\s]*:ate-too-much-kind-of-food\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ATE-TOO-MUCH[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*ate-too-much-ice-cream[\\n\\s]*\\(ate-too-much\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(kind-of-food[\\n\\s]*:initform[\\n\\s]*'ice-cream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flavor[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initarg[\\n\\s]*:flavor[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:reader[\\n\\s]*ate-too-much-ice-cream-flavor[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initform[\\n\\s]*'vanilla[\\n\\s]*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"~A[\\n\\s]*ate[\\n\\s]*too[\\n\\s]*much[\\n\\s]*~A[\\n\\s]*ice-cream\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ate-too-much-person[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ate-too-much-ice-cream-flavor[\\n\\s]*condition\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ATE-TOO-MUCH-ICE-CREAM[\\n\\s]*[\\n\\s]*\\(make-condition[\\n\\s]*'ate-too-much-ice-cream[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:person[\\n\\s]*'fred[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:weight[\\n\\s]*300[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:flavor[\\n\\s]*'chocolate\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;ATE-TOO-MUCH-ICE-CREAM[\\n\\s]*32236101&#62;[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~A\"[\\n\\s]*\\*\\)[\\n\\s]*\\\\OUT[\\n\\s]*FRED[\\n\\s]*ate[\\n\\s]*too[\\n\\s]*much[\\n\\s]*CHOCOLATE[\\n\\s]*ice-cream[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defvar *oops-count* 0)\n\n (setq a (make-condition 'simple-error\n                         :format-control \"This is your ~:R error.\"\n                         :format-arguments (list (incf *oops-count*))))\n*→* #&#60;SIMPLE-ERROR 32245104&#62;\n \n (format t \"~&~A~%\" a)\n\\OUT This is your first error.\n*→* NIL\n \n (error a)\n\\OUT Error: This is your first error.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Return to Lisp Toplevel.\n\\OUT Debug&#62; \n\\endcode","\\(defvar[\\n\\s]*\\*oops-count\\*[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*\\(make-condition[\\n\\s]*'simple-error[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-control[\\n\\s]*\"This[\\n\\s]*is[\\n\\s]*your[\\n\\s]*~:R[\\n\\s]*error\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:format-arguments[\\n\\s]*\\(list[\\n\\s]*\\(incf[\\n\\s]*\\*oops-count\\*\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;SIMPLE-ERROR[\\n\\s]*32245104&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~A~%\"[\\n\\s]*a\\)[\\n\\s]*\\\\OUT[\\n\\s]*This[\\n\\s]*is[\\n\\s]*your[\\n\\s]*first[\\n\\s]*error\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*This[\\n\\s]*is[\\n\\s]*your[\\n\\s]*first[\\n\\s]*error\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;"],["\\code\n ;; One possible way in which an interactive debugger might present\n ;; restarts to the user.\n (defun invoke-a-restart ()\n   (let ((restarts (compute-restarts)))\n     (do ((i 0 (+ i 1)) (r restarts (cdr r))) ((null r))\n       (format t \"~&~D: ~A~%\" i (car r)))\n     (let ((n nil) (k (length restarts)))\n       (loop (when (and (typep n 'integer) (&#62;= n 0) (&#60; n k))\n               (return t))\n             (format t \"~&Option: \")\n             (setq n (read))\n             (fresh-line))\n       (invoke-restart-interactively (nth n restarts)))))\n\n (restart-case (invoke-a-restart)\n   (one () 1)\n   (two () 2)\n   (nil () :report \"Who knows?\" 'anonymous)\n   (one () 'I)\n   (two () 'II))\n\\OUT 0: ONE\n\\OUT 1: TWO\n\\OUT 2: Who knows?\n\\OUT 3: ONE\n\\OUT 4: TWO\n\\OUT 5: Return to Lisp Toplevel.\n\\OUT Option: \\IN&#123;4&#125;\n*→* II\n \n ;; Note that in addition to user-defined restart points, COMPUTE-RESTARTS\n ;; also returns information about any system-supplied restarts, such as\n ;; the \"Return to Lisp Toplevel\" restart offered above.\n \n\\endcode",";;[\\n\\s]*One[\\n\\s]*possible[\\n\\s]*way[\\n\\s]*in[\\n\\s]*which[\\n\\s]*an[\\n\\s]*interactive[\\n\\s]*debugger[\\n\\s]*might[\\n\\s]*present[\\n\\s]*[\\n\\s]*;;[\\n\\s]*restarts[\\n\\s]*to[\\n\\s]*the[\\n\\s]*user\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*invoke-a-restart[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(restarts[\\n\\s]*\\(compute-restarts\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(i[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*1\\)\\)[\\n\\s]*\\(r[\\n\\s]*restarts[\\n\\s]*\\(cdr[\\n\\s]*r\\)\\)\\)[\\n\\s]*\\(\\(null[\\n\\s]*r\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~D:[\\n\\s]*~A~%\"[\\n\\s]*i[\\n\\s]*\\(car[\\n\\s]*r\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*nil\\)[\\n\\s]*\\(k[\\n\\s]*\\(length[\\n\\s]*restarts\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(when[\\n\\s]*\\(and[\\n\\s]*\\(typep[\\n\\s]*n[\\n\\s]*'integer\\)[\\n\\s]*\\(&#62;=[\\n\\s]*n[\\n\\s]*0\\)[\\n\\s]*\\(&#60;[\\n\\s]*n[\\n\\s]*k\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Option:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(read\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-restart-interactively[\\n\\s]*\\(nth[\\n\\s]*n[\\n\\s]*restarts\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(restart-case[\\n\\s]*\\(invoke-a-restart\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(one[\\n\\s]*\\(\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(two[\\n\\s]*\\(\\)[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nil[\\n\\s]*\\(\\)[\\n\\s]*:report[\\n\\s]*\"Who[\\n\\s]*knows\\?\"[\\n\\s]*'anonymous\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(one[\\n\\s]*\\(\\)[\\n\\s]*'I\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(two[\\n\\s]*\\(\\)[\\n\\s]*'II\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*0:[\\n\\s]*ONE[\\n\\s]*\\\\OUT[\\n\\s]*1:[\\n\\s]*TWO[\\n\\s]*\\\\OUT[\\n\\s]*2:[\\n\\s]*Who[\\n\\s]*knows\\?[\\n\\s]*\\\\OUT[\\n\\s]*3:[\\n\\s]*ONE[\\n\\s]*\\\\OUT[\\n\\s]*4:[\\n\\s]*TWO[\\n\\s]*\\\\OUT[\\n\\s]*5:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Option:[\\n\\s]*\\\\IN&#123;4&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*II[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*in[\\n\\s]*addition[\\n\\s]*to[\\n\\s]*user-defined[\\n\\s]*restart[\\n\\s]*points,[\\n\\s]*COMPUTE-RESTARTS[\\n\\s]*[\\n\\s]*;;[\\n\\s]*also[\\n\\s]*returns[\\n\\s]*information[\\n\\s]*about[\\n\\s]*any[\\n\\s]*system-supplied[\\n\\s]*restarts,[\\n\\s]*such[\\n\\s]*as[\\n\\s]*[\\n\\s]*;;[\\n\\s]*the[\\n\\s]*\"Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\"[\\n\\s]*restart[\\n\\s]*offered[\\n\\s]*above\\."],["\\code\n (restart-case\n     (let ((r (find-restart 'my-restart)))\n       (format t \"~S is named ~S\" r (restart-name r)))\n   (my-restart () nil))\n\\OUT #&#60;RESTART 32307325&#62; is named MY-RESTART\n*→* NIL\n (find-restart 'my-restart)\n*→* NIL\n\\endcode","\\(restart-case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'my-restart\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*named[\\n\\s]*~S\"[\\n\\s]*r[\\n\\s]*\\(restart-name[\\n\\s]*r\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(my-restart[\\n\\s]*\\(\\)[\\n\\s]*nil\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#&#60;RESTART[\\n\\s]*32307325&#62;[\\n\\s]*is[\\n\\s]*named[\\n\\s]*MY-RESTART[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-restart[\\n\\s]*'my-restart\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (find-restart \\param&#123;identifier&#125;)\n \\EQ (find \\param&#123;identifier&#125; (compute-restarts) :key :restart-name)\n\\endcode","\\(find-restart[\\n\\s]*\\\\param&#123;identifier&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(find[\\n\\s]*\\\\param&#123;identifier&#125;[\\n\\s]*\\(compute-restarts\\)[\\n\\s]*:key[\\n\\s]*:restart-name\\)"],["\\code\n (defun add3 (x) (check-type x number) (+ x 3))\n \n (foo 'seven)\n\\OUT Error: The value SEVEN was not of type NUMBER.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a different value to use.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;(invoke-restart 'store-value 7)&#125;\n*→* 10\n\\endcode","\\(defun[\\n\\s]*add3[\\n\\s]*\\(x\\)[\\n\\s]*\\(check-type[\\n\\s]*x[\\n\\s]*number\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*'seven\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*SEVEN[\\n\\s]*was[\\n\\s]*not[\\n\\s]*of[\\n\\s]*type[\\n\\s]*NUMBER\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*different[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;\\(invoke-restart[\\n\\s]*'store-value[\\n\\s]*7\\)&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n (apply #'invoke-restart \\i&#123;restart&#125; \\i&#123;arguments&#125;)\n\\endcode","\\(apply[\\n\\s]*#'invoke-restart[\\n\\s]*\\\\i&#123;restart&#125;[\\n\\s]*\\\\i&#123;arguments&#125;\\)"],["\\code\n (defun add3 (x) (check-type x number) (+ x 3))\n \n (add3 'seven)\n\\OUT Error: The value SEVEN was not of type NUMBER.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a different value to use.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;(invoke-restart-interactively 'store-value)&#125;\n\\OUT Type a form to evaluate and use: \\IN&#123;7&#125;\n*→* 10\n\\endcode","\\(defun[\\n\\s]*add3[\\n\\s]*\\(x\\)[\\n\\s]*\\(check-type[\\n\\s]*x[\\n\\s]*number\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(add3[\\n\\s]*'seven\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*SEVEN[\\n\\s]*was[\\n\\s]*not[\\n\\s]*of[\\n\\s]*type[\\n\\s]*NUMBER\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*different[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;\\(invoke-restart-interactively[\\n\\s]*'store-value\\)&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*a[\\n\\s]*form[\\n\\s]*to[\\n\\s]*evaluate[\\n\\s]*and[\\n\\s]*use:[\\n\\s]*\\\\IN&#123;7&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n% (defun choose-an-interactive-restart ()\n%   (restart-bind\n%       ((optional-value\n%          #'(lambda (&optional (x 'default)) x)\n%          :report-function #'(lambda (stream)\n%                               (format stream \"Return an optional value\")))\\kern-3pt\n%        (return-value\n%          #'identity\n%          :report-function #'(lambda (stream)\n%                               (format stream \"Return the given value\"))\n%          :interactive-function #'(lambda ()\n%                                    (format t \"Enter a value to return: \")\n%                                  (list (eval (read))))))\n%     (let ((cases (compute-restarts))\n%           (*print-structure* t)\n%           (index -1))\n%       (dolist (case cases)\n%         (format t \"~&~D: ~A~%\" (incf index) case))\n%       (format t \"Please enter restart to invoke: \")\n%       (invoke-restart-interactively (nth (eval (read)) cases)))))\n%*→*\\ CHOOSE-AN-INTERACTIVE-RESTART\n% (choose-an-interactive-restart)\n%*→*\\ 0: Return an optional value\n%1: Return the given value\n%2: Abort to Lisp Top Level\n%Please enter restart to invoke: 0\n%DEFAULT\n% (choose-an-interactive-restart)\n%*→*\\ 0: Return an optional value\n%1: Return the given value\n%2: Abort to Lisp Top Level\n%Please enter restart to invoke: 1\n%Enter a value to return: t\n%T\n%\\endcode","%[\\n\\s]*\\(defun[\\n\\s]*choose-an-interactive-restart[\\n\\s]*\\(\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(restart-bind[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(optional-value[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\(x[\\n\\s]*'default\\)\\)[\\n\\s]*x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report-function[\\n\\s]*#'\\(lambda[\\n\\s]*\\(stream\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"Return[\\n\\s]*an[\\n\\s]*optional[\\n\\s]*value\"\\)\\)\\)\\\\kern-3pt[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-value[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'identity[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report-function[\\n\\s]*#'\\(lambda[\\n\\s]*\\(stream\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"Return[\\n\\s]*the[\\n\\s]*given[\\n\\s]*value\"\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:interactive-function[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Enter[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*return:[\\n\\s]*\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(eval[\\n\\s]*\\(read\\)\\)\\)\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(cases[\\n\\s]*\\(compute-restarts\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-structure\\*[\\n\\s]*t\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(index[\\n\\s]*-1\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(case[\\n\\s]*cases\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~D:[\\n\\s]*~A~%\"[\\n\\s]*\\(incf[\\n\\s]*index\\)[\\n\\s]*case\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Please[\\n\\s]*enter[\\n\\s]*restart[\\n\\s]*to[\\n\\s]*invoke:[\\n\\s]*\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-restart-interactively[\\n\\s]*\\(nth[\\n\\s]*\\(eval[\\n\\s]*\\(read\\)\\)[\\n\\s]*cases\\)\\)\\)\\)\\)[\\n\\s]*%\\*\\→\\*\\\\[\\n\\s]*CHOOSE-AN-INTERACTIVE-RESTART[\\n\\s]*%[\\n\\s]*\\(choose-an-interactive-restart\\)[\\n\\s]*%\\*\\→\\*\\\\[\\n\\s]*0:[\\n\\s]*Return[\\n\\s]*an[\\n\\s]*optional[\\n\\s]*value[\\n\\s]*%1:[\\n\\s]*Return[\\n\\s]*the[\\n\\s]*given[\\n\\s]*value[\\n\\s]*%2:[\\n\\s]*Abort[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Top[\\n\\s]*Level[\\n\\s]*%Please[\\n\\s]*enter[\\n\\s]*restart[\\n\\s]*to[\\n\\s]*invoke:[\\n\\s]*0[\\n\\s]*%DEFAULT[\\n\\s]*%[\\n\\s]*\\(choose-an-interactive-restart\\)[\\n\\s]*%\\*\\→\\*\\\\[\\n\\s]*0:[\\n\\s]*Return[\\n\\s]*an[\\n\\s]*optional[\\n\\s]*value[\\n\\s]*%1:[\\n\\s]*Return[\\n\\s]*the[\\n\\s]*given[\\n\\s]*value[\\n\\s]*%2:[\\n\\s]*Abort[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Top[\\n\\s]*Level[\\n\\s]*%Please[\\n\\s]*enter[\\n\\s]*restart[\\n\\s]*to[\\n\\s]*invoke:[\\n\\s]*1[\\n\\s]*%Enter[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*return:[\\n\\s]*t[\\n\\s]*%T[\\n\\s]*%"],["\\code\n (lambda (stream) (write-string value stream))\n\\endcode","\\(lambda[\\n\\s]*\\(stream\\)[\\n\\s]*\\(write-string[\\n\\s]*value[\\n\\s]*stream\\)\\)"],["\\code\n (format t \"~&~S -- ~A~%\" ':continue some-restart)\n\\endcode","\\(format[\\n\\s]*t[\\n\\s]*\"~&~S[\\n\\s]*--[\\n\\s]*~A~%\"[\\n\\s]*':continue[\\n\\s]*some-restart\\)"],["\\code\n :CONTINUE -- Return to command level\n\\endcode",":CONTINUE[\\n\\s]*--[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*command[\\n\\s]*level"],["\\code\n (restart-case\n     (handler-bind ((error #'(lambda (c)\n                             (declare (ignore condition))\n                             (invoke-restart 'my-restart 7))))\n       (error \"Foo.\"))\n   (my-restart (&optional v) v))\n*→* 7\n\n (define-condition food-error (error) ())\n*→* FOOD-ERROR\n (define-condition bad-tasting-sundae (food-error) \n   ((ice-cream :initarg :ice-cream :reader bad-tasting-sundae-ice-cream)\n    (sauce :initarg :sauce :reader bad-tasting-sundae-sauce)\n    (topping :initarg :topping :reader bad-tasting-sundae-topping))\n   (:report (lambda (condition stream)\n              (format stream \"Bad tasting sundae with ~S, ~S, and ~S\"\n                      (bad-tasting-sundae-ice-cream condition)\n                      (bad-tasting-sundae-sauce condition)\n                      (bad-tasting-sundae-topping condition)))))\n*→* BAD-TASTING-SUNDAE\n (defun all-start-with-same-letter (symbol1 symbol2 symbol3)\n   (let ((first-letter (char (symbol-name symbol1) 0)))\n     (and (eql first-letter (char (symbol-name symbol2) 0))\n          (eql first-letter (char (symbol-name symbol3) 0)))))\n*→* ALL-START-WITH-SAME-LETTER\n (defun read-new-value ()\n   (format t \"Enter a new value: \")\n   (multiple-value-list (eval (read))))\n*→* READ-NEW-VALUE\\eject\n (defun verify-or-fix-perfect-sundae (ice-cream sauce topping)\n   (do ()\n      ((all-start-with-same-letter ice-cream sauce topping))\n     (restart-case\n       (error 'bad-tasting-sundae\n              :ice-cream ice-cream\n              :sauce sauce\n              :topping topping)\n       (use-new-ice-cream (new-ice-cream)\n         :report \"Use a new ice cream.\"\n         :interactive read-new-value  \n         (setq ice-cream new-ice-cream))\n       (use-new-sauce (new-sauce)\n         :report \"Use a new sauce.\"\n         :interactive read-new-value\n         (setq sauce new-sauce))\n       (use-new-topping (new-topping)\n         :report \"Use a new topping.\"\n         :interactive read-new-value\n         (setq topping new-topping))))\n   (values ice-cream sauce topping))\n*→* VERIFY-OR-FIX-PERFECT-SUNDAE\n (verify-or-fix-perfect-sundae 'vanilla 'caramel 'cherry)\n\\OUT Error: Bad tasting sundae with VANILLA, CARAMEL, and CHERRY.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Use a new ice cream.\n\\OUT  2: Use a new sauce.\n\\OUT  3: Use a new topping.\n\\OUT  4: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n\\OUT Use a new ice cream.\n\\OUT Enter a new ice cream: \\IN&#123;'chocolate&#125;\n*→* CHOCOLATE, CARAMEL, CHERRY\n\\endcode","\\(restart-case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(error[\\n\\s]*#'\\(lambda[\\n\\s]*\\(c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*condition\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-restart[\\n\\s]*'my-restart[\\n\\s]*7\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Foo\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(my-restart[\\n\\s]*\\(&optional[\\n\\s]*v\\)[\\n\\s]*v\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*food-error[\\n\\s]*\\(error\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOOD-ERROR[\\n\\s]*[\\n\\s]*\\(define-condition[\\n\\s]*bad-tasting-sundae[\\n\\s]*\\(food-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(ice-cream[\\n\\s]*:initarg[\\n\\s]*:ice-cream[\\n\\s]*:reader[\\n\\s]*bad-tasting-sundae-ice-cream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sauce[\\n\\s]*:initarg[\\n\\s]*:sauce[\\n\\s]*:reader[\\n\\s]*bad-tasting-sundae-sauce\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(topping[\\n\\s]*:initarg[\\n\\s]*:topping[\\n\\s]*:reader[\\n\\s]*bad-tasting-sundae-topping\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:report[\\n\\s]*\\(lambda[\\n\\s]*\\(condition[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"Bad[\\n\\s]*tasting[\\n\\s]*sundae[\\n\\s]*with[\\n\\s]*~S,[\\n\\s]*~S,[\\n\\s]*and[\\n\\s]*~S\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(bad-tasting-sundae-ice-cream[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(bad-tasting-sundae-sauce[\\n\\s]*condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(bad-tasting-sundae-topping[\\n\\s]*condition\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BAD-TASTING-SUNDAE[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*all-start-with-same-letter[\\n\\s]*\\(symbol1[\\n\\s]*symbol2[\\n\\s]*symbol3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(first-letter[\\n\\s]*\\(char[\\n\\s]*\\(symbol-name[\\n\\s]*symbol1\\)[\\n\\s]*0\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(eql[\\n\\s]*first-letter[\\n\\s]*\\(char[\\n\\s]*\\(symbol-name[\\n\\s]*symbol2\\)[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*first-letter[\\n\\s]*\\(char[\\n\\s]*\\(symbol-name[\\n\\s]*symbol3\\)[\\n\\s]*0\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ALL-START-WITH-SAME-LETTER[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*read-new-value[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Enter[\\n\\s]*a[\\n\\s]*new[\\n\\s]*value:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-list[\\n\\s]*\\(eval[\\n\\s]*\\(read\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*READ-NEW-VALUE\\\\eject[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*verify-or-fix-perfect-sundae[\\n\\s]*\\(ice-cream[\\n\\s]*sauce[\\n\\s]*topping\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(all-start-with-same-letter[\\n\\s]*ice-cream[\\n\\s]*sauce[\\n\\s]*topping\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(restart-case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*'bad-tasting-sundae[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:ice-cream[\\n\\s]*ice-cream[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:sauce[\\n\\s]*sauce[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:topping[\\n\\s]*topping\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(use-new-ice-cream[\\n\\s]*\\(new-ice-cream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report[\\n\\s]*\"Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*ice[\\n\\s]*cream\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:interactive[\\n\\s]*read-new-value[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*ice-cream[\\n\\s]*new-ice-cream\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(use-new-sauce[\\n\\s]*\\(new-sauce\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report[\\n\\s]*\"Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*sauce\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:interactive[\\n\\s]*read-new-value[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*sauce[\\n\\s]*new-sauce\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(use-new-topping[\\n\\s]*\\(new-topping\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report[\\n\\s]*\"Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*topping\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:interactive[\\n\\s]*read-new-value[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*topping[\\n\\s]*new-topping\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*ice-cream[\\n\\s]*sauce[\\n\\s]*topping\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VERIFY-OR-FIX-PERFECT-SUNDAE[\\n\\s]*[\\n\\s]*\\(verify-or-fix-perfect-sundae[\\n\\s]*'vanilla[\\n\\s]*'caramel[\\n\\s]*'cherry\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*Bad[\\n\\s]*tasting[\\n\\s]*sundae[\\n\\s]*with[\\n\\s]*VANILLA,[\\n\\s]*CARAMEL,[\\n\\s]*and[\\n\\s]*CHERRY\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*ice[\\n\\s]*cream\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*sauce\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*3:[\\n\\s]*Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*topping\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*4:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Use[\\n\\s]*a[\\n\\s]*new[\\n\\s]*ice[\\n\\s]*cream\\.[\\n\\s]*\\\\OUT[\\n\\s]*Enter[\\n\\s]*a[\\n\\s]*new[\\n\\s]*ice[\\n\\s]*cream:[\\n\\s]*\\\\IN&#123;'chocolate&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*CHOCOLATE,[\\n\\s]*CARAMEL,[\\n\\s]*CHERRY"],["\\code\n (restart-case \\i&#123;expression&#125;\n    (\\i&#123;name1&#125; \\i&#123;arglist1&#125; ...\\i&#123;options1&#125;... . \\i&#123;body1&#125;)\n    (\\i&#123;name2&#125; \\i&#123;arglist2&#125; ...\\i&#123;options2&#125;... . \\i&#123;body2&#125;))\n\\endcode","\\(restart-case[\\n\\s]*\\\\i&#123;expression&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;name1&#125;[\\n\\s]*\\\\i&#123;arglist1&#125;[\\n\\s]*\\.\\.\\.\\\\i&#123;options1&#125;\\.\\.\\.[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\i&#123;name2&#125;[\\n\\s]*\\\\i&#123;arglist2&#125;[\\n\\s]*\\.\\.\\.\\\\i&#123;options2&#125;\\.\\.\\.[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body2&#125;\\)\\)"],["\\code\n (block #1=#:g0001\n   (let ((#2=#:g0002 nil))\n        (tagbody\n        (restart-bind ((name1 #'(lambda (&rest temp)\n                                (setq #2# temp)\n                                (go #3=#:g0003))\n                          ...\\i&#123;slightly-transformed-options1&#125;...)\n                       (name2 #'(lambda (&rest temp)\n                                (setq #2# temp)\n                                (go #4=#:g0004))\n                          ...\\i&#123;slightly-transformed-options2&#125;...))\n        (return-from #1# \\i&#123;expression&#125;))\n          #3# (return-from #1#\n                  (apply #'(lambda \\i&#123;arglist1&#125; . \\i&#123;body1&#125;) #2#))\n          #4# (return-from #1#\n                  (apply #'(lambda \\i&#123;arglist2&#125; . \\i&#123;body2&#125;) #2#)))))\n\\endcode","\\(block[\\n\\s]*#1=#:g0001[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(#2=#:g0002[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(restart-bind[\\n\\s]*\\(\\(name1[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&rest[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*#2#[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*#3=#:g0003\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\\\i&#123;slightly-transformed-options1&#125;\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(name2[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&rest[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*#2#[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*#4=#:g0004\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\\\i&#123;slightly-transformed-options2&#125;\\.\\.\\.\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*\\\\i&#123;expression&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#3#[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'\\(lambda[\\n\\s]*\\\\i&#123;arglist1&#125;[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body1&#125;\\)[\\n\\s]*#2#\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#4#[\\n\\s]*\\(return-from[\\n\\s]*#1#[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'\\(lambda[\\n\\s]*\\\\i&#123;arglist2&#125;[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;body2&#125;\\)[\\n\\s]*#2#\\)\\)\\)\\)\\)"],["\\code\n (restart-case (signal fred)\n   (a ...)\n   (b ...))\n \\EQ\n (restart-case\n     (with-condition-restarts fred \n                              (list (find-restart 'a) \n                                    (find-restart 'b))\n       (signal fred))\n   (a ...)\n   (b ...))\n\\endcode","\\(restart-case[\\n\\s]*\\(signal[\\n\\s]*fred\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*\\.\\.\\.\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(restart-case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-condition-restarts[\\n\\s]*fred[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(find-restart[\\n\\s]*'a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-restart[\\n\\s]*'b\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(signal[\\n\\s]*fred\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*\\.\\.\\.\\)\\)"],["\\code\n (restart-case \n     (loop for restart in (compute-restarts)\n               collect (restart-name restart))\n   (case1 () :report \"Return 1.\" 1)\n   (nil   () :report \"Return 2.\" 2)\n   (case3 () :report \"Return 3.\" 3)\n   (case1 () :report \"Return 4.\" 4))\n*→* (CASE1 NIL CASE3 CASE1 ABORT)\n ;; In the example above the restart named ABORT was not created\n ;; explicitly, but was implicitly supplied by the system.\n\\endcode","\\(restart-case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*restart[\\n\\s]*in[\\n\\s]*\\(compute-restarts\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(restart-name[\\n\\s]*restart\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case1[\\n\\s]*\\(\\)[\\n\\s]*:report[\\n\\s]*\"Return[\\n\\s]*1\\.\"[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nil[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\)[\\n\\s]*:report[\\n\\s]*\"Return[\\n\\s]*2\\.\"[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case3[\\n\\s]*\\(\\)[\\n\\s]*:report[\\n\\s]*\"Return[\\n\\s]*3\\.\"[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case1[\\n\\s]*\\(\\)[\\n\\s]*:report[\\n\\s]*\"Return[\\n\\s]*4\\.\"[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(CASE1[\\n\\s]*NIL[\\n\\s]*CASE3[\\n\\s]*CASE1[\\n\\s]*ABORT\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*In[\\n\\s]*the[\\n\\s]*example[\\n\\s]*above[\\n\\s]*the[\\n\\s]*restart[\\n\\s]*named[\\n\\s]*ABORT[\\n\\s]*was[\\n\\s]*not[\\n\\s]*created[\\n\\s]*[\\n\\s]*;;[\\n\\s]*explicitly,[\\n\\s]*but[\\n\\s]*was[\\n\\s]*implicitly[\\n\\s]*supplied[\\n\\s]*by[\\n\\s]*the[\\n\\s]*system\\."],["\\code\n (defun read-eval-print-loop (level)\n   (with-simple-restart (abort \"Exit command level ~D.\" level)\n     (loop\n       (with-simple-restart (abort \"Return to command level ~D.\" level)\n         (let ((form (prog2 (fresh-line) (read) (fresh-line))))\n           (prin1 (eval form)))))))\n*→* READ-EVAL-PRINT-LOOP\n (read-eval-print-loop 1)\n (+ 'a 3)\n\\OUT Error: The argument, A, to the function + was of the wrong type.\n\\OUT        The function expected a number.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use this time.\n\\OUT  2: Return to command level 1.\n\\OUT  3: Exit command level 1.\n\\OUT  4: Return to Lisp Toplevel.\n\\endcode","\\(defun[\\n\\s]*read-eval-print-loop[\\n\\s]*\\(level\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-simple-restart[\\n\\s]*\\(abort[\\n\\s]*\"Exit[\\n\\s]*command[\\n\\s]*level[\\n\\s]*~D\\.\"[\\n\\s]*level\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-simple-restart[\\n\\s]*\\(abort[\\n\\s]*\"Return[\\n\\s]*to[\\n\\s]*command[\\n\\s]*level[\\n\\s]*~D\\.\"[\\n\\s]*level\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(form[\\n\\s]*\\(prog2[\\n\\s]*\\(fresh-line\\)[\\n\\s]*\\(read\\)[\\n\\s]*\\(fresh-line\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*\\(eval[\\n\\s]*form\\)\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*READ-EVAL-PRINT-LOOP[\\n\\s]*[\\n\\s]*\\(read-eval-print-loop[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*'a[\\n\\s]*3\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*argument,[\\n\\s]*A,[\\n\\s]*to[\\n\\s]*the[\\n\\s]*function[\\n\\s]*\\+[\\n\\s]*was[\\n\\s]*of[\\n\\s]*the[\\n\\s]*wrong[\\n\\s]*type\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*The[\\n\\s]*function[\\n\\s]*expected[\\n\\s]*a[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*this[\\n\\s]*time\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*command[\\n\\s]*level[\\n\\s]*1\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*3:[\\n\\s]*Exit[\\n\\s]*command[\\n\\s]*level[\\n\\s]*1\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*4:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\."],["\\code\n (defun compute-fixnum-power-of-2 (x)\n   (with-simple-restart (nil \"Give up on computing 2&#123;\\hat&#125;~D.\" x)\n     (let ((result 1))\n       (dotimes (i x result)\n         (setq result (* 2 result))\n         (unless (fixnump result)\n           (error \"Power of 2 is too large.\"))))))\nCOMPUTE-FIXNUM-POWER-OF-2\n (defun compute-power-of-2 (x)\n   (or (compute-fixnum-power-of-2 x) 'something big))\nCOMPUTE-POWER-OF-2\n (compute-power-of-2 10)\n1024\n (compute-power-of-2 10000)\n\\OUT Error: Power of 2 is too large.\n\\OUT To continue, type :CONTINUE followed by an option number.\n\\OUT  1: Give up on computing 2&#123;\\hat&#125;10000.\n\\OUT  2: Return to Lisp Toplevel\n\\OUT Debug&#62; \\IN&#123;:continue 1&#125;\n*→* SOMETHING-BIG\n\\endcode","\\(defun[\\n\\s]*compute-fixnum-power-of-2[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-simple-restart[\\n\\s]*\\(nil[\\n\\s]*\"Give[\\n\\s]*up[\\n\\s]*on[\\n\\s]*computing[\\n\\s]*2&#123;\\\\hat&#125;~D\\.\"[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(result[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*x[\\n\\s]*result\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*result[\\n\\s]*\\(\\*[\\n\\s]*2[\\n\\s]*result\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(fixnump[\\n\\s]*result\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Power[\\n\\s]*of[\\n\\s]*2[\\n\\s]*is[\\n\\s]*too[\\n\\s]*large\\.\"\\)\\)\\)\\)\\)\\)[\\n\\s]*COMPUTE-FIXNUM-POWER-OF-2[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*compute-power-of-2[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(compute-fixnum-power-of-2[\\n\\s]*x\\)[\\n\\s]*'something[\\n\\s]*big\\)\\)[\\n\\s]*COMPUTE-POWER-OF-2[\\n\\s]*[\\n\\s]*\\(compute-power-of-2[\\n\\s]*10\\)[\\n\\s]*1024[\\n\\s]*[\\n\\s]*\\(compute-power-of-2[\\n\\s]*10000\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*Power[\\n\\s]*of[\\n\\s]*2[\\n\\s]*is[\\n\\s]*too[\\n\\s]*large\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Give[\\n\\s]*up[\\n\\s]*on[\\n\\s]*computing[\\n\\s]*2&#123;\\\\hat&#125;10000\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:continue[\\n\\s]*1&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*SOMETHING-BIG"],["\\code\n (defmacro with-simple-restart ((restart-name format-control\n                                              &rest format-arguments)\n                                &body forms)\n   `(restart-case (progn ,@forms)\n      (,restart-name ()\n          :report (lambda (stream)\n                    (format stream ,format-control ,@format-arguments))\n         (values nil t))))\n\\endcode","\\(defmacro[\\n\\s]*with-simple-restart[\\n\\s]*\\(\\(restart-name[\\n\\s]*format-control[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&rest[\\n\\s]*format-arguments\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&body[\\n\\s]*forms\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(restart-case[\\n\\s]*\\(progn[\\n\\s]*,@forms\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(,restart-name[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report[\\n\\s]*\\(lambda[\\n\\s]*\\(stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*,format-control[\\n\\s]*,@format-arguments\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*nil[\\n\\s]*t\\)\\)\\)\\)"],["\\code\n (let ((x 3))\n   (handler-bind ((error #'(lambda (c)\n                             (let ((r (find-restart 'continue c)))\n                               (when r (invoke-restart r))))))\n     (cond ((not (floatp x))\n            (cerror \"Try floating it.\" \"~D is not a float.\" x)\n            (float x))\n           (t x)))) *→* 3.0\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(error[\\n\\s]*#'\\(lambda[\\n\\s]*\\(c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'continue[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*r[\\n\\s]*\\(invoke-restart[\\n\\s]*r\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(not[\\n\\s]*\\(floatp[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Try[\\n\\s]*floating[\\n\\s]*it\\.\"[\\n\\s]*\"~D[\\n\\s]*is[\\n\\s]*not[\\n\\s]*a[\\n\\s]*float\\.\"[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(float[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0"],["\\code\n (defvar *all-quiet* nil) *→* *ALL-QUIET*\n (defvar *saved-warnings* '()) *→* *SAVED-WARNINGS*\n (defun quiet-warning-handler (c)\n   (when *all-quiet*\n     (let ((r (find-restart 'muffle-warning c)))\n       (when r \n         (push c *saved-warnings*)\n         (invoke-restart r)))))\n*→* CUSTOM-WARNING-HANDLER\n (defmacro with-quiet-warnings (&body forms)\n   `(let ((*all-quiet* t)\n          (*saved-warnings* '()))\n      (handler-bind ((warning #'quiet-warning-handler))\n        ,@forms\n        *saved-warnings*)))\n*→* WITH-QUIET-WARNINGS\n (setq saved\n   (with-quiet-warnings\n     (warn \"Situation #1.\")\n     (let ((*all-quiet* nil))\n       (warn \"Situation #2.\"))\n     (warn \"Situation #3.\")))\n\\OUT Warning: Situation #2.\n*→* (#&#60;SIMPLE-WARNING 42744421&#62; #&#60;SIMPLE-WARNING 42744365&#62;)\n (dolist (s saved) (format t \"~&~A~%\" s))\n\\OUT Situation #3.\n\\OUT Situation #1.\n*→* NIL\n\\endcode","\\(defvar[\\n\\s]*\\*all-quiet\\*[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*ALL-QUIET\\*[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*saved-warnings\\*[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*SAVED-WARNINGS\\*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*quiet-warning-handler[\\n\\s]*\\(c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\*all-quiet\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'muffle-warning[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*r[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*c[\\n\\s]*\\*saved-warnings\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-restart[\\n\\s]*r\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CUSTOM-WARNING-HANDLER[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*with-quiet-warnings[\\n\\s]*\\(&body[\\n\\s]*forms\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(let[\\n\\s]*\\(\\(\\*all-quiet\\*[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*saved-warnings\\*[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(warning[\\n\\s]*#'quiet-warning-handler\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,@forms[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*saved-warnings\\*\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*WITH-QUIET-WARNINGS[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*saved[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-quiet-warnings[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"Situation[\\n\\s]*#1\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*all-quiet\\*[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"Situation[\\n\\s]*#2\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"Situation[\\n\\s]*#3\\.\"\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Warning:[\\n\\s]*Situation[\\n\\s]*#2\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;SIMPLE-WARNING[\\n\\s]*42744421&#62;[\\n\\s]*#&#60;SIMPLE-WARNING[\\n\\s]*42744365&#62;\\)[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(s[\\n\\s]*saved\\)[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~A~%\"[\\n\\s]*s\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Situation[\\n\\s]*#3\\.[\\n\\s]*\\\\OUT[\\n\\s]*Situation[\\n\\s]*#1\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defun type-error-auto-coerce (c)\n   (when (typep c 'type-error)\n     (let ((r (find-restart 'store-value c)))\n       (handler-case (let ((v (coerce (type-error-datum c)\n                                      (type-error-expected-type c))))\n                       (invoke-restart r v))\n         (error ()))))) *→* TYPE-ERROR-AUTO-COERCE\n (let ((x 3))\n   (handler-bind ((type-error #'type-error-auto-coerce))\n     (check-type x float)\n     x)) *→* 3.0\n\\endcode","\\(defun[\\n\\s]*type-error-auto-coerce[\\n\\s]*\\(c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(typep[\\n\\s]*c[\\n\\s]*'type-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'store-value[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-case[\\n\\s]*\\(let[\\n\\s]*\\(\\(v[\\n\\s]*\\(coerce[\\n\\s]*\\(type-error-datum[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(type-error-expected-type[\\n\\s]*c\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(invoke-restart[\\n\\s]*r[\\n\\s]*v\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\\(\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TYPE-ERROR-AUTO-COERCE[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(type-error[\\n\\s]*#'type-error-auto-coerce\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*x[\\n\\s]*float\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0"],["\\code\n;;; Example of the ABORT retart\n\n (defmacro abort-on-error (&body forms)\n   `(handler-bind ((error #'abort))\n      ,@forms)) *→* ABORT-ON-ERROR\n (abort-on-error (+ 3 5)) *→* 8\n (abort-on-error (error \"You lose.\"))\n\\OUT Returned to Lisp Top Level.\n\n;;; Example of the CONTINUE restart\n\n (defun real-sqrt (n)\n   (when (minusp n)\n     (setq n (- n))\n     (cerror \"Return sqrt(~D) instead.\" \"Tried to take sqrt(-~D).\" n))\n   (sqrt n))\n\n (real-sqrt 4) *→* 2\n (real-sqrt -9)\n\\OUT Error: Tried to take sqrt(-9).\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Return sqrt(9) instead.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;(continue)&#125;\n\\OUT Return sqrt(9) instead.\n*→* 3\n \n (handler-bind ((error #'(lambda (c) (continue))))\n   (real-sqrt -9)) *→* 3\n\n;;; Example of the MUFFLE-WARNING restart\n\n (defun count-down (x)\n   (do ((counter x (1- counter)))\n       ((= counter 0) 'done)\n     (when (= counter 1)\n       (warn \"Almost done\"))\n     (format t \"~&~D~%\" counter)))\n*→* COUNT-DOWN\n (count-down 3)\n\\OUT 3\n\\OUT 2\n\\OUT Warning: Almost done\n\\OUT 1\n*→* DONE\n (defun ignore-warnings-while-counting (x)\n   (handler-bind ((warning #'ignore-warning))\n     (count-down x)))\n*→* IGNORE-WARNINGS-WHILE-COUNTING\n (defun ignore-warning (condition)\n   (declare (ignore condition))\n   (muffle-warning))\n*→* IGNORE-WARNING\n (ignore-warnings-while-counting 3)\n\\OUT 3\n\\OUT 2\n\\OUT 1\n*→* DONE\n\n;;; Example of the STORE-VALUE and USE-VALUE restarts\n\n (defun careful-symbol-value (symbol)\n   (check-type symbol symbol)\n   (restart-case (if (boundp symbol)\n                     (return-from careful-symbol-value \n                                  (symbol-value symbol))\n                     (error 'unbound-variable\n                            :name symbol))\n     (use-value (value)\n       :report \"Specify a value to use this time.\"\n       value)\n     (store-value (value)\n       :report \"Specify a value to store and use in the future.\"\n       (setf (symbol-value symbol) value))))\n (setq a 1234) *→* 1234\n (careful-symbol-value 'a) *→* 1234\n (makunbound 'a) *→* A\n (careful-symbol-value 'a)\n\\OUT Error: A is not bound.\n\\OUT To continue, type :CONTINUE followed by an option number.\n\\OUT  1: Specify a value to use this time.\n\\OUT  2: Specify a value to store and use in the future.\n\\OUT  3: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;(use-value 12)&#125;\n*→* 12\n (careful-symbol-value 'a)\n\\OUT Error: A is not bound.\n\\OUT To continue, type :CONTINUE followed by an option number.\n\\OUT   1: Specify a value to use this time.\n\\OUT   2: Specify a value to store and use in the future.\n\\OUT   3: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;(store-value 24)&#125;\n*→* 24\n (careful-symbol-value 'a)\n*→* 24\n\n;;; Example of the USE-VALUE restart\n\n (defun add-symbols-with-default (default &rest symbols)\n   (handler-bind ((sys:unbound-symbol\n                    #'(lambda (c)\n                        (declare (ignore c)) \n                        (use-value default))))\n     (apply #'+ (mapcar #'careful-symbol-value symbols))))\n*→* ADD-SYMBOLS-WITH-DEFAULT\n (setq x 1 y 2) *→* 2\n (add-symbols-with-default 3 'x 'y 'z) *→* 6\n\n\n\\endcode",";;;[\\n\\s]*Example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*ABORT[\\n\\s]*retart[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*abort-on-error[\\n\\s]*\\(&body[\\n\\s]*forms\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(handler-bind[\\n\\s]*\\(\\(error[\\n\\s]*#'abort\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,@forms\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ABORT-ON-ERROR[\\n\\s]*[\\n\\s]*\\(abort-on-error[\\n\\s]*\\(\\+[\\n\\s]*3[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*8[\\n\\s]*[\\n\\s]*\\(abort-on-error[\\n\\s]*\\(error[\\n\\s]*\"You[\\n\\s]*lose\\.\"\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Returned[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Top[\\n\\s]*Level\\.[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*CONTINUE[\\n\\s]*restart[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*real-sqrt[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(minusp[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(-[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Return[\\n\\s]*sqrt\\(~D\\)[\\n\\s]*instead\\.\"[\\n\\s]*\"Tried[\\n\\s]*to[\\n\\s]*take[\\n\\s]*sqrt\\(-~D\\)\\.\"[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(real-sqrt[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(real-sqrt[\\n\\s]*-9\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*Tried[\\n\\s]*to[\\n\\s]*take[\\n\\s]*sqrt\\(-9\\)\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Return[\\n\\s]*sqrt\\(9\\)[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;\\(continue\\)&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Return[\\n\\s]*sqrt\\(9\\)[\\n\\s]*instead\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(error[\\n\\s]*#'\\(lambda[\\n\\s]*\\(c\\)[\\n\\s]*\\(continue\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(real-sqrt[\\n\\s]*-9\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*MUFFLE-WARNING[\\n\\s]*restart[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*count-down[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(counter[\\n\\s]*x[\\n\\s]*\\(1-[\\n\\s]*counter\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*counter[\\n\\s]*0\\)[\\n\\s]*'done\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(=[\\n\\s]*counter[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"Almost[\\n\\s]*done\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~D~%\"[\\n\\s]*counter\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*COUNT-DOWN[\\n\\s]*[\\n\\s]*\\(count-down[\\n\\s]*3\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*Warning:[\\n\\s]*Almost[\\n\\s]*done[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\*\\→\\*[\\n\\s]*DONE[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*ignore-warnings-while-counting[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(warning[\\n\\s]*#'ignore-warning\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(count-down[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*IGNORE-WARNINGS-WHILE-COUNTING[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*ignore-warning[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*condition\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(muffle-warning\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*IGNORE-WARNING[\\n\\s]*[\\n\\s]*\\(ignore-warnings-while-counting[\\n\\s]*3\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\*\\→\\*[\\n\\s]*DONE[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*STORE-VALUE[\\n\\s]*and[\\n\\s]*USE-VALUE[\\n\\s]*restarts[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*careful-symbol-value[\\n\\s]*\\(symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*symbol[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(restart-case[\\n\\s]*\\(if[\\n\\s]*\\(boundp[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*careful-symbol-value[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*symbol\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*'unbound-variable[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*symbol\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(use-value[\\n\\s]*\\(value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report[\\n\\s]*\"Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*this[\\n\\s]*time\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(store-value[\\n\\s]*\\(value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:report[\\n\\s]*\"Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*store[\\n\\s]*and[\\n\\s]*use[\\n\\s]*in[\\n\\s]*the[\\n\\s]*future\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*symbol\\)[\\n\\s]*value\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1234\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1234[\\n\\s]*[\\n\\s]*\\(careful-symbol-value[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1234[\\n\\s]*[\\n\\s]*\\(makunbound[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(careful-symbol-value[\\n\\s]*'a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*bound\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*this[\\n\\s]*time\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*store[\\n\\s]*and[\\n\\s]*use[\\n\\s]*in[\\n\\s]*the[\\n\\s]*future\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*3:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;\\(use-value[\\n\\s]*12\\)&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*12[\\n\\s]*[\\n\\s]*\\(careful-symbol-value[\\n\\s]*'a\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*A[\\n\\s]*is[\\n\\s]*not[\\n\\s]*bound\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*this[\\n\\s]*time\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*store[\\n\\s]*and[\\n\\s]*use[\\n\\s]*in[\\n\\s]*the[\\n\\s]*future\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*3:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;\\(store-value[\\n\\s]*24\\)&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*24[\\n\\s]*[\\n\\s]*\\(careful-symbol-value[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*24[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*USE-VALUE[\\n\\s]*restart[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*add-symbols-with-default[\\n\\s]*\\(default[\\n\\s]*&rest[\\n\\s]*symbols\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(sys:unbound-symbol[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(use-value[\\n\\s]*default\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'\\+[\\n\\s]*\\(mapcar[\\n\\s]*#'careful-symbol-value[\\n\\s]*symbols\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ADD-SYMBOLS-WITH-DEFAULT[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*1[\\n\\s]*y[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(add-symbols-with-default[\\n\\s]*3[\\n\\s]*'x[\\n\\s]*'y[\\n\\s]*'z\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6"],["\\code\n (abort condition) \\EQ (invoke-restart 'abort)\n (muffle-warning)  \\EQ (invoke-restart 'muffle-warning)\n (continue)        \\EQ (let ((r (find-restart 'continue))) (if r (invoke-restart r)))\n (use-value \\param&#123;x&#125;) \\EQ (let ((r (find-restart 'use-value))) (if r (invoke-restart r \\param&#123;x&#125;)))\n (store-value x) \\EQ (let ((r (find-restart 'store-value))) (if r (invoke-restart r \\param&#123;x&#125;)))\n\\endcode","\\(abort[\\n\\s]*condition\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(invoke-restart[\\n\\s]*'abort\\)[\\n\\s]*[\\n\\s]*\\(muffle-warning\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(invoke-restart[\\n\\s]*'muffle-warning\\)[\\n\\s]*[\\n\\s]*\\(continue\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'continue\\)\\)\\)[\\n\\s]*\\(if[\\n\\s]*r[\\n\\s]*\\(invoke-restart[\\n\\s]*r\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(use-value[\\n\\s]*\\\\param&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'use-value\\)\\)\\)[\\n\\s]*\\(if[\\n\\s]*r[\\n\\s]*\\(invoke-restart[\\n\\s]*r[\\n\\s]*\\\\param&#123;x&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(store-value[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(find-restart[\\n\\s]*'store-value\\)\\)\\)[\\n\\s]*\\(if[\\n\\s]*r[\\n\\s]*\\(invoke-restart[\\n\\s]*r[\\n\\s]*\\\\param&#123;x&#125;\\)\\)\\)"],["\\code\n (cons 1 2) *→* (1 . 2)\n (cons 1 nil) *→* (1)\n (cons nil 2) *→* (NIL . 2)\n (cons nil nil) *→* (NIL)\n (cons 1 (cons 2 (cons 3 (cons 4 nil)))) *→* (1 2 3 4)\n (cons 'a 'b) *→* (A . B)\n (cons 'a (cons 'b (cons 'c '\\empty))) *→* (A B C)\n (cons 'a '(b c d)) *→* (A B C D)\n\\endcode","\\(cons[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*nil[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*nil[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*\\(cons[\\n\\s]*2[\\n\\s]*\\(cons[\\n\\s]*3[\\n\\s]*\\(cons[\\n\\s]*4[\\n\\s]*nil\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\.[\\n\\s]*B\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*\\(cons[\\n\\s]*'b[\\n\\s]*\\(cons[\\n\\s]*'c[\\n\\s]*'\\\\empty\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'\\(b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)"],["\\code\n (consp nil) *→ false*\n (consp (cons 1 2)) *→ true*\n\\endcode","\\(consp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(consp[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (consp '()) \\EQ (consp 'nil) *→ false*\n\\endcode","\\(consp[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(consp[\\n\\s]*'nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (consp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'cons) \\EQ (not (typep \\param&#123;object&#125; 'atom)) \\EQ (typep \\param&#123;object&#125; '(not atom))\n\\endcode","\\(consp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'cons\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'atom\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'\\(not[\\n\\s]*atom\\)\\)"],["\\code\n (atom 'sss) *→ true*\n (atom (cons 1 2)) *→ false*\n (atom nil) *→ true*\n (atom '()) *→ true*\n (atom 3) *→ true*\n\\endcode","\\(atom[\\n\\s]*'sss\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(atom[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(atom[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(atom[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(atom[\\n\\s]*3\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (atom \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'atom) \\EQ (not (consp \\param&#123;object&#125;))\n \\EQ (not (typep \\param&#123;object&#125; 'cons)) \\EQ (typep \\param&#123;object&#125; '(not cons))\n\\endcode","\\(atom[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'atom\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(consp[\\n\\s]*\\\\param&#123;object&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'cons\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'\\(not[\\n\\s]*cons\\)\\)"],["\\code\n (defparameter *some-list* (list* 'one 'two 'three 'four)) *→* *some-list*\n *some-list* *→* (ONE TWO THREE . FOUR)\n (rplaca *some-list* 'uno) *→* (UNO TWO THREE . FOUR)\n *some-list* *→* (UNO TWO THREE . FOUR)\n (rplacd (last *some-list*) (list 'IV)) *→* (THREE IV)\n *some-list* *→* (UNO TWO THREE IV)\n\\endcode","\\(defparameter[\\n\\s]*\\*some-list\\*[\\n\\s]*\\(list\\*[\\n\\s]*'one[\\n\\s]*'two[\\n\\s]*'three[\\n\\s]*'four\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*some-list\\*[\\n\\s]*[\\n\\s]*\\*some-list\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ONE[\\n\\s]*TWO[\\n\\s]*THREE[\\n\\s]*\\.[\\n\\s]*FOUR\\)[\\n\\s]*[\\n\\s]*\\(rplaca[\\n\\s]*\\*some-list\\*[\\n\\s]*'uno\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(UNO[\\n\\s]*TWO[\\n\\s]*THREE[\\n\\s]*\\.[\\n\\s]*FOUR\\)[\\n\\s]*[\\n\\s]*\\*some-list\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(UNO[\\n\\s]*TWO[\\n\\s]*THREE[\\n\\s]*\\.[\\n\\s]*FOUR\\)[\\n\\s]*[\\n\\s]*\\(rplacd[\\n\\s]*\\(last[\\n\\s]*\\*some-list\\*\\)[\\n\\s]*\\(list[\\n\\s]*'IV\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(THREE[\\n\\s]*IV\\)[\\n\\s]*[\\n\\s]*\\*some-list\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(UNO[\\n\\s]*TWO[\\n\\s]*THREE[\\n\\s]*IV\\)"],["\\code\n (car nil) *→* NIL  \n (cdr '(1 . 2)) *→* 2\n (cdr '(1 2)) *→* (2)\n (cadr '(1 2)) *→* 2 \n (car '(a b c)) *→* A\n (cdr '(a b c)) *→* (B C)\n\\endcode","\\(car[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cdr[\\n\\s]*'\\(1[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(cdr[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2\\)[\\n\\s]*[\\n\\s]*\\(cadr[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(cdr[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(B[\\n\\s]*C\\)"],["\\code\n(car \\i&#123;x&#125;)    \\EQ (first \\i&#123;x&#125;)\n(cadr \\i&#123;x&#125;)   \\EQ (second \\i&#123;x&#125;) \\EQ (car (cdr \\i&#123;x&#125;))\n(caddr \\i&#123;x&#125;)  \\EQ (third \\i&#123;x&#125;)  \\EQ (car (cdr (cdr \\i&#123;x&#125;)))\n(cadddr \\i&#123;x&#125;) \\EQ (fourth \\i&#123;x&#125;) \\EQ (car (cdr (cdr (cdr \\i&#123;x&#125;))))\n\\endcode","\\(car[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(first[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\(cadr[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(second[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*\\(cdr[\\n\\s]*\\\\i&#123;x&#125;\\)\\)[\\n\\s]*\\(caddr[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(third[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*\\(cdr[\\n\\s]*\\(cdr[\\n\\s]*\\\\i&#123;x&#125;\\)\\)\\)[\\n\\s]*\\(cadddr[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(fourth[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*\\(cdr[\\n\\s]*\\(cdr[\\n\\s]*\\(cdr[\\n\\s]*\\\\i&#123;x&#125;\\)\\)\\)\\)"],["\\code\n (setq object (list (cons 1 \"one\")\n                    (cons 2 (list 'a 'b 'c))))\n*→* ((1 . \"one\") (2 A B C))\n (setq object-too object) *→* ((1 . \"one\") (2 A B C))\n (setq copy-as-list (copy-list object))\n (setq copy-as-alist (copy-alist object))\n (setq copy-as-tree (copy-tree object))\n (eq object object-too) *→ true*\n (eq copy-as-tree object) *→ false*\n (eql copy-as-tree object) *→ false*\n (equal copy-as-tree object) *→ true*\n (setf (first (cdr (second object))) \"a\"\n       (car (second object)) \"two\"\n       (car object) '(one . 1)) *→* (ONE . 1)\n object *→* ((ONE . 1) (\"two\" \"a\" B C))\n object-too *→* ((ONE . 1) (\"two\" \"a\" B C))\n copy-as-list *→* ((1 . \"one\") (\"two\" \"a\" B C))\n copy-as-alist *→* ((1 . \"one\") (2 \"a\" B C))\n copy-as-tree *→* ((1 . \"one\") (2 A B C)) \n\\endcode","\\(setq[\\n\\s]*object[\\n\\s]*\\(list[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*\"one\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*2[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*object-too[\\n\\s]*object\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*copy-as-list[\\n\\s]*\\(copy-list[\\n\\s]*object\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*copy-as-alist[\\n\\s]*\\(copy-alist[\\n\\s]*object\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*copy-as-tree[\\n\\s]*\\(copy-tree[\\n\\s]*object\\)\\)[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*object[\\n\\s]*object-too\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*copy-as-tree[\\n\\s]*object\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*copy-as-tree[\\n\\s]*object\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*copy-as-tree[\\n\\s]*object\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(first[\\n\\s]*\\(cdr[\\n\\s]*\\(second[\\n\\s]*object\\)\\)\\)[\\n\\s]*\"a\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(second[\\n\\s]*object\\)\\)[\\n\\s]*\"two\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*object\\)[\\n\\s]*'\\(one[\\n\\s]*\\.[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ONE[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*object[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(ONE[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(\"two\"[\\n\\s]*\"a\"[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*[\\n\\s]*object-too[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(ONE[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(\"two\"[\\n\\s]*\"a\"[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*[\\n\\s]*copy-as-list[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(\"two\"[\\n\\s]*\"a\"[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*[\\n\\s]*copy-as-alist[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\"a\"[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*[\\n\\s]*copy-as-tree[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)\\)"],["\\code\n (sublis '((x . 100) (z . zprime))\n         '(plus x (minus g z x p) 4 . x))\n*→* (PLUS 100 (MINUS G ZPRIME 100 P) 4 . 100)\n (sublis '(((+ x y) . (- x y)) ((- x y) . (+ x y)))\n         '(* (/ (+ x y) (+ x p)) (- x y))\n         :test #'equal)\n*→* (* (/ (- X Y) (+ X P)) (+ X Y))\n (setq tree1 '(1 (1 2) ((1 2 3)) (((1 2 3 4)))))\n*→* (1 (1 2) ((1 2 3)) (((1 2 3 4))))\n (sublis '((3 . \"three\")) tree1) \n*→* (1 (1 2) ((1 2 \"three\")) (((1 2 \"three\" 4))))\n (sublis '((t . \"string\"))\n          (sublis '((1 . \"\") (4 . 44)) tree1)\n          :key #'stringp)\n*→* (\"string\" (\"string\" 2) ((\"string\" 2 3)) (((\"string\" 2 3 44))))\n tree1 *→* (1 (1 2) ((1 2 3)) (((1 2 3 4))))\n (setq tree2 '(\"one\" (\"one\" \"two\") ((\"one\" \"Two\" \"three\"))))\n*→* (\"one\" (\"one\" \"two\") ((\"one\" \"Two\" \"three\"))) \n (sublis '((\"two\" . 2)) tree2) \n*→* (\"one\" (\"one\" \"two\") ((\"one\" \"Two\" \"three\"))) \n tree2 *→* (\"one\" (\"one\" \"two\") ((\"one\" \"Two\" \"three\"))) \n (sublis '((\"two\" . 2)) tree2 :test 'equal) \n*→* (\"one\" (\"one\" 2) ((\"one\" \"Two\" \"three\"))) \n\n (nsublis '((t . 'temp))\n           tree1\n           :key #'(lambda (x) (or (atom x) (&#60; (list-length x) 3))))\n*→* ((QUOTE TEMP) (QUOTE TEMP) QUOTE TEMP) \n\\endcode","\\(sublis[\\n\\s]*'\\(\\(x[\\n\\s]*\\.[\\n\\s]*100\\)[\\n\\s]*\\(z[\\n\\s]*\\.[\\n\\s]*zprime\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(plus[\\n\\s]*x[\\n\\s]*\\(minus[\\n\\s]*g[\\n\\s]*z[\\n\\s]*x[\\n\\s]*p\\)[\\n\\s]*4[\\n\\s]*\\.[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PLUS[\\n\\s]*100[\\n\\s]*\\(MINUS[\\n\\s]*G[\\n\\s]*ZPRIME[\\n\\s]*100[\\n\\s]*P\\)[\\n\\s]*4[\\n\\s]*\\.[\\n\\s]*100\\)[\\n\\s]*[\\n\\s]*\\(sublis[\\n\\s]*'\\(\\(\\(\\+[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\.[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*\\(\\(-[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\.[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\*[\\n\\s]*\\(/[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*p\\)\\)[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\*[\\n\\s]*\\(/[\\n\\s]*\\(-[\\n\\s]*X[\\n\\s]*Y\\)[\\n\\s]*\\(\\+[\\n\\s]*X[\\n\\s]*P\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*X[\\n\\s]*Y\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tree1[\\n\\s]*'\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(sublis[\\n\\s]*'\\(\\(3[\\n\\s]*\\.[\\n\\s]*\"three\"\\)\\)[\\n\\s]*tree1\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*\"three\"\\)\\)[\\n\\s]*\\(\\(\\(1[\\n\\s]*2[\\n\\s]*\"three\"[\\n\\s]*4\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(sublis[\\n\\s]*'\\(\\(t[\\n\\s]*\\.[\\n\\s]*\"string\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sublis[\\n\\s]*'\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"\"\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*44\\)\\)[\\n\\s]*tree1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'stringp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"string\"[\\n\\s]*\\(\"string\"[\\n\\s]*2\\)[\\n\\s]*\\(\\(\"string\"[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\(\\(\"string\"[\\n\\s]*2[\\n\\s]*3[\\n\\s]*44\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*tree1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tree2[\\n\\s]*'\\(\"one\"[\\n\\s]*\\(\"one\"[\\n\\s]*\"two\"\\)[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\"Two\"[\\n\\s]*\"three\"\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(\"one\"[\\n\\s]*\"two\"\\)[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\"Two\"[\\n\\s]*\"three\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sublis[\\n\\s]*'\\(\\(\"two\"[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*tree2\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(\"one\"[\\n\\s]*\"two\"\\)[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\"Two\"[\\n\\s]*\"three\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*tree2[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(\"one\"[\\n\\s]*\"two\"\\)[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\"Two\"[\\n\\s]*\"three\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sublis[\\n\\s]*'\\(\\(\"two\"[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*tree2[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(\"one\"[\\n\\s]*2\\)[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\"Two\"[\\n\\s]*\"three\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nsublis[\\n\\s]*'\\(\\(t[\\n\\s]*\\.[\\n\\s]*'temp\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*tree1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(or[\\n\\s]*\\(atom[\\n\\s]*x\\)[\\n\\s]*\\(&#60;[\\n\\s]*\\(list-length[\\n\\s]*x\\)[\\n\\s]*3\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(QUOTE[\\n\\s]*TEMP\\)[\\n\\s]*\\(QUOTE[\\n\\s]*TEMP\\)[\\n\\s]*QUOTE[\\n\\s]*TEMP\\)"],["\\code\n (defun test-it (fn)\n   (let* ((shared-piece (list 'a 'b))\n          (data (list shared-piece shared-piece)))\n     (funcall fn '((a . b) (b . a)) data)))\n (test-it #'sublis) *→* ((B A) (B A))\n (test-it #'nsublis) *→* ((A B) (A B))\n\\endcode","\\(defun[\\n\\s]*test-it[\\n\\s]*\\(fn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(shared-piece[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(data[\\n\\s]*\\(list[\\n\\s]*shared-piece[\\n\\s]*shared-piece\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*fn[\\n\\s]*'\\(\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*\\(b[\\n\\s]*\\.[\\n\\s]*a\\)\\)[\\n\\s]*data\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(test-it[\\n\\s]*#'sublis\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(B[\\n\\s]*A\\)[\\n\\s]*\\(B[\\n\\s]*A\\)\\)[\\n\\s]*[\\n\\s]*\\(test-it[\\n\\s]*#'nsublis\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(A[\\n\\s]*B\\)[\\n\\s]*\\(A[\\n\\s]*B\\)\\)"],["\\code\n (setq tree1 '(1 (1 2) (1 2 3) (1 2 3 4))) *→* (1 (1 2) (1 2 3) (1 2 3 4))\n (subst \"two\" 2 tree1) *→* (1 (1 \"two\") (1 \"two\" 3) (1 \"two\" 3 4))\n (subst \"five\" 5 tree1) *→* (1 (1 2) (1 2 3) (1 2 3 4))\n (eq tree1 (subst \"five\" 5 tree1)) *→* \\term&#123;implementation-dependent&#125;\n (subst 'tempest 'hurricane\n        '(shakespeare wrote (the hurricane)))\n*→* (SHAKESPEARE WROTE (THE TEMPEST))\n (subst 'foo 'nil '(shakespeare wrote (twelfth night)))\n*→* (SHAKESPEARE WROTE (TWELFTH NIGHT . FOO) . FOO)\n (subst '(a . cons) '(old . pair)\n        '((old . spice) ((old . shoes) old . pair) (old . pair))\n        :test #'equal)\n*→* ((OLD . SPICE) ((OLD . SHOES) A . CONS) (A . CONS))\n\n (subst-if 5 #'listp tree1) *→* 5\n (subst-if-not '(x) #'consp tree1) \n*→* (1 X)\n\n tree1 *→* (1 (1 2) (1 2 3) (1 2 3 4))\n (nsubst 'x 3 tree1 :key #'(lambda (y) (and (listp y) (third y)))) \n*→* (1 (1 2) X X)\n tree1 *→* (1 (1 2) X X)\n\\endcode","\\(setq[\\n\\s]*tree1[\\n\\s]*'\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(subst[\\n\\s]*\"two\"[\\n\\s]*2[\\n\\s]*tree1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*\"two\"\\)[\\n\\s]*\\(1[\\n\\s]*\"two\"[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*\"two\"[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(subst[\\n\\s]*\"five\"[\\n\\s]*5[\\n\\s]*tree1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*tree1[\\n\\s]*\\(subst[\\n\\s]*\"five\"[\\n\\s]*5[\\n\\s]*tree1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(subst[\\n\\s]*'tempest[\\n\\s]*'hurricane[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(shakespeare[\\n\\s]*wrote[\\n\\s]*\\(the[\\n\\s]*hurricane\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(SHAKESPEARE[\\n\\s]*WROTE[\\n\\s]*\\(THE[\\n\\s]*TEMPEST\\)\\)[\\n\\s]*[\\n\\s]*\\(subst[\\n\\s]*'foo[\\n\\s]*'nil[\\n\\s]*'\\(shakespeare[\\n\\s]*wrote[\\n\\s]*\\(twelfth[\\n\\s]*night\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(SHAKESPEARE[\\n\\s]*WROTE[\\n\\s]*\\(TWELFTH[\\n\\s]*NIGHT[\\n\\s]*\\.[\\n\\s]*FOO\\)[\\n\\s]*\\.[\\n\\s]*FOO\\)[\\n\\s]*[\\n\\s]*\\(subst[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*cons\\)[\\n\\s]*'\\(old[\\n\\s]*\\.[\\n\\s]*pair\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(old[\\n\\s]*\\.[\\n\\s]*spice\\)[\\n\\s]*\\(\\(old[\\n\\s]*\\.[\\n\\s]*shoes\\)[\\n\\s]*old[\\n\\s]*\\.[\\n\\s]*pair\\)[\\n\\s]*\\(old[\\n\\s]*\\.[\\n\\s]*pair\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(OLD[\\n\\s]*\\.[\\n\\s]*SPICE\\)[\\n\\s]*\\(\\(OLD[\\n\\s]*\\.[\\n\\s]*SHOES\\)[\\n\\s]*A[\\n\\s]*\\.[\\n\\s]*CONS\\)[\\n\\s]*\\(A[\\n\\s]*\\.[\\n\\s]*CONS\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(subst-if[\\n\\s]*5[\\n\\s]*#'listp[\\n\\s]*tree1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(subst-if-not[\\n\\s]*'\\(x\\)[\\n\\s]*#'consp[\\n\\s]*tree1\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*X\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*tree1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(nsubst[\\n\\s]*'x[\\n\\s]*3[\\n\\s]*tree1[\\n\\s]*:key[\\n\\s]*#'\\(lambda[\\n\\s]*\\(y\\)[\\n\\s]*\\(and[\\n\\s]*\\(listp[\\n\\s]*y\\)[\\n\\s]*\\(third[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*X[\\n\\s]*X\\)[\\n\\s]*[\\n\\s]*tree1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*X[\\n\\s]*X\\)"],["\\code\n (defun subst (old new tree &rest x &key test test-not key)\n   (cond ((satisfies-the-test old tree :test test\n                              :test-not test-not :key key)\n          new)\n         ((atom tree) tree)\n         (t (let ((a (apply #'subst old new (car tree) x))\n                  (d (apply #'subst old new (cdr tree) x)))\n              (if (and (eql a (car tree))\n                       (eql d (cdr tree)))\n                  tree\n                  (cons a d))))))\n\\endcode","\\(defun[\\n\\s]*subst[\\n\\s]*\\(old[\\n\\s]*new[\\n\\s]*tree[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*test[\\n\\s]*test-not[\\n\\s]*key\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(satisfies-the-test[\\n\\s]*old[\\n\\s]*tree[\\n\\s]*:test[\\n\\s]*test[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test-not[\\n\\s]*test-not[\\n\\s]*:key[\\n\\s]*key\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*new\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(atom[\\n\\s]*tree\\)[\\n\\s]*tree\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*\\(apply[\\n\\s]*#'subst[\\n\\s]*old[\\n\\s]*new[\\n\\s]*\\(car[\\n\\s]*tree\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(d[\\n\\s]*\\(apply[\\n\\s]*#'subst[\\n\\s]*old[\\n\\s]*new[\\n\\s]*\\(cdr[\\n\\s]*tree\\)[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(and[\\n\\s]*\\(eql[\\n\\s]*a[\\n\\s]*\\(car[\\n\\s]*tree\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*d[\\n\\s]*\\(cdr[\\n\\s]*tree\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*tree[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*d\\)\\)\\)\\)\\)\\)"],["\\code\n (setq tree1 '(1 (1 2))\n       tree2 '(1 (1 2))) *→* (1 (1 2))\n (tree-equal tree1 tree2) *→ true*\n (eql tree1 tree2) *→ false*\n (setq tree1 '('a ('b 'c))\n       tree2 '('a ('b 'c))) *→* ('a ('b 'c)) \n*→* ((QUOTE A) ((QUOTE B) (QUOTE C)))\n (tree-equal tree1 tree2 :test 'eq) *→ true*\n\\endcode","\\(setq[\\n\\s]*tree1[\\n\\s]*'\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*tree2[\\n\\s]*'\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(tree-equal[\\n\\s]*tree1[\\n\\s]*tree2\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*tree1[\\n\\s]*tree2\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tree1[\\n\\s]*'\\('a[\\n\\s]*\\('b[\\n\\s]*'c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*tree2[\\n\\s]*'\\('a[\\n\\s]*\\('b[\\n\\s]*'c\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\('a[\\n\\s]*\\('b[\\n\\s]*'c\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(QUOTE[\\n\\s]*A\\)[\\n\\s]*\\(\\(QUOTE[\\n\\s]*B\\)[\\n\\s]*\\(QUOTE[\\n\\s]*C\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(tree-equal[\\n\\s]*tree1[\\n\\s]*tree2[\\n\\s]*:test[\\n\\s]*'eq\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (setq lst (list 1 (list 2 3))) *→* (1 (2 3))\n (setq slst lst) *→* (1 (2 3))\n (setq clst (copy-list lst)) *→* (1 (2 3))\n (eq slst lst) *→ true*\n (eq clst lst) *→ false*\n (equal clst lst) *→ true*\n (rplaca lst \"one\") *→* (\"one\" (2 3))\n slst *→* (\"one\" (2 3))\n clst *→* (1 (2 3))\n (setf (caadr lst) \"two\") *→* \"two\"\n lst *→* (\"one\" (\"two\" 3))\n slst *→* (\"one\" (\"two\" 3))\n clst *→* (1 (\"two\" 3))\n\\endcode","\\(setq[\\n\\s]*lst[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*\\(list[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*slst[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*clst[\\n\\s]*\\(copy-list[\\n\\s]*lst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*slst[\\n\\s]*lst\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*clst[\\n\\s]*lst\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*clst[\\n\\s]*lst\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(rplaca[\\n\\s]*lst[\\n\\s]*\"one\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*slst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*clst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(caadr[\\n\\s]*lst\\)[\\n\\s]*\"two\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"two\"[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(\"two\"[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*slst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\(\"two\"[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*clst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(\"two\"[\\n\\s]*3\\)\\)"],["\\code\n (list 1) *→* (1)\n (list* 1) *→* 1\n (setq a 1) *→* 1\n (list a 2) *→* (1 2)\n '(a 2) *→* (A 2)\n (list 'a 2) *→* (A 2)\n (list* a 2) *→* (1 . 2)\n (list) *→* NIL ;\\ie ()\n (setq a '(1 2)) *→* (1 2)\n (eq a (list* a)) *→ true*\n (list 3 4 'a (car '(b . c)) (+ 6 -2)) *→* (3 4 A B 4)\n (list* 'a 'b 'c 'd) \\EQ (cons 'a (cons 'b (cons 'c 'd))) *→* (A B C . D)\n (list* 'a 'b 'c '(d e f)) *→* (A B C D E F)\n\\endcode","\\(list[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*'\\(a[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*a[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(list\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*;\\\\ie[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*a[\\n\\s]*\\(list\\*[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*3[\\n\\s]*4[\\n\\s]*'a[\\n\\s]*\\(car[\\n\\s]*'\\(b[\\n\\s]*\\.[\\n\\s]*c\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*6[\\n\\s]*-2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*4[\\n\\s]*A[\\n\\s]*B[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*\\(cons[\\n\\s]*'b[\\n\\s]*\\(cons[\\n\\s]*'c[\\n\\s]*'d\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(list\\*[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'\\(d[\\n\\s]*e[\\n\\s]*f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)"],["\\code\n (list* \\param&#123;x&#125;) \\EQ \\param&#123;x&#125;\n\\endcode","\\(list\\*[\\n\\s]*\\\\param&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\\\param&#123;x&#125;"],["\\code\n (list-length '(a b c d)) *→* 4\n (list-length '(a (b c) d)) *→* 3\n (list-length '()) *→* 0\n (list-length nil) *→* 0\n (defun circular-list (&rest elements)\n   (let ((cycle (copy-list elements))) \n     (nconc cycle cycle)))\n (list-length (circular-list 'a 'b)) *→* NIL\n (list-length (circular-list 'a)) *→* NIL\n (list-length (circular-list)) *→* 0\n\\endcode","\\(list-length[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(list-length[\\n\\s]*'\\(a[\\n\\s]*\\(b[\\n\\s]*c\\)[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(list-length[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(list-length[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*circular-list[\\n\\s]*\\(&rest[\\n\\s]*elements\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(cycle[\\n\\s]*\\(copy-list[\\n\\s]*elements\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nconc[\\n\\s]*cycle[\\n\\s]*cycle\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(list-length[\\n\\s]*\\(circular-list[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(list-length[\\n\\s]*\\(circular-list[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(list-length[\\n\\s]*\\(circular-list\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0"],["\\code\n (defun list-length (x)  \n   (do ((n 0 (+ n 2))           ;Counter.\n        (fast x (cddr fast))    ;Fast pointer: leaps by 2.\n        (slow x (cdr slow)))    ;Slow pointer: leaps by 1.\n       (nil)\n     ;; If fast pointer hits the end, return the count.\n     (when (endp fast) (return n))\n     (when (endp (cdr fast)) (return (+ n 1)))\n     ;; If fast pointer eventually equals slow pointer,\n     ;;  then we must be stuck in a circular list.\n     ;; (A deeper property is the converse: if we are\n     ;;  stuck in a circular list, then eventually the\n     ;;  fast pointer will equal the slow pointer.\n     ;;  That fact justifies this implementation.)\n     (when (and (eq fast slow) (&#62; n 0)) (return nil))))\n \n\\endcode","\\(defun[\\n\\s]*list-length[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(n[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Counter\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fast[\\n\\s]*x[\\n\\s]*\\(cddr[\\n\\s]*fast\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Fast[\\n\\s]*pointer:[\\n\\s]*leaps[\\n\\s]*by[\\n\\s]*2\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(slow[\\n\\s]*x[\\n\\s]*\\(cdr[\\n\\s]*slow\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Slow[\\n\\s]*pointer:[\\n\\s]*leaps[\\n\\s]*by[\\n\\s]*1\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*If[\\n\\s]*fast[\\n\\s]*pointer[\\n\\s]*hits[\\n\\s]*the[\\n\\s]*end,[\\n\\s]*return[\\n\\s]*the[\\n\\s]*count\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(endp[\\n\\s]*fast\\)[\\n\\s]*\\(return[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(endp[\\n\\s]*\\(cdr[\\n\\s]*fast\\)\\)[\\n\\s]*\\(return[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*If[\\n\\s]*fast[\\n\\s]*pointer[\\n\\s]*eventually[\\n\\s]*equals[\\n\\s]*slow[\\n\\s]*pointer,[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*then[\\n\\s]*we[\\n\\s]*must[\\n\\s]*be[\\n\\s]*stuck[\\n\\s]*in[\\n\\s]*a[\\n\\s]*circular[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*\\(A[\\n\\s]*deeper[\\n\\s]*property[\\n\\s]*is[\\n\\s]*the[\\n\\s]*converse:[\\n\\s]*if[\\n\\s]*we[\\n\\s]*are[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*stuck[\\n\\s]*in[\\n\\s]*a[\\n\\s]*circular[\\n\\s]*list,[\\n\\s]*then[\\n\\s]*eventually[\\n\\s]*the[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*fast[\\n\\s]*pointer[\\n\\s]*will[\\n\\s]*equal[\\n\\s]*the[\\n\\s]*slow[\\n\\s]*pointer\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*That[\\n\\s]*fact[\\n\\s]*justifies[\\n\\s]*this[\\n\\s]*implementation\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(and[\\n\\s]*\\(eq[\\n\\s]*fast[\\n\\s]*slow\\)[\\n\\s]*\\(&#62;[\\n\\s]*n[\\n\\s]*0\\)\\)[\\n\\s]*\\(return[\\n\\s]*nil\\)\\)\\)\\)"],["\\code\n (listp nil) *→ true*\n (listp (cons 1 2)) *→ true*\n (listp (make-array 6)) *→ false*\n (listp t) *→ false*\n\\endcode","\\(listp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(listp[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(listp[\\n\\s]*\\(make-array[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(listp[\\n\\s]*t\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (listp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'list) \\EQ (typep \\param&#123;object&#125; '(or cons null))\n\\endcode","\\(listp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'list\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'\\(or[\\n\\s]*cons[\\n\\s]*null\\)\\)"],["\\code\n (make-list 5) *→* (NIL NIL NIL NIL NIL)\n (make-list 3 :initial-element 'rah) *→* (RAH RAH RAH)\n (make-list 2 :initial-element '(1 2 3)) *→* ((1 2 3) (1 2 3))\n (make-list 0) *→* NIL ;\\ie ()\n (make-list 0 :initial-element 'new-element) *→* NIL \n\\endcode","\\(make-list[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(make-list[\\n\\s]*3[\\n\\s]*:initial-element[\\n\\s]*'rah\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(RAH[\\n\\s]*RAH[\\n\\s]*RAH\\)[\\n\\s]*[\\n\\s]*\\(make-list[\\n\\s]*2[\\n\\s]*:initial-element[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(make-list[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*;\\\\ie[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(make-list[\\n\\s]*0[\\n\\s]*:initial-element[\\n\\s]*'new-element\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (setq llst '(nil)) *→* (NIL)\n (push 1 (car llst)) *→* (1)\n llst *→* ((1))\n (push 1 (car llst)) *→* (1 1)\n llst *→* ((1 1))\n (setq x '(a (b c) d)) *→* (A (B C) D)\n (push 5 (cadr x)) *→* (5 B C)  \n x *→* (A (5 B C) D)\n\\endcode","\\(setq[\\n\\s]*llst[\\n\\s]*'\\(nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL\\)[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*1[\\n\\s]*\\(car[\\n\\s]*llst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\)[\\n\\s]*[\\n\\s]*llst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)\\)[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*1[\\n\\s]*\\(car[\\n\\s]*llst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*llst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*\\(b[\\n\\s]*c\\)[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(B[\\n\\s]*C\\)[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*5[\\n\\s]*\\(cadr[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*D\\)"],["\\code\n (setf place (cons \\i&#123;item&#125; \\i&#123;place&#125;))\n\\endcode","\\(setf[\\n\\s]*place[\\n\\s]*\\(cons[\\n\\s]*\\\\i&#123;item&#125;[\\n\\s]*\\\\i&#123;place&#125;\\)\\)"],["\\code\n (setq stack '(a b c)) *→* (A B C)\n (pop stack) *→* A  \n stack *→* (B C)\n (setq llst '((1 2 3 4))) *→* ((1 2 3 4))\n (pop (car llst)) *→* 1\n llst *→* ((2 3 4))\n\\endcode","\\(setq[\\n\\s]*stack[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(pop[\\n\\s]*stack\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*stack[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*llst[\\n\\s]*'\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(pop[\\n\\s]*\\(car[\\n\\s]*llst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*llst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(2[\\n\\s]*3[\\n\\s]*4\\)\\)"],["\\code\n (prog1 (car \\param&#123;place&#125;) (setf \\param&#123;place&#125; (cdr \\param&#123;place&#125;)))\n\\endcode","\\(prog1[\\n\\s]*\\(car[\\n\\s]*\\\\param&#123;place&#125;\\)[\\n\\s]*\\(setf[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*\\(cdr[\\n\\s]*\\\\param&#123;place&#125;\\)\\)\\)"],["\\code\n (first \\param&#123;list&#125;)    \\EQ  (car \\param&#123;list&#125;)\n (second \\param&#123;list&#125;)   \\EQ  (car (cdr \\param&#123;list&#125;))\n (third \\param&#123;list&#125;)    \\EQ  (car (cddr \\param&#123;list&#125;))\n (fourth \\param&#123;list&#125;)   \\EQ  (car (cdddr \\param&#123;list&#125;))\n (fifth \\param&#123;list&#125;)    \\EQ  (car (cddddr \\param&#123;list&#125;))\n (sixth \\param&#123;list&#125;)    \\EQ  (car (cdr (cddddr \\param&#123;list&#125;)))\n (seventh \\param&#123;list&#125;)  \\EQ  (car (cddr (cddddr \\param&#123;list&#125;)))\n (eighth \\param&#123;list&#125;)   \\EQ  (car (cdddr (cddddr \\param&#123;list&#125;)))\n (ninth \\param&#123;list&#125;)    \\EQ  (car (cddddr (cddddr \\param&#123;list&#125;)))\n (tenth \\param&#123;list&#125;)    \\EQ  (car (cdr (cddddr (cddddr \\param&#123;list&#125;))))\n\\endcode","\\(first[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*\\(second[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cdr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(third[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(fourth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cdddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(fifth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(sixth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cdr[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(seventh[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cddr[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(eighth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cdddr[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(ninth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cddddr[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(tenth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*\\(cdr[\\n\\s]*\\(cddddr[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)\\)\\)"],["\\code\n (setf (fifth \\param&#123;list&#125;) \\param&#123;new-object&#125;) \\EQ (setf (car (cddddr \\param&#123;list&#125;)) \\param&#123;new-object&#125;)\n\\endcode","\\(setf[\\n\\s]*\\(fifth[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;new-object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(setf[\\n\\s]*\\(car[\\n\\s]*\\(cddddr[\\n\\s]*\\\\param&#123;list&#125;\\)\\)[\\n\\s]*\\\\param&#123;new-object&#125;\\)"],["\\code\n (setq lst '(1 2 3 (4 5 6) ((V)) vi 7 8 9 10)) \n*→* (1 2 3 (4 5 6) ((V)) VI 7 8 9 10)\n (first lst) *→* 1\n (tenth lst) *→* 10\n (fifth lst) *→* ((V))\n (second (fourth lst)) *→* 5\n (sixth '(1 2 3)) *→* NIL\n (setf (fourth lst) \"four\") *→* \"four\"\n lst *→* (1 2 3 \"four\" ((V)) VI 7 8 9 10)\n\\endcode","\\(setq[\\n\\s]*lst[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\(\\(V\\)\\)[\\n\\s]*vi[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\(\\(V\\)\\)[\\n\\s]*VI[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*\\(first[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(tenth[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(fifth[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(V\\)\\)[\\n\\s]*[\\n\\s]*\\(second[\\n\\s]*\\(fourth[\\n\\s]*lst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(sixth[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(fourth[\\n\\s]*lst\\)[\\n\\s]*\"four\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"four\"[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\"four\"[\\n\\s]*\\(\\(V\\)\\)[\\n\\s]*VI[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*10\\)"],["\\code\n (fifth x) \\EQ (nth 4 x)\n\\endcode","\\(fifth[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nth[\\n\\s]*4[\\n\\s]*x\\)"],["\\code\n (nth \\param&#123;n&#125; \\param&#123;list&#125;) \\EQ (car (nthcdr \\param&#123;n&#125; \\param&#123;list&#125;))\n\\endcode","\\(nth[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*\\(nthcdr[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\\\param&#123;list&#125;\\)\\)"],["\\code\n (setf (nth \\param&#123;n&#125; \\param&#123;list&#125;) \\param&#123;new-object&#125;) \\EQ (setf (car (nthcdr \\param&#123;n&#125; \\param&#123;list&#125;)) \\param&#123;new-object&#125;)\n\\endcode","\\(setf[\\n\\s]*\\(nth[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;new-object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(setf[\\n\\s]*\\(car[\\n\\s]*\\(nthcdr[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\\\param&#123;list&#125;\\)\\)[\\n\\s]*\\\\param&#123;new-object&#125;\\)"],["\\code\n (nth 0 '(foo bar baz)) *→* FOO\n (nth 1 '(foo bar baz)) *→* BAR\n (nth 3 '(foo bar baz)) *→* NIL\n (setq 0-to-3 (list 0 1 2 3)) *→* (0 1 2 3)\n (setf (nth 2 0-to-3) \"two\") *→* \"two\"\n 0-to-3 *→* (0 1 \"two\" 3)\n\\endcode","\\(nth[\\n\\s]*0[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*baz\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*\\(nth[\\n\\s]*1[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*baz\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BAR[\\n\\s]*[\\n\\s]*\\(nth[\\n\\s]*3[\\n\\s]*'\\(foo[\\n\\s]*bar[\\n\\s]*baz\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*0-to-3[\\n\\s]*\\(list[\\n\\s]*0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(nth[\\n\\s]*2[\\n\\s]*0-to-3\\)[\\n\\s]*\"two\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"two\"[\\n\\s]*[\\n\\s]*0-to-3[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(0[\\n\\s]*1[\\n\\s]*\"two\"[\\n\\s]*3\\)"],["\\code\n (endp nil) *→ true*\n (endp '(1 2)) *→ false*\n (endp (cddr '(1 2))) *→ true*\n\\endcode","\\(endp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(endp[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(endp[\\n\\s]*\\(cddr[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (null '()) *→* T\n (null nil) *→* T\n (null t) *→* NIL\n (null 1) *→* NIL\n\\endcode","\\(null[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(null[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(null[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(null[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (null \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'null) \\EQ (eq \\param&#123;object&#125; '\\empty)\n\\endcode","\\(null[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'null\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(eq[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'\\\\empty\\)"],["\\code\n (nconc) *→* ()\n (nconc nil . \\param&#123;lists&#125;) \\EQ (nconc . \\param&#123;lists&#125;)\n (nconc \\param&#123;list&#125;) *→* \\param&#123;list&#125;\n (nconc \\param&#123;list-1&#125; \\param&#123;list-2&#125;) \\EQ (progn (rplacd (last \\param&#123;list-1&#125;) \\param&#123;list-2&#125;) \\param&#123;list-1&#125;)\n (nconc \\param&#123;list-1&#125; \\param&#123;list-2&#125; . \\param&#123;lists&#125;) \\EQ (nconc (nconc \\param&#123;list-1&#125; \\param&#123;list-2&#125;) . \\param&#123;lists&#125;)\n\\endcode","\\(nconc\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(nconc[\\n\\s]*nil[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;lists&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nconc[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;lists&#125;\\)[\\n\\s]*[\\n\\s]*\\(nconc[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\param&#123;list&#125;[\\n\\s]*[\\n\\s]*\\(nconc[\\n\\s]*\\\\param&#123;list-1&#125;[\\n\\s]*\\\\param&#123;list-2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(progn[\\n\\s]*\\(rplacd[\\n\\s]*\\(last[\\n\\s]*\\\\param&#123;list-1&#125;\\)[\\n\\s]*\\\\param&#123;list-2&#125;\\)[\\n\\s]*\\\\param&#123;list-1&#125;\\)[\\n\\s]*[\\n\\s]*\\(nconc[\\n\\s]*\\\\param&#123;list-1&#125;[\\n\\s]*\\\\param&#123;list-2&#125;[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;lists&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nconc[\\n\\s]*\\(nconc[\\n\\s]*\\\\param&#123;list-1&#125;[\\n\\s]*\\\\param&#123;list-2&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;lists&#125;\\)"],["\\code\n (nconc) *→* NIL\n (setq x '(a b c)) *→* (A B C)\n (setq y '(d e f)) *→* (D E F)\n (nconc x y) *→* (A B C D E F)\n x *→* (A B C D E F)\n\\endcode","\\(nconc\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*'\\(d[\\n\\s]*e[\\n\\s]*f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*\\(nconc[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)"],["\\code\n (setq foo (list 'a 'b 'c 'd 'e)\n       bar (list 'f 'g 'h 'i 'j)\n       baz (list 'k 'l 'm)) *→* (K L M)\n (setq foo (nconc foo bar baz)) *→* (A B C D E F G H I J K L M)\n foo *→* (A B C D E F G H I J K L M)\n bar *→* (F G H I J K L M)\n baz *→* (K L M)\n\n (setq foo (list 'a 'b 'c 'd 'e)\n       bar (list 'f 'g 'h 'i 'j)\n       baz (list 'k 'l 'm)) *→* (K L M)\n (setq foo (nconc nil foo bar nil baz)) *→* (A B C D E F G H I J K L M) \n foo *→* (A B C D E F G H I J K L M)\n bar *→* (F G H I J K L M)\n baz *→* (K L M)\n\\endcode","\\(setq[\\n\\s]*foo[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d[\\n\\s]*'e\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*bar[\\n\\s]*\\(list[\\n\\s]*'f[\\n\\s]*'g[\\n\\s]*'h[\\n\\s]*'i[\\n\\s]*'j\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\(list[\\n\\s]*'k[\\n\\s]*'l[\\n\\s]*'m\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo[\\n\\s]*\\(nconc[\\n\\s]*foo[\\n\\s]*bar[\\n\\s]*baz\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G[\\n\\s]*H[\\n\\s]*I[\\n\\s]*J[\\n\\s]*K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*foo[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G[\\n\\s]*H[\\n\\s]*I[\\n\\s]*J[\\n\\s]*K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*bar[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(F[\\n\\s]*G[\\n\\s]*H[\\n\\s]*I[\\n\\s]*J[\\n\\s]*K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d[\\n\\s]*'e\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*bar[\\n\\s]*\\(list[\\n\\s]*'f[\\n\\s]*'g[\\n\\s]*'h[\\n\\s]*'i[\\n\\s]*'j\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\(list[\\n\\s]*'k[\\n\\s]*'l[\\n\\s]*'m\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo[\\n\\s]*\\(nconc[\\n\\s]*nil[\\n\\s]*foo[\\n\\s]*bar[\\n\\s]*nil[\\n\\s]*baz\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G[\\n\\s]*H[\\n\\s]*I[\\n\\s]*J[\\n\\s]*K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*foo[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G[\\n\\s]*H[\\n\\s]*I[\\n\\s]*J[\\n\\s]*K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*bar[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(F[\\n\\s]*G[\\n\\s]*H[\\n\\s]*I[\\n\\s]*J[\\n\\s]*K[\\n\\s]*L[\\n\\s]*M\\)[\\n\\s]*[\\n\\s]*baz[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(K[\\n\\s]*L[\\n\\s]*M\\)"],["\\code\n (append '(a b c) '(d e f) '() '(g)) *→* (A B C D E F G)\n (append '(a b c) 'd) *→* (A B C . D)\n (setq lst '(a b c)) *→* (A B C)\n (append lst '(d)) *→* (A B C D)\n lst *→* (A B C)\n (append) *→* NIL\n (append 'a) *→* A\n\\endcode","\\(append[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(d[\\n\\s]*e[\\n\\s]*f\\)[\\n\\s]*'\\(\\)[\\n\\s]*'\\(g\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G\\)[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'d\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*lst[\\n\\s]*'\\(d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(append\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A"],["\\code\n (let ((list-1 (list 1 2 3))\n       (list-2 (list 'a 'b 'c)))\n   (print (revappend list-1 list-2))\n   (print (equal list-1 '(1 2 3)))\n   (print (equal list-2 '(a b c))))\n\\OUT (3 2 1 A B C) \n\\OUT T\n\\OUT T\n*→* T\n\n (revappend '(1 2 3) '()) *→* (3 2 1)\n (revappend '(1 2 3) '(a . b)) *→* (3 2 1 A . B)\n (revappend '() '(a b c)) *→* (A B C)\n (revappend '(1 2 3) 'a) *→* (3 2 1 . A)\n (revappend '() 'a) *→* A   ;degenerate case\n\n (let ((list-1 '(1 2 3))\n       (list-2 '(a b c)))\n   (print (nreconc list-1 list-2))\n   (print (equal list-1 '(1 2 3)))\n   (print (equal list-2 '(a b c))))\n\\OUT (3 2 1 A B C) \n\\OUT NIL\n\\OUT T\n*→* T\n\n\\endcode","\\(let[\\n\\s]*\\(\\(list-1[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list-2[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(revappend[\\n\\s]*list-1[\\n\\s]*list-2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(equal[\\n\\s]*list-1[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(equal[\\n\\s]*list-2[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*T[\\n\\s]*\\\\OUT[\\n\\s]*T[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*A[\\n\\s]*\\.[\\n\\s]*B\\)[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*\\.[\\n\\s]*A\\)[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(\\)[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*[\\n\\s]*;degenerate[\\n\\s]*case[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(list-1[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list-2[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(nreconc[\\n\\s]*list-1[\\n\\s]*list-2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(equal[\\n\\s]*list-1[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(equal[\\n\\s]*list-2[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*NIL[\\n\\s]*\\\\OUT[\\n\\s]*T[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n (nconc (nreverse \\param&#123;list&#125;) \\param&#123;tail&#125;)\n\\endcode","\\(nconc[\\n\\s]*\\(nreverse[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;tail&#125;\\)"],["\\code\n (revappend \\param&#123;list&#125; \\param&#123;tail&#125;) \\EQ (nconc (reverse \\param&#123;list&#125;) \\param&#123;tail&#125;)\n (nreconc \\param&#123;list&#125; \\param&#123;tail&#125;) \\EQ (nconc (nreverse \\param&#123;list&#125;) \\param&#123;tail&#125;)\n\\endcode","\\(revappend[\\n\\s]*\\\\param&#123;list&#125;[\\n\\s]*\\\\param&#123;tail&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nconc[\\n\\s]*\\(reverse[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;tail&#125;\\)[\\n\\s]*[\\n\\s]*\\(nreconc[\\n\\s]*\\\\param&#123;list&#125;[\\n\\s]*\\\\param&#123;tail&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nconc[\\n\\s]*\\(nreverse[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;tail&#125;\\)"],["\\code\n%  (defparameter *list-1* (list 1 2 3))\n%  (defparameter *list-2* (list 'a 'b 'c))\n%  (nreconc *list-1* *list-2*) *→* (3 2 1 A B C)\n%  *list-1* *→* \\term&#123;implementation-dependent&#125;\n%  *list-2* *→* (A B C)\n% \n%  (nreconc (list) 'a) *→* A  ;degenerate situation\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defparameter[\\n\\s]*\\*list-1\\*[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(defparameter[\\n\\s]*\\*list-2\\*[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(nreconc[\\n\\s]*\\*list-1\\*[\\n\\s]*\\*list-2\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\*list-1\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\*list-2\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(nreconc[\\n\\s]*\\(list\\)[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*;degenerate[\\n\\s]*situation[\\n\\s]*%"],["\\code\n% %  (nreconc (cons 1 2) nil) *→* (1)\n% % \\endcode","%[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(nreconc[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\)[\\n\\s]*%[\\n\\s]*%"],["\\code\n%  (setq lst1 '(1 2 3)\n%         lst2 '(a b c))  *→* (A B C)\n%  (revappend lst1 lst2) *→* (3 2 1 A B C)\n%  lst1 *→* (1 2 3)\n%  lst2 *→* (A B C)\n%  (revappend '(1 2 3) '(a . b)) *→* (3 2 1 A . B)\n%  (revappend nil '(a b c)) *→* (A B C)\n%  (revappend '() 'a) *→* A ;degenerate case\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst1[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*lst1[\\n\\s]*lst2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*lst1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*A[\\n\\s]*\\.[\\n\\s]*B\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*nil[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(\\)[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*;degenerate[\\n\\s]*case[\\n\\s]*%"],["\\code\n% %  (revappend '(1 . 2) '(a b c)) *→* (1 A B C)\n% % \\endcode","%[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*'\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*%"],["\\code\n%  (revappend x y) \\EQ (nconc (reverse x) y)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(revappend[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nconc[\\n\\s]*\\(reverse[\\n\\s]*x\\)[\\n\\s]*y\\)[\\n\\s]*%"],["\\code\n (setq lst '(1 2 3 4 5 6 7 8 9)) *→* (1 2 3 4 5 6 7 8 9)\n (butlast lst) *→* (1 2 3 4 5 6 7 8)\n (butlast lst 5) *→* (1 2 3 4)\n (butlast lst (+ 5 5)) *→* NIL\n lst *→* (1 2 3 4 5 6 7 8 9)\n (nbutlast lst 3) *→* (1 2 3 4 5 6)\n lst *→* (1 2 3 4 5 6)\n (nbutlast lst 99) *→* NIL\n lst *→* (1 2 3 4 5 6)\n (butlast '(a b c d)) *→* (A B C)\n (butlast '((a b) (c d))) *→* ((A B))\n (butlast '(a)) *→* NIL\n (butlast nil) *→* NIL\n (setq foo (list 'a 'b 'c 'd)) *→* (A B C D)\n (nbutlast foo) *→* (A B C)\n foo *→* (A B C)\n (nbutlast (list 'a)) *→* NIL\n (nbutlast '()) *→* NIL\n\\endcode","\\(setq[\\n\\s]*lst[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*lst[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*lst[\\n\\s]*\\(\\+[\\n\\s]*5[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*\\(nbutlast[\\n\\s]*lst[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\(nbutlast[\\n\\s]*lst[\\n\\s]*99\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*'\\(\\(a[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*d\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(A[\\n\\s]*B\\)\\)[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*'\\(a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(butlast[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(nbutlast[\\n\\s]*foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*foo[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(nbutlast[\\n\\s]*\\(list[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(nbutlast[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (butlast \\param&#123;list&#125; \\param&#123;n&#125;) \\EQ (ldiff \\param&#123;list&#125; (last \\param&#123;list&#125; \\param&#123;n&#125;))\n\\endcode","\\(butlast[\\n\\s]*\\\\param&#123;list&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(ldiff[\\n\\s]*\\\\param&#123;list&#125;[\\n\\s]*\\(last[\\n\\s]*\\\\param&#123;list&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)\\)"],["\\code\n (last nil) *→* NIL\n (last '(1 2 3)) *→* (3)\n (last '(1 2 . 3)) *→* (2 . 3)\n (setq x (list 'a 'b 'c 'd)) *→* (A B C D)\n (last x) *→* (D)\n (rplacd (last x) (list 'e 'f)) x *→* (A B C D E F)\n (last x) *→* (F)\n\n (last '(a b c))   *→* (C)\n\n (last '(a b c) 0) *→* ()\n (last '(a b c) 1) *→* (C)\n (last '(a b c) 2) *→* (B C)\n (last '(a b c) 3) *→* (A B C)\n (last '(a b c) 4) *→* (A B C)\n\n (last '(a . b) 0) *→* B\n (last '(a . b) 1) *→* (A . B)\n (last '(a . b) 2) *→* (A . B)\n\\endcode","\\(last[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(D\\)[\\n\\s]*[\\n\\s]*\\(rplacd[\\n\\s]*\\(last[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*'e[\\n\\s]*'f\\)\\)[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(F\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\.[\\n\\s]*B\\)[\\n\\s]*[\\n\\s]*\\(last[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\.[\\n\\s]*B\\)"],["\\code\n (defun last (list &optional (n 1))\n   (check-type n (integer 0))\n   (do ((l list (cdr l))\n        (r list)\n        (i 0 (+ i 1)))\n       ((atom l) r)\n     (if (&#62;= i n) (pop r))))\n\\endcode","\\(defun[\\n\\s]*last[\\n\\s]*\\(list[\\n\\s]*&optional[\\n\\s]*\\(n[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*n[\\n\\s]*\\(integer[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(l[\\n\\s]*list[\\n\\s]*\\(cdr[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(r[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(i[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(atom[\\n\\s]*l\\)[\\n\\s]*r\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(&#62;=[\\n\\s]*i[\\n\\s]*n\\)[\\n\\s]*\\(pop[\\n\\s]*r\\)\\)\\)\\)"],["\\code\n (let ((lists '#((a b c) (a b c . d))))\n   (dotimes (i (length lists)) ()\n     (let ((list (aref lists i)))\n       (format t \"~2&list=~S ~21T(tailp object list)~\n                  ~44T(ldiff list object)~%\" list)\n         (let ((objects (vector list (cddr list) (copy-list (cddr list))\n                                '(f g h) '() 'd 'x)))\n           (dotimes (j (length objects)) ()\n             (let ((object (aref objects j)))\n               (format t \"~& object=~S ~21T~S ~44T~S\"\n                       object (tailp object list) (ldiff list object))))))))\n\\OUT \n\\OUT list=(A B C)         (tailp object list)    (ldiff list object)\n\\OUT  object=(A B C)      T                      NIL\n\\OUT  object=(C)          T                      (A B)\n\\OUT  object=(C)          NIL                    (A B C)\n\\OUT  object=(F G H)      NIL                    (A B C)\n\\OUT  object=NIL          T                      (A B C)\n\\OUT  object=D            NIL                    (A B C)\n\\OUT  object=X            NIL                    (A B C)\n\\OUT \n\\OUT list=(A B C . D)     (tailp object list)    (ldiff list object)\n\\OUT  object=(A B C . D)  T                      NIL\n\\OUT  object=(C . D)      T                      (A B)\n\\OUT  object=(C . D)      NIL                    (A B C . D)\n\\OUT  object=(F G H)      NIL                    (A B C . D)\n\\OUT  object=NIL          NIL                    (A B C . D)\n\\OUT  object=D            T                      (A B C)\n\\OUT  object=X            NIL                    (A B C . D)\n*→* NIL\n\\endcode","\\(let[\\n\\s]*\\(\\(lists[\\n\\s]*'#\\(\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.[\\n\\s]*d\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*\\(length[\\n\\s]*lists\\)\\)[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(list[\\n\\s]*\\(aref[\\n\\s]*lists[\\n\\s]*i\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~2&list=~S[\\n\\s]*~21T\\(tailp[\\n\\s]*object[\\n\\s]*list\\)~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~44T\\(ldiff[\\n\\s]*list[\\n\\s]*object\\)~%\"[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(objects[\\n\\s]*\\(vector[\\n\\s]*list[\\n\\s]*\\(cddr[\\n\\s]*list\\)[\\n\\s]*\\(copy-list[\\n\\s]*\\(cddr[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(f[\\n\\s]*g[\\n\\s]*h\\)[\\n\\s]*'\\(\\)[\\n\\s]*'d[\\n\\s]*'x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(j[\\n\\s]*\\(length[\\n\\s]*objects\\)\\)[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(object[\\n\\s]*\\(aref[\\n\\s]*objects[\\n\\s]*j\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&[\\n\\s]*object=~S[\\n\\s]*~21T~S[\\n\\s]*~44T~S\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*object[\\n\\s]*\\(tailp[\\n\\s]*object[\\n\\s]*list\\)[\\n\\s]*\\(ldiff[\\n\\s]*list[\\n\\s]*object\\)\\)\\)\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*list=\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*object[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ldiff[\\n\\s]*list[\\n\\s]*object\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(F[\\n\\s]*G[\\n\\s]*H\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=D[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*list=\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*object[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ldiff[\\n\\s]*list[\\n\\s]*object\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=\\(F[\\n\\s]*G[\\n\\s]*H\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=D[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*object=X[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*\\.[\\n\\s]*D\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defun tailp (object list)\n   (do ((list list (cdr list)))\n       ((atom list) (eql list object))\n      (if (eql object list)\n          (return t))))\n\\endcode","\\(defun[\\n\\s]*tailp[\\n\\s]*\\(object[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(list[\\n\\s]*list[\\n\\s]*\\(cdr[\\n\\s]*list\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(atom[\\n\\s]*list\\)[\\n\\s]*\\(eql[\\n\\s]*list[\\n\\s]*object\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(eql[\\n\\s]*object[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*t\\)\\)\\)\\)"],["\\code\n(defun ldiff (list object)\n  (do ((list list (cdr list))\n       (r '() (cons (car list) r)))\n      ((atom list)\n       (if (eql list object) (nreverse r) (nreconc r list)))\n    (when (eql object list)\n      (return (nreverse r)))))\n\\endcode","\\(defun[\\n\\s]*ldiff[\\n\\s]*\\(list[\\n\\s]*object\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(list[\\n\\s]*list[\\n\\s]*\\(cdr[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(r[\\n\\s]*'\\(\\)[\\n\\s]*\\(cons[\\n\\s]*\\(car[\\n\\s]*list\\)[\\n\\s]*r\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(atom[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(eql[\\n\\s]*list[\\n\\s]*object\\)[\\n\\s]*\\(nreverse[\\n\\s]*r\\)[\\n\\s]*\\(nreconc[\\n\\s]*r[\\n\\s]*list\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(eql[\\n\\s]*object[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*\\(nreverse[\\n\\s]*r\\)\\)\\)\\)\\)"],["\\code\n%  (setq x '(a b c d e)) *→* (A B C D E)\n%  (setq y (cdddr x)) *→* (D E)\n%  (ldiff x y) *→* (A B C)\n%  (ldiff x (copy-list y)) *→* (A B C D E)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(cdddr[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(D[\\n\\s]*E\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(ldiff[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(ldiff[\\n\\s]*x[\\n\\s]*\\(copy-list[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*%"],["\\code\n%  (let ((x '(b c))) (tailp x (cons 'a x))) *→ true*\n%  (tailp '(x y) '(a b c)) *→ false*\n%  (tailp '() '(a b c)) *→ true*\n%  (tailp 3 '(a b c)) *→ false*\n%  (tailp 3 '(a b c . 3)) *→ true*\n%  (tailp '(x y) '(a b c . 3)) *→ false*\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*'\\(b[\\n\\s]*c\\)\\)\\)[\\n\\s]*\\(tailp[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*'\\(x[\\n\\s]*y\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*'\\(\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*3[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*3[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(tailp[\\n\\s]*'\\(x[\\n\\s]*y\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*%"],["\\code\n%  (defun tailp (sublist list)\n%    (do ((list list (cdr list)))\n%        ((atom list) (eql list sublist))\n%       (if (eql sublist list)\n%           (return t))))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*tailp[\\n\\s]*\\(sublist[\\n\\s]*list\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(list[\\n\\s]*list[\\n\\s]*\\(cdr[\\n\\s]*list\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(atom[\\n\\s]*list\\)[\\n\\s]*\\(eql[\\n\\s]*list[\\n\\s]*sublist\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(eql[\\n\\s]*sublist[\\n\\s]*list\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*t\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n (nthcdr 0 '()) *→* NIL\n (nthcdr 3 '()) *→* NIL\n (nthcdr 0 '(a b c)) *→* (A B C)\n (nthcdr 2 '(a b c)) *→* (C)\n (nthcdr 4 '(a b c)) *→* ()\n (nthcdr 1 '(0 . 1)) *→* 1\n\n (locally (declare (optimize (safety 3)))\n   (nthcdr 3 '(0 . 1)))\n Error: Attempted to take CDR of 1.\n\\endcode","\\(nthcdr[\\n\\s]*0[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(nthcdr[\\n\\s]*3[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(nthcdr[\\n\\s]*0[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(nthcdr[\\n\\s]*2[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C\\)[\\n\\s]*[\\n\\s]*\\(nthcdr[\\n\\s]*4[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(nthcdr[\\n\\s]*1[\\n\\s]*'\\(0[\\n\\s]*\\.[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(optimize[\\n\\s]*\\(safety[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nthcdr[\\n\\s]*3[\\n\\s]*'\\(0[\\n\\s]*\\.[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*Error:[\\n\\s]*Attempted[\\n\\s]*to[\\n\\s]*take[\\n\\s]*CDR[\\n\\s]*of[\\n\\s]*1\\."],["\\code\n (rest \\param&#123;list&#125;) \\EQ (cdr \\param&#123;list&#125;)\n (setf (rest \\param&#123;list&#125;) \\param&#123;new-tail&#125;) \\EQ (setf (cdr \\param&#123;list&#125;) \\param&#123;new-tail&#125;)\n\\endcode","\\(rest[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(cdr[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(rest[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;new-tail&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(setf[\\n\\s]*\\(cdr[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\param&#123;new-tail&#125;\\)"],["\\code\n (rest '(1 2)) *→* (2)\n (rest '(1 . 2)) *→* 2\n (rest '(1)) *→* NIL\n (setq *cons* '(1 . 2)) *→* (1 . 2)\n (setf (rest *cons*) \"two\") *→* \"two\"\n *cons* *→* (1 . \"two\")\n\\endcode","\\(rest[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2\\)[\\n\\s]*[\\n\\s]*\\(rest[\\n\\s]*'\\(1[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(rest[\\n\\s]*'\\(1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*cons\\*[\\n\\s]*'\\(1[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(rest[\\n\\s]*\\*cons\\*\\)[\\n\\s]*\"two\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"two\"[\\n\\s]*[\\n\\s]*\\*cons\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"two\"\\)"],["\\code\n (member 2 '(1 2 3)) *→* (2 3)                                 \n (member 2 '((1 . 2) (3 . 4)) :test-not #'= :key #'cdr) *→* ((3 . 4))\n (member 'e '(a b c d)) *→* NIL\n\\endcode","\\(member[\\n\\s]*2[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(member[\\n\\s]*2[\\n\\s]*'\\(\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*4\\)\\)[\\n\\s]*:test-not[\\n\\s]*#'=[\\n\\s]*:key[\\n\\s]*#'cdr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(3[\\n\\s]*\\.[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(member[\\n\\s]*'e[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (member-if #'listp '(a b nil c d)) *→* (NIL C D)\n (member-if #'numberp '(a #\\\\Space 5/3 foo)) *→* (5/3 FOO)\n (member-if-not #'zerop \n                 '(3 6 9 11 . 12)\n                 :key #'(lambda (x) (mod x 3))) *→* (11 . 12)\n\\endcode","\\(member-if[\\n\\s]*#'listp[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*nil[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(member-if[\\n\\s]*#'numberp[\\n\\s]*'\\(a[\\n\\s]*#\\\\\\\\Space[\\n\\s]*5/3[\\n\\s]*foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(5/3[\\n\\s]*FOO\\)[\\n\\s]*[\\n\\s]*\\(member-if-not[\\n\\s]*#'zerop[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(3[\\n\\s]*6[\\n\\s]*9[\\n\\s]*11[\\n\\s]*\\.[\\n\\s]*12\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(mod[\\n\\s]*x[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(11[\\n\\s]*\\.[\\n\\s]*12\\)"],["\\code\n (member 'a '(g (a y) c a d e a f)) *→* (A D E A F)\n\\endcode","\\(member[\\n\\s]*'a[\\n\\s]*'\\(g[\\n\\s]*\\(a[\\n\\s]*y\\)[\\n\\s]*c[\\n\\s]*a[\\n\\s]*d[\\n\\s]*e[\\n\\s]*a[\\n\\s]*f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*D[\\n\\s]*E[\\n\\s]*A[\\n\\s]*F\\)"],["\\code\n (mapcon f x1 ... xn)\n   \\EQ (apply #'nconc (maplist f x1 ... xn))\n\\endcode","\\(mapcon[\\n\\s]*f[\\n\\s]*x1[\\n\\s]*\\.\\.\\.[\\n\\s]*xn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*#'nconc[\\n\\s]*\\(maplist[\\n\\s]*f[\\n\\s]*x1[\\n\\s]*\\.\\.\\.[\\n\\s]*xn\\)\\)"],["\\code\n (mapcar #'car '((1 a) (2 b) (3 c))) *→* (1 2 3) \n (mapcar #'abs '(3 -4 2 -5 -6)) *→* (3 4 2 5 6)\n (mapcar #'cons '(a b c) '(1 2 3)) *→* ((A . 1) (B . 2) (C . 3))\n\n (maplist #'append '(1 2 3 4) '(1 2) '(1 2 3)) \n*→* ((1 2 3 4 1 2 1 2 3) (2 3 4 2 2 3)) \n (maplist #'(lambda (x) (cons 'foo x)) '(a b c d))\n*→* ((FOO A B C D) (FOO B C D) (FOO C D) (FOO D))\n (maplist #'(lambda (x) (if (member (car x) (cdr x)) 0 1)) '(a b a c d b c))\n*→* (0 0 1 0 1 1 1)\n;An entry is 1 if the corresponding element of the input\n;  list was the last instance of that element in the input list.\n\n (setq dummy nil) *→* NIL \n (mapc #'(lambda (&rest x) (setq dummy (append dummy x)))\n        '(1 2 3 4)\n        '(a b c d e)\n        '(x y z)) *→* (1 2 3 4) \n dummy *→* (1 A X 2 B Y 3 C Z)                   \n\n (setq dummy nil) *→* NIL \n (mapl #'(lambda (x) (push x dummy)) '(1 2 3 4)) *→* (1 2 3 4) \n dummy *→* ((4) (3 4) (2 3 4) (1 2 3 4)) \n\n (mapcan #'(lambda (x y) (if (null x) nil (list x y)))\n          '(nil nil nil d e)\n          '(1 2 3 4 5 6)) *→* (D 4 E 5) \n (mapcan #'(lambda (x) (and (numberp x) (list x)))\n          '(a 1 b c 3 4 d 5))\n*→* (1 3 4 5)\n\\endcode","\\(mapcar[\\n\\s]*#'car[\\n\\s]*'\\(\\(1[\\n\\s]*a\\)[\\n\\s]*\\(2[\\n\\s]*b\\)[\\n\\s]*\\(3[\\n\\s]*c\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'abs[\\n\\s]*'\\(3[\\n\\s]*-4[\\n\\s]*2[\\n\\s]*-5[\\n\\s]*-6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*4[\\n\\s]*2[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'cons[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(A[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(C[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(maplist[\\n\\s]*#'append[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*'\\(1[\\n\\s]*2\\)[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*1[\\n\\s]*2[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*2[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(maplist[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(cons[\\n\\s]*'foo[\\n\\s]*x\\)\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(FOO[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*\\(FOO[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*\\(FOO[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*\\(FOO[\\n\\s]*D\\)\\)[\\n\\s]*[\\n\\s]*\\(maplist[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(if[\\n\\s]*\\(member[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)[\\n\\s]*0[\\n\\s]*1\\)\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*a[\\n\\s]*c[\\n\\s]*d[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(0[\\n\\s]*0[\\n\\s]*1[\\n\\s]*0[\\n\\s]*1[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*;An[\\n\\s]*entry[\\n\\s]*is[\\n\\s]*1[\\n\\s]*if[\\n\\s]*the[\\n\\s]*corresponding[\\n\\s]*element[\\n\\s]*of[\\n\\s]*the[\\n\\s]*input[\\n\\s]*;[\\n\\s]*[\\n\\s]*list[\\n\\s]*was[\\n\\s]*the[\\n\\s]*last[\\n\\s]*instance[\\n\\s]*of[\\n\\s]*that[\\n\\s]*element[\\n\\s]*in[\\n\\s]*the[\\n\\s]*input[\\n\\s]*list\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*dummy[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapc[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&rest[\\n\\s]*x\\)[\\n\\s]*\\(setq[\\n\\s]*dummy[\\n\\s]*\\(append[\\n\\s]*dummy[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(x[\\n\\s]*y[\\n\\s]*z\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*dummy[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*A[\\n\\s]*X[\\n\\s]*2[\\n\\s]*B[\\n\\s]*Y[\\n\\s]*3[\\n\\s]*C[\\n\\s]*Z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*dummy[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapl[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(push[\\n\\s]*x[\\n\\s]*dummy\\)\\)[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*dummy[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4\\)[\\n\\s]*\\(3[\\n\\s]*4\\)[\\n\\s]*\\(2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcan[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(if[\\n\\s]*\\(null[\\n\\s]*x\\)[\\n\\s]*nil[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(nil[\\n\\s]*nil[\\n\\s]*nil[\\n\\s]*d[\\n\\s]*e\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(D[\\n\\s]*4[\\n\\s]*E[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcan[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(and[\\n\\s]*\\(numberp[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*c[\\n\\s]*3[\\n\\s]*4[\\n\\s]*d[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)"],["\\code\n (mapcon #'list '(1 2 3 4)) *→* ((1 2 3 4) (2 3 4) (3 4) (4)) \n\\endcode","\\(mapcon[\\n\\s]*#'list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\(2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\(3[\\n\\s]*4\\)[\\n\\s]*\\(4\\)\\)"],["\\code\n (setq alist '()) *→* NIL\n (acons 1 \"one\" alist) *→* ((1 . \"one\"))\n alist *→* NIL\n (setq alist (acons 1 \"one\" (acons 2 \"two\" alist))) *→* ((1 . \"one\") (2 . \"two\"))\n (assoc 1 alist) *→* (1 . \"one\")\n (setq alist (acons 1 \"uno\" alist)) *→* ((1 . \"uno\") (1 . \"one\") (2 . \"two\"))\n (assoc 1 alist) *→* (1 . \"uno\")\n\\endcode","\\(setq[\\n\\s]*alist[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(acons[\\n\\s]*1[\\n\\s]*\"one\"[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)\\)[\\n\\s]*[\\n\\s]*alist[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*alist[\\n\\s]*\\(acons[\\n\\s]*1[\\n\\s]*\"one\"[\\n\\s]*\\(acons[\\n\\s]*2[\\n\\s]*\"two\"[\\n\\s]*alist\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*1[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*alist[\\n\\s]*\\(acons[\\n\\s]*1[\\n\\s]*\"uno\"[\\n\\s]*alist\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"uno\"\\)[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*1[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"uno\"\\)"],["\\code\n(acons \\param&#123;key&#125; \\param&#123;datum&#125; \\param&#123;alist&#125;) \\EQ (cons (cons \\param&#123;key&#125; \\param&#123;datum&#125;) \\param&#123;alist&#125;)\n\\endcode","\\(acons[\\n\\s]*\\\\param&#123;key&#125;[\\n\\s]*\\\\param&#123;datum&#125;[\\n\\s]*\\\\param&#123;alist&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(cons[\\n\\s]*\\(cons[\\n\\s]*\\\\param&#123;key&#125;[\\n\\s]*\\\\param&#123;datum&#125;\\)[\\n\\s]*\\\\param&#123;alist&#125;\\)"],["\\code\n (setq values '((x . 100) (y . 200) (z . 50))) *→* ((X . 100) (Y . 200) (Z . 50))\n (assoc 'y values) *→* (Y . 200)\n (rplacd (assoc 'y values) 201) *→* (Y . 201)\n (assoc 'y values) *→* (Y . 201)\n (setq alist '((1 . \"one\")(2 . \"two\")(3 . \"three\"))) \n*→* ((1 . \"one\") (2 . \"two\") (3 . \"three\"))\n (assoc 2 alist) *→* (2 . \"two\")\n (assoc-if #'evenp alist) *→* (2 . \"two\")\n (assoc-if-not #'(lambda(x) (&#60; x 3)) alist) *→* (3 . \"three\")\n (setq alist '((\"one\" . 1)(\"two\" . 2))) *→* ((\"one\" . 1) (\"two\" . 2))\n (assoc \"one\" alist) *→* NIL\n (assoc \"one\" alist :test #'equalp) *→* (\"one\" . 1)\n (assoc \"two\" alist :key #'(lambda(x) (char x 2))) *→* NIL \n (assoc #\\\\o alist :key #'(lambda(x) (char x 2))) *→* (\"two\" . 2)\n (assoc 'r '((a . b) (c . d) (r . x) (s . y) (r . z))) *→*  (R . X)\n (assoc 'goo '((foo . bar) (zoo . goo))) *→* NIL\n (assoc '2 '((1 a b c) (2 b c d) (-7 x y z))) *→* (2 B C D)\n (setq alist '((\"one\" . 1) (\"2\" . 2) (\"three\" . 3)))\n*→* ((\"one\" . 1) (\"2\" . 2) (\"three\" . 3))\n (assoc-if-not #'alpha-char-p alist\n               :key #'(lambda (x) (char x 0))) *→* (\"2\" . 2)\n\\endcode","\\(setq[\\n\\s]*values[\\n\\s]*'\\(\\(x[\\n\\s]*\\.[\\n\\s]*100\\)[\\n\\s]*\\(y[\\n\\s]*\\.[\\n\\s]*200\\)[\\n\\s]*\\(z[\\n\\s]*\\.[\\n\\s]*50\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(X[\\n\\s]*\\.[\\n\\s]*100\\)[\\n\\s]*\\(Y[\\n\\s]*\\.[\\n\\s]*200\\)[\\n\\s]*\\(Z[\\n\\s]*\\.[\\n\\s]*50\\)\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*'y[\\n\\s]*values\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(Y[\\n\\s]*\\.[\\n\\s]*200\\)[\\n\\s]*[\\n\\s]*\\(rplacd[\\n\\s]*\\(assoc[\\n\\s]*'y[\\n\\s]*values\\)[\\n\\s]*201\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(Y[\\n\\s]*\\.[\\n\\s]*201\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*'y[\\n\\s]*values\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(Y[\\n\\s]*\\.[\\n\\s]*201\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*alist[\\n\\s]*'\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\(3[\\n\\s]*\\.[\\n\\s]*\"three\"\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*\"three\"\\)\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*2[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*[\\n\\s]*\\(assoc-if[\\n\\s]*#'evenp[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*[\\n\\s]*\\(assoc-if-not[\\n\\s]*#'\\(lambda\\(x\\)[\\n\\s]*\\(&#60;[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*\"three\"\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*alist[\\n\\s]*'\\(\\(\"one\"[\\n\\s]*\\.[\\n\\s]*1\\)\\(\"two\"[\\n\\s]*\\.[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(\"two\"[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*\"one\"[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*\"one\"[\\n\\s]*alist[\\n\\s]*:test[\\n\\s]*#'equalp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"one\"[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*\"two\"[\\n\\s]*alist[\\n\\s]*:key[\\n\\s]*#'\\(lambda\\(x\\)[\\n\\s]*\\(char[\\n\\s]*x[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*#\\\\\\\\o[\\n\\s]*alist[\\n\\s]*:key[\\n\\s]*#'\\(lambda\\(x\\)[\\n\\s]*\\(char[\\n\\s]*x[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"two\"[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*'r[\\n\\s]*'\\(\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*\\.[\\n\\s]*d\\)[\\n\\s]*\\(r[\\n\\s]*\\.[\\n\\s]*x\\)[\\n\\s]*\\(s[\\n\\s]*\\.[\\n\\s]*y\\)[\\n\\s]*\\(r[\\n\\s]*\\.[\\n\\s]*z\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\\(R[\\n\\s]*\\.[\\n\\s]*X\\)[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*'goo[\\n\\s]*'\\(\\(foo[\\n\\s]*\\.[\\n\\s]*bar\\)[\\n\\s]*\\(zoo[\\n\\s]*\\.[\\n\\s]*goo\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(assoc[\\n\\s]*'2[\\n\\s]*'\\(\\(1[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\(2[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*\\(-7[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*alist[\\n\\s]*'\\(\\(\"one\"[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(\"2\"[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(\"three\"[\\n\\s]*\\.[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"one\"[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(\"2\"[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(\"three\"[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(assoc-if-not[\\n\\s]*#'alpha-char-p[\\n\\s]*alist[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(char[\\n\\s]*x[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"2\"[\\n\\s]*\\.[\\n\\s]*2\\)"],["\\code\n (assoc item list :test fn)\n\\endcode","\\(assoc[\\n\\s]*item[\\n\\s]*list[\\n\\s]*:test[\\n\\s]*fn\\)"],["\\code\n (find item list :test fn :key #'car)\n\\endcode","\\(find[\\n\\s]*item[\\n\\s]*list[\\n\\s]*:test[\\n\\s]*fn[\\n\\s]*:key[\\n\\s]*#'car\\)"],["\\code\n(defparameter *alist* (acons 1 \"one\" (acons 2 \"two\" '())))\n*alist* *→* ((1 . \"one\") (2 . \"two\"))\n(defparameter *list-copy* (copy-list *alist*))\n*list-copy* *→* ((1 . \"one\") (2 . \"two\"))\n(defparameter *alist-copy* (copy-alist *alist*))\n*alist-copy* *→* ((1 . \"one\") (2 . \"two\"))\n(setf (cdr (assoc 2 *alist-copy*)) \"deux\") *→* \"deux\"\n*alist-copy* *→* ((1 . \"one\") (2 . \"deux\"))\n*alist* *→* ((1 . \"one\") (2 . \"two\"))\n(setf (cdr (assoc 1 *list-copy*)) \"uno\") *→* \"uno\"\n*list-copy* *→* ((1 . \"uno\") (2 . \"two\"))\n*alist* *→* ((1 . \"uno\") (2 . \"two\"))\n\\endcode","\\(defparameter[\\n\\s]*\\*alist\\*[\\n\\s]*\\(acons[\\n\\s]*1[\\n\\s]*\"one\"[\\n\\s]*\\(acons[\\n\\s]*2[\\n\\s]*\"two\"[\\n\\s]*'\\(\\)\\)\\)\\)[\\n\\s]*\\*alist\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*\\(defparameter[\\n\\s]*\\*list-copy\\*[\\n\\s]*\\(copy-list[\\n\\s]*\\*alist\\*\\)\\)[\\n\\s]*\\*list-copy\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*\\(defparameter[\\n\\s]*\\*alist-copy\\*[\\n\\s]*\\(copy-alist[\\n\\s]*\\*alist\\*\\)\\)[\\n\\s]*\\*alist-copy\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*\\(setf[\\n\\s]*\\(cdr[\\n\\s]*\\(assoc[\\n\\s]*2[\\n\\s]*\\*alist-copy\\*\\)\\)[\\n\\s]*\"deux\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"deux\"[\\n\\s]*\\*alist-copy\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"deux\"\\)\\)[\\n\\s]*\\*alist\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*\\(setf[\\n\\s]*\\(cdr[\\n\\s]*\\(assoc[\\n\\s]*1[\\n\\s]*\\*list-copy\\*\\)\\)[\\n\\s]*\"uno\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"uno\"[\\n\\s]*\\*list-copy\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"uno\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)[\\n\\s]*\\*alist\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"uno\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)\\)"],["\\code\n (pairlis '(one two) '(1 2) '((three . 3) (four . 19)))\n\\endcode","\\(pairlis[\\n\\s]*'\\(one[\\n\\s]*two\\)[\\n\\s]*'\\(1[\\n\\s]*2\\)[\\n\\s]*'\\(\\(three[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(four[\\n\\s]*\\.[\\n\\s]*19\\)\\)\\)"],["\\code\n ((one . 1) (two . 2) (three . 3) (four . 19))\n\\endcode","\\(\\(one[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(two[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(three[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(four[\\n\\s]*\\.[\\n\\s]*19\\)\\)"],["\\code\n ((two . 2) (one . 1) (three . 3) (four . 19))\n\\endcode","\\(\\(two[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(one[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(three[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(four[\\n\\s]*\\.[\\n\\s]*19\\)\\)"],["\\code\n (setq keys '(1 2 3)\n        data '(\"one\" \"two\" \"three\")\n        alist '((4 . \"four\"))) *→* ((4 . \"four\"))\n (pairlis keys data) *→* ((3 . \"three\") (2 . \"two\") (1 . \"one\"))\n (pairlis keys data alist)\n*→* ((3 . \"three\") (2 . \"two\") (1 . \"one\") (4 . \"four\"))\n alist *→* ((4 . \"four\"))\n\\endcode","\\(setq[\\n\\s]*keys[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*data[\\n\\s]*'\\(\"one\"[\\n\\s]*\"two\"[\\n\\s]*\"three\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*alist[\\n\\s]*'\\(\\(4[\\n\\s]*\\.[\\n\\s]*\"four\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4[\\n\\s]*\\.[\\n\\s]*\"four\"\\)\\)[\\n\\s]*[\\n\\s]*\\(pairlis[\\n\\s]*keys[\\n\\s]*data\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(3[\\n\\s]*\\.[\\n\\s]*\"three\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)\\)[\\n\\s]*[\\n\\s]*\\(pairlis[\\n\\s]*keys[\\n\\s]*data[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(3[\\n\\s]*\\.[\\n\\s]*\"three\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*\"four\"\\)\\)[\\n\\s]*[\\n\\s]*alist[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4[\\n\\s]*\\.[\\n\\s]*\"four\"\\)\\)"],["\\code\n (setq alist '((1 . \"one\") (2 . \"two\") (3 . 3))) \n*→* ((1 . \"one\") (2 . \"two\") (3 . 3))\n (rassoc 3 alist) *→* (3 . 3)\n (rassoc \"two\" alist) *→* NIL\n (rassoc \"two\" alist :test 'equal) *→* (2 . \"two\")\n (rassoc 1 alist :key #'(lambda (x) (if (numberp x) (/ x 3)))) *→* (3 . 3)\n (rassoc 'a '((a . b) (b . c) (c . a) (z . a))) *→* (C . A)\n (rassoc-if #'stringp alist) *→* (1 . \"one\")\n (rassoc-if-not #'vectorp alist) *→* (3 . 3)\n\\endcode","\\(setq[\\n\\s]*alist[\\n\\s]*'\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(rassoc[\\n\\s]*3[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(rassoc[\\n\\s]*\"two\"[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(rassoc[\\n\\s]*\"two\"[\\n\\s]*alist[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*\"two\"\\)[\\n\\s]*[\\n\\s]*\\(rassoc[\\n\\s]*1[\\n\\s]*alist[\\n\\s]*:key[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*x\\)[\\n\\s]*\\(/[\\n\\s]*x[\\n\\s]*3\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(rassoc[\\n\\s]*'a[\\n\\s]*'\\(\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*\\(b[\\n\\s]*\\.[\\n\\s]*c\\)[\\n\\s]*\\(c[\\n\\s]*\\.[\\n\\s]*a\\)[\\n\\s]*\\(z[\\n\\s]*\\.[\\n\\s]*a\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C[\\n\\s]*\\.[\\n\\s]*A\\)[\\n\\s]*[\\n\\s]*\\(rassoc-if[\\n\\s]*#'stringp[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*\"one\"\\)[\\n\\s]*[\\n\\s]*\\(rassoc-if-not[\\n\\s]*#'vectorp[\\n\\s]*alist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*3\\)"],["\\code\n (rassoc item list :test fn)\n\\endcode","\\(rassoc[\\n\\s]*item[\\n\\s]*list[\\n\\s]*:test[\\n\\s]*fn\\)"],["\\code\n (find item list :test fn :key #'cdr)\n\\endcode","\\(find[\\n\\s]*item[\\n\\s]*list[\\n\\s]*:test[\\n\\s]*fn[\\n\\s]*:key[\\n\\s]*#'cdr\\)"],["\\code\n (setq x '()) *→* NIL\n (setq *indicator-list* '(prop1 prop2)) *→* (PROP1 PROP2)\n (getf x 'prop1) *→* NIL\n (setf (getf x 'prop1) 'val1) *→* VAL1\n (eq (getf x 'prop1) 'val1) *→ true*\n (get-properties x *indicator-list*) *→* PROP1, VAL1, (PROP1 VAL1)\n x *→* (PROP1 VAL1)\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*indicator-list\\*[\\n\\s]*'\\(prop1[\\n\\s]*prop2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP1[\\n\\s]*PROP2\\)[\\n\\s]*[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*'val1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL1[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*'val1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(get-properties[\\n\\s]*x[\\n\\s]*\\*indicator-list\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*PROP1,[\\n\\s]*VAL1,[\\n\\s]*\\(PROP1[\\n\\s]*VAL1\\)[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP1[\\n\\s]*VAL1\\)"],["\\code\n (setq x '()) *→* NIL\n (getf x 'prop1) *→* NIL\n (getf x 'prop1 7) *→* 7\n (getf x 'prop1) *→* NIL\n (setf (getf x 'prop1) 'val1) *→* VAL1\n (eq (getf x 'prop1) 'val1) *→ true*\n (getf x 'prop1) *→* VAL1\n (getf x 'prop1 7) *→* VAL1\n x *→* (PROP1 VAL1)\n\n;; Examples of implementation variation permitted.\n (setq foo (list 'a 'b 'c 'd 'e 'f)) *→* (A B C D E F)\n (setq bar (cddr foo)) *→* (C D E F)\n (remf foo 'c) *→ true*\n foo *→* (A B E F)\n bar\n*→* (C D E F)\n\\OV (C)\n\\OV (NIL)\n\\OV (C NIL)\n\\OV (C D)\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*'val1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL1[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*'val1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL1[\\n\\s]*[\\n\\s]*\\(getf[\\n\\s]*x[\\n\\s]*'prop1[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL1[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP1[\\n\\s]*VAL1\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Examples[\\n\\s]*of[\\n\\s]*implementation[\\n\\s]*variation[\\n\\s]*permitted\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d[\\n\\s]*'e[\\n\\s]*'f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*bar[\\n\\s]*\\(cddr[\\n\\s]*foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*\\(remf[\\n\\s]*foo[\\n\\s]*'c\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*foo[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*[\\n\\s]*bar[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(C\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(NIL\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(C[\\n\\s]*NIL\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(C[\\n\\s]*D\\)"],["\\code\n (let ((plist '()))\n   (incf (getf plist 'count 0))\n   plist) *→* (COUNT 1)\n\\endcode","\\(let[\\n\\s]*\\(\\(plist[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*\\(getf[\\n\\s]*plist[\\n\\s]*'count[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*plist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(COUNT[\\n\\s]*1\\)"],["\\code\n (setq x (cons () ())) *→* (NIL)\n (setf (getf (car x) 'prop1) 'val1) *→* VAL1\n (remf (car x) 'prop1) *→ true*\n (remf (car x) 'prop1) *→ false*\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(getf[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'prop1\\)[\\n\\s]*'val1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL1[\\n\\s]*[\\n\\s]*\\(remf[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'prop1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(remf[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'prop1\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (setq list1 (list 1 1 2 3 4 a b c \"A\" \"B\" \"C\" \"d\")\n       list2 (list 1 4 5 b c d \"a\" \"B\" \"c\" \"D\")) \n  *→* (1 4 5 B C D \"a\" \"B\" \"c\" \"D\")\n (intersection list1 list2) *→* (C B 4 1 1)\n (intersection list1 list2 :test 'equal) *→* (\"B\" C B 4 1 1)\n (intersection list1 list2 :test #'equalp) *→* (\"d\" \"C\" \"B\" \"A\" C B 4 1 1) \n (nintersection list1 list2) *→* (1 1 4 B C)\n list1 *→* \\term&#123;implementation-dependent&#125; ;\\eg (1 1 4 B C)\n list2 *→* \\term&#123;implementation-dependent&#125; ;\\eg (1 4 5 B C D \"a\" \"B\" \"c\" \"D\")\n (setq list1 (copy-list '((1 . 2) (2 . 3) (3 . 4) (4 . 5))))\n*→* ((1 . 2) (2 . 3) (3 . 4) (4 . 5)) \n (setq list2 (copy-list '((1 . 3) (2 . 4) (3 . 6) (4 . 8))))\n*→* ((1 . 3) (2 . 4) (3 . 6) (4 . 8)) \n (nintersection list1 list2 :key #'cdr) *→* ((2 . 3) (3 . 4)) \n list1 *→* \\term&#123;implementation-dependent&#125; ;\\eg ((1 . 2) (2 . 3) (3 . 4)) \n list2 *→* \\term&#123;implementation-dependent&#125; ;\\eg ((1 . 3) (2 . 4) (3 . 6) (4 . 8)) \n\\endcode","\\(setq[\\n\\s]*list1[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\"A\"[\\n\\s]*\"B\"[\\n\\s]*\"C\"[\\n\\s]*\"d\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*list2[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*4[\\n\\s]*5[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*\"a\"[\\n\\s]*\"B\"[\\n\\s]*\"c\"[\\n\\s]*\"D\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*4[\\n\\s]*5[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*\"a\"[\\n\\s]*\"B\"[\\n\\s]*\"c\"[\\n\\s]*\"D\"\\)[\\n\\s]*[\\n\\s]*\\(intersection[\\n\\s]*list1[\\n\\s]*list2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C[\\n\\s]*B[\\n\\s]*4[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(intersection[\\n\\s]*list1[\\n\\s]*list2[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"B\"[\\n\\s]*C[\\n\\s]*B[\\n\\s]*4[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(intersection[\\n\\s]*list1[\\n\\s]*list2[\\n\\s]*:test[\\n\\s]*#'equalp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"d\"[\\n\\s]*\"C\"[\\n\\s]*\"B\"[\\n\\s]*\"A\"[\\n\\s]*C[\\n\\s]*B[\\n\\s]*4[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nintersection[\\n\\s]*list1[\\n\\s]*list2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*1[\\n\\s]*4[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*list1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*;\\\\eg[\\n\\s]*\\(1[\\n\\s]*1[\\n\\s]*4[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*list2[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*;\\\\eg[\\n\\s]*\\(1[\\n\\s]*4[\\n\\s]*5[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*\"a\"[\\n\\s]*\"B\"[\\n\\s]*\"c\"[\\n\\s]*\"D\"\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*list1[\\n\\s]*\\(copy-list[\\n\\s]*'\\(\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*5\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*list2[\\n\\s]*\\(copy-list[\\n\\s]*'\\(\\(1[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*6\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*8\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*6\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*8\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nintersection[\\n\\s]*list1[\\n\\s]*list2[\\n\\s]*:key[\\n\\s]*#'cdr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(2[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*list1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*;\\\\eg[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*list2[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*;\\\\eg[\\n\\s]*\\(\\(1[\\n\\s]*\\.[\\n\\s]*3\\)[\\n\\s]*\\(2[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*\\(3[\\n\\s]*\\.[\\n\\s]*6\\)[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*8\\)\\)"],["\\code\n (setq slist '()) *→* NIL \n (adjoin 'a slist) *→* (A) \n slist *→* NIL \n (setq slist (adjoin '(test-item 1) slist)) *→* ((TEST-ITEM 1)) \n (adjoin '(test-item 1) slist) *→* ((TEST-ITEM 1) (TEST-ITEM 1)) \n (adjoin '(test-item 1) slist :test 'equal) *→* ((TEST-ITEM 1)) \n (adjoin '(new-test-item 1) slist :key #'cadr) *→* ((TEST-ITEM 1)) \n (adjoin '(new-test-item 1) slist) *→* ((NEW-TEST-ITEM 1) (TEST-ITEM 1)) \n\\endcode","\\(setq[\\n\\s]*slist[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(adjoin[\\n\\s]*'a[\\n\\s]*slist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*slist[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*slist[\\n\\s]*\\(adjoin[\\n\\s]*'\\(test-item[\\n\\s]*1\\)[\\n\\s]*slist\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(TEST-ITEM[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(adjoin[\\n\\s]*'\\(test-item[\\n\\s]*1\\)[\\n\\s]*slist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(TEST-ITEM[\\n\\s]*1\\)[\\n\\s]*\\(TEST-ITEM[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(adjoin[\\n\\s]*'\\(test-item[\\n\\s]*1\\)[\\n\\s]*slist[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(TEST-ITEM[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(adjoin[\\n\\s]*'\\(new-test-item[\\n\\s]*1\\)[\\n\\s]*slist[\\n\\s]*:key[\\n\\s]*#'cadr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(TEST-ITEM[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(adjoin[\\n\\s]*'\\(new-test-item[\\n\\s]*1\\)[\\n\\s]*slist\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(NEW-TEST-ITEM[\\n\\s]*1\\)[\\n\\s]*\\(TEST-ITEM[\\n\\s]*1\\)\\)"],["\\code\n (adjoin item list :key fn)\n   \\EQ (if (member (fn item) list :key fn) list (cons item list))\n\\endcode","\\(adjoin[\\n\\s]*item[\\n\\s]*list[\\n\\s]*:key[\\n\\s]*fn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(if[\\n\\s]*\\(member[\\n\\s]*\\(fn[\\n\\s]*item\\)[\\n\\s]*list[\\n\\s]*:key[\\n\\s]*fn\\)[\\n\\s]*list[\\n\\s]*\\(cons[\\n\\s]*item[\\n\\s]*list\\)\\)"],["\\code\n (setq x '(a (b c) d)) *→* (A (B C) D)\n (pushnew 5 (cadr x)) *→* (5 B C)   \n x *→* (A (5 B C) D)\n (pushnew 'b (cadr x)) *→* (5 B C)  \n x *→* (A (5 B C) D)\n (setq lst '((1) (1 2) (1 2 3))) *→* ((1) (1 2) (1 2 3))\n (pushnew '(2) lst) *→* ((2) (1) (1 2) (1 2 3))\n (pushnew '(1) lst) *→* ((1) (2) (1) (1 2) (1 2 3))\n (pushnew '(1) lst :test 'equal) *→* ((1) (2) (1) (1 2) (1 2 3))\n (pushnew '(1) lst :key #'car) *→* ((1) (2) (1) (1 2) (1 2 3)) \n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*\\(b[\\n\\s]*c\\)[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(B[\\n\\s]*C\\)[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*5[\\n\\s]*\\(cadr[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*'b[\\n\\s]*\\(cadr[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*'\\(2\\)[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(2\\)[\\n\\s]*\\(1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*'\\(1\\)[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*'\\(1\\)[\\n\\s]*lst[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*'\\(1\\)[\\n\\s]*lst[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)"],["\\code\n (pushnew item place :test p)\n\\endcode","\\(pushnew[\\n\\s]*item[\\n\\s]*place[\\n\\s]*:test[\\n\\s]*p\\)"],["\\code\n (setf place (adjoin item place :test p))\n\\endcode","\\(setf[\\n\\s]*place[\\n\\s]*\\(adjoin[\\n\\s]*item[\\n\\s]*place[\\n\\s]*:test[\\n\\s]*p\\)\\)"],["\\code\n (setq lst1 (list \"A\" \"b\" \"C\" \"d\")\n       lst2 (list \"a\" \"B\" \"C\" \"d\")) *→* (\"a\" \"B\" \"C\" \"d\")\n (set-difference lst1 lst2) *→* (\"d\" \"C\" \"b\" \"A\")\n (set-difference lst1 lst2 :test 'equal) *→* (\"b\" \"A\")\n (set-difference lst1 lst2 :test #'equalp) *→* NIL \n (nset-difference lst1 lst2 :test #'string=) *→* (\"A\" \"b\")\n (setq lst1 '((\"a\" . \"b\") (\"c\" . \"d\") (\"e\" . \"f\")))\n*→* ((\"a\" . \"b\") (\"c\" . \"d\") (\"e\" . \"f\")) \n (setq lst2 '((\"c\" . \"a\") (\"e\" . \"b\") (\"d\" . \"a\")))\n*→* ((\"c\" . \"a\") (\"e\" . \"b\") (\"d\" . \"a\")) \n (nset-difference lst1 lst2 :test #'string= :key #'cdr)\n*→* ((\"c\" . \"d\") (\"e\" . \"f\")) \n lst1 *→* ((\"a\" . \"b\") (\"c\" . \"d\") (\"e\" . \"f\")) \n lst2 *→* ((\"c\" . \"a\") (\"e\" . \"b\") (\"d\" . \"a\")) \n\\endcode","\\(setq[\\n\\s]*lst1[\\n\\s]*\\(list[\\n\\s]*\"A\"[\\n\\s]*\"b\"[\\n\\s]*\"C\"[\\n\\s]*\"d\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*\\(list[\\n\\s]*\"a\"[\\n\\s]*\"B\"[\\n\\s]*\"C\"[\\n\\s]*\"d\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"a\"[\\n\\s]*\"B\"[\\n\\s]*\"C\"[\\n\\s]*\"d\"\\)[\\n\\s]*[\\n\\s]*\\(set-difference[\\n\\s]*lst1[\\n\\s]*lst2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"d\"[\\n\\s]*\"C\"[\\n\\s]*\"b\"[\\n\\s]*\"A\"\\)[\\n\\s]*[\\n\\s]*\\(set-difference[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"b\"[\\n\\s]*\"A\"\\)[\\n\\s]*[\\n\\s]*\\(set-difference[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*#'equalp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nset-difference[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*#'string=\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"A\"[\\n\\s]*\"b\"\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst1[\\n\\s]*'\\(\\(\"a\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"a\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst2[\\n\\s]*'\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nset-difference[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*#'string=[\\n\\s]*:key[\\n\\s]*#'cdr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*lst1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"a\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)"],["\\code\n;; Remove all flavor names that contain \"c\" or \"w\".\n (set-difference '(\"strawberry\" \"chocolate\" \"banana\"\n                  \"lemon\" \"pistachio\" \"rhubarb\")\n          '(#\\\\c #\\\\w)\n          :test #'(lambda (s c) (find c s)))\n*→* (\"banana\" \"rhubarb\" \"lemon\")    ;One possible ordering.\n\\endcode",";;[\\n\\s]*Remove[\\n\\s]*all[\\n\\s]*flavor[\\n\\s]*names[\\n\\s]*that[\\n\\s]*contain[\\n\\s]*\"c\"[\\n\\s]*or[\\n\\s]*\"w\"\\.[\\n\\s]*[\\n\\s]*\\(set-difference[\\n\\s]*'\\(\"strawberry\"[\\n\\s]*\"chocolate\"[\\n\\s]*\"banana\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"lemon\"[\\n\\s]*\"pistachio\"[\\n\\s]*\"rhubarb\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(#\\\\\\\\c[\\n\\s]*#\\\\\\\\w\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'\\(lambda[\\n\\s]*\\(s[\\n\\s]*c\\)[\\n\\s]*\\(find[\\n\\s]*c[\\n\\s]*s\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"banana\"[\\n\\s]*\"rhubarb\"[\\n\\s]*\"lemon\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;One[\\n\\s]*possible[\\n\\s]*ordering\\."],["\\code\n (setq lst1 (list 1 \"a\" \"b\")\n       lst2 (list 1 \"A\" \"b\")) *→* (1 \"A\" \"b\")\n (set-exclusive-or lst1 lst2) *→* (\"b\" \"A\" \"b\" \"a\")\n (set-exclusive-or lst1 lst2 :test #'equal) *→* (\"A\" \"a\")\n (set-exclusive-or lst1 lst2 :test 'equalp) *→* NIL \n (nset-exclusive-or lst1 lst2) *→* (\"a\" \"b\" \"A\" \"b\") \n (setq lst1 (list ((\"a\" . \"b\") (\"c\" . \"d\") (\"e\" . \"f\"))))\n*→* ((\"a\" . \"b\") (\"c\" . \"d\") (\"e\" . \"f\"))\n (setq lst2 (list ((\"c\" . \"a\") (\"e\" . \"b\") (\"d\" . \"a\"))))\n*→* ((\"c\" . \"a\") (\"e\" . \"b\") (\"d\" . \"a\")) \n (nset-exclusive-or lst1 lst2 :test #'string= :key #'cdr)\n*→* ((\"c\" . \"d\") (\"e\" . \"f\") (\"c\" . \"a\") (\"d\" . \"a\")) \n lst1 *→* ((\"a\" . \"b\") (\"c\" . \"d\") (\"e\" . \"f\"))\n lst2 *→* ((\"c\" . \"a\") (\"d\" . \"a\")) \n\\endcode","\\(setq[\\n\\s]*lst1[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*\"a\"[\\n\\s]*\"b\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*\"A\"[\\n\\s]*\"b\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\"A\"[\\n\\s]*\"b\"\\)[\\n\\s]*[\\n\\s]*\\(set-exclusive-or[\\n\\s]*lst1[\\n\\s]*lst2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"b\"[\\n\\s]*\"A\"[\\n\\s]*\"b\"[\\n\\s]*\"a\"\\)[\\n\\s]*[\\n\\s]*\\(set-exclusive-or[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*#'equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"A\"[\\n\\s]*\"a\"\\)[\\n\\s]*[\\n\\s]*\\(set-exclusive-or[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*'equalp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nset-exclusive-or[\\n\\s]*lst1[\\n\\s]*lst2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"a\"[\\n\\s]*\"b\"[\\n\\s]*\"A\"[\\n\\s]*\"b\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst1[\\n\\s]*\\(list[\\n\\s]*\\(\\(\"a\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"a\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst2[\\n\\s]*\\(list[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nset-exclusive-or[\\n\\s]*lst1[\\n\\s]*lst2[\\n\\s]*:test[\\n\\s]*#'string=[\\n\\s]*:key[\\n\\s]*#'cdr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*lst1[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"a\"[\\n\\s]*\\.[\\n\\s]*\"b\"\\)[\\n\\s]*\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"d\"\\)[\\n\\s]*\\(\"e\"[\\n\\s]*\\.[\\n\\s]*\"f\"\\)\\)[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\"c\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)[\\n\\s]*\\(\"d\"[\\n\\s]*\\.[\\n\\s]*\"a\"\\)\\)"],["\\code\n (setq cosmos '(1 \"a\" (1 2))) *→* (1 \"a\" (1 2))\n (subsetp '(1) cosmos) *→ true*\n (subsetp '((1 2)) cosmos) *→ false*\n (subsetp '((1 2)) cosmos :test 'equal) *→ true*\n (subsetp '(1 \"A\") cosmos :test #'equalp) *→ true*\n (subsetp '((1) (2)) '((1) (2))) *→ false*\n (subsetp '((1) (2)) '((1) (2)) :key #'car) *→ true*\n\\endcode","\\(setq[\\n\\s]*cosmos[\\n\\s]*'\\(1[\\n\\s]*\"a\"[\\n\\s]*\\(1[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\"a\"[\\n\\s]*\\(1[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*'\\(1\\)[\\n\\s]*cosmos\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*'\\(\\(1[\\n\\s]*2\\)\\)[\\n\\s]*cosmos\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*'\\(\\(1[\\n\\s]*2\\)\\)[\\n\\s]*cosmos[\\n\\s]*:test[\\n\\s]*'equal\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*'\\(1[\\n\\s]*\"A\"\\)[\\n\\s]*cosmos[\\n\\s]*:test[\\n\\s]*#'equalp\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)\\)[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)\\)[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)\\)[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (union '(a b c) '(f a d))\n*→* (A B C F D)\n\\OV (B C F A D)\n\\OV (D F A B C)\n (union '((x 5) (y 6)) '((z 2) (x 4)) :key #'car)\n*→* ((X 5) (Y 6) (Z 2))\n\\OV ((X 4) (Y 6) (Z 2))\n\n (setq lst1 (list 1 2 '(1 2) \"a\" \"b\")\n       lst2 (list 2 3 '(2 3) \"B\" \"C\"))\n*→* (2 3 (2 3) \"B\" \"C\")\n (nunion lst1 lst2)\n*→* (1 (1 2) \"a\" \"b\" 2 3 (2 3) \"B\" \"C\") \n\\OV (1 2 (1 2) \"a\" \"b\" \"C\" \"B\" (2 3) 3)\n\\endcode","\\(union[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(f[\\n\\s]*a[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*F[\\n\\s]*D\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(B[\\n\\s]*C[\\n\\s]*F[\\n\\s]*A[\\n\\s]*D\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(D[\\n\\s]*F[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(union[\\n\\s]*'\\(\\(x[\\n\\s]*5\\)[\\n\\s]*\\(y[\\n\\s]*6\\)\\)[\\n\\s]*'\\(\\(z[\\n\\s]*2\\)[\\n\\s]*\\(x[\\n\\s]*4\\)\\)[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(X[\\n\\s]*5\\)[\\n\\s]*\\(Y[\\n\\s]*6\\)[\\n\\s]*\\(Z[\\n\\s]*2\\)\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(\\(X[\\n\\s]*4\\)[\\n\\s]*\\(Y[\\n\\s]*6\\)[\\n\\s]*\\(Z[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst1[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*'\\(1[\\n\\s]*2\\)[\\n\\s]*\"a\"[\\n\\s]*\"b\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst2[\\n\\s]*\\(list[\\n\\s]*2[\\n\\s]*3[\\n\\s]*'\\(2[\\n\\s]*3\\)[\\n\\s]*\"B\"[\\n\\s]*\"C\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*\"B\"[\\n\\s]*\"C\"\\)[\\n\\s]*[\\n\\s]*\\(nunion[\\n\\s]*lst1[\\n\\s]*lst2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\"a\"[\\n\\s]*\"b\"[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*\"B\"[\\n\\s]*\"C\"\\)[\\n\\s]*[\\n\\s]*\\\\OV[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\"a\"[\\n\\s]*\"b\"[\\n\\s]*\"C\"[\\n\\s]*\"B\"[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*3\\)"],["\\code\n (decode-universal-time 0 0) *→* 0, 0, 0, 1, 1, 1900, 0, false, 0\n\n;; The next two examples assume Eastern Daylight Time.\n (decode-universal-time 2414296800 5) *→* 0, 0, 1, 4, 7, 1976, 6, false, 5\n (decode-universal-time 2414293200) *→* 0, 0, 1, 4, 7, 1976, 6, true, 5\n\n;; This example assumes that the time zone is Eastern Daylight Time\n;; (and that the time zone is constant throughout the example).\n (let* ((here (nth 8 (multiple-value-list (get-decoded-time)))) ;Time zone\n        (recently (get-universal-time))\n        (a (nthcdr 7 (multiple-value-list (decode-universal-time recently))))\n        (b (nthcdr 7 (multiple-value-list (decode-universal-time recently here)))))\n   (list a b (equal a b))) *→* ((T 5) (NIL 5) NIL)\n\\endcode","\\(decode-universal-time[\\n\\s]*0[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*0,[\\n\\s]*0,[\\n\\s]*1,[\\n\\s]*1,[\\n\\s]*1900,[\\n\\s]*0,[\\n\\s]*false,[\\n\\s]*0[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*next[\\n\\s]*two[\\n\\s]*examples[\\n\\s]*assume[\\n\\s]*Eastern[\\n\\s]*Daylight[\\n\\s]*Time\\.[\\n\\s]*[\\n\\s]*\\(decode-universal-time[\\n\\s]*2414296800[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*0,[\\n\\s]*1,[\\n\\s]*4,[\\n\\s]*7,[\\n\\s]*1976,[\\n\\s]*6,[\\n\\s]*false,[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(decode-universal-time[\\n\\s]*2414293200\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*0,[\\n\\s]*1,[\\n\\s]*4,[\\n\\s]*7,[\\n\\s]*1976,[\\n\\s]*6,[\\n\\s]*true,[\\n\\s]*5[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*assumes[\\n\\s]*that[\\n\\s]*the[\\n\\s]*time[\\n\\s]*zone[\\n\\s]*is[\\n\\s]*Eastern[\\n\\s]*Daylight[\\n\\s]*Time[\\n\\s]*;;[\\n\\s]*\\(and[\\n\\s]*that[\\n\\s]*the[\\n\\s]*time[\\n\\s]*zone[\\n\\s]*is[\\n\\s]*constant[\\n\\s]*throughout[\\n\\s]*the[\\n\\s]*example\\)\\.[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(here[\\n\\s]*\\(nth[\\n\\s]*8[\\n\\s]*\\(multiple-value-list[\\n\\s]*\\(get-decoded-time\\)\\)\\)\\)[\\n\\s]*;Time[\\n\\s]*zone[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(recently[\\n\\s]*\\(get-universal-time\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\(nthcdr[\\n\\s]*7[\\n\\s]*\\(multiple-value-list[\\n\\s]*\\(decode-universal-time[\\n\\s]*recently\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*\\(nthcdr[\\n\\s]*7[\\n\\s]*\\(multiple-value-list[\\n\\s]*\\(decode-universal-time[\\n\\s]*recently[\\n\\s]*here\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*\\(equal[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(T[\\n\\s]*5\\)[\\n\\s]*\\(NIL[\\n\\s]*5\\)[\\n\\s]*NIL\\)"],["\\code\n (encode-universal-time 0 0 0 1 1 1900 0) *→* 0\n (encode-universal-time 0 0 1 4 7 1976 5) *→* 2414296800\n;; The next example assumes Eastern Daylight Time.\n (encode-universal-time 0 0 1 4 7 1976) *→* 2414293200\n\\endcode","\\(encode-universal-time[\\n\\s]*0[\\n\\s]*0[\\n\\s]*0[\\n\\s]*1[\\n\\s]*1[\\n\\s]*1900[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(encode-universal-time[\\n\\s]*0[\\n\\s]*0[\\n\\s]*1[\\n\\s]*4[\\n\\s]*7[\\n\\s]*1976[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2414296800[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*next[\\n\\s]*example[\\n\\s]*assumes[\\n\\s]*Eastern[\\n\\s]*Daylight[\\n\\s]*Time\\.[\\n\\s]*[\\n\\s]*\\(encode-universal-time[\\n\\s]*0[\\n\\s]*0[\\n\\s]*1[\\n\\s]*4[\\n\\s]*7[\\n\\s]*1976\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2414293200"],["\\code\n;; At noon on July 4, 1976 in Eastern Daylight Time.\n (get-decoded-time) *→* 0, 0, 12, 4, 7, 1976, 6, true, 5\n;; At exactly the same instant.\n (get-universal-time) *→* 2414332800\n;; Exactly five minutes later.\n (get-universal-time) *→* 2414333100\n;; The difference is 300 seconds (five minutes)\n (- * **) *→* 300\n\\endcode",";;[\\n\\s]*At[\\n\\s]*noon[\\n\\s]*on[\\n\\s]*July[\\n\\s]*4,[\\n\\s]*1976[\\n\\s]*in[\\n\\s]*Eastern[\\n\\s]*Daylight[\\n\\s]*Time\\.[\\n\\s]*[\\n\\s]*\\(get-decoded-time\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*0,[\\n\\s]*12,[\\n\\s]*4,[\\n\\s]*7,[\\n\\s]*1976,[\\n\\s]*6,[\\n\\s]*true,[\\n\\s]*5[\\n\\s]*;;[\\n\\s]*At[\\n\\s]*exactly[\\n\\s]*the[\\n\\s]*same[\\n\\s]*instant\\.[\\n\\s]*[\\n\\s]*\\(get-universal-time\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2414332800[\\n\\s]*;;[\\n\\s]*Exactly[\\n\\s]*five[\\n\\s]*minutes[\\n\\s]*later\\.[\\n\\s]*[\\n\\s]*\\(get-universal-time\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2414333100[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*difference[\\n\\s]*is[\\n\\s]*300[\\n\\s]*seconds[\\n\\s]*\\(five[\\n\\s]*minutes\\)[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*\\*[\\n\\s]*\\*\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*300"],["\\code\n (get-decoded-time) \\EQ (decode-universal-time (get-universal-time))\n\\endcode","\\(get-decoded-time\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(decode-universal-time[\\n\\s]*\\(get-universal-time\\)\\)"],["\\code\n (sleep 1) *→* NIL \n\n;; Actually, since SLEEP is permitted to use approximate timing, \n;; this might not always yield true, but it will often enough that\n;; we felt it to be a productive example of the intent.\n (let ((then (get-universal-time))\n       (now  (progn (sleep 10) (get-universal-time))))\n   (&#62;= (- now then) 10))\n*→ true*\n\\endcode","\\(sleep[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Actually,[\\n\\s]*since[\\n\\s]*SLEEP[\\n\\s]*is[\\n\\s]*permitted[\\n\\s]*to[\\n\\s]*use[\\n\\s]*approximate[\\n\\s]*timing,[\\n\\s]*[\\n\\s]*;;[\\n\\s]*this[\\n\\s]*might[\\n\\s]*not[\\n\\s]*always[\\n\\s]*yield[\\n\\s]*true,[\\n\\s]*but[\\n\\s]*it[\\n\\s]*will[\\n\\s]*often[\\n\\s]*enough[\\n\\s]*that[\\n\\s]*;;[\\n\\s]*we[\\n\\s]*felt[\\n\\s]*it[\\n\\s]*to[\\n\\s]*be[\\n\\s]*a[\\n\\s]*productive[\\n\\s]*example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*intent\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(then[\\n\\s]*\\(get-universal-time\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(now[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(sleep[\\n\\s]*10\\)[\\n\\s]*\\(get-universal-time\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(&#62;=[\\n\\s]*\\(-[\\n\\s]*now[\\n\\s]*then\\)[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n%  (defvar *my-table* (make-hash-table))\n%  (setf (gethash 'foo *my-table*) 1)\n%  (setf (gethash 'bar *my-table*) 2)\n%  (setf (gethash 'foobar *my-table*) 3)\n%  (describe *my-table* :interactive t)\n% #&#60;EQ-HASH-TABLE 259&#62; has 3 entries.\n% Do you want to see its contents? (Yes or No) Yes\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*my-table\\*[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*'foo[\\n\\s]*\\*my-table\\*\\)[\\n\\s]*1\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*'bar[\\n\\s]*\\*my-table\\*\\)[\\n\\s]*2\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*'foobar[\\n\\s]*\\*my-table\\*\\)[\\n\\s]*3\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(describe[\\n\\s]*\\*my-table\\*[\\n\\s]*:interactive[\\n\\s]*t\\)[\\n\\s]*%[\\n\\s]*#&#60;EQ-HASH-TABLE[\\n\\s]*259&#62;[\\n\\s]*has[\\n\\s]*3[\\n\\s]*entries\\.[\\n\\s]*%[\\n\\s]*Do[\\n\\s]*you[\\n\\s]*want[\\n\\s]*to[\\n\\s]*see[\\n\\s]*its[\\n\\s]*contents\\?[\\n\\s]*\\(Yes[\\n\\s]*or[\\n\\s]*No\\)[\\n\\s]*Yes[\\n\\s]*%"],["\\code\n (defclass spaceship ()\n   ((captain :initarg :captain :accessor spaceship-captain)\n    (serial# :initarg :serial-number :accessor spaceship-serial-number)))\n\n (defclass federation-starship (spaceship) ())\n\n (defmethod describe-object ((s spaceship) stream)\n   (with-slots (captain serial#) s\n     (format stream \"~&~S is a spaceship of type ~S,~\n                     ~%with ~A at the helm ~\n                       and with serial number ~D.~%\"\n             s (type-of s) captain serial#)))\n\n (make-instance 'federation-starship\n                :captain \"Rachel Garrett\"\n                :serial-number \"NCC-1701-C\")\n*→* #&#60;FEDERATION-STARSHIP 26312465&#62;\n\n (describe *)\n\\OUT #&#60;FEDERATION-STARSHIP 26312465&#62; is a spaceship of type FEDERATION-STARSHIP,\n\\OUT with Rachel Garrett at the helm and with serial number NCC-1701-C.\n*→* \\novalues\n\\endcode","\\(defclass[\\n\\s]*spaceship[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(captain[\\n\\s]*:initarg[\\n\\s]*:captain[\\n\\s]*:accessor[\\n\\s]*spaceship-captain\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(serial#[\\n\\s]*:initarg[\\n\\s]*:serial-number[\\n\\s]*:accessor[\\n\\s]*spaceship-serial-number\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*federation-starship[\\n\\s]*\\(spaceship\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*describe-object[\\n\\s]*\\(\\(s[\\n\\s]*spaceship\\)[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(captain[\\n\\s]*serial#\\)[\\n\\s]*s[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*stream[\\n\\s]*\"~&~S[\\n\\s]*is[\\n\\s]*a[\\n\\s]*spaceship[\\n\\s]*of[\\n\\s]*type[\\n\\s]*~S,~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~%with[\\n\\s]*~A[\\n\\s]*at[\\n\\s]*the[\\n\\s]*helm[\\n\\s]*~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*and[\\n\\s]*with[\\n\\s]*serial[\\n\\s]*number[\\n\\s]*~D\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*s[\\n\\s]*\\(type-of[\\n\\s]*s\\)[\\n\\s]*captain[\\n\\s]*serial#\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-instance[\\n\\s]*'federation-starship[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:captain[\\n\\s]*\"Rachel[\\n\\s]*Garrett\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:serial-number[\\n\\s]*\"NCC-1701-C\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FEDERATION-STARSHIP[\\n\\s]*26312465&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(describe[\\n\\s]*\\*\\)[\\n\\s]*\\\\OUT[\\n\\s]*#&#60;FEDERATION-STARSHIP[\\n\\s]*26312465&#62;[\\n\\s]*is[\\n\\s]*a[\\n\\s]*spaceship[\\n\\s]*of[\\n\\s]*type[\\n\\s]*FEDERATION-STARSHIP,[\\n\\s]*\\\\OUT[\\n\\s]*with[\\n\\s]*Rachel[\\n\\s]*Garrett[\\n\\s]*at[\\n\\s]*the[\\n\\s]*helm[\\n\\s]*and[\\n\\s]*with[\\n\\s]*serial[\\n\\s]*number[\\n\\s]*NCC-1701-C\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\novalues"],["\\code\n (defun fact (n) (if (zerop n) 1 (* n (fact (- n 1)))))\n*→* FACT\n (trace fact)\n*→* (FACT)\n;; Of course, the format of traced output is implementation-dependent.\n (fact 3)\n\\OUT 1 Enter FACT 3\n\\OUT | 2 Enter FACT 2\n\\OUT |   3 Enter FACT 1\n\\OUT |   | 4 Enter FACT 0\n\\OUT |   | 4 Exit FACT 1\n\\OUT |   3 Exit FACT 1\n\\OUT | 2 Exit FACT 2\n\\OUT 1 Exit FACT 6\n*→* 6\n\\endcode","\\(defun[\\n\\s]*fact[\\n\\s]*\\(n\\)[\\n\\s]*\\(if[\\n\\s]*\\(zerop[\\n\\s]*n\\)[\\n\\s]*1[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*\\(fact[\\n\\s]*\\(-[\\n\\s]*n[\\n\\s]*1\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FACT[\\n\\s]*[\\n\\s]*\\(trace[\\n\\s]*fact\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FACT\\)[\\n\\s]*;;[\\n\\s]*Of[\\n\\s]*course,[\\n\\s]*the[\\n\\s]*format[\\n\\s]*of[\\n\\s]*traced[\\n\\s]*output[\\n\\s]*is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*\\(fact[\\n\\s]*3\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*3[\\n\\s]*\\\\OUT[\\n\\s]*|[\\n\\s]*2[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*4[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*0[\\n\\s]*\\\\OUT[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*|[\\n\\s]*4[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*|[\\n\\s]*2[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*6[\\n\\s]*\\*\\→\\*[\\n\\s]*6"],["\\code\n (defun f (a) (1+ a)) *→* F\n (eq (symbol-function 'f)\n     (progn (disassemble 'f)\n            (symbol-function 'f))) *→ true*\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(a\\)[\\n\\s]*\\(1\\+[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(symbol-function[\\n\\s]*'f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(disassemble[\\n\\s]*'f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-function[\\n\\s]*'f\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n(format t \"~&Evaluating ~S~%\" -)\n\\OUT Evaluating (FORMAT T \"~&Evaluating ~S~%\" -)\n*→* NIL\n\\endcode","\\(format[\\n\\s]*t[\\n\\s]*\"~&Evaluating[\\n\\s]*~S~%\"[\\n\\s]*-\\)[\\n\\s]*\\\\OUT[\\n\\s]*Evaluating[\\n\\s]*\\(FORMAT[\\n\\s]*T[\\n\\s]*\"~&Evaluating[\\n\\s]*~S~%\"[\\n\\s]*-\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n(+ 0 1) *→* 1\n(- 4 2) *→* 2\n(/ 9 3) *→* 3\n(list + ++ +++) *→* ((/ 9 3) (- 4 2) (+ 0 1))\n(setq a 1 b 2 c 3 d (list a b c)) *→* (1 2 3)\n(setq a 4 b 5 c 6 d (list a b c)) *→* (4 5 6)\n(list a b c) *→* (4 5 6)\n(eval +++) *→* (1 2 3)\n#.`(,@++ d) *→* (1 2 3 (1 2 3))\n\\endcode","\\(\\+[\\n\\s]*0[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*\\(-[\\n\\s]*4[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*\\(/[\\n\\s]*9[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*\\(list[\\n\\s]*\\+[\\n\\s]*\\+\\+[\\n\\s]*\\+\\+\\+\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(/[\\n\\s]*9[\\n\\s]*3\\)[\\n\\s]*\\(-[\\n\\s]*4[\\n\\s]*2\\)[\\n\\s]*\\(\\+[\\n\\s]*0[\\n\\s]*1\\)\\)[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2[\\n\\s]*c[\\n\\s]*3[\\n\\s]*d[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*4[\\n\\s]*b[\\n\\s]*5[\\n\\s]*c[\\n\\s]*6[\\n\\s]*d[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\(eval[\\n\\s]*\\+\\+\\+\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*#\\.`\\(,@\\+\\+[\\n\\s]*d\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)"],["\\code\n(values 'a1 'a2) *→* A1, A2\n'b *→* B\n(values 'c1 'c2 'c3) *→* C1, C2, C3\n(list * ** ***) *→* (C1 B A1)\n\n(defun cube-root (x) (expt x 1/3)) *→* CUBE-ROOT\n(compile *) *→* CUBE-ROOT\n(setq a (cube-root 27.0)) *→* 3.0\n(* * 9.0) *→* 27.0\n\\endcode","\\(values[\\n\\s]*'a1[\\n\\s]*'a2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A1,[\\n\\s]*A2[\\n\\s]*'b[\\n\\s]*\\*\\→\\*[\\n\\s]*B[\\n\\s]*\\(values[\\n\\s]*'c1[\\n\\s]*'c2[\\n\\s]*'c3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*C1,[\\n\\s]*C2,[\\n\\s]*C3[\\n\\s]*\\(list[\\n\\s]*\\*[\\n\\s]*\\*\\*[\\n\\s]*\\*\\*\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C1[\\n\\s]*B[\\n\\s]*A1\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*cube-root[\\n\\s]*\\(x\\)[\\n\\s]*\\(expt[\\n\\s]*x[\\n\\s]*1/3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CUBE-ROOT[\\n\\s]*\\(compile[\\n\\s]*\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CUBE-ROOT[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*\\(cube-root[\\n\\s]*27\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0[\\n\\s]*\\(\\*[\\n\\s]*\\*[\\n\\s]*9\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*27\\.0"],["\\code\n *   \\EQ (car /)\n **  \\EQ (car //)\n *** \\EQ (car ///)\n\\endcode","\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*/\\)[\\n\\s]*[\\n\\s]*\\*\\*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*//\\)[\\n\\s]*[\\n\\s]*\\*\\*\\*[\\n\\s]*\\\\EQ[\\n\\s]*\\(car[\\n\\s]*///\\)"],["\\code\n (floor 22 7) *→* 3, 1\n (+ (* (car /) 7) (cadr /)) *→* 22\n\\endcode","\\(floor[\\n\\s]*22[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3,[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*\\(\\*[\\n\\s]*\\(car[\\n\\s]*/\\)[\\n\\s]*7\\)[\\n\\s]*\\(cadr[\\n\\s]*/\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*22"],["\\code\n (lisp-implementation-type)\n*→* \"ACME Lisp\"\n\\OV \"Joe's Common Lisp\"\n (lisp-implementation-version)\n*→* \"1.3a\"\n*→* \"V2\"\n\\OV \"Release 17.3, ECO #6\"\n\\endcode","\\(lisp-implementation-type\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"ACME[\\n\\s]*Lisp\"[\\n\\s]*\\\\OV[\\n\\s]*\"Joe's[\\n\\s]*Common[\\n\\s]*Lisp\"[\\n\\s]*[\\n\\s]*\\(lisp-implementation-version\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1\\.3a\"[\\n\\s]*\\*\\→\\*[\\n\\s]*\"V2\"[\\n\\s]*\\\\OV[\\n\\s]*\"Release[\\n\\s]*17\\.3,[\\n\\s]*ECO[\\n\\s]*#6\""],["\\code\n (short-site-name)\n*→* \"MIT AI Lab\"\n\\OV \"CMU-CSD\"\n (long-site-name)\n*→* \"MIT Artificial Intelligence Laboratory\"\n\\OV \"CMU Computer Science Department\"\n\\endcode","\\(short-site-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"MIT[\\n\\s]*AI[\\n\\s]*Lab\"[\\n\\s]*\\\\OV[\\n\\s]*\"CMU-CSD\"[\\n\\s]*[\\n\\s]*\\(long-site-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"MIT[\\n\\s]*Artificial[\\n\\s]*Intelligence[\\n\\s]*Laboratory\"[\\n\\s]*\\\\OV[\\n\\s]*\"CMU[\\n\\s]*Computer[\\n\\s]*Science[\\n\\s]*Department\""],["\\code\n (machine-instance)\n*→* \"ACME.COM\"\n\\OV \"S/N 123231\"\n\\OV \"18.26.0.179\"\n\\OV \"AA-00-04-00-A7-A4\"\n\\endcode","\\(machine-instance\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"ACME\\.COM\"[\\n\\s]*\\\\OV[\\n\\s]*\"S/N[\\n\\s]*123231\"[\\n\\s]*\\\\OV[\\n\\s]*\"18\\.26\\.0\\.179\"[\\n\\s]*\\\\OV[\\n\\s]*\"AA-00-04-00-A7-A4\""],["\\code\n (machine-type)\n*→* \"DEC PDP-10\"\n\\OV \"Symbolics LM-2\"\n\\endcode","\\(machine-type\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"DEC[\\n\\s]*PDP-10\"[\\n\\s]*\\\\OV[\\n\\s]*\"Symbolics[\\n\\s]*LM-2\""],["\\code\n (machine-version) *→* \"KL-10, microcode 9\"\n\\endcode","\\(machine-version\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"KL-10,[\\n\\s]*microcode[\\n\\s]*9\""],["\\code\n (software-type) *→* \"Multics\"\n (software-version) *→* \"1.3x\"\n\\endcode","\\(software-type\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Multics\"[\\n\\s]*[\\n\\s]*\\(software-version\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1\\.3x\""],["\\code\n (pathnamep (user-homedir-pathname)) *→ true*\n\\endcode","\\(pathnamep[\\n\\s]*\\(user-homedir-pathname\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n ((lambda \\param&#123;lambda-list&#125; . \\param&#123;body&#125;) . \\param&#123;arguments&#125;)\n\\endcode","\\(\\(lambda[\\n\\s]*\\\\param&#123;lambda-list&#125;[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;body&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;arguments&#125;\\)"],["\\code\n (funcall #'(lambda \\param&#123;lambda-list&#125; . \\param&#123;body&#125;) . \\param&#123;arguments&#125;)\n\\endcode","\\(funcall[\\n\\s]*#'\\(lambda[\\n\\s]*\\\\param&#123;lambda-list&#125;[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;body&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;arguments&#125;\\)"],["\\code\n    (lambda \\param&#123;lambda-list&#125; &#123;\\DeclsAndDoc&#125; \\starparam&#123;form&#125;)\n \\EQ (function (lambda \\param&#123;lambda-list&#125; &#123;\\DeclsAndDoc&#125; \\starparam&#123;form&#125;))\n \\EQ #'(lambda \\param&#123;lambda-list&#125; &#123;\\DeclsAndDoc&#125; \\starparam&#123;form&#125;)\n\\endcode","\\(lambda[\\n\\s]*\\\\param&#123;lambda-list&#125;[\\n\\s]*&#123;\\\\DeclsAndDoc&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\\\param&#123;lambda-list&#125;[\\n\\s]*&#123;\\\\DeclsAndDoc&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*#'\\(lambda[\\n\\s]*\\\\param&#123;lambda-list&#125;[\\n\\s]*&#123;\\\\DeclsAndDoc&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)"],["\\code\n (funcall (lambda (x) (+ x 3)) 4) *→* 7\n\\endcode","\\(funcall[\\n\\s]*\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7"],["\\code\n(defmacro lambda (&whole form &rest bvl-decls-and-body)\n  (declare (ignore bvl-decls-and-body))\n  `#',form)\n\\endcode","\\(defmacro[\\n\\s]*lambda[\\n\\s]*\\(&whole[\\n\\s]*form[\\n\\s]*&rest[\\n\\s]*bvl-decls-and-body\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*bvl-decls-and-body\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*`#',form\\)"],["\\code\n (defun foo () \"bar\") *→* FOO\n (compiled-function-p #'foo) *→* \\term&#123;implementation-dependent&#125;\n (compile 'foo) *→* FOO \n (compiled-function-p #'foo) *→ true*\n (setf (symbol-function 'foo)\n       (compile nil '(lambda () \"replaced\"))) *→* #&#60;Compiled-Function&#62;\n (foo) *→* \"replaced\"\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*\"bar\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*#'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(compile[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*#'foo\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(compile[\\n\\s]*nil[\\n\\s]*'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\"replaced\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Compiled-Function&#62;[\\n\\s]*[\\n\\s]*\\(foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"replaced\""],["\\code\n (setq form '(1+ a) a 999) *→* 999\n (eval form) *→* 1000\n (eval 'form) *→* (1+ A)\n (let ((a '(this would break if eval used local value))) (eval form))\n*→* 1000\n\\endcode","\\(setq[\\n\\s]*form[\\n\\s]*'\\(1\\+[\\n\\s]*a\\)[\\n\\s]*a[\\n\\s]*999\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*999[\\n\\s]*[\\n\\s]*\\(eval[\\n\\s]*form\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1000[\\n\\s]*[\\n\\s]*\\(eval[\\n\\s]*'form\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\+[\\n\\s]*A\\)[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*'\\(this[\\n\\s]*would[\\n\\s]*break[\\n\\s]*if[\\n\\s]*eval[\\n\\s]*used[\\n\\s]*local[\\n\\s]*value\\)\\)\\)[\\n\\s]*\\(eval[\\n\\s]*form\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1000"],["\\code\n (eval (list 'cdr (car '((quote (a . b)) c)))) *→* b\n\\endcode","\\(eval[\\n\\s]*\\(list[\\n\\s]*'cdr[\\n\\s]*\\(car[\\n\\s]*'\\(\\(quote[\\n\\s]*\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*c\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*b"],["\\code\n%  (setq temp 3) *→* 3 \n%  (eval-when (:compile-toplevel) (setq temp 2)) *→* NIL \n%  temp *→* 3 \n%  (eval-when (:execute) (setq temp 2)) *→* 2 \n%  temp *→* 2 \n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:compile-toplevel\\)[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*temp[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute\\)[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*temp[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*%"],["\\code\n (eval-when (:compile-toplevel :load-toplevel :execute)\n   (set-macro-character #\\\\$ #'(lambda (stream char)\n                                (declare (ignore char))\n                                (list 'dollar (read stream))))) *→* T\n\\endcode","\\(eval-when[\\n\\s]*\\(:compile-toplevel[\\n\\s]*:load-toplevel[\\n\\s]*:execute\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-macro-character[\\n\\s]*#\\\\\\\\$[\\n\\s]*#'\\(lambda[\\n\\s]*\\(stream[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'dollar[\\n\\s]*\\(read[\\n\\s]*stream\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n;;;     The EVAL-WHEN in this case is not at toplevel, so only the :EXECUTE\n;;;     keyword is considered. At compile time, this has no effect.\n;;;     At load time (if the LET is at toplevel), or at execution time\n;;;     (if the LET is embedded in some other form which does not execute\n;;;     until later) this sets (SYMBOL-FUNCTION 'FOO1) to a function which\n;;;     returns 1.\n (let ((x 1))\n   (eval-when (:execute :load-toplevel :compile-toplevel)\n     (setf (symbol-function 'foo1) #'(lambda () x))))\n\n;;;     If this expression occurs at the toplevel of a file to be compiled,\n;;;     it has BOTH a compile time AND a load-time effect of setting\n;;;     (SYMBOL-FUNCTION 'FOO2) to a function which returns 2.\n (eval-when (:execute :load-toplevel :compile-toplevel)\n   (let ((x 2))\n     (eval-when (:execute :load-toplevel :compile-toplevel)\n       (setf (symbol-function 'foo2) #'(lambda () x)))))\n\n;;;     If this expression occurs at the toplevel of a file to be compiled,\n;;;     it has BOTH a compile time AND a load-time effect of setting the\n;;;     function cell of FOO3 to a function which returns 3.\n (eval-when (:execute :load-toplevel :compile-toplevel)\n   (setf (symbol-function 'foo3) #'(lambda () 3)))\n \n;;; #4: This always does nothing. It simply returns NIL.\n (eval-when (:compile-toplevel)\n   (eval-when (:compile-toplevel) \n     (print 'foo4)))\n\n;;;     If this form occurs at toplevel of a file to be compiled, FOO5 is\n;;;     printed at compile time. If this form occurs in a non-top-level\n;;;     position, nothing is printed at compile time. Regardless of context,\n;;;     nothing is ever printed at load time or execution time.\n (eval-when (:compile-toplevel) \n   (eval-when (:execute)\n     (print 'foo5)))\n \n;;;     If this form occurs at toplevel of a file to be compiled, FOO6 is\n;;;     printed at compile time.  If this form occurs in a non-top-level\n;;;     position, nothing is printed at compile time. Regardless of context,\n;;;     nothing is ever printed at load time or execution time.\n (eval-when (:execute :load-toplevel)\n   (eval-when (:compile-toplevel)\n     (print 'foo6)))\n\\endcode",";;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*The[\\n\\s]*EVAL-WHEN[\\n\\s]*in[\\n\\s]*this[\\n\\s]*case[\\n\\s]*is[\\n\\s]*not[\\n\\s]*at[\\n\\s]*toplevel,[\\n\\s]*so[\\n\\s]*only[\\n\\s]*the[\\n\\s]*:EXECUTE[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*keyword[\\n\\s]*is[\\n\\s]*considered\\.[\\n\\s]*At[\\n\\s]*compile[\\n\\s]*time,[\\n\\s]*this[\\n\\s]*has[\\n\\s]*no[\\n\\s]*effect\\.[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*At[\\n\\s]*load[\\n\\s]*time[\\n\\s]*\\(if[\\n\\s]*the[\\n\\s]*LET[\\n\\s]*is[\\n\\s]*at[\\n\\s]*toplevel\\),[\\n\\s]*or[\\n\\s]*at[\\n\\s]*execution[\\n\\s]*time[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*the[\\n\\s]*LET[\\n\\s]*is[\\n\\s]*embedded[\\n\\s]*in[\\n\\s]*some[\\n\\s]*other[\\n\\s]*form[\\n\\s]*which[\\n\\s]*does[\\n\\s]*not[\\n\\s]*execute[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*until[\\n\\s]*later\\)[\\n\\s]*this[\\n\\s]*sets[\\n\\s]*\\(SYMBOL-FUNCTION[\\n\\s]*'FOO1\\)[\\n\\s]*to[\\n\\s]*a[\\n\\s]*function[\\n\\s]*which[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*returns[\\n\\s]*1\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel[\\n\\s]*:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo1\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*If[\\n\\s]*this[\\n\\s]*expression[\\n\\s]*occurs[\\n\\s]*at[\\n\\s]*the[\\n\\s]*toplevel[\\n\\s]*of[\\n\\s]*a[\\n\\s]*file[\\n\\s]*to[\\n\\s]*be[\\n\\s]*compiled,[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*it[\\n\\s]*has[\\n\\s]*BOTH[\\n\\s]*a[\\n\\s]*compile[\\n\\s]*time[\\n\\s]*AND[\\n\\s]*a[\\n\\s]*load-time[\\n\\s]*effect[\\n\\s]*of[\\n\\s]*setting[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SYMBOL-FUNCTION[\\n\\s]*'FOO2\\)[\\n\\s]*to[\\n\\s]*a[\\n\\s]*function[\\n\\s]*which[\\n\\s]*returns[\\n\\s]*2\\.[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel[\\n\\s]*:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel[\\n\\s]*:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo2\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*x\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*If[\\n\\s]*this[\\n\\s]*expression[\\n\\s]*occurs[\\n\\s]*at[\\n\\s]*the[\\n\\s]*toplevel[\\n\\s]*of[\\n\\s]*a[\\n\\s]*file[\\n\\s]*to[\\n\\s]*be[\\n\\s]*compiled,[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*it[\\n\\s]*has[\\n\\s]*BOTH[\\n\\s]*a[\\n\\s]*compile[\\n\\s]*time[\\n\\s]*AND[\\n\\s]*a[\\n\\s]*load-time[\\n\\s]*effect[\\n\\s]*of[\\n\\s]*setting[\\n\\s]*the[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*function[\\n\\s]*cell[\\n\\s]*of[\\n\\s]*FOO3[\\n\\s]*to[\\n\\s]*a[\\n\\s]*function[\\n\\s]*which[\\n\\s]*returns[\\n\\s]*3\\.[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel[\\n\\s]*:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo3\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*#4:[\\n\\s]*This[\\n\\s]*always[\\n\\s]*does[\\n\\s]*nothing\\.[\\n\\s]*It[\\n\\s]*simply[\\n\\s]*returns[\\n\\s]*NIL\\.[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'foo4\\)\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*If[\\n\\s]*this[\\n\\s]*form[\\n\\s]*occurs[\\n\\s]*at[\\n\\s]*toplevel[\\n\\s]*of[\\n\\s]*a[\\n\\s]*file[\\n\\s]*to[\\n\\s]*be[\\n\\s]*compiled,[\\n\\s]*FOO5[\\n\\s]*is[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*printed[\\n\\s]*at[\\n\\s]*compile[\\n\\s]*time\\.[\\n\\s]*If[\\n\\s]*this[\\n\\s]*form[\\n\\s]*occurs[\\n\\s]*in[\\n\\s]*a[\\n\\s]*non-top-level[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*position,[\\n\\s]*nothing[\\n\\s]*is[\\n\\s]*printed[\\n\\s]*at[\\n\\s]*compile[\\n\\s]*time\\.[\\n\\s]*Regardless[\\n\\s]*of[\\n\\s]*context,[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nothing[\\n\\s]*is[\\n\\s]*ever[\\n\\s]*printed[\\n\\s]*at[\\n\\s]*load[\\n\\s]*time[\\n\\s]*or[\\n\\s]*execution[\\n\\s]*time\\.[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'foo5\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*If[\\n\\s]*this[\\n\\s]*form[\\n\\s]*occurs[\\n\\s]*at[\\n\\s]*toplevel[\\n\\s]*of[\\n\\s]*a[\\n\\s]*file[\\n\\s]*to[\\n\\s]*be[\\n\\s]*compiled,[\\n\\s]*FOO6[\\n\\s]*is[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*printed[\\n\\s]*at[\\n\\s]*compile[\\n\\s]*time\\.[\\n\\s]*[\\n\\s]*If[\\n\\s]*this[\\n\\s]*form[\\n\\s]*occurs[\\n\\s]*in[\\n\\s]*a[\\n\\s]*non-top-level[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*position,[\\n\\s]*nothing[\\n\\s]*is[\\n\\s]*printed[\\n\\s]*at[\\n\\s]*compile[\\n\\s]*time\\.[\\n\\s]*Regardless[\\n\\s]*of[\\n\\s]*context,[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nothing[\\n\\s]*is[\\n\\s]*ever[\\n\\s]*printed[\\n\\s]*at[\\n\\s]*load[\\n\\s]*time[\\n\\s]*or[\\n\\s]*execution[\\n\\s]*time\\.[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'foo6\\)\\)\\)"],["\\code\n (defmacro foo ()\n   (really-foo)\n   `(really-foo))\n\\endcode","\\(defmacro[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(really-foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(really-foo\\)\\)"],["\\code\n (defmacro foo ()\n   `(eval-when (:compile-toplevel :execute :load-toplevel) (really-foo)))\n\\endcode","\\(defmacro[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(eval-when[\\n\\s]*\\(:compile-toplevel[\\n\\s]*:execute[\\n\\s]*:load-toplevel\\)[\\n\\s]*\\(really-foo\\)\\)\\)"],["\\code\n (let ((x 3))\n   (eval-when (:execute :load-toplevel :compile-toplevel) (print x)))\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel[\\n\\s]*:compile-toplevel\\)[\\n\\s]*\\(print[\\n\\s]*x\\)\\)\\)"],["\\code\n (defun bar (x) (defun foo () (+ x 3)))\n\\endcode","\\(defun[\\n\\s]*bar[\\n\\s]*\\(x\\)[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)\\)"],["\\code\n (defun bar (x) \n   (progn (eval-when (:compile-toplevel) \n            (compiler::notice-function-definition 'foo '(x)))\n          (eval-when (:execute :load-toplevel)\n            (setf (symbol-function 'foo) #'(lambda () (+ x 3))))))\n\\endcode","\\(defun[\\n\\s]*bar[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(eval-when[\\n\\s]*\\(:compile-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(compiler::notice-function-definition[\\n\\s]*'foo[\\n\\s]*'\\(x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:load-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)\\)\\)\\)\\)"],["\\code\n (defun bar (x) \n   (setf (symbol-function 'foo) #'(lambda () (+ x 3))))\n\\endcode","\\(defun[\\n\\s]*bar[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'foo\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)\\)\\)"],["\\code\n;;; The function INCR1 always returns the same value, even in different images.\n;;; The function INCR2 always returns the same value in a given image, \n;;; but the value it returns might vary from image to image.\n(defun incr1 (x) (+ x #.(random 17)))\n(defun incr2 (x) (+ x (load-time-value (random 17))))\n\n;;; The function FOO1-REF references the nth element of the first of \n;;; the *FOO-ARRAYS* that is available at load time.  It is permissible for\n;;; that array to be modified (e.g., by SET-FOO1-REF); FOO1-REF will see the\n;;; updated values.\n(defvar *foo-arrays* (list (make-array 7) (make-array 8)))\n(defun foo1-ref (n) (aref (load-time-value (first *my-arrays*) nil) n))\n(defun set-foo1-ref (n val) \n  (setf (aref (load-time-value (first *my-arrays*) nil) n) val))\n\n;;; The function BAR1-REF references the nth element of the first of \n;;; the *BAR-ARRAYS* that is available at load time.  The programmer has\n;;; promised that the array will be treated as read-only, so the system \n;;; can copy or coalesce the array.\n(defvar *bar-arrays* (list (make-array 7) (make-array 8)))\n(defun bar1-ref (n) (aref (load-time-value (first *my-arrays*) t) n))\n\n;;; This use of LOAD-TIME-VALUE permits the indicated vector to be coalesced\n;;; even though NIL was specified, because the object was already read-only\n;;; when it was written as a literal vector rather than created by a constructor.\n;;; User programs must treat the vector v as read-only.\n(defun baz-ref (n)\n  (let ((v (load-time-value #(A B C) nil)))\n    (values (svref v n) v)))\n\n;;; This use of LOAD-TIME-VALUE permits the indicated vector to be coalesced\n;;; even though NIL was specified in the outer situation because T was specified\n;;; in the inner situation.  User programs must treat the vector v as read-only.\n(defun baz-ref (n)\n  (let ((v (load-time-value (load-time-value (vector 1 2 3) t) nil)))\n    (values (svref v n) v)))\n\\endcode",";;;[\\n\\s]*The[\\n\\s]*function[\\n\\s]*INCR1[\\n\\s]*always[\\n\\s]*returns[\\n\\s]*the[\\n\\s]*same[\\n\\s]*value,[\\n\\s]*even[\\n\\s]*in[\\n\\s]*different[\\n\\s]*images\\.[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*function[\\n\\s]*INCR2[\\n\\s]*always[\\n\\s]*returns[\\n\\s]*the[\\n\\s]*same[\\n\\s]*value[\\n\\s]*in[\\n\\s]*a[\\n\\s]*given[\\n\\s]*image,[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*but[\\n\\s]*the[\\n\\s]*value[\\n\\s]*it[\\n\\s]*returns[\\n\\s]*might[\\n\\s]*vary[\\n\\s]*from[\\n\\s]*image[\\n\\s]*to[\\n\\s]*image\\.[\\n\\s]*\\(defun[\\n\\s]*incr1[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*#\\.\\(random[\\n\\s]*17\\)\\)\\)[\\n\\s]*\\(defun[\\n\\s]*incr2[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*\\(load-time-value[\\n\\s]*\\(random[\\n\\s]*17\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*function[\\n\\s]*FOO1-REF[\\n\\s]*references[\\n\\s]*the[\\n\\s]*nth[\\n\\s]*element[\\n\\s]*of[\\n\\s]*the[\\n\\s]*first[\\n\\s]*of[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*\\*FOO-ARRAYS\\*[\\n\\s]*that[\\n\\s]*is[\\n\\s]*available[\\n\\s]*at[\\n\\s]*load[\\n\\s]*time\\.[\\n\\s]*[\\n\\s]*It[\\n\\s]*is[\\n\\s]*permissible[\\n\\s]*for[\\n\\s]*;;;[\\n\\s]*that[\\n\\s]*array[\\n\\s]*to[\\n\\s]*be[\\n\\s]*modified[\\n\\s]*\\(e\\.g\\.,[\\n\\s]*by[\\n\\s]*SET-FOO1-REF\\);[\\n\\s]*FOO1-REF[\\n\\s]*will[\\n\\s]*see[\\n\\s]*the[\\n\\s]*;;;[\\n\\s]*updated[\\n\\s]*values\\.[\\n\\s]*\\(defvar[\\n\\s]*\\*foo-arrays\\*[\\n\\s]*\\(list[\\n\\s]*\\(make-array[\\n\\s]*7\\)[\\n\\s]*\\(make-array[\\n\\s]*8\\)\\)\\)[\\n\\s]*\\(defun[\\n\\s]*foo1-ref[\\n\\s]*\\(n\\)[\\n\\s]*\\(aref[\\n\\s]*\\(load-time-value[\\n\\s]*\\(first[\\n\\s]*\\*my-arrays\\*\\)[\\n\\s]*nil\\)[\\n\\s]*n\\)\\)[\\n\\s]*\\(defun[\\n\\s]*set-foo1-ref[\\n\\s]*\\(n[\\n\\s]*val\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*\\(load-time-value[\\n\\s]*\\(first[\\n\\s]*\\*my-arrays\\*\\)[\\n\\s]*nil\\)[\\n\\s]*n\\)[\\n\\s]*val\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*function[\\n\\s]*BAR1-REF[\\n\\s]*references[\\n\\s]*the[\\n\\s]*nth[\\n\\s]*element[\\n\\s]*of[\\n\\s]*the[\\n\\s]*first[\\n\\s]*of[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*\\*BAR-ARRAYS\\*[\\n\\s]*that[\\n\\s]*is[\\n\\s]*available[\\n\\s]*at[\\n\\s]*load[\\n\\s]*time\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*programmer[\\n\\s]*has[\\n\\s]*;;;[\\n\\s]*promised[\\n\\s]*that[\\n\\s]*the[\\n\\s]*array[\\n\\s]*will[\\n\\s]*be[\\n\\s]*treated[\\n\\s]*as[\\n\\s]*read-only,[\\n\\s]*so[\\n\\s]*the[\\n\\s]*system[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*can[\\n\\s]*copy[\\n\\s]*or[\\n\\s]*coalesce[\\n\\s]*the[\\n\\s]*array\\.[\\n\\s]*\\(defvar[\\n\\s]*\\*bar-arrays\\*[\\n\\s]*\\(list[\\n\\s]*\\(make-array[\\n\\s]*7\\)[\\n\\s]*\\(make-array[\\n\\s]*8\\)\\)\\)[\\n\\s]*\\(defun[\\n\\s]*bar1-ref[\\n\\s]*\\(n\\)[\\n\\s]*\\(aref[\\n\\s]*\\(load-time-value[\\n\\s]*\\(first[\\n\\s]*\\*my-arrays\\*\\)[\\n\\s]*t\\)[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*use[\\n\\s]*of[\\n\\s]*LOAD-TIME-VALUE[\\n\\s]*permits[\\n\\s]*the[\\n\\s]*indicated[\\n\\s]*vector[\\n\\s]*to[\\n\\s]*be[\\n\\s]*coalesced[\\n\\s]*;;;[\\n\\s]*even[\\n\\s]*though[\\n\\s]*NIL[\\n\\s]*was[\\n\\s]*specified,[\\n\\s]*because[\\n\\s]*the[\\n\\s]*object[\\n\\s]*was[\\n\\s]*already[\\n\\s]*read-only[\\n\\s]*;;;[\\n\\s]*when[\\n\\s]*it[\\n\\s]*was[\\n\\s]*written[\\n\\s]*as[\\n\\s]*a[\\n\\s]*literal[\\n\\s]*vector[\\n\\s]*rather[\\n\\s]*than[\\n\\s]*created[\\n\\s]*by[\\n\\s]*a[\\n\\s]*constructor\\.[\\n\\s]*;;;[\\n\\s]*User[\\n\\s]*programs[\\n\\s]*must[\\n\\s]*treat[\\n\\s]*the[\\n\\s]*vector[\\n\\s]*v[\\n\\s]*as[\\n\\s]*read-only\\.[\\n\\s]*\\(defun[\\n\\s]*baz-ref[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(v[\\n\\s]*\\(load-time-value[\\n\\s]*#\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*nil\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(svref[\\n\\s]*v[\\n\\s]*n\\)[\\n\\s]*v\\)\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*use[\\n\\s]*of[\\n\\s]*LOAD-TIME-VALUE[\\n\\s]*permits[\\n\\s]*the[\\n\\s]*indicated[\\n\\s]*vector[\\n\\s]*to[\\n\\s]*be[\\n\\s]*coalesced[\\n\\s]*;;;[\\n\\s]*even[\\n\\s]*though[\\n\\s]*NIL[\\n\\s]*was[\\n\\s]*specified[\\n\\s]*in[\\n\\s]*the[\\n\\s]*outer[\\n\\s]*situation[\\n\\s]*because[\\n\\s]*T[\\n\\s]*was[\\n\\s]*specified[\\n\\s]*;;;[\\n\\s]*in[\\n\\s]*the[\\n\\s]*inner[\\n\\s]*situation\\.[\\n\\s]*[\\n\\s]*User[\\n\\s]*programs[\\n\\s]*must[\\n\\s]*treat[\\n\\s]*the[\\n\\s]*vector[\\n\\s]*v[\\n\\s]*as[\\n\\s]*read-only\\.[\\n\\s]*\\(defun[\\n\\s]*baz-ref[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(v[\\n\\s]*\\(load-time-value[\\n\\s]*\\(load-time-value[\\n\\s]*\\(vector[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*t\\)[\\n\\s]*nil\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(svref[\\n\\s]*v[\\n\\s]*n\\)[\\n\\s]*v\\)\\)\\)"],["\\code\n (setq a 1) *→* 1\n (quote (setq a 3)) *→* (SETQ A 3)\n a *→* 1\n 'a *→* A\n ''a *→* (QUOTE A) \n '''a *→* (QUOTE (QUOTE A))\n (setq a 43) *→* 43\n (list a (cons a 3)) *→* (43 (43 . 3))\n (list (quote a) (quote (cons a 3))) *→* (A (CONS A 3)) \n 1 *→* 1\n '1 *→* 1\n \"foo\" *→* \"foo\"\n '\"foo\" *→* \"foo\"\n (car '(a b)) *→* A\n '(car '(a b)) *→* (CAR (QUOTE (A B)))\n #(car '(a b)) *→* #(CAR (QUOTE (A B)))\n '#(car '(a b)) *→* #(CAR (QUOTE (A B)))\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(quote[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(SETQ[\\n\\s]*A[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*'a[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*''a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*A\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*'''a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*\\(QUOTE[\\n\\s]*A\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*43\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*43[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(43[\\n\\s]*\\(43[\\n\\s]*\\.[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(quote[\\n\\s]*a\\)[\\n\\s]*\\(quote[\\n\\s]*\\(cons[\\n\\s]*a[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(CONS[\\n\\s]*A[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*1[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*'1[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\"foo\"[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foo\"[\\n\\s]*[\\n\\s]*'\"foo\"[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foo\"[\\n\\s]*[\\n\\s]*\\(car[\\n\\s]*'\\(a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*'\\(car[\\n\\s]*'\\(a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(CAR[\\n\\s]*\\(QUOTE[\\n\\s]*\\(A[\\n\\s]*B\\)\\)\\)[\\n\\s]*[\\n\\s]*#\\(car[\\n\\s]*'\\(a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(CAR[\\n\\s]*\\(QUOTE[\\n\\s]*\\(A[\\n\\s]*B\\)\\)\\)[\\n\\s]*[\\n\\s]*'#\\(car[\\n\\s]*'\\(a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(CAR[\\n\\s]*\\(QUOTE[\\n\\s]*\\(A[\\n\\s]*B\\)\\)\\)"],["\\code\n (defun square (x) (expt x 2)) *→* SQUARE\n (define-compiler-macro square (&whole form arg)\n   (if (atom arg)\n       `(expt ,arg 2)\n       (case (car arg)\n         (square (if (= (length arg) 2)\n                     `(expt ,(nth 1 arg) 4)\n                     form))\n         (expt   (if (= (length arg) 3)\n                     (if (numberp (nth 2 arg))\n                         `(expt ,(nth 1 arg) ,(* 2 (nth 2 arg)))\n                         `(expt ,(nth 1 arg) (* 2 ,(nth 2 arg))))\n                     form))\n         (otherwise `(expt ,arg 2))))) *→* SQUARE\n (square (square 3)) *→* 81\n (macroexpand '(square x)) *→* (SQUARE X), false\n (funcall (compiler-macro-function 'square) '(square x) nil)\n*→* (EXPT X 2)\n (funcall (compiler-macro-function 'square) '(square (square x)) nil)\n*→* (EXPT X 4)\n (funcall (compiler-macro-function 'square) '(funcall #'square x) nil)\n*→* (EXPT X 2)\n\n (defun distance-positional (x1 y1 x2 y2)\n   (sqrt (+ (expt (- x2 x1) 2) (expt (- y2 y1) 2))))\n*→* DISTANCE-POSITIONAL\n (defun distance (&key (x1 0) (y1 0) (x2 x1) (y2 y1))\n   (distance-positional x1 y1 x2 y2))\n*→* DISTANCE\n (define-compiler-macro distance (&whole form\n                                  &rest key-value-pairs\n                                  &key (x1 0  x1-p)\n                                       (y1 0  y1-p)\n                                       (x2 x1 x2-p)\n                                       (y2 y1 y2-p)\n                                  &allow-other-keys\n                                  &environment env)\n   (flet ((key (n) (nth (* n 2) key-value-pairs))\n          (arg (n) (nth (1+ (* n 2)) key-value-pairs))\n          (simplep (x)\n            (let ((expanded-x (macroexpand x env)))\n              (or (constantp expanded-x env)\n                  (symbolp expanded-x)))))\n     (let ((n (/ (length key-value-pairs) 2)))\n       (multiple-value-bind (x1s y1s x2s y2s others)\n           (loop for (key) on key-value-pairs by #'cddr\n                 count (eq key ':x1) into x1s\n                 count (eq key ':y1) into y1s\n                 count (eq key ':x2) into x2s\n                 count (eq key ':y1) into y2s\n                 count (not (member key '(:x1 :x2 :y1 :y2)))\n                   into others\n                 finally (return (values x1s y1s x2s y2s others)))\n         (cond ((and (= n 4)\n                     (eq (key 0) :x1)\n                     (eq (key 1) :y1)\n                     (eq (key 2) :x2)\n                     (eq (key 3) :y2))\n                `(distance-positional ,x1 ,y1 ,x2 ,y2))\n               ((and (if x1-p (and (= x1s 1) (simplep x1)) t)\n                     (if y1-p (and (= y1s 1) (simplep y1)) t)\n                     (if x2-p (and (= x2s 1) (simplep x2)) t)\n                     (if y2-p (and (= y2s 1) (simplep y2)) t)\n                     (zerop others))\n                `(distance-positional ,x1 ,y1 ,x2 ,y2))\n               ((and (&#60; x1s 2) (&#60; y1s 2) (&#60; x2s 2) (&#60; y2s 2)\n                     (zerop others))\n                (let ((temps (loop repeat n collect (gensym))))\n                  `(let ,(loop for i below n\n                               collect (list (nth i temps) (arg i)))\n                     (distance\n                       ,@(loop for i below n\n                               append (list (key i) (nth i temps)))))))\n               (t form))))))\n*→* DISTANCE\n (dolist (form\n           '((distance :x1 (setq x 7) :x2 (decf x) :y1 (decf x) :y2 (decf x))\n             (distance :x1 (setq x 7) :y1 (decf x) :x2 (decf x) :y2 (decf x))\n             (distance :x1 (setq x 7) :y1 (incf x))\n             (distance :x1 (setq x 7) :y1 (incf x) :x1 (incf x))\n             (distance :x1 a1 :y1 b1 :x2 a2 :y2 b2)\n             (distance :x1 a1 :x2 a2 :y1 b1 :y2 b2)\n             (distance :x1 a1 :y1 b1 :z1 c1 :x2 a2 :y2 b2 :z2 c2)))\n   (print (funcall (compiler-macro-function 'distance) form nil)))\n\\OUT (LET ((#:G6558 (SETQ X 7))\n\\OUT       (#:G6559 (DECF X))\n\\OUT       (#:G6560 (DECF X))\n\\OUT       (#:G6561 (DECF X)))\n\\OUT   (DISTANCE :X1 #:G6558 :X2 #:G6559 :Y1 #:G6560 :Y2 #:G6561)) \n\\OUT (DISTANCE-POSITIONAL (SETQ X 7) (DECF X) (DECF X) (DECF X)) \n\\OUT (LET ((#:G6567 (SETQ X 7))\n\\OUT       (#:G6568 (INCF X)))\n\\OUT   (DISTANCE :X1 #:G6567 :Y1 #:G6568)) \n\\OUT (DISTANCE :X1 (SETQ X 7) :Y1 (INCF X) :X1 (INCF X)) \n\\OUT (DISTANCE-POSITIONAL A1 B1 A2 B2) \n\\OUT (DISTANCE-POSITIONAL A1 B1 A2 B2) \n\\OUT (DISTANCE :X1 A1 :Y1 B1 :Z1 C1 :X2 A2 :Y2 B2 :Z2 C2) \n*→* NIL\n\\endcode","\\(defun[\\n\\s]*square[\\n\\s]*\\(x\\)[\\n\\s]*\\(expt[\\n\\s]*x[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SQUARE[\\n\\s]*[\\n\\s]*\\(define-compiler-macro[\\n\\s]*square[\\n\\s]*\\(&whole[\\n\\s]*form[\\n\\s]*arg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(atom[\\n\\s]*arg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(expt[\\n\\s]*,arg[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*\\(car[\\n\\s]*arg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(square[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*\\(length[\\n\\s]*arg\\)[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(expt[\\n\\s]*,\\(nth[\\n\\s]*1[\\n\\s]*arg\\)[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*form\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*\\(length[\\n\\s]*arg\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*\\(nth[\\n\\s]*2[\\n\\s]*arg\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(expt[\\n\\s]*,\\(nth[\\n\\s]*1[\\n\\s]*arg\\)[\\n\\s]*,\\(\\*[\\n\\s]*2[\\n\\s]*\\(nth[\\n\\s]*2[\\n\\s]*arg\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(expt[\\n\\s]*,\\(nth[\\n\\s]*1[\\n\\s]*arg\\)[\\n\\s]*\\(\\*[\\n\\s]*2[\\n\\s]*,\\(nth[\\n\\s]*2[\\n\\s]*arg\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*form\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(otherwise[\\n\\s]*`\\(expt[\\n\\s]*,arg[\\n\\s]*2\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SQUARE[\\n\\s]*[\\n\\s]*\\(square[\\n\\s]*\\(square[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*81[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(square[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(SQUARE[\\n\\s]*X\\),[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(compiler-macro-function[\\n\\s]*'square\\)[\\n\\s]*'\\(square[\\n\\s]*x\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(EXPT[\\n\\s]*X[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(compiler-macro-function[\\n\\s]*'square\\)[\\n\\s]*'\\(square[\\n\\s]*\\(square[\\n\\s]*x\\)\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(EXPT[\\n\\s]*X[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(compiler-macro-function[\\n\\s]*'square\\)[\\n\\s]*'\\(funcall[\\n\\s]*#'square[\\n\\s]*x\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(EXPT[\\n\\s]*X[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*distance-positional[\\n\\s]*\\(x1[\\n\\s]*y1[\\n\\s]*x2[\\n\\s]*y2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(expt[\\n\\s]*\\(-[\\n\\s]*x2[\\n\\s]*x1\\)[\\n\\s]*2\\)[\\n\\s]*\\(expt[\\n\\s]*\\(-[\\n\\s]*y2[\\n\\s]*y1\\)[\\n\\s]*2\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DISTANCE-POSITIONAL[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*distance[\\n\\s]*\\(&key[\\n\\s]*\\(x1[\\n\\s]*0\\)[\\n\\s]*\\(y1[\\n\\s]*0\\)[\\n\\s]*\\(x2[\\n\\s]*x1\\)[\\n\\s]*\\(y2[\\n\\s]*y1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance-positional[\\n\\s]*x1[\\n\\s]*y1[\\n\\s]*x2[\\n\\s]*y2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DISTANCE[\\n\\s]*[\\n\\s]*\\(define-compiler-macro[\\n\\s]*distance[\\n\\s]*\\(&whole[\\n\\s]*form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&rest[\\n\\s]*key-value-pairs[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&key[\\n\\s]*\\(x1[\\n\\s]*0[\\n\\s]*[\\n\\s]*x1-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y1[\\n\\s]*0[\\n\\s]*[\\n\\s]*y1-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x2[\\n\\s]*x1[\\n\\s]*x2-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y2[\\n\\s]*y1[\\n\\s]*y2-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&allow-other-keys[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(key[\\n\\s]*\\(n\\)[\\n\\s]*\\(nth[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*2\\)[\\n\\s]*key-value-pairs\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(arg[\\n\\s]*\\(n\\)[\\n\\s]*\\(nth[\\n\\s]*\\(1\\+[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*2\\)\\)[\\n\\s]*key-value-pairs\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(simplep[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(expanded-x[\\n\\s]*\\(macroexpand[\\n\\s]*x[\\n\\s]*env\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(constantp[\\n\\s]*expanded-x[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbolp[\\n\\s]*expanded-x\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*\\(/[\\n\\s]*\\(length[\\n\\s]*key-value-pairs\\)[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(x1s[\\n\\s]*y1s[\\n\\s]*x2s[\\n\\s]*y2s[\\n\\s]*others\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*\\(key\\)[\\n\\s]*on[\\n\\s]*key-value-pairs[\\n\\s]*by[\\n\\s]*#'cddr[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*\\(eq[\\n\\s]*key[\\n\\s]*':x1\\)[\\n\\s]*into[\\n\\s]*x1s[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*\\(eq[\\n\\s]*key[\\n\\s]*':y1\\)[\\n\\s]*into[\\n\\s]*y1s[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*\\(eq[\\n\\s]*key[\\n\\s]*':x2\\)[\\n\\s]*into[\\n\\s]*x2s[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*\\(eq[\\n\\s]*key[\\n\\s]*':y1\\)[\\n\\s]*into[\\n\\s]*y2s[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*\\(not[\\n\\s]*\\(member[\\n\\s]*key[\\n\\s]*'\\(:x1[\\n\\s]*:x2[\\n\\s]*:y1[\\n\\s]*:y2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*into[\\n\\s]*others[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(return[\\n\\s]*\\(values[\\n\\s]*x1s[\\n\\s]*y1s[\\n\\s]*x2s[\\n\\s]*y2s[\\n\\s]*others\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(and[\\n\\s]*\\(=[\\n\\s]*n[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(key[\\n\\s]*0\\)[\\n\\s]*:x1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(key[\\n\\s]*1\\)[\\n\\s]*:y1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(key[\\n\\s]*2\\)[\\n\\s]*:x2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(key[\\n\\s]*3\\)[\\n\\s]*:y2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(distance-positional[\\n\\s]*,x1[\\n\\s]*,y1[\\n\\s]*,x2[\\n\\s]*,y2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(and[\\n\\s]*\\(if[\\n\\s]*x1-p[\\n\\s]*\\(and[\\n\\s]*\\(=[\\n\\s]*x1s[\\n\\s]*1\\)[\\n\\s]*\\(simplep[\\n\\s]*x1\\)\\)[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*y1-p[\\n\\s]*\\(and[\\n\\s]*\\(=[\\n\\s]*y1s[\\n\\s]*1\\)[\\n\\s]*\\(simplep[\\n\\s]*y1\\)\\)[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*x2-p[\\n\\s]*\\(and[\\n\\s]*\\(=[\\n\\s]*x2s[\\n\\s]*1\\)[\\n\\s]*\\(simplep[\\n\\s]*x2\\)\\)[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*y2-p[\\n\\s]*\\(and[\\n\\s]*\\(=[\\n\\s]*y2s[\\n\\s]*1\\)[\\n\\s]*\\(simplep[\\n\\s]*y2\\)\\)[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(zerop[\\n\\s]*others\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(distance-positional[\\n\\s]*,x1[\\n\\s]*,y1[\\n\\s]*,x2[\\n\\s]*,y2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(and[\\n\\s]*\\(&#60;[\\n\\s]*x1s[\\n\\s]*2\\)[\\n\\s]*\\(&#60;[\\n\\s]*y1s[\\n\\s]*2\\)[\\n\\s]*\\(&#60;[\\n\\s]*x2s[\\n\\s]*2\\)[\\n\\s]*\\(&#60;[\\n\\s]*y2s[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(zerop[\\n\\s]*others\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(temps[\\n\\s]*\\(loop[\\n\\s]*repeat[\\n\\s]*n[\\n\\s]*collect[\\n\\s]*\\(gensym\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(let[\\n\\s]*,\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*below[\\n\\s]*n[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(list[\\n\\s]*\\(nth[\\n\\s]*i[\\n\\s]*temps\\)[\\n\\s]*\\(arg[\\n\\s]*i\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,@\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*below[\\n\\s]*n[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*append[\\n\\s]*\\(list[\\n\\s]*\\(key[\\n\\s]*i\\)[\\n\\s]*\\(nth[\\n\\s]*i[\\n\\s]*temps\\)\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*form\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DISTANCE[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(distance[\\n\\s]*:x1[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*7\\)[\\n\\s]*:x2[\\n\\s]*\\(decf[\\n\\s]*x\\)[\\n\\s]*:y1[\\n\\s]*\\(decf[\\n\\s]*x\\)[\\n\\s]*:y2[\\n\\s]*\\(decf[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*:x1[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*7\\)[\\n\\s]*:y1[\\n\\s]*\\(decf[\\n\\s]*x\\)[\\n\\s]*:x2[\\n\\s]*\\(decf[\\n\\s]*x\\)[\\n\\s]*:y2[\\n\\s]*\\(decf[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*:x1[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*7\\)[\\n\\s]*:y1[\\n\\s]*\\(incf[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*:x1[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*7\\)[\\n\\s]*:y1[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*:x1[\\n\\s]*\\(incf[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*:x1[\\n\\s]*a1[\\n\\s]*:y1[\\n\\s]*b1[\\n\\s]*:x2[\\n\\s]*a2[\\n\\s]*:y2[\\n\\s]*b2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*:x1[\\n\\s]*a1[\\n\\s]*:x2[\\n\\s]*a2[\\n\\s]*:y1[\\n\\s]*b1[\\n\\s]*:y2[\\n\\s]*b2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(distance[\\n\\s]*:x1[\\n\\s]*a1[\\n\\s]*:y1[\\n\\s]*b1[\\n\\s]*:z1[\\n\\s]*c1[\\n\\s]*:x2[\\n\\s]*a2[\\n\\s]*:y2[\\n\\s]*b2[\\n\\s]*:z2[\\n\\s]*c2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(funcall[\\n\\s]*\\(compiler-macro-function[\\n\\s]*'distance\\)[\\n\\s]*form[\\n\\s]*nil\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(#:G6558[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*7\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:G6559[\\n\\s]*\\(DECF[\\n\\s]*X\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:G6560[\\n\\s]*\\(DECF[\\n\\s]*X\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:G6561[\\n\\s]*\\(DECF[\\n\\s]*X\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(DISTANCE[\\n\\s]*:X1[\\n\\s]*#:G6558[\\n\\s]*:X2[\\n\\s]*#:G6559[\\n\\s]*:Y1[\\n\\s]*#:G6560[\\n\\s]*:Y2[\\n\\s]*#:G6561\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(DISTANCE-POSITIONAL[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*7\\)[\\n\\s]*\\(DECF[\\n\\s]*X\\)[\\n\\s]*\\(DECF[\\n\\s]*X\\)[\\n\\s]*\\(DECF[\\n\\s]*X\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(#:G6567[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*7\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:G6568[\\n\\s]*\\(INCF[\\n\\s]*X\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(DISTANCE[\\n\\s]*:X1[\\n\\s]*#:G6567[\\n\\s]*:Y1[\\n\\s]*#:G6568\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(DISTANCE[\\n\\s]*:X1[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*7\\)[\\n\\s]*:Y1[\\n\\s]*\\(INCF[\\n\\s]*X\\)[\\n\\s]*:X1[\\n\\s]*\\(INCF[\\n\\s]*X\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(DISTANCE-POSITIONAL[\\n\\s]*A1[\\n\\s]*B1[\\n\\s]*A2[\\n\\s]*B2\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(DISTANCE-POSITIONAL[\\n\\s]*A1[\\n\\s]*B1[\\n\\s]*A2[\\n\\s]*B2\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*\\(DISTANCE[\\n\\s]*:X1[\\n\\s]*A1[\\n\\s]*:Y1[\\n\\s]*B1[\\n\\s]*:Z1[\\n\\s]*C1[\\n\\s]*:X2[\\n\\s]*A2[\\n\\s]*:Y2[\\n\\s]*B2[\\n\\s]*:Z2[\\n\\s]*C2\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defmacro mac1 (a b) \"Mac1 multiplies and adds\" \n            `(+ ,a (* ,b 3))) *→* MAC1 \n (mac1 4 5) *→* 19 \n (documentation 'mac1 'function) *→* \"Mac1 multiplies and adds\" \n (defmacro mac2 (&optional (a 2 b) (c 3 d) &rest x) `'(,a ,b ,c ,d ,x)) *→* MAC2 \n (mac2 6) *→* (6 T 3 NIL NIL) \n (mac2 6 3 8) *→* (6 T 3 T (8)) \n (defmacro mac3 (&whole r a &optional (b 3) &rest x &key c (d a))\n    `'(,r ,a ,b ,c ,d ,x)) *→* MAC3 \n (mac3 1 6 :d 8 :c 9 :d 10) *→* ((MAC3 1 6 :D 8 :C 9 :D 10) 1 6 9 8 (:D 8 :C 9 :D 10)) \n\\endcode","\\(defmacro[\\n\\s]*mac1[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*\"Mac1[\\n\\s]*multiplies[\\n\\s]*and[\\n\\s]*adds\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(\\+[\\n\\s]*,a[\\n\\s]*\\(\\*[\\n\\s]*,b[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MAC1[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mac1[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*19[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(documentation[\\n\\s]*'mac1[\\n\\s]*'function\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Mac1[\\n\\s]*multiplies[\\n\\s]*and[\\n\\s]*adds\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*mac2[\\n\\s]*\\(&optional[\\n\\s]*\\(a[\\n\\s]*2[\\n\\s]*b\\)[\\n\\s]*\\(c[\\n\\s]*3[\\n\\s]*d\\)[\\n\\s]*&rest[\\n\\s]*x\\)[\\n\\s]*`'\\(,a[\\n\\s]*,b[\\n\\s]*,c[\\n\\s]*,d[\\n\\s]*,x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MAC2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mac2[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*T[\\n\\s]*3[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mac2[\\n\\s]*6[\\n\\s]*3[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*T[\\n\\s]*3[\\n\\s]*T[\\n\\s]*\\(8\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*mac3[\\n\\s]*\\(&whole[\\n\\s]*r[\\n\\s]*a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*3\\)[\\n\\s]*&rest[\\n\\s]*x[\\n\\s]*&key[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`'\\(,r[\\n\\s]*,a[\\n\\s]*,b[\\n\\s]*,c[\\n\\s]*,d[\\n\\s]*,x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MAC3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mac3[\\n\\s]*1[\\n\\s]*6[\\n\\s]*:d[\\n\\s]*8[\\n\\s]*:c[\\n\\s]*9[\\n\\s]*:d[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(MAC3[\\n\\s]*1[\\n\\s]*6[\\n\\s]*:D[\\n\\s]*8[\\n\\s]*:C[\\n\\s]*9[\\n\\s]*:D[\\n\\s]*10\\)[\\n\\s]*1[\\n\\s]*6[\\n\\s]*9[\\n\\s]*8[\\n\\s]*\\(:D[\\n\\s]*8[\\n\\s]*:C[\\n\\s]*9[\\n\\s]*:D[\\n\\s]*10\\)\\)"],["\\code\n% (defmacro halibut ((mouth eye1 eye2)\n%                    ((fin1 length1) (fin2 length2))\n%                    tail)\n% ...)\n%\\endcode","%[\\n\\s]*\\(defmacro[\\n\\s]*halibut[\\n\\s]*\\(\\(mouth[\\n\\s]*eye1[\\n\\s]*eye2\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(fin1[\\n\\s]*length1\\)[\\n\\s]*\\(fin2[\\n\\s]*length2\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*tail\\)[\\n\\s]*%[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*%"],["\\code\n% (halibut (m (car eyes) (cdr eyes))\n%          ((f1 (count-scales f1)) (f2 (count-scales f2)))\n%          my-favorite-tail) *→* NIL\n%\\endcode","%[\\n\\s]*\\(halibut[\\n\\s]*\\(m[\\n\\s]*\\(car[\\n\\s]*eyes\\)[\\n\\s]*\\(cdr[\\n\\s]*eyes\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(f1[\\n\\s]*\\(count-scales[\\n\\s]*f1\\)\\)[\\n\\s]*\\(f2[\\n\\s]*\\(count-scales[\\n\\s]*f2\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*my-favorite-tail\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*%"],["\\code\n% (halibut (m (car eyes) (cdr eyes))\n%          ((f1) (f2 (count-scales f2)))\n%          my-favorite-tail)\n%\\endcode","%[\\n\\s]*\\(halibut[\\n\\s]*\\(m[\\n\\s]*\\(car[\\n\\s]*eyes\\)[\\n\\s]*\\(cdr[\\n\\s]*eyes\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(f1\\)[\\n\\s]*\\(f2[\\n\\s]*\\(count-scales[\\n\\s]*f2\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*my-favorite-tail\\)[\\n\\s]*%"],["\\code\n% (halibut my-favorite-head\n%          ((f1 (count-scales f1)) (f2 (count-scales f2)))\n%          my-favorite-tail)\n%\\endcode","%[\\n\\s]*\\(halibut[\\n\\s]*my-favorite-head[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(f1[\\n\\s]*\\(count-scales[\\n\\s]*f1\\)\\)[\\n\\s]*\\(f2[\\n\\s]*\\(count-scales[\\n\\s]*f2\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*my-favorite-tail\\)[\\n\\s]*%"],["\\code\n% (defmacro halibut ((&whole head mouth eye1 eye2)\n%                    ((fin1 length1) (fin2 length2))\n%                    tail)\n% ...)\n%\\endcode","%[\\n\\s]*\\(defmacro[\\n\\s]*halibut[\\n\\s]*\\(\\(&whole[\\n\\s]*head[\\n\\s]*mouth[\\n\\s]*eye1[\\n\\s]*eye2\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(fin1[\\n\\s]*length1\\)[\\n\\s]*\\(fin2[\\n\\s]*length2\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*tail\\)[\\n\\s]*%[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*%"],["\\code\n% (halibut (m (car eyes) (cdr eyes))\n%          ((f1 (count-scales f1)) (f2 (count-scales f2)))\n%          my-favorite-tail) *→* NIL\n%\\endcode","%[\\n\\s]*\\(halibut[\\n\\s]*\\(m[\\n\\s]*\\(car[\\n\\s]*eyes\\)[\\n\\s]*\\(cdr[\\n\\s]*eyes\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(f1[\\n\\s]*\\(count-scales[\\n\\s]*f1\\)\\)[\\n\\s]*\\(f2[\\n\\s]*\\(count-scales[\\n\\s]*f2\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*my-favorite-tail\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*%"],["\\code\n% (defmacro arithmetic-if (test neg-form zero-form pos-form)\n%   (let ((var (gensym)))\n%     `(let ((,var ,test))\n%        (cond ((&#60; ,var 0) ,neg-form)\n%            ((= ,var 0) ,zero-form)\n%            (t ,pos-form))))) *→* ARITHMETIC-IF\n%\\endcode","%[\\n\\s]*\\(defmacro[\\n\\s]*arithmetic-if[\\n\\s]*\\(test[\\n\\s]*neg-form[\\n\\s]*zero-form[\\n\\s]*pos-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(var[\\n\\s]*\\(gensym\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(let[\\n\\s]*\\(\\(,var[\\n\\s]*,test\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(&#60;[\\n\\s]*,var[\\n\\s]*0\\)[\\n\\s]*,neg-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*,var[\\n\\s]*0\\)[\\n\\s]*,zero-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*,pos-form\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ARITHMETIC-IF[\\n\\s]*%"],["\\code\n% (lambda (calling-form environment)\n%   (declare (ignore environment))\n%   (let ((var (gensym)))\n%     (list 'let\n%           (list (list 'var (cadr calling-form)))\n%           (list 'cond\n%                 (list (list '&#60; var '0) (caddr calling-form))\n%                 (list (list '= var '0) (cadddr calling-form))\n%                 (list 't (fifth calling-form))))))\n%\\endcode","%[\\n\\s]*\\(lambda[\\n\\s]*\\(calling-form[\\n\\s]*environment\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*environment\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(var[\\n\\s]*\\(gensym\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'let[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*'var[\\n\\s]*\\(cadr[\\n\\s]*calling-form\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'cond[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*'&#60;[\\n\\s]*var[\\n\\s]*'0\\)[\\n\\s]*\\(caddr[\\n\\s]*calling-form\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*'=[\\n\\s]*var[\\n\\s]*'0\\)[\\n\\s]*\\(cadddr[\\n\\s]*calling-form\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'t[\\n\\s]*\\(fifth[\\n\\s]*calling-form\\)\\)\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n% (arithmetic-if (- x 4.0)\n%%                (- x)\n%%                (error \"Strange zero\")\n%%                x)\n%%\\endcode","%[\\n\\s]*\\(arithmetic-if[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*4\\.0\\)[\\n\\s]*%%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*x\\)[\\n\\s]*%%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Strange[\\n\\s]*zero\"\\)[\\n\\s]*%%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)[\\n\\s]*%%"],["\\code\n% (let ((g407 (- x 4.0)))\n%   (cond ((&#60; g407 0) (- x))\n%         ((= g407 0) (error \"Strange zero\"))\n%         (t x)))\n%\\endcode","%[\\n\\s]*\\(let[\\n\\s]*\\(\\(g407[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*4\\.0\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(&#60;[\\n\\s]*g407[\\n\\s]*0\\)[\\n\\s]*\\(-[\\n\\s]*x\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*g407[\\n\\s]*0\\)[\\n\\s]*\\(error[\\n\\s]*\"Strange[\\n\\s]*zero\"\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*x\\)\\)\\)[\\n\\s]*%"],["\\code\n% (defmacro arithmetic-if (test neg-form &optional zero-form pos-form)\n%   (let ((var (gensym)))\n%     \\bq(let ((,var ,test))\n%        (cond ((&#60; ,var 0) ,neg-form)\n%              ((= ,var 0) ,zero-form)\n%              (t ,pos-form)))))\n%\\endcode","%[\\n\\s]*\\(defmacro[\\n\\s]*arithmetic-if[\\n\\s]*\\(test[\\n\\s]*neg-form[\\n\\s]*&optional[\\n\\s]*zero-form[\\n\\s]*pos-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(var[\\n\\s]*\\(gensym\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\bq\\(let[\\n\\s]*\\(\\(,var[\\n\\s]*,test\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(&#60;[\\n\\s]*,var[\\n\\s]*0\\)[\\n\\s]*,neg-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*,var[\\n\\s]*0\\)[\\n\\s]*,zero-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*,pos-form\\)\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n% (arithmetic-if (- x 4.0) (print x))\n%\\endcode","%[\\n\\s]*\\(arithmetic-if[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*4\\.0\\)[\\n\\s]*\\(print[\\n\\s]*x\\)\\)[\\n\\s]*%"],["\\code\n% (let ((g408 (- x 4.0)))\n%   (cond ((&#60; g408 0) (print x))\n%         ((= g408 0) nil)\n%         (t nil)))\n%\\endcode","%[\\n\\s]*\\(let[\\n\\s]*\\(\\(g408[\\n\\s]*\\(-[\\n\\s]*x[\\n\\s]*4\\.0\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(&#60;[\\n\\s]*g408[\\n\\s]*0\\)[\\n\\s]*\\(print[\\n\\s]*x\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*g408[\\n\\s]*0\\)[\\n\\s]*nil\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*nil\\)\\)\\)[\\n\\s]*%"],["\\code\n (defmacro loser (x &optional (a b &rest c) &rest z)\n   ...)\n\\endcode","\\(defmacro[\\n\\s]*loser[\\n\\s]*\\(x[\\n\\s]*&optional[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&rest[\\n\\s]*c\\)[\\n\\s]*&rest[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defmacro loser (x &optional ((a b &rest c)) &rest z)\n   ...)\n\\endcode","\\(defmacro[\\n\\s]*loser[\\n\\s]*\\(x[\\n\\s]*&optional[\\n\\s]*\\(\\(a[\\n\\s]*b[\\n\\s]*&rest[\\n\\s]*c\\)\\)[\\n\\s]*&rest[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defmacro loser (x &optional ((a b &rest c) '(nil nil)) &rest z)\n   ...)\n\\endcode","\\(defmacro[\\n\\s]*loser[\\n\\s]*\\(x[\\n\\s]*&optional[\\n\\s]*\\(\\(a[\\n\\s]*b[\\n\\s]*&rest[\\n\\s]*c\\)[\\n\\s]*'\\(nil[\\n\\s]*nil\\)\\)[\\n\\s]*&rest[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defmacro loser (x &optional ((&optional a b &rest c)) &rest z)\n   ...)\n\\endcode","\\(defmacro[\\n\\s]*loser[\\n\\s]*\\(x[\\n\\s]*&optional[\\n\\s]*\\(\\(&optional[\\n\\s]*a[\\n\\s]*b[\\n\\s]*&rest[\\n\\s]*c\\)\\)[\\n\\s]*&rest[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (loser (car pool) ((+ x 1)))\n\\endcode","\\(loser[\\n\\s]*\\(car[\\n\\s]*pool\\)[\\n\\s]*\\(\\(\\+[\\n\\s]*x[\\n\\s]*1\\)\\)\\)"],["\\code\n (defmacro dm1a (&whole x) `',x)\n (macroexpand '(dm1a))  *→* (QUOTE (DM1A))\n (macroexpand '(dm1a a)) is an error.\n \n (defmacro dm1b (&whole x a &optional b) `'(,x ,a ,b))\n (macroexpand '(dm1b))  is an error.\n (macroexpand '(dm1b q))  *→* (QUOTE ((DM1B Q) Q NIL))\n (macroexpand '(dm1b q r)) *→* (QUOTE ((DM1B Q R) Q R))\n (macroexpand '(dm1b q r s)) is an error.\n\\endcode","\\(defmacro[\\n\\s]*dm1a[\\n\\s]*\\(&whole[\\n\\s]*x\\)[\\n\\s]*`',x\\)[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm1a\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*\\(DM1A\\)\\)[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm1a[\\n\\s]*a\\)\\)[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*dm1b[\\n\\s]*\\(&whole[\\n\\s]*x[\\n\\s]*a[\\n\\s]*&optional[\\n\\s]*b\\)[\\n\\s]*`'\\(,x[\\n\\s]*,a[\\n\\s]*,b\\)\\)[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm1b\\)\\)[\\n\\s]*[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error\\.[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm1b[\\n\\s]*q\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*\\(\\(DM1B[\\n\\s]*Q\\)[\\n\\s]*Q[\\n\\s]*NIL\\)\\)[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm1b[\\n\\s]*q[\\n\\s]*r\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*\\(\\(DM1B[\\n\\s]*Q[\\n\\s]*R\\)[\\n\\s]*Q[\\n\\s]*R\\)\\)[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm1b[\\n\\s]*q[\\n\\s]*r[\\n\\s]*s\\)\\)[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error\\."],["\\code\n (defmacro dm2a (&whole form a b) `'(form ,form a ,a b ,b))\n (macroexpand '(dm2a x y)) *→* (QUOTE (FORM (DM2A X Y) A X B Y))\n (dm2a x y) *→* (FORM (DM2A X Y) A X B Y)\n\n (defmacro dm2b (&whole form a (&whole b (c . d) &optional (e 5)) \n                 &body f &environment env)\n   ``(,',form ,,a ,',b ,',(macroexpand c env) ,',d ,',e ,',f))\n ;Note that because backquote is involved, implementations may differ\n ;slightly in the nature (though not the functionality) of the expansion.\n (macroexpand '(dm2b x1 (((incf x2) x3 x4)) x5 x6))\n *→* (LIST* '(DM2B X1 (((INCF X2) X3 X4))\n                   X5 X6)\n            X1\n            '((((INCF X2) X3 X4)) (SETQ X2 (+ X2 1)) (X3 X4) 5 (X5 X6))),\n     T\n (let ((x1 5))\n   (macrolet ((segundo (x) `(cadr ,x)))\n     (dm2b x1 (((segundo x2) x3 x4)) x5 x6)))\n *→* ((DM2B X1 (((SEGUNDO X2) X3 X4)) X5 X6)\n      5 (((SEGUNDO X2) X3 X4)) (CADR X2) (X3 X4) 5 (X5 X6))\n\\endcode","\\(defmacro[\\n\\s]*dm2a[\\n\\s]*\\(&whole[\\n\\s]*form[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*`'\\(form[\\n\\s]*,form[\\n\\s]*a[\\n\\s]*,a[\\n\\s]*b[\\n\\s]*,b\\)\\)[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm2a[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*\\(FORM[\\n\\s]*\\(DM2A[\\n\\s]*X[\\n\\s]*Y\\)[\\n\\s]*A[\\n\\s]*X[\\n\\s]*B[\\n\\s]*Y\\)\\)[\\n\\s]*[\\n\\s]*\\(dm2a[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FORM[\\n\\s]*\\(DM2A[\\n\\s]*X[\\n\\s]*Y\\)[\\n\\s]*A[\\n\\s]*X[\\n\\s]*B[\\n\\s]*Y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*dm2b[\\n\\s]*\\(&whole[\\n\\s]*form[\\n\\s]*a[\\n\\s]*\\(&whole[\\n\\s]*b[\\n\\s]*\\(c[\\n\\s]*\\.[\\n\\s]*d\\)[\\n\\s]*&optional[\\n\\s]*\\(e[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&body[\\n\\s]*f[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*``\\(,',form[\\n\\s]*,,a[\\n\\s]*,',b[\\n\\s]*,',\\(macroexpand[\\n\\s]*c[\\n\\s]*env\\)[\\n\\s]*,',d[\\n\\s]*,',e[\\n\\s]*,',f\\)\\)[\\n\\s]*[\\n\\s]*;Note[\\n\\s]*that[\\n\\s]*because[\\n\\s]*backquote[\\n\\s]*is[\\n\\s]*involved,[\\n\\s]*implementations[\\n\\s]*may[\\n\\s]*differ[\\n\\s]*[\\n\\s]*;slightly[\\n\\s]*in[\\n\\s]*the[\\n\\s]*nature[\\n\\s]*\\(though[\\n\\s]*not[\\n\\s]*the[\\n\\s]*functionality\\)[\\n\\s]*of[\\n\\s]*the[\\n\\s]*expansion\\.[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(dm2b[\\n\\s]*x1[\\n\\s]*\\(\\(\\(incf[\\n\\s]*x2\\)[\\n\\s]*x3[\\n\\s]*x4\\)\\)[\\n\\s]*x5[\\n\\s]*x6\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LIST\\*[\\n\\s]*'\\(DM2B[\\n\\s]*X1[\\n\\s]*\\(\\(\\(INCF[\\n\\s]*X2\\)[\\n\\s]*X3[\\n\\s]*X4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*X5[\\n\\s]*X6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*X1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\\(\\(INCF[\\n\\s]*X2\\)[\\n\\s]*X3[\\n\\s]*X4\\)\\)[\\n\\s]*\\(SETQ[\\n\\s]*X2[\\n\\s]*\\(\\+[\\n\\s]*X2[\\n\\s]*1\\)\\)[\\n\\s]*\\(X3[\\n\\s]*X4\\)[\\n\\s]*5[\\n\\s]*\\(X5[\\n\\s]*X6\\)\\)\\),[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x1[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(segundo[\\n\\s]*\\(x\\)[\\n\\s]*`\\(cadr[\\n\\s]*,x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dm2b[\\n\\s]*x1[\\n\\s]*\\(\\(\\(segundo[\\n\\s]*x2\\)[\\n\\s]*x3[\\n\\s]*x4\\)\\)[\\n\\s]*x5[\\n\\s]*x6\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(DM2B[\\n\\s]*X1[\\n\\s]*\\(\\(\\(SEGUNDO[\\n\\s]*X2\\)[\\n\\s]*X3[\\n\\s]*X4\\)\\)[\\n\\s]*X5[\\n\\s]*X6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*5[\\n\\s]*\\(\\(\\(SEGUNDO[\\n\\s]*X2\\)[\\n\\s]*X3[\\n\\s]*X4\\)\\)[\\n\\s]*\\(CADR[\\n\\s]*X2\\)[\\n\\s]*\\(X3[\\n\\s]*X4\\)[\\n\\s]*5[\\n\\s]*\\(X5[\\n\\s]*X6\\)\\)"],["\\code\n (defmacro macfun (x) '(macro-function 'macfun)) *→* MACFUN \n (not (macro-function 'macfun)) *→ false* \n\\endcode","\\(defmacro[\\n\\s]*macfun[\\n\\s]*\\(x\\)[\\n\\s]*'\\(macro-function[\\n\\s]*'macfun\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MACFUN[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(macro-function[\\n\\s]*'macfun\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (macrolet ((foo (&environment env)\n               (if (macro-function 'bar env)\n                  ''yes\n                  ''no)))\n    (list (foo)\n          (macrolet ((bar () :beep))\n             (foo))))\n \n*→* (NO YES)\n\\endcode","\\(macrolet[\\n\\s]*\\(\\(foo[\\n\\s]*\\(&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(macro-function[\\n\\s]*'bar[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*''yes[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*''no\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(bar[\\n\\s]*\\(\\)[\\n\\s]*:beep\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NO[\\n\\s]*YES\\)"],["\\code\n (setf (macro-function symbol) fn)\n\\endcode","\\(setf[\\n\\s]*\\(macro-function[\\n\\s]*symbol\\)[\\n\\s]*fn\\)"],["\\code\n (defmacro alpha (x y) `(beta ,x ,y)) *→* ALPHA\n (defmacro beta (x y) `(gamma ,x ,y)) *→* BETA\n (defmacro delta (x y) `(gamma ,x ,y)) *→* EPSILON\n (defmacro expand (form &environment env)\n   (multiple-value-bind (expansion expanded-p)\n       (macroexpand form env)\n     `(values ',expansion ',expanded-p))) *→* EXPAND\n (defmacro expand-1 (form &environment env)\n   (multiple-value-bind (expansion expanded-p)\n       (macroexpand-1 form env)\n     `(values ',expansion ',expanded-p))) *→* EXPAND-1\n\\medbreak\n;; Simple examples involving just the global environment\n (macroexpand-1 '(alpha a b)) *→* (BETA A B), true\n (expand-1 (alpha a b)) *→* (BETA A B), true\n (macroexpand '(alpha a b)) *→* (GAMMA A B), true\n (expand (alpha a b)) *→* (GAMMA A B), true\n (macroexpand-1 'not-a-macro) *→* NOT-A-MACRO, false\n (expand-1 not-a-macro) *→* NOT-A-MACRO, false\n (macroexpand '(not-a-macro a b)) *→* (NOT-A-MACRO A B), false\n (expand (not-a-macro a b)) *→* (NOT-A-MACRO A B), false\n\\medbreak\n;; Examples involving lexical environments\n (macrolet ((alpha (x y) `(delta ,x ,y)))\n   (macroexpand-1 '(alpha a b))) *→* (BETA A B), true\n (macrolet ((alpha (x y) `(delta ,x ,y)))\n   (expand-1 (alpha a b))) *→* (DELTA A B), true\n (macrolet ((alpha (x y) `(delta ,x ,y)))\n   (macroexpand '(alpha a b))) *→* (GAMMA A B), true\n (macrolet ((alpha (x y) `(delta ,x ,y)))\n   (expand (alpha a b))) *→* (GAMMA A B), true\n (macrolet ((beta (x y) `(epsilon ,x ,y)))\n   (expand (alpha a b))) *→* (EPSILON A B), true\n (let ((x (list 1 2 3)))\n   (symbol-macrolet ((a (first x)))\n     (expand a))) *→* (FIRST X), true\n (let ((x (list 1 2 3)))\n   (symbol-macrolet ((a (first x)))\n     (macroexpand 'a))) *→* A, false\n (symbol-macrolet ((b (alpha x y)))\n   (expand-1 b)) *→* (ALPHA X Y), true\n (symbol-macrolet ((b (alpha x y)))\n   (expand b)) *→* (GAMMA X Y), true\n (symbol-macrolet ((b (alpha x y))\n                   (a b))\n   (expand-1 a)) *→* B, true\n (symbol-macrolet ((b (alpha x y))\n                   (a b))\n   (expand a)) *→* (GAMMA X Y), true\n\\medbreak\n;; Examples of shadowing behavior\n (flet ((beta (x y) (+ x y)))\n   (expand (alpha a b))) *→* (BETA A B), true\n (macrolet ((alpha (x y) `(delta ,x ,y)))\n   (flet ((alpha (x y) (+ x y)))\n     (expand (alpha a b)))) *→* (ALPHA A B), false\n (let ((x (list 1 2 3)))\n   (symbol-macrolet ((a (first x)))\n     (let ((a x))\n       (expand a)))) *→* A, false\n\\endcode","\\(defmacro[\\n\\s]*alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(beta[\\n\\s]*,x[\\n\\s]*,y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ALPHA[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*beta[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(gamma[\\n\\s]*,x[\\n\\s]*,y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BETA[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*delta[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(gamma[\\n\\s]*,x[\\n\\s]*,y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*EPSILON[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*expand[\\n\\s]*\\(form[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(expansion[\\n\\s]*expanded-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*form[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(values[\\n\\s]*',expansion[\\n\\s]*',expanded-p\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*EXPAND[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*expand-1[\\n\\s]*\\(form[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(expansion[\\n\\s]*expanded-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand-1[\\n\\s]*form[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(values[\\n\\s]*',expansion[\\n\\s]*',expanded-p\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*EXPAND-1[\\n\\s]*\\\\medbreak[\\n\\s]*;;[\\n\\s]*Simple[\\n\\s]*examples[\\n\\s]*involving[\\n\\s]*just[\\n\\s]*the[\\n\\s]*global[\\n\\s]*environment[\\n\\s]*[\\n\\s]*\\(macroexpand-1[\\n\\s]*'\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BETA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(expand-1[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BETA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(GAMMA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(GAMMA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macroexpand-1[\\n\\s]*'not-a-macro\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NOT-A-MACRO,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(expand-1[\\n\\s]*not-a-macro\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NOT-A-MACRO,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(not-a-macro[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NOT-A-MACRO[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*\\(not-a-macro[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NOT-A-MACRO[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*false[\\n\\s]*\\\\medbreak[\\n\\s]*;;[\\n\\s]*Examples[\\n\\s]*involving[\\n\\s]*lexical[\\n\\s]*environments[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(delta[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand-1[\\n\\s]*'\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BETA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(delta[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand-1[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(DELTA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(delta[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(GAMMA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(delta[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(GAMMA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(beta[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(epsilon[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(EPSILON[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(a[\\n\\s]*\\(first[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*a\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FIRST[\\n\\s]*X\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(a[\\n\\s]*\\(first[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'a\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(b[\\n\\s]*\\(alpha[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand-1[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ALPHA[\\n\\s]*X[\\n\\s]*Y\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(b[\\n\\s]*\\(alpha[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(GAMMA[\\n\\s]*X[\\n\\s]*Y\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(b[\\n\\s]*\\(alpha[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand-1[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(b[\\n\\s]*\\(alpha[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(GAMMA[\\n\\s]*X[\\n\\s]*Y\\),[\\n\\s]*true[\\n\\s]*\\\\medbreak[\\n\\s]*;;[\\n\\s]*Examples[\\n\\s]*of[\\n\\s]*shadowing[\\n\\s]*behavior[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(beta[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BETA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(delta[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(alpha[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*\\(alpha[\\n\\s]*a[\\n\\s]*b\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ALPHA[\\n\\s]*A[\\n\\s]*B\\),[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(a[\\n\\s]*\\(first[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expand[\\n\\s]*a\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A,[\\n\\s]*false"],["\\code\n(defvar *things* (list 'alpha 'beta 'gamma)) *→* *THINGS*\n\n(define-symbol-macro thing1 (first *things*)) *→* THING1\n(define-symbol-macro thing2 (second *things*)) *→* THING2\n(define-symbol-macro thing3 (third *things*)) *→* THING3\n\nthing1 *→* ALPHA\n(setq thing1 'ONE) *→* ONE\n*things* *→* (ONE BETA GAMMA)\n(multiple-value-setq (thing2 thing3) (values 'two 'three)) *→* TWO\nthing3 *→* THREE\n*things* *→* (ONE TWO THREE)\n\n(list thing2 (let ((thing2 2)) thing2)) *→* (TWO 2)\n\\endcode","\\(defvar[\\n\\s]*\\*things\\*[\\n\\s]*\\(list[\\n\\s]*'alpha[\\n\\s]*'beta[\\n\\s]*'gamma\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*THINGS\\*[\\n\\s]*[\\n\\s]*\\(define-symbol-macro[\\n\\s]*thing1[\\n\\s]*\\(first[\\n\\s]*\\*things\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THING1[\\n\\s]*\\(define-symbol-macro[\\n\\s]*thing2[\\n\\s]*\\(second[\\n\\s]*\\*things\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THING2[\\n\\s]*\\(define-symbol-macro[\\n\\s]*thing3[\\n\\s]*\\(third[\\n\\s]*\\*things\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THING3[\\n\\s]*[\\n\\s]*thing1[\\n\\s]*\\*\\→\\*[\\n\\s]*ALPHA[\\n\\s]*\\(setq[\\n\\s]*thing1[\\n\\s]*'ONE\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ONE[\\n\\s]*\\*things\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ONE[\\n\\s]*BETA[\\n\\s]*GAMMA\\)[\\n\\s]*\\(multiple-value-setq[\\n\\s]*\\(thing2[\\n\\s]*thing3\\)[\\n\\s]*\\(values[\\n\\s]*'two[\\n\\s]*'three\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TWO[\\n\\s]*thing3[\\n\\s]*\\*\\→\\*[\\n\\s]*THREE[\\n\\s]*\\*things\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ONE[\\n\\s]*TWO[\\n\\s]*THREE\\)[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*thing2[\\n\\s]*\\(let[\\n\\s]*\\(\\(thing2[\\n\\s]*2\\)\\)[\\n\\s]*thing2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TWO[\\n\\s]*2\\)"],["\\code\n;;; The following is equivalent to\n;;;   (list 'foo (let ((x 'bar)) x)),\n;;; not\n;;;   (list 'foo (let (('foo 'bar)) 'foo))\n (symbol-macrolet ((x 'foo))\n   (list x (let ((x 'bar)) x))) \n*→* (foo bar)\n\\NV (foo foo) \n \n (symbol-macrolet ((x '(foo x)))\n   (list x))\n*→* ((FOO X))\n\\endcode",";;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*is[\\n\\s]*equivalent[\\n\\s]*to[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'foo[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*'bar\\)\\)[\\n\\s]*x\\)\\),[\\n\\s]*;;;[\\n\\s]*not[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'foo[\\n\\s]*\\(let[\\n\\s]*\\(\\('foo[\\n\\s]*'bar\\)\\)[\\n\\s]*'foo\\)\\)[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(x[\\n\\s]*'foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*'bar\\)\\)[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(foo[\\n\\s]*bar\\)[\\n\\s]*\\\\NV[\\n\\s]*\\(foo[\\n\\s]*foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(x[\\n\\s]*'\\(foo[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(FOO[\\n\\s]*X\\)\\)"],["\\code\n (defun hook (expander form env)\n    (format t \"Now expanding: ~S~%\" form)\n    (funcall expander form env)) *→* HOOK \n (defmacro machook (x y) `(/ (+ ,x ,y) 2)) *→* MACHOOK \n (macroexpand '(machook 1 2)) *→* (/ (+ 1 2) 2), true \n (let ((*macroexpand-hook* #'hook)) (macroexpand '(machook 1 2)))\n\\OUT Now expanding (MACHOOK 1 2) \n*→* (/ (+ 1 2) 2), true\n\\endcode","\\(defun[\\n\\s]*hook[\\n\\s]*\\(expander[\\n\\s]*form[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"Now[\\n\\s]*expanding:[\\n\\s]*~S~%\"[\\n\\s]*form\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*expander[\\n\\s]*form[\\n\\s]*env\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*HOOK[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*machook[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(/[\\n\\s]*\\(\\+[\\n\\s]*,x[\\n\\s]*,y\\)[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MACHOOK[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(machook[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(/[\\n\\s]*\\(\\+[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*2\\),[\\n\\s]*true[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*macroexpand-hook\\*[\\n\\s]*#'hook\\)\\)[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(machook[\\n\\s]*1[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Now[\\n\\s]*expanding[\\n\\s]*\\(MACHOOK[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(/[\\n\\s]*\\(\\+[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*2\\),[\\n\\s]*true"],["\\code\n (defun declare-variable-types-globally (type vars)\n   (proclaim `(type ,type ,@vars))\n   type)\n\n ;; Once this form is executed, the dynamic variable *TOLERANCE*\n ;; must always contain a float.\n (declare-variable-types-globally 'float '(*tolerance*))\n*→* FLOAT\n\\endcode","\\(defun[\\n\\s]*declare-variable-types-globally[\\n\\s]*\\(type[\\n\\s]*vars\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(proclaim[\\n\\s]*`\\(type[\\n\\s]*,type[\\n\\s]*,@vars\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*type\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Once[\\n\\s]*this[\\n\\s]*form[\\n\\s]*is[\\n\\s]*executed,[\\n\\s]*the[\\n\\s]*dynamic[\\n\\s]*variable[\\n\\s]*\\*TOLERANCE\\*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*must[\\n\\s]*always[\\n\\s]*contain[\\n\\s]*a[\\n\\s]*float\\.[\\n\\s]*[\\n\\s]*\\(declare-variable-types-globally[\\n\\s]*'float[\\n\\s]*'\\(\\*tolerance\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FLOAT"],["\\code\n(proclaim '(special *x*))\n\\endcode","\\(proclaim[\\n\\s]*'\\(special[\\n\\s]*\\*x\\*\\)\\)"],["\\code\n (eval-when (:execute :compile-toplevel :load-toplevel)\n   (proclaim '(special *x*)))\n\\endcode","\\(eval-when[\\n\\s]*\\(:execute[\\n\\s]*:compile-toplevel[\\n\\s]*:load-toplevel\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(proclaim[\\n\\s]*'\\(special[\\n\\s]*\\*x\\*\\)\\)\\)"],["\\code\n (defun nonsense (k x z)\n   (foo z x)                     ;First call to foo\n   (let ((j (foo k x))           ;Second call to foo\n         (x (* k k)))\n     (declare (inline foo) (special x z))\n     (foo x j z)))               ;Third call to foo\n\\endcode","\\(defun[\\n\\s]*nonsense[\\n\\s]*\\(k[\\n\\s]*x[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*z[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;First[\\n\\s]*call[\\n\\s]*to[\\n\\s]*foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(j[\\n\\s]*\\(foo[\\n\\s]*k[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Second[\\n\\s]*call[\\n\\s]*to[\\n\\s]*foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*\\(\\*[\\n\\s]*k[\\n\\s]*k\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(inline[\\n\\s]*foo\\)[\\n\\s]*\\(special[\\n\\s]*x[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*x[\\n\\s]*j[\\n\\s]*z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Third[\\n\\s]*call[\\n\\s]*to[\\n\\s]*foo"],["\\code\n (defun f ()\n   (let ((x (list 1 2 3)))\n     (declare (dynamic-extent x))\n         ...))\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)\\)"],["\\code\n (defun g (x) (declare (dynamic-extent x)) ...)\n (defun f () (g (list 1 2 3)))\n\\endcode","\\(defun[\\n\\s]*g[\\n\\s]*\\(x\\)[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f[\\n\\s]*\\(\\)[\\n\\s]*\\(g[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)"],["\\code\n (declaim (inline g))\n (defun g (x) (declare (dynamic-extent x)) ...)\n (defun f () (g (list 1 2 3)))\n \n (defun f ()\n   (flet ((g (x) (declare (dynamic-extent x)) ...))\n     (g (list 1 2 3))))\n \n\\endcode","\\(declaim[\\n\\s]*\\(inline[\\n\\s]*g\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*g[\\n\\s]*\\(x\\)[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f[\\n\\s]*\\(\\)[\\n\\s]*\\(g[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(g[\\n\\s]*\\(x\\)[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*\\.\\.\\.\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(g[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)\\)"],["\\code\n (defun f (&rest x)\n   (declare (dynamic-extent x))\n   ...)\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(&rest[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (let ((x (list 'a1 'b1 'c1))\n       (y (cons 'a2 (cons 'b2 (cons 'c2 nil)))))\n   (declare (dynamic-extent x y))\n   ...)\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*'a1[\\n\\s]*'b1[\\n\\s]*'c1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*\\(cons[\\n\\s]*'a2[\\n\\s]*\\(cons[\\n\\s]*'b2[\\n\\s]*\\(cons[\\n\\s]*'c2[\\n\\s]*nil\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n;; In this example, the implementation is permitted to \\term&#123;stack allocate&#125;\n;; the list that is bound to X.\n (let ((x (list 1 2 3)))\n   (declare (dynamic-extent x))\n   (print x)\n   :done)\n\\OUT (1 2 3)\n*→* :DONE\n \n;; In this example, the list to be bound to L can be \\term&#123;stack-allocated&#125;.\n (defun zap (x y z)\n   (do ((l (list x y z) (cdr l)))\n       ((null l))\n     (declare (dynamic-extent l))\n     (prin1 (car l)))) *→* ZAP\n (zap 1 2 3)\n\\OUT 123\n*→* NIL\n\n;; Some implementations might open-code LIST-ALL-PACKAGES in a way\n;; that permits using \\term&#123;stack allocation&#125; of the list to be bound to L.\n (do ((l (list-all-packages) (cdr l)))\n     ((null l))\n   (declare (dynamic-extent l))\n   (let ((name (package-name (car l))))\n     (when (string-search \"COMMON-LISP\" name) (print name))))\n\\OUT \"COMMON-LISP\"\n\\OUT \"COMMON-LISP-USER\"\n*→* NIL\n\n;; Some implementations might have the ability to \\term&#123;stack allocate&#125; \n;; rest lists.  A declaration such as the following should be a cue\n;; to such implementations that stack-allocation of the rest list\n;; would be desirable.\n (defun add (&rest x)\n   (declare (dynamic-extent x))\n   (apply #'+ x)) *→* ADD\n (add 1 2 3) *→* 6\n\n (defun zap (n m)\n   ;; Computes (RANDOM (+ M 1)) at relative speed of roughly O(N).\n   ;; It may be slow, but with a good compiler at least it\n   ;; doesn't waste much heap storage.  :-\\&#125;\n   (let ((a (make-array n)))\n     (declare (dynamic-extent a))\n     (dotimes (i n) \n       (declare (dynamic-extent i))\n       (setf (aref a i) (random (+ i 1))))\n     (aref a m))) *→* ZAP\n (&#60; (zap 5 3) 3) *→ true*\n\\endcode",";;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*the[\\n\\s]*implementation[\\n\\s]*is[\\n\\s]*permitted[\\n\\s]*to[\\n\\s]*\\\\term&#123;stack[\\n\\s]*allocate&#125;[\\n\\s]*;;[\\n\\s]*the[\\n\\s]*list[\\n\\s]*that[\\n\\s]*is[\\n\\s]*bound[\\n\\s]*to[\\n\\s]*X\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:done\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:DONE[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*example,[\\n\\s]*the[\\n\\s]*list[\\n\\s]*to[\\n\\s]*be[\\n\\s]*bound[\\n\\s]*to[\\n\\s]*L[\\n\\s]*can[\\n\\s]*be[\\n\\s]*\\\\term&#123;stack-allocated&#125;\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*zap[\\n\\s]*\\(x[\\n\\s]*y[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(l[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)[\\n\\s]*\\(cdr[\\n\\s]*l\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*\\(car[\\n\\s]*l\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ZAP[\\n\\s]*[\\n\\s]*\\(zap[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\\\OUT[\\n\\s]*123[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Some[\\n\\s]*implementations[\\n\\s]*might[\\n\\s]*open-code[\\n\\s]*LIST-ALL-PACKAGES[\\n\\s]*in[\\n\\s]*a[\\n\\s]*way[\\n\\s]*;;[\\n\\s]*that[\\n\\s]*permits[\\n\\s]*using[\\n\\s]*\\\\term&#123;stack[\\n\\s]*allocation&#125;[\\n\\s]*of[\\n\\s]*the[\\n\\s]*list[\\n\\s]*to[\\n\\s]*be[\\n\\s]*bound[\\n\\s]*to[\\n\\s]*L\\.[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(l[\\n\\s]*\\(list-all-packages\\)[\\n\\s]*\\(cdr[\\n\\s]*l\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(name[\\n\\s]*\\(package-name[\\n\\s]*\\(car[\\n\\s]*l\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(string-search[\\n\\s]*\"COMMON-LISP\"[\\n\\s]*name\\)[\\n\\s]*\\(print[\\n\\s]*name\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\"COMMON-LISP\"[\\n\\s]*\\\\OUT[\\n\\s]*\"COMMON-LISP-USER\"[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Some[\\n\\s]*implementations[\\n\\s]*might[\\n\\s]*have[\\n\\s]*the[\\n\\s]*ability[\\n\\s]*to[\\n\\s]*\\\\term&#123;stack[\\n\\s]*allocate&#125;[\\n\\s]*[\\n\\s]*;;[\\n\\s]*rest[\\n\\s]*lists\\.[\\n\\s]*[\\n\\s]*A[\\n\\s]*declaration[\\n\\s]*such[\\n\\s]*as[\\n\\s]*the[\\n\\s]*following[\\n\\s]*should[\\n\\s]*be[\\n\\s]*a[\\n\\s]*cue[\\n\\s]*;;[\\n\\s]*to[\\n\\s]*such[\\n\\s]*implementations[\\n\\s]*that[\\n\\s]*stack-allocation[\\n\\s]*of[\\n\\s]*the[\\n\\s]*rest[\\n\\s]*list[\\n\\s]*;;[\\n\\s]*would[\\n\\s]*be[\\n\\s]*desirable\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*add[\\n\\s]*\\(&rest[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'\\+[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ADD[\\n\\s]*[\\n\\s]*\\(add[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*zap[\\n\\s]*\\(n[\\n\\s]*m\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Computes[\\n\\s]*\\(RANDOM[\\n\\s]*\\(\\+[\\n\\s]*M[\\n\\s]*1\\)\\)[\\n\\s]*at[\\n\\s]*relative[\\n\\s]*speed[\\n\\s]*of[\\n\\s]*roughly[\\n\\s]*O\\(N\\)\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*It[\\n\\s]*may[\\n\\s]*be[\\n\\s]*slow,[\\n\\s]*but[\\n\\s]*with[\\n\\s]*a[\\n\\s]*good[\\n\\s]*compiler[\\n\\s]*at[\\n\\s]*least[\\n\\s]*it[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*doesn't[\\n\\s]*waste[\\n\\s]*much[\\n\\s]*heap[\\n\\s]*storage\\.[\\n\\s]*[\\n\\s]*:-\\\\&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*\\(make-array[\\n\\s]*n\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*a[\\n\\s]*i\\)[\\n\\s]*\\(random[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*1\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(aref[\\n\\s]*a[\\n\\s]*m\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ZAP[\\n\\s]*[\\n\\s]*\\(&#60;[\\n\\s]*\\(zap[\\n\\s]*5[\\n\\s]*3\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (length (list (let ((x (list 1 2 3)))  ; Invalid\n                (declare (dynamic-extent x))\n                x)))\n\n (progn (let ((x (list 1 2 3)))  ; Invalid\n          (declare (dynamic-extent x))\n          x)\n        nil)\n\\endcode","\\(length[\\n\\s]*\\(list[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*;[\\n\\s]*Invalid[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*;[\\n\\s]*Invalid[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(dynamic-extent[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nil\\)"],["\\code\n (defun f (x y)\n   (declare (type fixnum x y))\n   (let ((z (+ x y)))\n     (declare (type fixnum z))\n     z)) *→* F\n (f 1 2) *→* 3\n ;; The previous definition of F is equivalent to\n (defun f (x y)\n   ;; This declaration is a shorthand form of the TYPE declaration\n   (declare (fixnum x y))\n   ;; To declare the type of a return value, it's not necessary to\n   ;; create a named variable.  A THE special form can be used instead.\n   (the fixnum (+ x y))) *→* F\n (f 1 2) *→* 3\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*fixnum[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(z[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*fixnum[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*z\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F[\\n\\s]*[\\n\\s]*\\(f[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*previous[\\n\\s]*definition[\\n\\s]*of[\\n\\s]*F[\\n\\s]*is[\\n\\s]*equivalent[\\n\\s]*to[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*declaration[\\n\\s]*is[\\n\\s]*a[\\n\\s]*shorthand[\\n\\s]*form[\\n\\s]*of[\\n\\s]*the[\\n\\s]*TYPE[\\n\\s]*declaration[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*To[\\n\\s]*declare[\\n\\s]*the[\\n\\s]*type[\\n\\s]*of[\\n\\s]*a[\\n\\s]*return[\\n\\s]*value,[\\n\\s]*it's[\\n\\s]*not[\\n\\s]*necessary[\\n\\s]*to[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*create[\\n\\s]*a[\\n\\s]*named[\\n\\s]*variable\\.[\\n\\s]*[\\n\\s]*A[\\n\\s]*THE[\\n\\s]*special[\\n\\s]*form[\\n\\s]*can[\\n\\s]*be[\\n\\s]*used[\\n\\s]*instead\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F[\\n\\s]*[\\n\\s]*\\(f[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (defvar *one-array* (make-array 10 :element-type '(signed-byte 5)))\n (defvar *another-array* (make-array 10 :element-type '(signed-byte 8)))\n  \n (defun frob (an-array)\n   (declare (type (array (signed-byte 5) 1) an-array))\n   (setf (aref an-array 1) 31)\n   (setf (aref an-array 2) 127)\n   (setf (aref an-array 3) (* 2 (aref an-array 3)))\n   (let ((foo 0))\n     (declare (type (signed-byte 5) foo))\n     (setf foo (aref an-array 0))))\n  \n (frob *one-array*)\n (frob *another-array*)\n\\endcode","\\(defvar[\\n\\s]*\\*one-array\\*[\\n\\s]*\\(make-array[\\n\\s]*10[\\n\\s]*:element-type[\\n\\s]*'\\(signed-byte[\\n\\s]*5\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*another-array\\*[\\n\\s]*\\(make-array[\\n\\s]*10[\\n\\s]*:element-type[\\n\\s]*'\\(signed-byte[\\n\\s]*8\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*frob[\\n\\s]*\\(an-array\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*\\(array[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*1\\)[\\n\\s]*an-array\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*1\\)[\\n\\s]*31\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*2\\)[\\n\\s]*127\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*3\\)[\\n\\s]*\\(\\*[\\n\\s]*2[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(foo[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*foo[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*0\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(frob[\\n\\s]*\\*one-array\\*\\)[\\n\\s]*[\\n\\s]*\\(frob[\\n\\s]*\\*another-array\\*\\)"],["\\code\n (defun frob (an-array)\n   (setf (the (signed-byte 5) (aref an-array 1)) 31)\n   (setf (the (signed-byte 5) (aref an-array 2)) 127)\n   (setf (the (signed-byte 5) (aref an-array 3))\n         (* 2 (the (signed-byte 5) (aref an-array 3))))\n   (let ((foo 0))\n     (declare (type (signed-byte 5) foo))\n     (setf foo (the (signed-byte 5) (aref an-array 0)))))\n\\endcode","\\(defun[\\n\\s]*frob[\\n\\s]*\\(an-array\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(the[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*1\\)\\)[\\n\\s]*31\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(the[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*2\\)\\)[\\n\\s]*127\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(the[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*2[\\n\\s]*\\(the[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*3\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(foo[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*foo[\\n\\s]*\\(the[\\n\\s]*\\(signed-byte[\\n\\s]*5\\)[\\n\\s]*\\(aref[\\n\\s]*an-array[\\n\\s]*0\\)\\)\\)\\)\\)"],["\\code\n (defun bump-counters (counters)\n   (declare (type (array fixnum *) bump-counters))\n   (dotimes (i (length counters))\n     (incf (aref counters i))))\n\\endcode","\\(defun[\\n\\s]*bump-counters[\\n\\s]*\\(counters\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*\\(array[\\n\\s]*fixnum[\\n\\s]*\\*\\)[\\n\\s]*bump-counters\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*\\(length[\\n\\s]*counters\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*\\(aref[\\n\\s]*counters[\\n\\s]*i\\)\\)\\)\\)"],["\\code\n (defun f (x y) (declare (fixnum x y)) (+ x y))\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)"],["\\code\n (defun f (x y)\n   (declare (fixnum x y))\n   (the fixnum (+ x y)))\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)"],["\\code\n (defun f (x y)\n   (declare (fixnum x y z))\n   (the fixnum (+ x y z)))\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)\\)\\)"],["\\code\n (defun f (x y)\n   (declare (fixnum x y z))\n   (the fixnum (+ (the fixnum (+ x y)) z)))\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*z\\)\\)\\)"],["\\code\n (declaim (inline f))\n (defun f ...)\n (declaim (notinline f))\n\\endcode","\\(declaim[\\n\\s]*\\(inline[\\n\\s]*f\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(notinline[\\n\\s]*f\\)\\)"],["\\code\n ;; The globally defined function DISPATCH should be open-coded,\n ;; if the implementation supports inlining, unless a NOTINLINE \n ;; declaration overrides this effect.\n (declaim (inline dispatch))\n (defun dispatch (x) (funcall (get (car x) 'dispatch) x))\n ;; Here is an example where inlining would be encouraged.\n (defun top-level-1 () (dispatch (read-command)))\n ;; Here is an example where inlining would be prohibited.\n (defun top-level-2 ()\n   (declare (notinline dispatch))\n   (dispatch (read-command)))\n ;; Here is an example where inlining would be prohibited.\n (declaim (notinline dispatch))\n (defun top-level-3 () (dispatch (read-command)))\n ;; Here is an example where inlining would be encouraged.\n (defun top-level-4 () \n   (declare (inline dispatch))\n   (dispatch (read-command)))\n\\endcode",";;[\\n\\s]*The[\\n\\s]*globally[\\n\\s]*defined[\\n\\s]*function[\\n\\s]*DISPATCH[\\n\\s]*should[\\n\\s]*be[\\n\\s]*open-coded,[\\n\\s]*[\\n\\s]*;;[\\n\\s]*if[\\n\\s]*the[\\n\\s]*implementation[\\n\\s]*supports[\\n\\s]*inlining,[\\n\\s]*unless[\\n\\s]*a[\\n\\s]*NOTINLINE[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*declaration[\\n\\s]*overrides[\\n\\s]*this[\\n\\s]*effect\\.[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(inline[\\n\\s]*dispatch\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*dispatch[\\n\\s]*\\(x\\)[\\n\\s]*\\(funcall[\\n\\s]*\\(get[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'dispatch\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Here[\\n\\s]*is[\\n\\s]*an[\\n\\s]*example[\\n\\s]*where[\\n\\s]*inlining[\\n\\s]*would[\\n\\s]*be[\\n\\s]*encouraged\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*top-level-1[\\n\\s]*\\(\\)[\\n\\s]*\\(dispatch[\\n\\s]*\\(read-command\\)\\)\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Here[\\n\\s]*is[\\n\\s]*an[\\n\\s]*example[\\n\\s]*where[\\n\\s]*inlining[\\n\\s]*would[\\n\\s]*be[\\n\\s]*prohibited\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*top-level-2[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(notinline[\\n\\s]*dispatch\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dispatch[\\n\\s]*\\(read-command\\)\\)\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Here[\\n\\s]*is[\\n\\s]*an[\\n\\s]*example[\\n\\s]*where[\\n\\s]*inlining[\\n\\s]*would[\\n\\s]*be[\\n\\s]*prohibited\\.[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(notinline[\\n\\s]*dispatch\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*top-level-3[\\n\\s]*\\(\\)[\\n\\s]*\\(dispatch[\\n\\s]*\\(read-command\\)\\)\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Here[\\n\\s]*is[\\n\\s]*an[\\n\\s]*example[\\n\\s]*where[\\n\\s]*inlining[\\n\\s]*would[\\n\\s]*be[\\n\\s]*encouraged\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*top-level-4[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(inline[\\n\\s]*dispatch\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dispatch[\\n\\s]*\\(read-command\\)\\)\\)"],["\\code\n (declare (ftype (function (integer list) t) ith)\n          (ftype (function (number) float) sine cosine))\n\\endcode","\\(declare[\\n\\s]*\\(ftype[\\n\\s]*\\(function[\\n\\s]*\\(integer[\\n\\s]*list\\)[\\n\\s]*t\\)[\\n\\s]*ith\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ftype[\\n\\s]*\\(function[\\n\\s]*\\(number\\)[\\n\\s]*float\\)[\\n\\s]*sine[\\n\\s]*cosine\\)\\)"],["\\code\n (declaim (declaration author target-language target-machine))\n (declaim (target-language ada))\n (declaim (target-machine IBM-650))\n (defun strangep (x)\n   (declare (author \"Harry Tweeker\"))\n   (member x '(strange weird odd peculiar)))\n\\endcode","\\(declaim[\\n\\s]*\\(declaration[\\n\\s]*author[\\n\\s]*target-language[\\n\\s]*target-machine\\)\\)[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(target-language[\\n\\s]*ada\\)\\)[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(target-machine[\\n\\s]*IBM-650\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*strangep[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(author[\\n\\s]*\"Harry[\\n\\s]*Tweeker\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(member[\\n\\s]*x[\\n\\s]*'\\(strange[\\n\\s]*weird[\\n\\s]*odd[\\n\\s]*peculiar\\)\\)\\)"],["\\code\n (defun often-used-subroutine (x y)\n   (declare (optimize (safety 2)))\n   (error-check x y)\n   (hairy-setup x)\n   (do ((i 0 (+ i 1))\n        (z x (cdr z)))\n       ((null z))\n     ;; This inner loop really needs to burn.\n     (declare (optimize speed))\n     (declare (fixnum i))\n     ))\n\\endcode","\\(defun[\\n\\s]*often-used-subroutine[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(optimize[\\n\\s]*\\(safety[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error-check[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(hairy-setup[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(i[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(z[\\n\\s]*x[\\n\\s]*\\(cdr[\\n\\s]*z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*inner[\\n\\s]*loop[\\n\\s]*really[\\n\\s]*needs[\\n\\s]*to[\\n\\s]*burn\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(optimize[\\n\\s]*speed\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)\\)"],["\\code\n (defun hack (thing *mod*)    ;The binding of the parameter\n   (declare (special *mod*))  ; *mod* is visible to hack1,\n   (hack1 (car thing)))       ; but not that of thing.\n (defun hack1 (arg)\n   (declare (special *mod*))  ;Declare references to *mod*\n                              ;within hack1 to be special.\n   (if (atom arg) *mod*\n       (cons (hack1 (car arg)) (hack1 (cdr arg)))))\n\\endcode","\\(defun[\\n\\s]*hack[\\n\\s]*\\(thing[\\n\\s]*\\*mod\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*binding[\\n\\s]*of[\\n\\s]*the[\\n\\s]*parameter[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*\\*mod\\*\\)\\)[\\n\\s]*[\\n\\s]*;[\\n\\s]*\\*mod\\*[\\n\\s]*is[\\n\\s]*visible[\\n\\s]*to[\\n\\s]*hack1,[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(hack1[\\n\\s]*\\(car[\\n\\s]*thing\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*but[\\n\\s]*not[\\n\\s]*that[\\n\\s]*of[\\n\\s]*thing\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*hack1[\\n\\s]*\\(arg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*\\*mod\\*\\)\\)[\\n\\s]*[\\n\\s]*;Declare[\\n\\s]*references[\\n\\s]*to[\\n\\s]*\\*mod\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;within[\\n\\s]*hack1[\\n\\s]*to[\\n\\s]*be[\\n\\s]*special\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(atom[\\n\\s]*arg\\)[\\n\\s]*\\*mod\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*\\(hack1[\\n\\s]*\\(car[\\n\\s]*arg\\)\\)[\\n\\s]*\\(hack1[\\n\\s]*\\(cdr[\\n\\s]*arg\\)\\)\\)\\)\\)"],["\\code\n (declaim (special x))\n\\endcode","\\(declaim[\\n\\s]*\\(special[\\n\\s]*x\\)\\)"],["\\code\n (defun example (x) ...)\n\\endcode","\\(defun[\\n\\s]*example[\\n\\s]*\\(x\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n(defun declare-eg (y)                 ;this y is special\n (declare (special y))\n (let ((y t))                         ;this y is lexical\n      (list y\n            (locally (declare (special y)) y)))) ;this y refers to the\n                                                 ;special binding of y\n*→* DECLARE-EG \n (declare-eg nil) *→* (T NIL) \n\\endcode","\\(defun[\\n\\s]*declare-eg[\\n\\s]*\\(y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;this[\\n\\s]*y[\\n\\s]*is[\\n\\s]*special[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;this[\\n\\s]*y[\\n\\s]*is[\\n\\s]*lexical[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*y[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*;this[\\n\\s]*y[\\n\\s]*refers[\\n\\s]*to[\\n\\s]*the[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;special[\\n\\s]*binding[\\n\\s]*of[\\n\\s]*y[\\n\\s]*\\*\\→\\*[\\n\\s]*DECLARE-EG[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare-eg[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(T[\\n\\s]*NIL\\)"],["\\code\n(setf (symbol-value 'x) 6)\n(defun foo (x)                         ;a lexical binding of x\n  (print x)\n  (let ((x (1+ x)))                    ;a special binding of x\n    (declare (special x))              ;and a lexical reference\n    (bar))\n  (1+ x))\n(defun bar () \n  (print (locally (declare (special x))\n           x)))\n(foo 10) \n\\OUT 10\n\\OUT 11\n*→* 11\n\\endcode","\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'x\\)[\\n\\s]*6\\)[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;a[\\n\\s]*lexical[\\n\\s]*binding[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(1\\+[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;a[\\n\\s]*special[\\n\\s]*binding[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;and[\\n\\s]*a[\\n\\s]*lexical[\\n\\s]*reference[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(bar\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(1\\+[\\n\\s]*x\\)\\)[\\n\\s]*\\(defun[\\n\\s]*bar[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\(foo[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*10[\\n\\s]*\\\\OUT[\\n\\s]*11[\\n\\s]*\\*\\→\\*[\\n\\s]*11"],["\\code\n(setf (symbol-value 'x) 6)\n(defun bar (x y)            ;[1] 1st occurrence of x\n  (let ((old-x x)           ;[2] 2nd occurrence of x -- same as 1st occurrence\n        (x y))              ;[3] 3rd occurrence of x\n    (declare (special x))\n    (list old-x x)))\n(bar 'first 'second) *→* (FIRST SECOND)\n\\endcode","\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'x\\)[\\n\\s]*6\\)[\\n\\s]*\\(defun[\\n\\s]*bar[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[1\\][\\n\\s]*1st[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(old-x[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[2\\][\\n\\s]*2nd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*--[\\n\\s]*same[\\n\\s]*as[\\n\\s]*1st[\\n\\s]*occurrence[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;\\[3\\][\\n\\s]*3rd[\\n\\s]*occurrence[\\n\\s]*of[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*old-x[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\(bar[\\n\\s]*'first[\\n\\s]*'second\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FIRST[\\n\\s]*SECOND\\)"],["\\code\n (defun few (x &optional (y *foo*))\n   (declare (special *foo*))\n   ...)\n\\endcode","\\(defun[\\n\\s]*few[\\n\\s]*\\(x[\\n\\s]*&optional[\\n\\s]*\\(y[\\n\\s]*\\*foo\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*\\*foo\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (declaim (special prosp)) *→* \\term&#123;implementation-dependent&#125;\n (setq prosp 1 reg 1) *→* 1\n (let ((prosp 2) (reg 2))         ;the binding of prosp is special\n    (set 'prosp 3) (set 'reg 3)   ;due to the preceding proclamation,\n    (list prosp reg))             ;whereas the variable reg is lexical\n*→* (3 2)\n (list prosp reg) *→* (1 3)\n\n (declaim (special x))          ;x is always special.\n (defun example (x y)                                 \n   (declare (special y))\n   (let ((y 3) (x (* x 2)))\n     (print (+ y (locally (declare (special y)) y)))\n     (let ((y 4)) (declare (special y)) (foo x)))) *→* EXAMPLE\n\\endcode","\\(declaim[\\n\\s]*\\(special[\\n\\s]*prosp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*prosp[\\n\\s]*1[\\n\\s]*reg[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(prosp[\\n\\s]*2\\)[\\n\\s]*\\(reg[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;the[\\n\\s]*binding[\\n\\s]*of[\\n\\s]*prosp[\\n\\s]*is[\\n\\s]*special[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set[\\n\\s]*'prosp[\\n\\s]*3\\)[\\n\\s]*\\(set[\\n\\s]*'reg[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;due[\\n\\s]*to[\\n\\s]*the[\\n\\s]*preceding[\\n\\s]*proclamation,[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*prosp[\\n\\s]*reg\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;whereas[\\n\\s]*the[\\n\\s]*variable[\\n\\s]*reg[\\n\\s]*is[\\n\\s]*lexical[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*prosp[\\n\\s]*reg\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;x[\\n\\s]*is[\\n\\s]*always[\\n\\s]*special\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*example[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*3\\)[\\n\\s]*\\(x[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(\\+[\\n\\s]*y[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*4\\)\\)[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*\\(foo[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*EXAMPLE"],["\\code\n (defun sample-function (y)  ;this y is regarded as special\n   (declare (special y))                                \n   (let ((y t))              ;this y is regarded as lexical\n     (list y\n           (locally (declare (special y))\n             ;; this next y is regarded as special\n             y))))\n*→* SAMPLE-FUNCTION\n (sample-function nil) *→* (T NIL) \n (setq x '(1 2 3) y '(4 . 5)) *→* (4 . 5)\n\n;;; The following declarations are not notably useful in specific.\n;;; They just offer a sample of valid declaration syntax using LOCALLY.\n (locally (declare (inline floor) (notinline car cdr))\n          (declare (optimize space))\n    (floor (car x) (cdr y))) *→* 0, 1\n\\endcode","\\(defun[\\n\\s]*sample-function[\\n\\s]*\\(y\\)[\\n\\s]*[\\n\\s]*;this[\\n\\s]*y[\\n\\s]*is[\\n\\s]*regarded[\\n\\s]*as[\\n\\s]*special[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;this[\\n\\s]*y[\\n\\s]*is[\\n\\s]*regarded[\\n\\s]*as[\\n\\s]*lexical[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*y[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*this[\\n\\s]*next[\\n\\s]*y[\\n\\s]*is[\\n\\s]*regarded[\\n\\s]*as[\\n\\s]*special[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SAMPLE-FUNCTION[\\n\\s]*[\\n\\s]*\\(sample-function[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(T[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*y[\\n\\s]*'\\(4[\\n\\s]*\\.[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*\\.[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*declarations[\\n\\s]*are[\\n\\s]*not[\\n\\s]*notably[\\n\\s]*useful[\\n\\s]*in[\\n\\s]*specific\\.[\\n\\s]*;;;[\\n\\s]*They[\\n\\s]*just[\\n\\s]*offer[\\n\\s]*a[\\n\\s]*sample[\\n\\s]*of[\\n\\s]*valid[\\n\\s]*declaration[\\n\\s]*syntax[\\n\\s]*using[\\n\\s]*LOCALLY\\.[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(inline[\\n\\s]*floor\\)[\\n\\s]*\\(notinline[\\n\\s]*car[\\n\\s]*cdr\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(optimize[\\n\\s]*space\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(floor[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*\\(cdr[\\n\\s]*y\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*1"],["\\code\n;;; This example shows a definition of a function that has a particular set\n;;; of OPTIMIZE settings made locally to that definition.\n (locally (declare (optimize (safety 3) (space 3) (speed 0)))\n   (defun frob (w x y &optional (z (foo x y)))\n     (mumble x y z w)))\n*→* FROB\n\n;;; This is like the previous example, except that the optimize settings\n;;; remain in effect for subsequent definitions in the same compilation unit.\n (declaim (optimize (safety 3) (space 3) (speed 0)))\n (defun frob (w x y &optional (z (foo x y)))\n   (mumble x y z w))\n*→* FROB\n\\endcode",";;;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*shows[\\n\\s]*a[\\n\\s]*definition[\\n\\s]*of[\\n\\s]*a[\\n\\s]*function[\\n\\s]*that[\\n\\s]*has[\\n\\s]*a[\\n\\s]*particular[\\n\\s]*set[\\n\\s]*;;;[\\n\\s]*of[\\n\\s]*OPTIMIZE[\\n\\s]*settings[\\n\\s]*made[\\n\\s]*locally[\\n\\s]*to[\\n\\s]*that[\\n\\s]*definition\\.[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(optimize[\\n\\s]*\\(safety[\\n\\s]*3\\)[\\n\\s]*\\(space[\\n\\s]*3\\)[\\n\\s]*\\(speed[\\n\\s]*0\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*frob[\\n\\s]*\\(w[\\n\\s]*x[\\n\\s]*y[\\n\\s]*&optional[\\n\\s]*\\(z[\\n\\s]*\\(foo[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mumble[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z[\\n\\s]*w\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FROB[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*is[\\n\\s]*like[\\n\\s]*the[\\n\\s]*previous[\\n\\s]*example,[\\n\\s]*except[\\n\\s]*that[\\n\\s]*the[\\n\\s]*optimize[\\n\\s]*settings[\\n\\s]*;;;[\\n\\s]*remain[\\n\\s]*in[\\n\\s]*effect[\\n\\s]*for[\\n\\s]*subsequent[\\n\\s]*definitions[\\n\\s]*in[\\n\\s]*the[\\n\\s]*same[\\n\\s]*compilation[\\n\\s]*unit\\.[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(optimize[\\n\\s]*\\(safety[\\n\\s]*3\\)[\\n\\s]*\\(space[\\n\\s]*3\\)[\\n\\s]*\\(speed[\\n\\s]*0\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*frob[\\n\\s]*\\(w[\\n\\s]*x[\\n\\s]*y[\\n\\s]*&optional[\\n\\s]*\\(z[\\n\\s]*\\(foo[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mumble[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z[\\n\\s]*w\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FROB"],["\\code\n%  (the type exp) \n% \\EQ \n%  (let ((#:g0001 exp))\n%    (declare (type type #:g0001))\n%    #:g0001)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*type[\\n\\s]*exp\\)[\\n\\s]*[\\n\\s]*%[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(#:g0001[\\n\\s]*exp\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*type[\\n\\s]*#:g0001\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#:g0001\\)[\\n\\s]*%"],["\\code\n (the symbol (car (list (gensym)))) *→* #:G9876\n (the fixnum (+ 5 7)) *→* 12\n (the (values) (truncate 3.2 2)) *→* 1, 1.2\n (the integer (truncate 3.2 2)) *→* 1, 1.2\n (the (values integer) (truncate 3.2 2)) *→* 1, 1.2\n (the (values integer float) (truncate 3.2 2))   *→* 1, 1.2\n (the (values integer float symbol) (truncate 3.2 2)) *→* 1, 1.2\n (the (values integer float symbol t null list) \n      (truncate 3.2 2)) *→* 1, 1.2\n (let ((i 100))\n    (declare (fixnum i))\n    (the fixnum (1+ i))) *→* 101\n (let* ((x (list 'a 'b 'c))\n        (y 5))\n    (setf (the fixnum (car x)) y)\n    x) *→* (5 B C)\n\\endcode","\\(the[\\n\\s]*symbol[\\n\\s]*\\(car[\\n\\s]*\\(list[\\n\\s]*\\(gensym\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G9876[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(\\+[\\n\\s]*5[\\n\\s]*7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*12[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*\\(values\\)[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*integer[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*\\(values[\\n\\s]*integer\\)[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*\\(values[\\n\\s]*integer[\\n\\s]*float\\)[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*\\(values[\\n\\s]*integer[\\n\\s]*float[\\n\\s]*symbol\\)[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*\\(values[\\n\\s]*integer[\\n\\s]*float[\\n\\s]*symbol[\\n\\s]*t[\\n\\s]*null[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(i[\\n\\s]*100\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(fixnum[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(1\\+[\\n\\s]*i\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*101[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(the[\\n\\s]*fixnum[\\n\\s]*\\(car[\\n\\s]*x\\)\\)[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(5[\\n\\s]*B[\\n\\s]*C\\)"],["\\code\n (the (values integer integer) (floor x y))\n (the (values string t)\n      (gethash the-key the-string-table))\n\\endcode","\\(the[\\n\\s]*\\(values[\\n\\s]*integer[\\n\\s]*integer\\)[\\n\\s]*\\(floor[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*\\(the[\\n\\s]*\\(values[\\n\\s]*string[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*the-key[\\n\\s]*the-string-table\\)\\)"],["\\code\n (special-operator-p 'if) *→ true*\n (special-operator-p 'car) *→ false*\n (special-operator-p 'one) *→ false*\n\\endcode","\\(special-operator-p[\\n\\s]*'if\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(special-operator-p[\\n\\s]*'car\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(special-operator-p[\\n\\s]*'one\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (constantp 1) *→ true*\n (constantp 'temp) *→ false*\n (constantp ''temp)) *→ true*\n (defconstant this-is-a-constant 'never-changing) *→* THIS-IS-A-CONSTANT \n (constantp 'this-is-a-constant) *→ true*\n (constantp \"temp\") *→ true*\n (setq a 6) *→* 6 \n (constantp a) *→ true*\n (constantp '(sin pi)) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(car '(x))) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(eql x x)) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(typep x 'nil)) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(typep x 't)) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(values this-is-a-constant)) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(values 'x 'y)) *→* \\term&#123;implementation-dependent&#125;\n (constantp '(let ((a '(a b c))) (+ (length a) 6))) *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(constantp[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*''temp\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(defconstant[\\n\\s]*this-is-a-constant[\\n\\s]*'never-changing\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THIS-IS-A-CONSTANT[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'this-is-a-constant\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*\"temp\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(sin[\\n\\s]*pi\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(car[\\n\\s]*'\\(x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(eql[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(typep[\\n\\s]*x[\\n\\s]*'nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(typep[\\n\\s]*x[\\n\\s]*'t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(values[\\n\\s]*this-is-a-constant\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(values[\\n\\s]*'x[\\n\\s]*'y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\(let[\\n\\s]*\\(\\(a[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*\\(length[\\n\\s]*a\\)[\\n\\s]*6\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n;; An example involving version numbers.  Note that the precise nature of\n;; the truename is implementation-dependent while the file is still open.\n (with-open-file (stream \"&#62;vistor&#62;test.text.newest\")\n   (values (pathname stream)\n           (truename stream)))\n*→* #P\"S:&#62;vistor&#62;test.text.newest\", #P\"S:&#62;vistor&#62;test.text.1\"\n\\OV #P\"S:&#62;vistor&#62;test.text.newest\", #P\"S:&#62;vistor&#62;test.text.newest\"\n\\OV #P\"S:&#62;vistor&#62;test.text.newest\", #P\"S:&#62;vistor&#62;_temp_._temp_.1\"\n\n;; In this case, the file is closed when the truename is tried, so the\n;; truename information is reliable.\n (with-open-file (stream \"&#62;vistor&#62;test.text.newest\")\n   (close stream)\n   (values (pathname stream)\n           (truename stream)))\n*→* #P\"S:&#62;vistor&#62;test.text.newest\", #P\"S:&#62;vistor&#62;test.text.1\"\n\n;; An example involving TOP-20's implementation-dependent concept \n;; of logical devices -- in this case, \"DOC:\" is shorthand for\n;; \"PS:&#60;DOCUMENTATION&#62;\" ...\n (with-open-file (stream \"CMUC::DOC:DUMPER.HLP\")\n   (values (pathname stream)\n           (truename stream)))\n*→* #P\"CMUC::DOC:DUMPER.HLP\", #P\"CMUC::PS:&#60;DOCUMENTATION&#62;DUMPER.HLP.13\"\n\\endcode",";;[\\n\\s]*An[\\n\\s]*example[\\n\\s]*involving[\\n\\s]*version[\\n\\s]*numbers\\.[\\n\\s]*[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*the[\\n\\s]*precise[\\n\\s]*nature[\\n\\s]*of[\\n\\s]*;;[\\n\\s]*the[\\n\\s]*truename[\\n\\s]*is[\\n\\s]*implementation-dependent[\\n\\s]*while[\\n\\s]*the[\\n\\s]*file[\\n\\s]*is[\\n\\s]*still[\\n\\s]*open\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"&#62;vistor&#62;test\\.text\\.newest\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(pathname[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*stream\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.newest\",[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.1\"[\\n\\s]*\\\\OV[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.newest\",[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.newest\"[\\n\\s]*\\\\OV[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.newest\",[\\n\\s]*#P\"S:&#62;vistor&#62;_temp_\\._temp_\\.1\"[\\n\\s]*[\\n\\s]*;;[\\n\\s]*In[\\n\\s]*this[\\n\\s]*case,[\\n\\s]*the[\\n\\s]*file[\\n\\s]*is[\\n\\s]*closed[\\n\\s]*when[\\n\\s]*the[\\n\\s]*truename[\\n\\s]*is[\\n\\s]*tried,[\\n\\s]*so[\\n\\s]*the[\\n\\s]*;;[\\n\\s]*truename[\\n\\s]*information[\\n\\s]*is[\\n\\s]*reliable\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"&#62;vistor&#62;test\\.text\\.newest\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(close[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(pathname[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*stream\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.newest\",[\\n\\s]*#P\"S:&#62;vistor&#62;test\\.text\\.1\"[\\n\\s]*[\\n\\s]*;;[\\n\\s]*An[\\n\\s]*example[\\n\\s]*involving[\\n\\s]*TOP-20's[\\n\\s]*implementation-dependent[\\n\\s]*concept[\\n\\s]*[\\n\\s]*;;[\\n\\s]*of[\\n\\s]*logical[\\n\\s]*devices[\\n\\s]*--[\\n\\s]*in[\\n\\s]*this[\\n\\s]*case,[\\n\\s]*\"DOC:\"[\\n\\s]*is[\\n\\s]*shorthand[\\n\\s]*for[\\n\\s]*;;[\\n\\s]*\"PS:&#60;DOCUMENTATION&#62;\"[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"CMUC::DOC:DUMPER\\.HLP\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(pathname[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*stream\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"CMUC::DOC:DUMPER\\.HLP\",[\\n\\s]*#P\"CMUC::PS:&#60;DOCUMENTATION&#62;DUMPER\\.HLP\\.13\""],["\\code\n (with-open-file (stream \"&#62;relativity&#62;general.text\")\n   (file-author s))\n*→* \"albert\"\n\\endcode","\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"&#62;relativity&#62;general\\.text\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(file-author[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"albert\""],["\\code\n (with-open-file (s \"noel.text\" \n                    :direction :output :if-exists :error)\n   (format s \"~&Dear Santa,~2%I was good this year.  ~\n                Please leave lots of toys.~2%Love, Sue~\n             ~2%attachments: milk, cookies~%\")\n   (truename s))\n*→* #P\"CUPID:/susan/noel.text\"\n (with-open-file (s \"noel.text\")\n   (file-write-date s))\n*→* 2902600800\n\\endcode","\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"noel\\.text\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*s[\\n\\s]*\"~&Dear[\\n\\s]*Santa,~2%I[\\n\\s]*was[\\n\\s]*good[\\n\\s]*this[\\n\\s]*year\\.[\\n\\s]*[\\n\\s]*~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Please[\\n\\s]*leave[\\n\\s]*lots[\\n\\s]*of[\\n\\s]*toys\\.~2%Love,[\\n\\s]*Sue~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~2%attachments:[\\n\\s]*milk,[\\n\\s]*cookies~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"CUPID:/susan/noel\\.text\"[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"noel\\.text\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(file-write-date[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2902600800"],["\\code\n;; An example involving logical pathnames.\n (with-open-file (stream \"sys:chemistry;lead.text\"\n                         :direction :output :if-exists :error)\n   (princ \"eureka\" stream)\n   (values (pathname stream) (truename stream)))\n*→* #P\"SYS:CHEMISTRY;LEAD.TEXT.NEWEST\", #P\"Q:&#62;sys&#62;chem&#62;lead.text.1\"\n (rename-file \"sys:chemistry;lead.text\" \"gold.text\")\n*→* #P\"SYS:CHEMISTRY;GOLD.TEXT.NEWEST\",\n   #P\"Q:&#62;sys&#62;chem&#62;lead.text.1\",\n   #P\"Q:&#62;sys&#62;chem&#62;gold.text.1\"\n\\endcode",";;[\\n\\s]*An[\\n\\s]*example[\\n\\s]*involving[\\n\\s]*logical[\\n\\s]*pathnames\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"sys:chemistry;lead\\.text\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*\"eureka\"[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(pathname[\\n\\s]*stream\\)[\\n\\s]*\\(truename[\\n\\s]*stream\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"SYS:CHEMISTRY;LEAD\\.TEXT\\.NEWEST\",[\\n\\s]*#P\"Q:&#62;sys&#62;chem&#62;lead\\.text\\.1\"[\\n\\s]*[\\n\\s]*\\(rename-file[\\n\\s]*\"sys:chemistry;lead\\.text\"[\\n\\s]*\"gold\\.text\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"SYS:CHEMISTRY;GOLD\\.TEXT\\.NEWEST\",[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#P\"Q:&#62;sys&#62;chem&#62;lead\\.text\\.1\",[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#P\"Q:&#62;sys&#62;chem&#62;gold\\.text\\.1\""],["\\code\n (with-open-file (s \"delete-me.text\" :direction :output :if-exists :error))\n*→* NIL\n (setq p (probe-file \"delete-me.text\")) *→* #P\"R:&#62;fred&#62;delete-me.text.1\"\n (delete-file p) *→* T\n (probe-file \"delete-me.text\") *→ false*\n (with-open-file (s \"delete-me.text\" :direction :output :if-exists :error)\n   (delete-file s))\n*→* T\n (probe-file \"delete-me.text\") *→ false*\n\\endcode","\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"delete-me\\.text\"[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:error\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*p[\\n\\s]*\\(probe-file[\\n\\s]*\"delete-me\\.text\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"R:&#62;fred&#62;delete-me\\.text\\.1\"[\\n\\s]*[\\n\\s]*\\(delete-file[\\n\\s]*p\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(probe-file[\\n\\s]*\"delete-me\\.text\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"delete-me\\.text\"[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(delete-file[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(probe-file[\\n\\s]*\"delete-me\\.text\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (setq f '+) *→* +\n (apply f '(1 2)) *→* 3\n (setq f #'-) *→* #&#60;FUNCTION -&#62;\n (apply f '(1 2)) *→* -1\n (apply #'max 3 5 '(2 7 3)) *→* 7\n (apply 'cons '((+ 2 3) 4)) *→* ((+ 2 3) . 4)\n (apply #'+ '()) *→* 0\n\n (defparameter *some-list* '(a b c))\n (defun strange-test (&rest x) (eq x *some-list*))\n (apply #'strange-test *some-list*) *→* \\term&#123;implementation-dependent&#125;\n\n (defun bad-boy (&rest x) (rplacd x 'y))\n (bad-boy 'a 'b 'c) has undefined consequences.\n (apply #'bad-boy *some-list*) has undefined consequences.\n\\endcode","\\(setq[\\n\\s]*f[\\n\\s]*'\\+\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\+[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*f[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*f[\\n\\s]*#'-\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FUNCTION[\\n\\s]*-&#62;[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*f[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'max[\\n\\s]*3[\\n\\s]*5[\\n\\s]*'\\(2[\\n\\s]*7[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*'cons[\\n\\s]*'\\(\\(\\+[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\\+[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'\\+[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defparameter[\\n\\s]*\\*some-list\\*[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*strange-test[\\n\\s]*\\(&rest[\\n\\s]*x\\)[\\n\\s]*\\(eq[\\n\\s]*x[\\n\\s]*\\*some-list\\*\\)\\)[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'strange-test[\\n\\s]*\\*some-list\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*bad-boy[\\n\\s]*\\(&rest[\\n\\s]*x\\)[\\n\\s]*\\(rplacd[\\n\\s]*x[\\n\\s]*'y\\)\\)[\\n\\s]*[\\n\\s]*\\(bad-boy[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)[\\n\\s]*has[\\n\\s]*undefined[\\n\\s]*consequences\\.[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'bad-boy[\\n\\s]*\\*some-list\\*\\)[\\n\\s]*has[\\n\\s]*undefined[\\n\\s]*consequences\\."],["\\code\n (defun foo (size &rest keys &key double &allow-other-keys)\n   (let ((v (apply #'make-array size :allow-other-keys t keys)))\n     (if double (concatenate (type-of v) v v) v)))\n (foo 4 :initial-contents '(a b c d) :double t)\n    *→* #(A B C D A B C D)\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(size[\\n\\s]*&rest[\\n\\s]*keys[\\n\\s]*&key[\\n\\s]*double[\\n\\s]*&allow-other-keys\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(v[\\n\\s]*\\(apply[\\n\\s]*#'make-array[\\n\\s]*size[\\n\\s]*:allow-other-keys[\\n\\s]*t[\\n\\s]*keys\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*double[\\n\\s]*\\(concatenate[\\n\\s]*\\(type-of[\\n\\s]*v\\)[\\n\\s]*v[\\n\\s]*v\\)[\\n\\s]*v\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*4[\\n\\s]*:initial-contents[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)[\\n\\s]*:double[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)"],["\\code\n (lambda \\param&#123;lambda-list&#125;\n   &#123;\\DeclsAndDoc&#125;\n   (block \\param&#123;block-name&#125; \\starparam&#123;form&#125;))\n\\endcode","\\(lambda[\\n\\s]*\\\\param&#123;lambda-list&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&#123;\\\\DeclsAndDoc&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*\\\\param&#123;block-name&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)\\)"],["\\code\n (defun recur (x)\n  (when (&#62; x 0)\n    (recur (1- x)))) *→* RECUR \n (defun ex (a b &optional c (d 66) &rest keys &key test (start 0))\n    (list a b c d keys test start)) *→* EX \n (ex 1 2) *→* (1 2 NIL 66 NIL NIL 0)\n (ex 1 2 3 4 :test 'equal :start 50) \n*→* (1 2 3 4 (:TEST EQUAL :START 50) EQUAL 50)\n (ex :test 1 :start 2) *→* (:TEST 1 :START 2 NIL NIL 0)\n\n ;; This function assumes its callers have checked the types of the\n ;; arguments, and authorizes the compiler to build in that assumption.\n (defun discriminant (a b c)\n   (declare (number a b c))\n   \"Compute the discriminant for a quadratic equation.\"\n   (- (* b b) (* 4 a c))) *→* DISCRIMINANT\n (discriminant 1 2/3 -2) *→* 76/9\n\n ;; This function assumes its callers have not checked the types of the\n ;; arguments, and performs explicit type checks before making any assumptions. \n (defun careful-discriminant (a b c)\n   \"Compute the discriminant for a quadratic equation.\"\n   (check-type a number)\n   (check-type b number)\n   (check-type c number)\n   (locally (declare (number a b c))\n     (- (* b b) (* 4 a c)))) *→* CAREFUL-DISCRIMINANT\n (careful-discriminant 1 2/3 -2) *→* 76/9\n\\endcode","\\(defun[\\n\\s]*recur[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(&#62;[\\n\\s]*x[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(recur[\\n\\s]*\\(1-[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*RECUR[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*ex[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*&optional[\\n\\s]*c[\\n\\s]*\\(d[\\n\\s]*66\\)[\\n\\s]*&rest[\\n\\s]*keys[\\n\\s]*&key[\\n\\s]*test[\\n\\s]*\\(start[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*keys[\\n\\s]*test[\\n\\s]*start\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*EX[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ex[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*NIL[\\n\\s]*66[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(ex[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*:test[\\n\\s]*'equal[\\n\\s]*:start[\\n\\s]*50\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*\\(:TEST[\\n\\s]*EQUAL[\\n\\s]*:START[\\n\\s]*50\\)[\\n\\s]*EQUAL[\\n\\s]*50\\)[\\n\\s]*[\\n\\s]*\\(ex[\\n\\s]*:test[\\n\\s]*1[\\n\\s]*:start[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:TEST[\\n\\s]*1[\\n\\s]*:START[\\n\\s]*2[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*function[\\n\\s]*assumes[\\n\\s]*its[\\n\\s]*callers[\\n\\s]*have[\\n\\s]*checked[\\n\\s]*the[\\n\\s]*types[\\n\\s]*of[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;[\\n\\s]*arguments,[\\n\\s]*and[\\n\\s]*authorizes[\\n\\s]*the[\\n\\s]*compiler[\\n\\s]*to[\\n\\s]*build[\\n\\s]*in[\\n\\s]*that[\\n\\s]*assumption\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*discriminant[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(number[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Compute[\\n\\s]*the[\\n\\s]*discriminant[\\n\\s]*for[\\n\\s]*a[\\n\\s]*quadratic[\\n\\s]*equation\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*\\(\\*[\\n\\s]*b[\\n\\s]*b\\)[\\n\\s]*\\(\\*[\\n\\s]*4[\\n\\s]*a[\\n\\s]*c\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DISCRIMINANT[\\n\\s]*[\\n\\s]*\\(discriminant[\\n\\s]*1[\\n\\s]*2/3[\\n\\s]*-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*76/9[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*function[\\n\\s]*assumes[\\n\\s]*its[\\n\\s]*callers[\\n\\s]*have[\\n\\s]*not[\\n\\s]*checked[\\n\\s]*the[\\n\\s]*types[\\n\\s]*of[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;[\\n\\s]*arguments,[\\n\\s]*and[\\n\\s]*performs[\\n\\s]*explicit[\\n\\s]*type[\\n\\s]*checks[\\n\\s]*before[\\n\\s]*making[\\n\\s]*any[\\n\\s]*assumptions\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*careful-discriminant[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Compute[\\n\\s]*the[\\n\\s]*discriminant[\\n\\s]*for[\\n\\s]*a[\\n\\s]*quadratic[\\n\\s]*equation\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*a[\\n\\s]*number\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*b[\\n\\s]*number\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*c[\\n\\s]*number\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(number[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*\\(\\*[\\n\\s]*b[\\n\\s]*b\\)[\\n\\s]*\\(\\*[\\n\\s]*4[\\n\\s]*a[\\n\\s]*c\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CAREFUL-DISCRIMINANT[\\n\\s]*[\\n\\s]*\\(careful-discriminant[\\n\\s]*1[\\n\\s]*2/3[\\n\\s]*-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*76/9"],["\\code\n (fboundp 'car) *→ true*\n (fboundp 'nth-value) *→ false*\n (fboundp 'with-open-file) *→ true*\n (fboundp 'unwind-protect) *→ true*\n (defun my-function (x) x) *→* MY-FUNCTION\n (fboundp 'my-function) *→ true*\n (let ((saved-definition (symbol-function 'my-function)))\n   (unwind-protect (progn (fmakunbound 'my-function)\n                          (fboundp 'my-function))\n     (setf (symbol-function 'my-function) saved-definition)))\n*→ false*\n (fboundp 'my-function) *→ true*\n (defmacro my-macro (x) `',x) *→* MY-MACRO\n (fboundp 'my-macro) *→ true*\n (fmakunbound 'my-function) *→* MY-FUNCTION\n (fboundp 'my-function) *→ false*\n (flet ((my-function (x) x))\n   (fboundp 'my-function)) *→ false*\n\\endcode","\\(fboundp[\\n\\s]*'car\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'nth-value\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'with-open-file\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'unwind-protect\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*my-function[\\n\\s]*\\(x\\)[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MY-FUNCTION[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'my-function\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(saved-definition[\\n\\s]*\\(symbol-function[\\n\\s]*'my-function\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(progn[\\n\\s]*\\(fmakunbound[\\n\\s]*'my-function\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'my-function\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'my-function\\)[\\n\\s]*saved-definition\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'my-function\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*my-macro[\\n\\s]*\\(x\\)[\\n\\s]*`',x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MY-MACRO[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'my-macro\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(fmakunbound[\\n\\s]*'my-function\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MY-FUNCTION[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'my-function\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(my-function[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'my-function\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n(if (fboundp x) (symbol-function x))\n\\endcode","\\(if[\\n\\s]*\\(fboundp[\\n\\s]*x\\)[\\n\\s]*\\(symbol-function[\\n\\s]*x\\)\\)"],["\\code\n(defun add-some (x) (+ x 19)) *→* ADD-SOME\n (fboundp 'add-some) *→ true*\n (flet ((add-some (x) (+ x 37)))\n    (fmakunbound 'add-some)\n    (add-some 1)) *→* 38\n (fboundp 'add-some) *→ false*\n\\endcode","\\(defun[\\n\\s]*add-some[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*19\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ADD-SOME[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'add-some\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(add-some[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*37\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fmakunbound[\\n\\s]*'add-some\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(add-some[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*38[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'add-some\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (defun foo (x flag)\n   (macrolet ((fudge (z)\n                 ;The parameters x and flag are not accessible\n                 ; at this point; a reference to flag would be to\n                 ; the global variable of that name.\n                 \\bq\\ (if flag (* ,z ,z) ,z)))\n    ;The parameters x and flag are accessible here.\n     (+ x\n        (fudge x)\n        (fudge (+ x 1)))))\n \\EQ\n (defun foo (x flag)\n   (+ x\n      (if flag (* x x) x)\n      (if flag (* (+ x 1) (+ x 1)) (+ x 1))))\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x[\\n\\s]*flag\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(fudge[\\n\\s]*\\(z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*parameters[\\n\\s]*x[\\n\\s]*and[\\n\\s]*flag[\\n\\s]*are[\\n\\s]*not[\\n\\s]*accessible[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*at[\\n\\s]*this[\\n\\s]*point;[\\n\\s]*a[\\n\\s]*reference[\\n\\s]*to[\\n\\s]*flag[\\n\\s]*would[\\n\\s]*be[\\n\\s]*to[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*the[\\n\\s]*global[\\n\\s]*variable[\\n\\s]*of[\\n\\s]*that[\\n\\s]*name\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\bq\\\\[\\n\\s]*\\(if[\\n\\s]*flag[\\n\\s]*\\(\\*[\\n\\s]*,z[\\n\\s]*,z\\)[\\n\\s]*,z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*parameters[\\n\\s]*x[\\n\\s]*and[\\n\\s]*flag[\\n\\s]*are[\\n\\s]*accessible[\\n\\s]*here\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fudge[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fudge[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*1\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(x[\\n\\s]*flag\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*flag[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*flag[\\n\\s]*\\(\\*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*1\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*1\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*1\\)\\)\\)\\)"],["\\code\n%  (flet ((+ (&rest args) 'crossed-out)) (+ 1 2 3)) *→* CROSSED-OUT\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(\\+[\\n\\s]*\\(&rest[\\n\\s]*args\\)[\\n\\s]*'crossed-out\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CROSSED-OUT[\\n\\s]*%"],["\\code\n (flet ((flet1 (n) (+ n n)))\n    (flet ((flet1 (n) (+ 2 (flet1 n))))\n      (flet1 2))) *→* 6\n\n (defun dummy-function () 'top-level) *→* DUMMY-FUNCTION \n (funcall #'dummy-function) *→* TOP-LEVEL \n (flet ((dummy-function () 'shadow)) \n      (funcall #'dummy-function)) *→* SHADOW \n (eq (funcall #'dummy-function) (funcall 'dummy-function))\n*→ true* \n (flet ((dummy-function () 'shadow))\n   (eq (funcall #'dummy-function)\n       (funcall 'dummy-function)))\n*→ false* \n\n (defun recursive-times (k n)\n   (labels ((temp (n) \n              (if (zerop n) 0 (+ k (temp (1- n))))))\n     (temp n))) *→* RECURSIVE-TIMES\n (recursive-times 2 3) *→* 6\n\n (defmacro mlets (x &environment env) \n    (let ((form `(babbit ,x)))\n      (macroexpand form env))) *→* MLETS\n (macrolet ((babbit (z) `(+ ,z ,z))) (mlets 5)) *→* 10\n\\endcode","\\(flet[\\n\\s]*\\(\\(flet1[\\n\\s]*\\(n\\)[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*n\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(flet1[\\n\\s]*\\(n\\)[\\n\\s]*\\(\\+[\\n\\s]*2[\\n\\s]*\\(flet1[\\n\\s]*n\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet1[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*dummy-function[\\n\\s]*\\(\\)[\\n\\s]*'top-level\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DUMMY-FUNCTION[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*#'dummy-function\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TOP-LEVEL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(dummy-function[\\n\\s]*\\(\\)[\\n\\s]*'shadow\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*#'dummy-function\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SHADOW[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(funcall[\\n\\s]*#'dummy-function\\)[\\n\\s]*\\(funcall[\\n\\s]*'dummy-function\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(dummy-function[\\n\\s]*\\(\\)[\\n\\s]*'shadow\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(funcall[\\n\\s]*#'dummy-function\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*'dummy-function\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*recursive-times[\\n\\s]*\\(k[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(labels[\\n\\s]*\\(\\(temp[\\n\\s]*\\(n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(zerop[\\n\\s]*n\\)[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*k[\\n\\s]*\\(temp[\\n\\s]*\\(1-[\\n\\s]*n\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(temp[\\n\\s]*n\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*RECURSIVE-TIMES[\\n\\s]*[\\n\\s]*\\(recursive-times[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*mlets[\\n\\s]*\\(x[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(form[\\n\\s]*`\\(babbit[\\n\\s]*,x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*form[\\n\\s]*env\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MLETS[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(babbit[\\n\\s]*\\(z\\)[\\n\\s]*`\\(\\+[\\n\\s]*,z[\\n\\s]*,z\\)\\)\\)[\\n\\s]*\\(mlets[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n (flet ((safesqrt (x) (sqrt (abs x))))\n  ;; The safesqrt function is used in two places.\n   (safesqrt (apply #'+ (map 'list #'safesqrt '(1 2 3 4 5 6)))))\n*→* 3.291173\n\\endcode","\\(flet[\\n\\s]*\\(\\(safesqrt[\\n\\s]*\\(x\\)[\\n\\s]*\\(sqrt[\\n\\s]*\\(abs[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*safesqrt[\\n\\s]*function[\\n\\s]*is[\\n\\s]*used[\\n\\s]*in[\\n\\s]*two[\\n\\s]*places\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(safesqrt[\\n\\s]*\\(apply[\\n\\s]*#'\\+[\\n\\s]*\\(map[\\n\\s]*'list[\\n\\s]*#'safesqrt[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.291173"],["\\code\n (defun integer-power (n k)     \n   (declare (integer n))         \n   (declare (type (integer 0 *) k))\n   (labels ((expt0 (x k a)\n              (declare (integer x a) (type (integer 0 *) k))\n              (cond ((zerop k) a)\n                    ((evenp k) (expt1 (* x x) (floor k 2) a))\n                    (t (expt0 (* x x) (floor k 2) (* x a)))))\n            (expt1 (x k a)\n              (declare (integer x a) (type (integer 0 *) k))\n              (cond ((evenp k) (expt1 (* x x) (floor k 2) a))\n                    (t (expt0 (* x x) (floor k 2) (* x a))))))\n    (expt0 n k 1))) *→* INTEGER-POWER\n\\endcode","\\(defun[\\n\\s]*integer-power[\\n\\s]*\\(n[\\n\\s]*k\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(integer[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(type[\\n\\s]*\\(integer[\\n\\s]*0[\\n\\s]*\\*\\)[\\n\\s]*k\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(labels[\\n\\s]*\\(\\(expt0[\\n\\s]*\\(x[\\n\\s]*k[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(integer[\\n\\s]*x[\\n\\s]*a\\)[\\n\\s]*\\(type[\\n\\s]*\\(integer[\\n\\s]*0[\\n\\s]*\\*\\)[\\n\\s]*k\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(zerop[\\n\\s]*k\\)[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(evenp[\\n\\s]*k\\)[\\n\\s]*\\(expt1[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(floor[\\n\\s]*k[\\n\\s]*2\\)[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(expt0[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(floor[\\n\\s]*k[\\n\\s]*2\\)[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*a\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expt1[\\n\\s]*\\(x[\\n\\s]*k[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(integer[\\n\\s]*x[\\n\\s]*a\\)[\\n\\s]*\\(type[\\n\\s]*\\(integer[\\n\\s]*0[\\n\\s]*\\*\\)[\\n\\s]*k\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(evenp[\\n\\s]*k\\)[\\n\\s]*\\(expt1[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(floor[\\n\\s]*k[\\n\\s]*2\\)[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(expt0[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(floor[\\n\\s]*k[\\n\\s]*2\\)[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*a\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expt0[\\n\\s]*n[\\n\\s]*k[\\n\\s]*1\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*INTEGER-POWER"],["\\code\n (defun example (y l)\n   (flet ((attach (x)\n            (setq l (append l (list x)))))\n     (declare (inline attach))\n     (dolist (x y)\n       (unless (null (cdr x))\n         (attach x)))\n     l))\n\n (example '((a apple apricot) (b banana) (c cherry) (d) (e))\n          '((1) (2) (3) (4 2) (5) (6 3 2)))\n*→* ((1) (2) (3) (4 2) (5) (6 3 2) (A APPLE APRICOT) (B BANANA) (C CHERRY))\n\\endcode","\\(defun[\\n\\s]*example[\\n\\s]*\\(y[\\n\\s]*l\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(attach[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*l[\\n\\s]*\\(append[\\n\\s]*l[\\n\\s]*\\(list[\\n\\s]*x\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(inline[\\n\\s]*attach\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(null[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(attach[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(example[\\n\\s]*'\\(\\(a[\\n\\s]*apple[\\n\\s]*apricot\\)[\\n\\s]*\\(b[\\n\\s]*banana\\)[\\n\\s]*\\(c[\\n\\s]*cherry\\)[\\n\\s]*\\(d\\)[\\n\\s]*\\(e\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(3\\)[\\n\\s]*\\(4[\\n\\s]*2\\)[\\n\\s]*\\(5\\)[\\n\\s]*\\(6[\\n\\s]*3[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(3\\)[\\n\\s]*\\(4[\\n\\s]*2\\)[\\n\\s]*\\(5\\)[\\n\\s]*\\(6[\\n\\s]*3[\\n\\s]*2\\)[\\n\\s]*\\(A[\\n\\s]*APPLE[\\n\\s]*APRICOT\\)[\\n\\s]*\\(B[\\n\\s]*BANANA\\)[\\n\\s]*\\(C[\\n\\s]*CHERRY\\)\\)"],["\\code\n (funcall #'+ 1 2 3) *→* 6\n (funcall 'car '(1 2 3)) *→* 1\n (funcall 'position 1 '(1 2 3 2 1) :start 1) *→* 4\n (cons 1 2) *→* (1 . 2)\n (flet ((cons (x y) `(kons ,x ,y)))\n   (let ((cons (symbol-function '+)))\n     (funcall #'cons\n              (funcall 'cons 1 2)\n              (funcall cons 1 2))))\n*→* (KONS (1 . 2) 3)\n\\endcode","\\(funcall[\\n\\s]*#'\\+[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*'car[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*'position[\\n\\s]*1[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*:start[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(cons[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*`\\(kons[\\n\\s]*,x[\\n\\s]*,y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(cons[\\n\\s]*\\(symbol-function[\\n\\s]*'\\+\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*#'cons[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*'cons[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*cons[\\n\\s]*1[\\n\\s]*2\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(KONS[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*3\\)"],["\\code\n (funcall \\param&#123;function&#125; \\param&#123;arg1&#125; \\param&#123;arg2&#125; ...)\n \\EQ (apply \\param&#123;function&#125; \\param&#123;arg1&#125; \\param&#123;arg2&#125; ... nil)\n \\EQ (apply \\param&#123;function&#125; (list \\param&#123;arg1&#125; \\param&#123;arg2&#125; ...))\n\\endcode","\\(funcall[\\n\\s]*\\\\param&#123;function&#125;[\\n\\s]*\\\\param&#123;arg1&#125;[\\n\\s]*\\\\param&#123;arg2&#125;[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*\\\\param&#123;function&#125;[\\n\\s]*\\\\param&#123;arg1&#125;[\\n\\s]*\\\\param&#123;arg2&#125;[\\n\\s]*\\.\\.\\.[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*\\\\param&#123;function&#125;[\\n\\s]*\\(list[\\n\\s]*\\\\param&#123;arg1&#125;[\\n\\s]*\\\\param&#123;arg2&#125;[\\n\\s]*\\.\\.\\.\\)\\)"],["\\code\n (defun adder (x) (function (lambda (y) (+ x y))))\n\\endcode","\\(defun[\\n\\s]*adder[\\n\\s]*\\(x\\)[\\n\\s]*\\(function[\\n\\s]*\\(lambda[\\n\\s]*\\(y\\)[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)\\)"],["\\code\n (setq add3 (adder 3))\n (funcall add3 5) *→* 8\n\\endcode","\\(setq[\\n\\s]*add3[\\n\\s]*\\(adder[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*add3[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*8"],["\\code\n (function-lambda-expression #'(lambda (x) x))\n*→* NIL, false, NIL\n\\OV NIL, true, NIL\n\\OV (LAMBDA (X) X), true, NIL\n\\OV (LAMBDA (X) X), false, NIL\n\n (function-lambda-expression\n    (funcall #'(lambda () #'(lambda (x) x))))\n*→* NIL, false, NIL\n\\OV NIL, true, NIL\n\\OV (LAMBDA (X) X), true, NIL\n\\OV (LAMBDA (X) X), false, NIL\n \n (function-lambda-expression \n    (funcall #'(lambda (x) #'(lambda () x)) nil))\n*→* NIL, true, NIL\n\\OV (LAMBDA () X), true, NIL\n\\NV NIL, false, NIL\n\\NV (LAMBDA () X), false, NIL\n  \n (flet ((foo (x) x))\n   (setf (symbol-function 'bar) #'foo)\n   (function-lambda-expression #'bar))\n*→* NIL, false, NIL\n\\OV NIL, true, NIL\n\\OV (LAMBDA (X) (BLOCK FOO X)), true, NIL\n\\OV (LAMBDA (X) (BLOCK FOO X)), false, FOO\n\\OV (SI::BLOCK-LAMBDA FOO (X) X), false, FOO\n \n (defun foo ()\n   (flet ((bar (x) x))\n     #'bar))\n (function-lambda-expression (foo))\n*→* NIL, false, NIL\n\\OV NIL, true, NIL\n\\OV (LAMBDA (X) (BLOCK BAR X)), true, NIL\n\\OV (LAMBDA (X) (BLOCK BAR X)), true, (:INTERNAL FOO 0 BAR)\n\\OV (LAMBDA (X) (BLOCK BAR X)), false, \"BAR in FOO\"\n\\endcode","\\(function-lambda-expression[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*NIL,[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*X\\),[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*X\\),[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(function-lambda-expression[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*NIL,[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*X\\),[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*X\\),[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(function-lambda-expression[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*x\\)\\)[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*X\\),[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\NV[\\n\\s]*NIL,[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*\\\\NV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*X\\),[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(foo[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'bar\\)[\\n\\s]*#'foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(function-lambda-expression[\\n\\s]*#'bar\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*NIL,[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*\\(BLOCK[\\n\\s]*FOO[\\n\\s]*X\\)\\),[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*\\(BLOCK[\\n\\s]*FOO[\\n\\s]*X\\)\\),[\\n\\s]*false,[\\n\\s]*FOO[\\n\\s]*\\\\OV[\\n\\s]*\\(SI::BLOCK-LAMBDA[\\n\\s]*FOO[\\n\\s]*\\(X\\)[\\n\\s]*X\\),[\\n\\s]*false,[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(bar[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'bar\\)\\)[\\n\\s]*[\\n\\s]*\\(function-lambda-expression[\\n\\s]*\\(foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*NIL,[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*\\(BLOCK[\\n\\s]*BAR[\\n\\s]*X\\)\\),[\\n\\s]*true,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*\\(BLOCK[\\n\\s]*BAR[\\n\\s]*X\\)\\),[\\n\\s]*true,[\\n\\s]*\\(:INTERNAL[\\n\\s]*FOO[\\n\\s]*0[\\n\\s]*BAR\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(LAMBDA[\\n\\s]*\\(X\\)[\\n\\s]*\\(BLOCK[\\n\\s]*BAR[\\n\\s]*X\\)\\),[\\n\\s]*false,[\\n\\s]*\"BAR[\\n\\s]*in[\\n\\s]*FOO\""],["\\code\n (functionp 'append) *→ false*\n (functionp #'append) *→ true*\n (functionp (symbol-function 'append)) *→ true*\n (flet ((f () 1)) (functionp #'f)) *→ true*\n (functionp (compile nil '(lambda () 259))) *→ true*\n (functionp nil) *→ false*\n (functionp 12) *→ false*\n (functionp '(lambda (x) (* x x))) *→ false*\n (functionp #'(lambda (x) (* x x))) *→ true*\n\\endcode","\\(functionp[\\n\\s]*'append\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*#'append\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*\\(symbol-function[\\n\\s]*'append\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(f[\\n\\s]*\\(\\)[\\n\\s]*1\\)\\)[\\n\\s]*\\(functionp[\\n\\s]*#'f\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*\\(compile[\\n\\s]*nil[\\n\\s]*'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*259\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (functionp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'function)\n\\endcode","\\(functionp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'function\\)"],["\\code\n (defun f (x) x) *→* F\n (compiled-function-p #'f)\n*→ false*\n\\OV true\n (compiled-function-p 'f) *→ false*\n (compile 'f) *→* F\n (compiled-function-p #'f) *→ true*\n (compiled-function-p 'f) *→ false*\n (compiled-function-p (compile nil '(lambda (x) x)))\n*→ true*\n (compiled-function-p #'(lambda (x) x))\n*→ false*\n\\OV true\n (compiled-function-p '(lambda (x) x)) *→ false*\n\\endcode","\\(defun[\\n\\s]*f[\\n\\s]*\\(x\\)[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*#'f\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*\\\\OV[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*'f\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(compile[\\n\\s]*'f\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*#'f\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*'f\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*\\(compile[\\n\\s]*nil[\\n\\s]*'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*\\\\OV[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(compiled-function-p[\\n\\s]*'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (compiled-function-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'compiled-function)\n\\endcode","\\(compiled-function-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'compiled-function\\)"],["\\code\n%  (declaim (special \\i&#123;name&#125;))\n%  (setf (symbol-value '\\i&#123;name&#125;) \\i&#123;initial-value&#125;)\n%  (setf (documentation '\\i&#123;name&#125; 'variable) '\\i&#123;documentation&#125;)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(declaim[\\n\\s]*\\(special[\\n\\s]*\\\\i&#123;name&#125;\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'\\\\i&#123;name&#125;\\)[\\n\\s]*\\\\i&#123;initial-value&#125;\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(documentation[\\n\\s]*'\\\\i&#123;name&#125;[\\n\\s]*'variable\\)[\\n\\s]*'\\\\i&#123;documentation&#125;\\)[\\n\\s]*%"],["\\code\n (setf (symbol-value '\\i&#123;name&#125;) \\i&#123;initial-value&#125;)\n (setf (documentation '\\i&#123;name&#125; 'variable) '\\i&#123;documentation&#125;)\n\\endcode","\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'\\\\i&#123;name&#125;\\)[\\n\\s]*\\\\i&#123;initial-value&#125;\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(documentation[\\n\\s]*'\\\\i&#123;name&#125;[\\n\\s]*'variable\\)[\\n\\s]*'\\\\i&#123;documentation&#125;\\)"],["\\code\n (defconstant this-is-a-constant 'never-changing \"for a test\") *→* THIS-IS-A-CONSTANT\nthis-is-a-constant *→* NEVER-CHANGING\n (documentation 'this-is-a-constant 'variable) *→* \"for a test\"\n (constantp 'this-is-a-constant) *→ true*\n\\endcode","\\(defconstant[\\n\\s]*this-is-a-constant[\\n\\s]*'never-changing[\\n\\s]*\"for[\\n\\s]*a[\\n\\s]*test\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THIS-IS-A-CONSTANT[\\n\\s]*this-is-a-constant[\\n\\s]*\\*\\→\\*[\\n\\s]*NEVER-CHANGING[\\n\\s]*[\\n\\s]*\\(documentation[\\n\\s]*'this-is-a-constant[\\n\\s]*'variable\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"for[\\n\\s]*a[\\n\\s]*test\"[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'this-is-a-constant\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (defparameter *p* 1) *→* *P*\n *p* *→* 1\n (constantp '*p*) *→ false*\n (setq *p* 2) *→* 2\n (defparameter *p* 3) *→* *P*\n *p* *→* 3\n\n (defvar *v* 1) *→* *V*\n *v* *→* 1\n (constantp '*v*) *→ false*\n (setq *v* 2) *→* 2\n (defvar *v* 3) *→* *V*\n *v* *→* 2\n\n (defun foo ()\n   (let ((*p* 'p) (*v* 'v))\n     (bar))) *→* FOO\n (defun bar () (list *p* *v*)) *→* BAR\n (foo) *→* (P V)\n\\endcode","\\(defparameter[\\n\\s]*\\*p\\*[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*P\\*[\\n\\s]*[\\n\\s]*\\*p\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\*p\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*p\\*[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(defparameter[\\n\\s]*\\*p\\*[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*P\\*[\\n\\s]*[\\n\\s]*\\*p\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*v\\*[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*V\\*[\\n\\s]*[\\n\\s]*\\*v\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(constantp[\\n\\s]*'\\*v\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*v\\*[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*v\\*[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*V\\*[\\n\\s]*[\\n\\s]*\\*v\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*p\\*[\\n\\s]*'p\\)[\\n\\s]*\\(\\*v\\*[\\n\\s]*'v\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(bar\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*bar[\\n\\s]*\\(\\)[\\n\\s]*\\(list[\\n\\s]*\\*p\\*[\\n\\s]*\\*v\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BAR[\\n\\s]*[\\n\\s]*\\(foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(P[\\n\\s]*V\\)"],["\\code\n (defvar *the-interesting-numbers* '())\n (defmacro define-interesting-number (name n)\n   `(progn (defvar ,name ,n)\n           (pushnew ,name *the-interesting-numbers*)\n           ',name))\n (define-interesting-number *my-height* 168) ;cm\n (define-interesting-number *my-weight* 13)  ;stones\n\\endcode","\\(defvar[\\n\\s]*\\*the-interesting-numbers\\*[\\n\\s]*'\\(\\)\\)[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*define-interesting-number[\\n\\s]*\\(name[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(progn[\\n\\s]*\\(defvar[\\n\\s]*,name[\\n\\s]*,n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pushnew[\\n\\s]*,name[\\n\\s]*\\*the-interesting-numbers\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*',name\\)\\)[\\n\\s]*[\\n\\s]*\\(define-interesting-number[\\n\\s]*\\*my-height\\*[\\n\\s]*168\\)[\\n\\s]*;cm[\\n\\s]*[\\n\\s]*\\(define-interesting-number[\\n\\s]*\\*my-weight\\*[\\n\\s]*13\\)[\\n\\s]*[\\n\\s]*;stones"],["\\code\n (defparameter *default-beep-count* 3)\n (defun beep (&optional (n *default-beep-count*))\n   (dotimes (i n) (si:%beep 1000. 100000.) (sleep 0.1)))\n\\endcode","\\(defparameter[\\n\\s]*\\*default-beep-count\\*[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*beep[\\n\\s]*\\(&optional[\\n\\s]*\\(n[\\n\\s]*\\*default-beep-count\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*n\\)[\\n\\s]*\\(si:%beep[\\n\\s]*1000\\.[\\n\\s]*100000\\.\\)[\\n\\s]*\\(sleep[\\n\\s]*0\\.1\\)\\)\\)"],["\\code\n (defmacro defparameter (name initial-value \n                         &optional (documentation nil documentation-p))\n   `(progn (declaim (special ,name))\n           (setf (symbol-value ',name) ,initial-value)\n           ,(when documentation-p\n              `(setf (documentation ',name 'variable) ',documentation))\n           ',name))\n (defmacro defvar (name &optional\n                        (initial-value nil initial-value-p)\n                        (documentation nil documentation-p))\n   `(progn (declaim (special ,name))\n           ,(when initial-value-p\n              `(unless (boundp ',name)\n                 (setf (symbol-value ',name) ,initial-value)))\n           ,(when documentation-p\n              `(setf (documentation ',name 'variable) ',documentation))\n           ',name))\n\\endcode","\\(defmacro[\\n\\s]*defparameter[\\n\\s]*\\(name[\\n\\s]*initial-value[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&optional[\\n\\s]*\\(documentation[\\n\\s]*nil[\\n\\s]*documentation-p\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(progn[\\n\\s]*\\(declaim[\\n\\s]*\\(special[\\n\\s]*,name\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*',name\\)[\\n\\s]*,initial-value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,\\(when[\\n\\s]*documentation-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(setf[\\n\\s]*\\(documentation[\\n\\s]*',name[\\n\\s]*'variable\\)[\\n\\s]*',documentation\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*',name\\)\\)[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*defvar[\\n\\s]*\\(name[\\n\\s]*&optional[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(initial-value[\\n\\s]*nil[\\n\\s]*initial-value-p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(documentation[\\n\\s]*nil[\\n\\s]*documentation-p\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(progn[\\n\\s]*\\(declaim[\\n\\s]*\\(special[\\n\\s]*,name\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,\\(when[\\n\\s]*initial-value-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(unless[\\n\\s]*\\(boundp[\\n\\s]*',name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*',name\\)[\\n\\s]*,initial-value\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,\\(when[\\n\\s]*documentation-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(setf[\\n\\s]*\\(documentation[\\n\\s]*',name[\\n\\s]*'variable\\)[\\n\\s]*',documentation\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*',name\\)\\)"],["\\code\n (defun iota (n) (loop for i from 1 to n collect i))       ;helper\n (destructuring-bind ((a &optional (b 'bee)) one two three)\n     `((alpha) ,@(iota 3))\n   (list a b three two one)) *→* (ALPHA BEE 3 2 1)\n\\endcode","\\(defun[\\n\\s]*iota[\\n\\s]*\\(n\\)[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*n[\\n\\s]*collect[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;helper[\\n\\s]*[\\n\\s]*\\(destructuring-bind[\\n\\s]*\\(\\(a[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*'bee\\)\\)[\\n\\s]*one[\\n\\s]*two[\\n\\s]*three\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(\\(alpha\\)[\\n\\s]*,@\\(iota[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*three[\\n\\s]*two[\\n\\s]*one\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ALPHA[\\n\\s]*BEE[\\n\\s]*3[\\n\\s]*2[\\n\\s]*1\\)"],["\\code\n (let ((\\param&#123;var1&#125; \\param&#123;init-form-1&#125;)\n       (\\param&#123;var2&#125; \\param&#123;init-form-2&#125;)\n       ...\n       (\\param&#123;varm&#125; \\param&#123;init-form-m&#125;))\n   \\param&#123;declaration1&#125;\n   \\param&#123;declaration2&#125;\n   ...\n   \\param&#123;declarationp&#125;\n   \\param&#123;form1&#125;\n   \\param&#123;form2&#125;\n   ...\n   \\param&#123;formn&#125;)\n\\endcode","\\(let[\\n\\s]*\\(\\(\\\\param&#123;var1&#125;[\\n\\s]*\\\\param&#123;init-form-1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\param&#123;var2&#125;[\\n\\s]*\\\\param&#123;init-form-2&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\param&#123;varm&#125;[\\n\\s]*\\\\param&#123;init-form-m&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;declaration1&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;declaration2&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;declarationp&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;form2&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;formn&#125;\\)"],["\\code\n (let* ((\\param&#123;var1&#125; \\param&#123;init-form-1&#125;)\n        (\\param&#123;var2&#125; \\param&#123;init-form-2&#125;)\n        ...\n        (\\param&#123;varm&#125; \\param&#123;init-form-m&#125;))\n   \\param&#123;declaration1&#125;\n   \\param&#123;declaration2&#125;\n   ...\n   \\param&#123;declarationp&#125;\n   \\param&#123;form1&#125;\n   \\param&#123;form2&#125;\n   ...\n   \\param&#123;formn&#125;)\n\\endcode","\\(let\\*[\\n\\s]*\\(\\(\\\\param&#123;var1&#125;[\\n\\s]*\\\\param&#123;init-form-1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\param&#123;var2&#125;[\\n\\s]*\\\\param&#123;init-form-2&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\param&#123;varm&#125;[\\n\\s]*\\\\param&#123;init-form-m&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;declaration1&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;declaration2&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;declarationp&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;form2&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;formn&#125;\\)"],["\\code\n% (locally (declare (special x) (float y)) \n%   (let ((x 5) (y 10)) \n%     (print (+ x y))))\n%\\endcode","%[\\n\\s]*\\(locally[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)[\\n\\s]*\\(float[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)[\\n\\s]*\\(y[\\n\\s]*10\\)\\)[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n (setq a 'top) *→* TOP\n (defun dummy-function () a) *→* DUMMY-FUNCTION\n (let ((a 'inside) (b a))\n    (format nil \"~S ~S ~S\" a b (dummy-function))) *→* \"INSIDE TOP TOP\" \n (let* ((a 'inside) (b a))\n    (format nil \"~S ~S ~S\" a b (dummy-function))) *→* \"INSIDE INSIDE TOP\" \n (let ((a 'inside) (b a))\n    (declare (special a))\n    (format nil \"~S ~S ~S\" a b (dummy-function))) *→* \"INSIDE TOP INSIDE\"\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*'top\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TOP[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*dummy-function[\\n\\s]*\\(\\)[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DUMMY-FUNCTION[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*'inside\\)[\\n\\s]*\\(b[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~S[\\n\\s]*~S[\\n\\s]*~S\"[\\n\\s]*a[\\n\\s]*b[\\n\\s]*\\(dummy-function\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"INSIDE[\\n\\s]*TOP[\\n\\s]*TOP\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(a[\\n\\s]*'inside\\)[\\n\\s]*\\(b[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~S[\\n\\s]*~S[\\n\\s]*~S\"[\\n\\s]*a[\\n\\s]*b[\\n\\s]*\\(dummy-function\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"INSIDE[\\n\\s]*INSIDE[\\n\\s]*TOP\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*'inside\\)[\\n\\s]*\\(b[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~S[\\n\\s]*~S[\\n\\s]*~S\"[\\n\\s]*a[\\n\\s]*b[\\n\\s]*\\(dummy-function\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"INSIDE[\\n\\s]*TOP[\\n\\s]*INSIDE\""],["\\code\n (let (x)\n   (declare (integer x))\n   (setq x (gcd y z))\n   ...)\n\\endcode","\\(let[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(integer[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(gcd[\\n\\s]*y[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (setq *x* 1) *→* 1\n (progv '(*x*) '(2) *x*) *→* 2\n *x* *→* 1\n\nAssuming *x* is not globally special,\n\n (let ((*x* 3)) \n    (progv '(*x*) '(4) \n      (list *x* (symbol-value '*x*)))) *→* (3 4)\n\\endcode","\\(setq[\\n\\s]*\\*x\\*[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(progv[\\n\\s]*'\\(\\*x\\*\\)[\\n\\s]*'\\(2\\)[\\n\\s]*\\*x\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\*x\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*Assuming[\\n\\s]*\\*x\\*[\\n\\s]*is[\\n\\s]*not[\\n\\s]*globally[\\n\\s]*special,[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*x\\*[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progv[\\n\\s]*'\\(\\*x\\*\\)[\\n\\s]*'\\(4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\*x\\*[\\n\\s]*\\(symbol-value[\\n\\s]*'\\*x\\*\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*4\\)"],["\\code\n ;; A simple use of SETQ to establish values for variables.\n (setq a 1 b 2 c 3) *→* 3\n a *→* 1\n b *→* 2\n c *→* 3\n\n ;; Use of SETQ to update values by sequential assignment.\n (setq a (1+ b) b (1+ a) c (+ a b)) *→* 7\n a *→* 3\n b *→* 4\n c *→* 7\n\n ;; This illustrates the use of SETQ on a symbol macro.\n (let ((x (list 10 20 30)))\n   (symbol-macrolet ((y (car x)) (z (cadr x)))\n     (setq y (1+ z) z (1+ y))\n     (list x y z)))\n*→* ((21 22 30) 21 22)\n\\endcode",";;[\\n\\s]*A[\\n\\s]*simple[\\n\\s]*use[\\n\\s]*of[\\n\\s]*SETQ[\\n\\s]*to[\\n\\s]*establish[\\n\\s]*values[\\n\\s]*for[\\n\\s]*variables\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2[\\n\\s]*c[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Use[\\n\\s]*of[\\n\\s]*SETQ[\\n\\s]*to[\\n\\s]*update[\\n\\s]*values[\\n\\s]*by[\\n\\s]*sequential[\\n\\s]*assignment\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*\\(1\\+[\\n\\s]*b\\)[\\n\\s]*b[\\n\\s]*\\(1\\+[\\n\\s]*a\\)[\\n\\s]*c[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*illustrates[\\n\\s]*the[\\n\\s]*use[\\n\\s]*of[\\n\\s]*SETQ[\\n\\s]*on[\\n\\s]*a[\\n\\s]*symbol[\\n\\s]*macro\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*10[\\n\\s]*20[\\n\\s]*30\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(y[\\n\\s]*\\(car[\\n\\s]*x\\)\\)[\\n\\s]*\\(z[\\n\\s]*\\(cadr[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(1\\+[\\n\\s]*z\\)[\\n\\s]*z[\\n\\s]*\\(1\\+[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(21[\\n\\s]*22[\\n\\s]*30\\)[\\n\\s]*21[\\n\\s]*22\\)"],["\\code\n ;; A simple use of PSETQ to establish values for variables.\n ;; As a matter of style, many programmers would prefer SETQ \n ;; in a simple situation like this where parallel assignment\n ;; is not needed, but the two have equivalent effect.\n (psetq a 1 b 2 c 3) *→* NIL\n a *→* 1\n b *→* 2\n c *→* 3\n\n ;; Use of PSETQ to update values by parallel assignment.\n ;; The effect here is very different than if SETQ had been used.\n (psetq a (1+ b) b (1+ a) c (+ a b)) *→* NIL\n a *→* 3\n b *→* 2\n c *→* 3\n\n ;; Use of PSETQ on a symbol macro.\n (let ((x (list 10 20 30)))\n   (symbol-macrolet ((y (car x)) (z (cadr x)))\n     (psetq y (1+ z) z (1+ y))\n     (list x y z)))\n*→* ((21 11 30) 21 11)\n\n ;; Use of parallel assignment to swap values of A and B.\n (let ((a 1) (b 2))\n   (psetq a b  b a)\n   (values a b))\n*→* 2, 1\n\\endcode",";;[\\n\\s]*A[\\n\\s]*simple[\\n\\s]*use[\\n\\s]*of[\\n\\s]*PSETQ[\\n\\s]*to[\\n\\s]*establish[\\n\\s]*values[\\n\\s]*for[\\n\\s]*variables\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*As[\\n\\s]*a[\\n\\s]*matter[\\n\\s]*of[\\n\\s]*style,[\\n\\s]*many[\\n\\s]*programmers[\\n\\s]*would[\\n\\s]*prefer[\\n\\s]*SETQ[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*in[\\n\\s]*a[\\n\\s]*simple[\\n\\s]*situation[\\n\\s]*like[\\n\\s]*this[\\n\\s]*where[\\n\\s]*parallel[\\n\\s]*assignment[\\n\\s]*[\\n\\s]*;;[\\n\\s]*is[\\n\\s]*not[\\n\\s]*needed,[\\n\\s]*but[\\n\\s]*the[\\n\\s]*two[\\n\\s]*have[\\n\\s]*equivalent[\\n\\s]*effect\\.[\\n\\s]*[\\n\\s]*\\(psetq[\\n\\s]*a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2[\\n\\s]*c[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Use[\\n\\s]*of[\\n\\s]*PSETQ[\\n\\s]*to[\\n\\s]*update[\\n\\s]*values[\\n\\s]*by[\\n\\s]*parallel[\\n\\s]*assignment\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*effect[\\n\\s]*here[\\n\\s]*is[\\n\\s]*very[\\n\\s]*different[\\n\\s]*than[\\n\\s]*if[\\n\\s]*SETQ[\\n\\s]*had[\\n\\s]*been[\\n\\s]*used\\.[\\n\\s]*[\\n\\s]*\\(psetq[\\n\\s]*a[\\n\\s]*\\(1\\+[\\n\\s]*b\\)[\\n\\s]*b[\\n\\s]*\\(1\\+[\\n\\s]*a\\)[\\n\\s]*c[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Use[\\n\\s]*of[\\n\\s]*PSETQ[\\n\\s]*on[\\n\\s]*a[\\n\\s]*symbol[\\n\\s]*macro\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*10[\\n\\s]*20[\\n\\s]*30\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-macrolet[\\n\\s]*\\(\\(y[\\n\\s]*\\(car[\\n\\s]*x\\)\\)[\\n\\s]*\\(z[\\n\\s]*\\(cadr[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(psetq[\\n\\s]*y[\\n\\s]*\\(1\\+[\\n\\s]*z\\)[\\n\\s]*z[\\n\\s]*\\(1\\+[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(21[\\n\\s]*11[\\n\\s]*30\\)[\\n\\s]*21[\\n\\s]*11\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Use[\\n\\s]*of[\\n\\s]*parallel[\\n\\s]*assignment[\\n\\s]*to[\\n\\s]*swap[\\n\\s]*values[\\n\\s]*of[\\n\\s]*A[\\n\\s]*and[\\n\\s]*B\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(psetq[\\n\\s]*a[\\n\\s]*b[\\n\\s]*[\\n\\s]*b[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2,[\\n\\s]*1"],["\\code\n%  (block loser\n%    (catch 'stuff\n%       (mapcar #'(lambda (x) (if (numberp x)\n%                                 (hairyfun x)\n%                                 (return-from loser \\nil)))\n%                 items)))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*loser[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'stuff[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(hairyfun[\\n\\s]*x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*loser[\\n\\s]*\\\\nil\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*items\\)\\)\\)[\\n\\s]*%"],["\\code\n (block empty) *→* NIL\n (block whocares (values 1 2) (values 3 4)) *→* 3, 4\n (let ((x 1)) \n   (block stop (setq x 2) (return-from stop) (setq x 3))\n   x) *→* 2\n (block early (return-from early (values 1 2)) (values 3 4)) *→* 1, 2\n (block outer (block inner (return-from outer 1)) 2) *→* 1\n (block twin (block twin (return-from twin 1)) 2) *→* 2\n ;; Contrast behavior of this example with corresponding example of CATCH.\n (block b\n   (flet ((b1 () (return-from b 1)))\n     (block b (b1) (print 'unreachable))\n     2)) *→* 1\n\\endcode","\\(block[\\n\\s]*empty\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*whocares[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\(values[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3,[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*stop[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*2\\)[\\n\\s]*\\(return-from[\\n\\s]*stop\\)[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*early[\\n\\s]*\\(return-from[\\n\\s]*early[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\(values[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*outer[\\n\\s]*\\(block[\\n\\s]*inner[\\n\\s]*\\(return-from[\\n\\s]*outer[\\n\\s]*1\\)\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*twin[\\n\\s]*\\(block[\\n\\s]*twin[\\n\\s]*\\(return-from[\\n\\s]*twin[\\n\\s]*1\\)\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Contrast[\\n\\s]*behavior[\\n\\s]*of[\\n\\s]*this[\\n\\s]*example[\\n\\s]*with[\\n\\s]*corresponding[\\n\\s]*example[\\n\\s]*of[\\n\\s]*CATCH\\.[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*b[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(b1[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*b[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*b[\\n\\s]*\\(b1\\)[\\n\\s]*\\(print[\\n\\s]*'unreachable\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (catch 'dummy-tag 1 2 (throw 'dummy-tag 3) 4) *→* 3\n (catch 'dummy-tag 1 2 3 4) *→* 4\n (defun throw-back (tag) (throw tag t)) *→* THROW-BACK\n (catch 'dummy-tag (throw-back 'dummy-tag) 2) *→* T\n\n ;; Contrast behavior of this example with corresponding example of BLOCK.\n (catch 'c\n   (flet ((c1 () (throw 'c 1)))\n     (catch 'c (c1) (print 'unreachable))\n     2)) *→* 2\n\\endcode","\\(catch[\\n\\s]*'dummy-tag[\\n\\s]*1[\\n\\s]*2[\\n\\s]*\\(throw[\\n\\s]*'dummy-tag[\\n\\s]*3\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'dummy-tag[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*throw-back[\\n\\s]*\\(tag\\)[\\n\\s]*\\(throw[\\n\\s]*tag[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THROW-BACK[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'dummy-tag[\\n\\s]*\\(throw-back[\\n\\s]*'dummy-tag\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Contrast[\\n\\s]*behavior[\\n\\s]*of[\\n\\s]*this[\\n\\s]*example[\\n\\s]*with[\\n\\s]*corresponding[\\n\\s]*example[\\n\\s]*of[\\n\\s]*BLOCK\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'c[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(c1[\\n\\s]*\\(\\)[\\n\\s]*\\(throw[\\n\\s]*'c[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'c[\\n\\s]*\\(c1\\)[\\n\\s]*\\(print[\\n\\s]*'unreachable\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (tagbody\n   (setq val 2)\n   (go lp)\n   (incf val 3)\n   lp (incf val 4)) *→* NIL\n val *→* 6 \n\\endcode","\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*val[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*lp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lp[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*val[\\n\\s]*\\*\\→\\*[\\n\\s]*6"],["\\code\n (let ((a nil)) \n   (tagbody t (setq a #'(lambda () (go t))))\n   (funcall a))\n\\endcode","\\(let[\\n\\s]*\\(\\(a[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*t[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(go[\\n\\s]*t\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*a\\)\\)"],["\\code\n (funcall (block nil\n            (tagbody a (return #'(lambda () (go a))))))\n\\endcode","\\(funcall[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*a[\\n\\s]*\\(return[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(go[\\n\\s]*a\\)\\)\\)\\)\\)\\)"],["\\code\n (block alpha (return-from alpha) 1) *→* NIL\n (block alpha (return-from alpha 1) 2) *→* 1\n (block alpha (return-from alpha (values 1 2)) 3) *→* 1, 2\n (let ((a 0))\n    (dotimes (i 10) (incf a) (when (oddp i) (return)))\n    a) *→* 2\n (defun temp (x)\n    (if x (return-from temp 'dummy))\n    44) *→* TEMP\n (temp nil) *→* 44\n (temp t) *→* DUMMY\n (block out\n   (flet ((exit (n) (return-from out n)))\n     (block out (exit 1)))\n   2) *→* 1\n (block nil   \n   (unwind-protect (return-from nil 1)\n     (return-from nil 2)))\n*→* 2\n (dolist (flag '(nil t))\n   (block nil\n     (let ((x 5))\n       (declare (special x))\n       (unwind-protect (return-from nil)\n         (print x))))\n   (print 'here))\n\\OUT 5\n\\OUT HERE\n\\OUT 5\n\\OUT HERE\n*→* NIL\n (dolist (flag '(nil t))\n   (block nil\n     (let ((x 5))\n       (declare (special x))\n       (unwind-protect\n           (if flag (return-from nil))\n         (print x))))\n   (print 'here))\n\\OUT 5\n\\OUT HERE\n\\OUT 5\n\\OUT HERE\n*→* NIL\n\\endcode","\\(block[\\n\\s]*alpha[\\n\\s]*\\(return-from[\\n\\s]*alpha\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*alpha[\\n\\s]*\\(return-from[\\n\\s]*alpha[\\n\\s]*1\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*alpha[\\n\\s]*\\(return-from[\\n\\s]*alpha[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*10\\)[\\n\\s]*\\(incf[\\n\\s]*a\\)[\\n\\s]*\\(when[\\n\\s]*\\(oddp[\\n\\s]*i\\)[\\n\\s]*\\(return\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*temp[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*x[\\n\\s]*\\(return-from[\\n\\s]*temp[\\n\\s]*'dummy\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*44\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP[\\n\\s]*[\\n\\s]*\\(temp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*44[\\n\\s]*[\\n\\s]*\\(temp[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DUMMY[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*out[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(exit[\\n\\s]*\\(n\\)[\\n\\s]*\\(return-from[\\n\\s]*out[\\n\\s]*n\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*out[\\n\\s]*\\(exit[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(return-from[\\n\\s]*nil[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*nil[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(flag[\\n\\s]*'\\(nil[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(return-from[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'here\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*\\\\OUT[\\n\\s]*HERE[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*\\\\OUT[\\n\\s]*HERE[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(flag[\\n\\s]*'\\(nil[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*flag[\\n\\s]*\\(return-from[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'here\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*\\\\OUT[\\n\\s]*HERE[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*\\\\OUT[\\n\\s]*HERE[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (funcall (block nil #'(lambda () (return-from nil)))) is an error.\n\\endcode","\\(funcall[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(return-from[\\n\\s]*nil\\)\\)\\)\\)[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error\\."],["\\code\n (block nil (return) 1) *→* NIL\n (block nil (return 1) 2) *→* 1\n (block nil (return (values 1 2)) 3) *→* 1, 2\n (block nil (block alpha (return 1) 2)) *→* 1\n (block alpha (block nil (return 1)) 2) *→* 2\n (block nil (block nil (return 1) 2)) *→* 1\n\\endcode","\\(block[\\n\\s]*nil[\\n\\s]*\\(return\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(return[\\n\\s]*1\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(return[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(block[\\n\\s]*alpha[\\n\\s]*\\(return[\\n\\s]*1\\)[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*alpha[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(return[\\n\\s]*1\\)\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(return[\\n\\s]*1\\)[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (return) \\EQ (return-from nil)\n (return \\param&#123;form&#125;) \\EQ (return-from nil \\param&#123;form&#125;)\n\\endcode","\\(return\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(return-from[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*\\\\param&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(return-from[\\n\\s]*nil[\\n\\s]*\\\\param&#123;form&#125;\\)"],["\\code\n (let (val)\n    (tagbody\n      (setq val 1)\n      (go point-a)\n      (incf val 16)\n     point-c\n      (incf val 04)\n      (go point-b)\n      (incf val 32)\n     point-a\n      (incf val 02)\n      (go point-c)\n      (incf val 64)\n     point-b\n      (incf val 08))\n    val)\n*→* 15\n (defun f1 (flag)\n   (let ((n 1))\n     (tagbody \n       (setq n (f2 flag #'(lambda () (go out))))\n      out\n       (prin1 n))))\n*→* F1\n (defun f2 (flag escape)\n   (if flag (funcall escape) 2))\n*→* F2\n (f1 nil)\n\\OUT 2\n*→* NIL\n (f1 t)\n\\OUT 1\n*→* NIL\n\\endcode","\\(let[\\n\\s]*\\(val\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*val[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*point-a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*16\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*point-c[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*04\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*point-b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*32\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*point-a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*02\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*point-c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*64\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*point-b[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*val[\\n\\s]*08\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*val\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f1[\\n\\s]*\\(flag\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(f2[\\n\\s]*flag[\\n\\s]*#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(go[\\n\\s]*out\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*out[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*n\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F1[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*f2[\\n\\s]*\\(flag[\\n\\s]*escape\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*flag[\\n\\s]*\\(funcall[\\n\\s]*escape\\)[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*F2[\\n\\s]*[\\n\\s]*\\(f1[\\n\\s]*nil\\)[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(f1[\\n\\s]*t\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (catch 'result\n    (setq i 0 j 0)\n    (loop (incf j 3) (incf i)\n          (if (= i 3) (throw 'result (values i j))))) *→* 3, 9\n\n\\endcode","\\(catch[\\n\\s]*'result[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*i[\\n\\s]*0[\\n\\s]*j[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(incf[\\n\\s]*j[\\n\\s]*3\\)[\\n\\s]*\\(incf[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*i[\\n\\s]*3\\)[\\n\\s]*\\(throw[\\n\\s]*'result[\\n\\s]*\\(values[\\n\\s]*i[\\n\\s]*j\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3,[\\n\\s]*9"],["\\code\n (catch nil \n   (unwind-protect (throw nil 1)\n     (throw nil 2))) *→* 2\n\\endcode","\\(catch[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*nil[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*nil[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (catch 'a\n   (catch 'b\n     (unwind-protect (throw 'a 1)\n       (throw 'b 2))))\n\\endcode","\\(catch[\\n\\s]*'a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'b[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'a[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'b[\\n\\s]*2\\)\\)\\)\\)"],["\\code\n (catch 'foo\n         (format t \"The inner catch returns ~s.~%\"\n                 (catch 'foo\n                     (unwind-protect (throw 'foo :first-throw)\n                         (throw 'foo :second-throw))))\n         :outer-catch)\n\\OUT The inner catch returns :SECOND-THROW\n*→* :OUTER-CATCH\n\\endcode","\\(catch[\\n\\s]*'foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"The[\\n\\s]*inner[\\n\\s]*catch[\\n\\s]*returns[\\n\\s]*~s\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*:first-throw\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*:second-throw\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:outer-catch\\)[\\n\\s]*\\\\OUT[\\n\\s]*The[\\n\\s]*inner[\\n\\s]*catch[\\n\\s]*returns[\\n\\s]*:SECOND-THROW[\\n\\s]*\\*\\→\\*[\\n\\s]*:OUTER-CATCH"],["\\code\n%  (catch 'foo\n%    (catch 'bar\n%        (unwind-protect (throw 'foo 3)\n%          (throw 'bar 4)\n%          (print 'xxx))))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'foo[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'bar[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*3\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'bar[\\n\\s]*4\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'xxx\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n (tagbody\n   (let ((x 3))\n     (unwind-protect\n       (if (numberp x) (go out))\n       (print x)))\n  out\n   ...)\n\\endcode","\\(tagbody[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(numberp[\\n\\s]*x\\)[\\n\\s]*\\(go[\\n\\s]*out\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*out[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defun dummy-function (x)\n    (setq state 'running)\n    (unless (numberp x) (throw 'abort 'not-a-number))\n    (setq state (1+ x))) *→* DUMMY-FUNCTION\n (catch 'abort (dummy-function 1)) *→* 2\n state *→* 2\n (catch 'abort (dummy-function 'trash)) *→* NOT-A-NUMBER\n state *→* RUNNING\n (catch 'abort (unwind-protect (dummy-function 'trash) \n                  (setq state 'aborted))) *→* NOT-A-NUMBER\n state *→* ABORTED\n\\endcode","\\(defun[\\n\\s]*dummy-function[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*state[\\n\\s]*'running\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(numberp[\\n\\s]*x\\)[\\n\\s]*\\(throw[\\n\\s]*'abort[\\n\\s]*'not-a-number\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*state[\\n\\s]*\\(1\\+[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DUMMY-FUNCTION[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'abort[\\n\\s]*\\(dummy-function[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*state[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'abort[\\n\\s]*\\(dummy-function[\\n\\s]*'trash\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NOT-A-NUMBER[\\n\\s]*[\\n\\s]*state[\\n\\s]*\\*\\→\\*[\\n\\s]*RUNNING[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'abort[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(dummy-function[\\n\\s]*'trash\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*state[\\n\\s]*'aborted\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NOT-A-NUMBER[\\n\\s]*[\\n\\s]*state[\\n\\s]*\\*\\→\\*[\\n\\s]*ABORTED"],["\\code\n (unwind-protect\n   (progn (incf *access-count*)\n          (perform-access))\n   (decf *access-count*))\n\\endcode","\\(unwind-protect[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(incf[\\n\\s]*\\*access-count\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(perform-access\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(decf[\\n\\s]*\\*access-count\\*\\)\\)"],["\\code\n (let ((old-count *access-count*))\n   (unwind-protect\n     (progn (incf *access-count*)\n            (perform-access))\n     (setq *access-count* old-count)))\n\\endcode","\\(let[\\n\\s]*\\(\\(old-count[\\n\\s]*\\*access-count\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(incf[\\n\\s]*\\*access-count\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(perform-access\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*access-count\\*[\\n\\s]*old-count\\)\\)\\)"],["\\code\n;;; The following returns 2.\n (block nil   \n   (unwind-protect (return 1)\n     (return 2)))\n \n;;; The following has undefined consequences.\n (block a    \n   (block b\n     (unwind-protect (return-from a 1)\n       (return-from b 2))))\n \n;;; The following returns 2.\n (catch nil \n   (unwind-protect (throw nil 1)\n     (throw nil 2)))\n \n;;; The following has undefined consequences because the catch of B is \n;;; passed over by the first THROW, hence portable programs must assume \n;;; its dynamic extent is terminated.  The binding of the catch tag is not\n;;; yet disestablished and therefore it is the target of the second throw.\n (catch 'a\n   (catch 'b\n     (unwind-protect (throw 'a 1)\n       (throw 'b 2))))\n \n;;; The following prints \"The inner catch returns :SECOND-THROW\"\n;;; and then returns :OUTER-CATCH.\n (catch 'foo\n         (format t \"The inner catch returns ~s.~%\"\n                 (catch 'foo\n                     (unwind-protect (throw 'foo :first-throw)\n                         (throw 'foo :second-throw))))\n         :outer-catch)\n \n \n;;; The following returns 10. The inner CATCH of A is passed over, but \n;;; because that CATCH is disestablished before the THROW to A is executed,\n;;; it isn't seen.\n (catch 'a\n   (catch 'b\n     (unwind-protect (1+ (catch 'a (throw 'b 1)))\n       (throw 'a 10))))\n \n \n;;; The following has undefined consequences because the extent of\n;;; the (CATCH 'BAR ...) exit ends when the (THROW 'FOO ...)\n;;; commences.\n (catch 'foo\n   (catch 'bar\n       (unwind-protect (throw 'foo 3)\n         (throw 'bar 4)\n         (print 'xxx))))\n \n \n;;; The following returns 4; XXX is not printed.\n;;; The (THROW 'FOO ...) has no effect on the scope of the BAR\n;;; catch tag or the extent of the (CATCH 'BAR ...) exit.\n (catch 'bar\n   (catch 'foo\n       (unwind-protect (throw 'foo 3)\n         (throw 'bar 4)\n         (print 'xxx))))\n \n \n;;; The following prints 5.\n (block nil\n   (let ((x 5))\n     (declare (special x))\n     (unwind-protect (return)\n       (print x))))          \n\\endcode",";;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*returns[\\n\\s]*2\\.[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(return[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*has[\\n\\s]*undefined[\\n\\s]*consequences\\.[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*b[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(return-from[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*b[\\n\\s]*2\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*returns[\\n\\s]*2\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*nil[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*nil[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*has[\\n\\s]*undefined[\\n\\s]*consequences[\\n\\s]*because[\\n\\s]*the[\\n\\s]*catch[\\n\\s]*of[\\n\\s]*B[\\n\\s]*is[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*passed[\\n\\s]*over[\\n\\s]*by[\\n\\s]*the[\\n\\s]*first[\\n\\s]*THROW,[\\n\\s]*hence[\\n\\s]*portable[\\n\\s]*programs[\\n\\s]*must[\\n\\s]*assume[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*its[\\n\\s]*dynamic[\\n\\s]*extent[\\n\\s]*is[\\n\\s]*terminated\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*binding[\\n\\s]*of[\\n\\s]*the[\\n\\s]*catch[\\n\\s]*tag[\\n\\s]*is[\\n\\s]*not[\\n\\s]*;;;[\\n\\s]*yet[\\n\\s]*disestablished[\\n\\s]*and[\\n\\s]*therefore[\\n\\s]*it[\\n\\s]*is[\\n\\s]*the[\\n\\s]*target[\\n\\s]*of[\\n\\s]*the[\\n\\s]*second[\\n\\s]*throw\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'b[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'a[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'b[\\n\\s]*2\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*prints[\\n\\s]*\"The[\\n\\s]*inner[\\n\\s]*catch[\\n\\s]*returns[\\n\\s]*:SECOND-THROW\"[\\n\\s]*;;;[\\n\\s]*and[\\n\\s]*then[\\n\\s]*returns[\\n\\s]*:OUTER-CATCH\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"The[\\n\\s]*inner[\\n\\s]*catch[\\n\\s]*returns[\\n\\s]*~s\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*:first-throw\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*:second-throw\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:outer-catch\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*returns[\\n\\s]*10\\.[\\n\\s]*The[\\n\\s]*inner[\\n\\s]*CATCH[\\n\\s]*of[\\n\\s]*A[\\n\\s]*is[\\n\\s]*passed[\\n\\s]*over,[\\n\\s]*but[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*because[\\n\\s]*that[\\n\\s]*CATCH[\\n\\s]*is[\\n\\s]*disestablished[\\n\\s]*before[\\n\\s]*the[\\n\\s]*THROW[\\n\\s]*to[\\n\\s]*A[\\n\\s]*is[\\n\\s]*executed,[\\n\\s]*;;;[\\n\\s]*it[\\n\\s]*isn't[\\n\\s]*seen\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'b[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(1\\+[\\n\\s]*\\(catch[\\n\\s]*'a[\\n\\s]*\\(throw[\\n\\s]*'b[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'a[\\n\\s]*10\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*has[\\n\\s]*undefined[\\n\\s]*consequences[\\n\\s]*because[\\n\\s]*the[\\n\\s]*extent[\\n\\s]*of[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*\\(CATCH[\\n\\s]*'BAR[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*exit[\\n\\s]*ends[\\n\\s]*when[\\n\\s]*the[\\n\\s]*\\(THROW[\\n\\s]*'FOO[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*;;;[\\n\\s]*commences\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'bar[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'bar[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'xxx\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*returns[\\n\\s]*4;[\\n\\s]*XXX[\\n\\s]*is[\\n\\s]*not[\\n\\s]*printed\\.[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*\\(THROW[\\n\\s]*'FOO[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*has[\\n\\s]*no[\\n\\s]*effect[\\n\\s]*on[\\n\\s]*the[\\n\\s]*scope[\\n\\s]*of[\\n\\s]*the[\\n\\s]*BAR[\\n\\s]*;;;[\\n\\s]*catch[\\n\\s]*tag[\\n\\s]*or[\\n\\s]*the[\\n\\s]*extent[\\n\\s]*of[\\n\\s]*the[\\n\\s]*\\(CATCH[\\n\\s]*'BAR[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*exit\\.[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'bar[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(catch[\\n\\s]*'foo[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(throw[\\n\\s]*'foo[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(throw[\\n\\s]*'bar[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'xxx\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*prints[\\n\\s]*5\\.[\\n\\s]*[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unwind-protect[\\n\\s]*\\(return\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)\\)\\)\\)"],["\\code\n nil *→* NIL \n\\endcode","nil[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (not nil) *→* T\n (not '()) *→* T\n (not (integerp 'sss)) *→* T\n (not (integerp 1)) *→* NIL\n (not 3.7) *→* NIL\n (not 'apple) *→* NIL\n\\endcode","\\(not[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(integerp[\\n\\s]*'sss\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(integerp[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*3\\.7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*'apple\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n% (not x) \\EQ (null x)\n% \\endcode","%[\\n\\s]*\\(not[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(null[\\n\\s]*x\\)[\\n\\s]*%"],["\\code\n t *→* T \n (eq t 't) *→ true*\n (find-class 't) *→* #&#60;CLASS T 610703333&#62;\n (case 'a (a 1) (t 2)) *→* 1\n (case 'b (a 1) (t 2)) *→* 2\n (prin1 'hello t)\n\\OUT HELLO\n*→* HELLO\n\\endcode","t[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*t[\\n\\s]*'t\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(find-class[\\n\\s]*'t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;CLASS[\\n\\s]*T[\\n\\s]*610703333&#62;[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*'a[\\n\\s]*\\(a[\\n\\s]*1\\)[\\n\\s]*\\(t[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*'b[\\n\\s]*\\(a[\\n\\s]*1\\)[\\n\\s]*\\(t[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*'hello[\\n\\s]*t\\)[\\n\\s]*\\\\OUT[\\n\\s]*HELLO[\\n\\s]*\\*\\→\\*[\\n\\s]*HELLO"],["\\code\n (eq 'a 'b) *→ false*\n (eq 'a 'a) *→ true*\n (eq 3 3)\n*→ true*\n\\OV false\n (eq 3 3.0) *→ false*\n (eq 3.0 3.0)\n*→ true*\n\\OV false\n (eq #c(3 -4) #c(3 -4))\n*→ true*\n\\OV false\n (eq #c(3 -4.0) #c(3 -4)) *→ false*\n (eq (cons 'a 'b) (cons 'a 'c)) *→ false*\n (eq (cons 'a 'b) (cons 'a 'b)) *→ false*\n (eq '(a . b) '(a . b))\n*→ true*\n\\OV false\n (progn (setq x (cons 'a 'b)) (eq x x)) *→ true*\n (progn (setq x '(a . b)) (eq x x)) *→ true*\n (eq #\\\\A #\\\\A)\n*→ true*\n\\OV false\n (let ((x \"Foo\")) (eq x x)) *→ true*\n (eq \"Foo\" \"Foo\")\n*→ true*\n\\OV false\n (eq \"Foo\" (copy-seq \"Foo\")) *→ false*\n (eq \"FOO\" \"foo\") *→ false*\n (eq \"string-seq\" (copy-seq \"string-seq\")) *→ false*\n (let ((x 5)) (eq x x))\n*→ true*\n\\OV false\n\\endcode","\\(eq[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'a[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*3[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*3\\.0[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*#c\\(3[\\n\\s]*-4\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*#c\\(3[\\n\\s]*-4\\.0\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\(eq[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*\\(eq[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\"Foo\"\\)\\)[\\n\\s]*\\(eq[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\"Foo\"[\\n\\s]*\"Foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\"Foo\"[\\n\\s]*\\(copy-seq[\\n\\s]*\"Foo\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\"FOO\"[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\"string-seq\"[\\n\\s]*\\(copy-seq[\\n\\s]*\"string-seq\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*5\\)\\)[\\n\\s]*\\(eq[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false"],["\\code\n (eql 'a 'b) *→ false*\n (eql 'a 'a) *→ true*\n (eql 3 3) *→ true*\n (eql 3 3.0) *→ false*\n (eql 3.0 3.0) *→ true*\n (eql #c(3 -4) #c(3 -4)) *→ true*\n (eql #c(3 -4.0) #c(3 -4)) *→ false*\n (eql (cons 'a 'b) (cons 'a 'c)) *→ false*\n (eql (cons 'a 'b) (cons 'a 'b)) *→ false*\n (eql '(a . b) '(a . b))\n*→ true*\n\\OV false\n (progn (setq x (cons 'a 'b)) (eql x x)) *→ true*\n (progn (setq x '(a . b)) (eql x x)) *→ true*\n (eql #\\\\A #\\\\A) *→ true*\n (eql \"Foo\" \"Foo\")\n*→ true*\n\\OV false\n (eql \"Foo\" (copy-seq \"Foo\")) *→ false*\n (eql \"FOO\" \"foo\") *→ false*\n\\endcode","\\(eql[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*'a[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*3[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*3\\.0[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*#c\\(3[\\n\\s]*-4\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*#c\\(3[\\n\\s]*-4\\.0\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\(eql[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*\\.[\\n\\s]*b\\)\\)[\\n\\s]*\\(eql[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\"Foo\"[\\n\\s]*\"Foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\"Foo\"[\\n\\s]*\\(copy-seq[\\n\\s]*\"Foo\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\"FOO\"[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (equal 'a 'b) *→ false*\n (equal 'a 'a) *→ true*\n (equal 3 3) *→ true*\n (equal 3 3.0) *→ false*\n (equal 3.0 3.0) *→ true*\n (equal #c(3 -4) #c(3 -4)) *→ true*\n (equal #c(3 -4.0) #c(3 -4)) *→ false*\n (equal (cons 'a 'b) (cons 'a 'c)) *→ false*\n (equal (cons 'a 'b) (cons 'a 'b)) *→ true*\n (equal #\\\\A #\\\\A) *→ true*\n (equal #\\\\A #\\\\a) *→ false*\n (equal \"Foo\" \"Foo\") *→ true*\n (equal \"Foo\" (copy-seq \"Foo\")) *→ true*\n (equal \"FOO\" \"foo\") *→ false*\n (equal \"This-string\" \"This-string\") *→ true*\n (equal \"This-string\" \"this-string\") *→ false*\n\\endcode","\\(equal[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*'a[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*3[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*3\\.0[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*#c\\(3[\\n\\s]*-4\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*#c\\(3[\\n\\s]*-4\\.0\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\"Foo\"[\\n\\s]*\"Foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\"Foo\"[\\n\\s]*\\(copy-seq[\\n\\s]*\"Foo\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\"FOO\"[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\"This-string\"[\\n\\s]*\"This-string\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*\"This-string\"[\\n\\s]*\"this-string\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (equalp 'a 'b) *→ false*\n (equalp 'a 'a) *→ true*\n (equalp 3 3) *→ true*\n (equalp 3 3.0) *→ true*\n (equalp 3.0 3.0) *→ true*\n (equalp #c(3 -4) #c(3 -4)) *→ true*\n (equalp #c(3 -4.0) #c(3 -4)) *→ true*\n (equalp (cons 'a 'b) (cons 'a 'c)) *→ false*\n (equalp (cons 'a 'b) (cons 'a 'b)) *→ true*\n (equalp #\\\\A #\\\\A) *→ true*\n (equalp #\\\\A #\\\\a) *→ true*\n (equalp \"Foo\" \"Foo\") *→ true*\n (equalp \"Foo\" (copy-seq \"Foo\")) *→ true*\n (equalp \"FOO\" \"foo\") *→ true*\n\\endcode","\\(equalp[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*'a[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*3[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*3\\.0[\\n\\s]*3\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*#c\\(3[\\n\\s]*-4\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*#c\\(3[\\n\\s]*-4\\.0\\)[\\n\\s]*#c\\(3[\\n\\s]*-4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*#\\\\\\\\A[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*\"Foo\"[\\n\\s]*\"Foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*\"Foo\"[\\n\\s]*\\(copy-seq[\\n\\s]*\"Foo\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*\"FOO\"[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (setq array1 (make-array 6 :element-type 'integer\n                            :initial-contents '(1 1 1 3 5 7))) \n*→* #(1 1 1 3 5 7)\n (setq array2 (make-array 8 :element-type 'integer\n                            :initial-contents '(1 1 1 3 5 7 2 6)\n                            :fill-pointer 6))\n*→* #(1 1 1 3 5 7)\n (equalp array1 array2) *→ true*\n (setq vector1 (vector 1 1 1 3 5 7)) *→* #(1 1 1 3 5 7)\n (equalp array1 vector1) *→ true* \n\\endcode","\\(setq[\\n\\s]*array1[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*:element-type[\\n\\s]*'integer[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*'\\(1[\\n\\s]*1[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(1[\\n\\s]*1[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*array2[\\n\\s]*\\(make-array[\\n\\s]*8[\\n\\s]*:element-type[\\n\\s]*'integer[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*'\\(1[\\n\\s]*1[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7[\\n\\s]*2[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(1[\\n\\s]*1[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7\\)[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*array1[\\n\\s]*array2\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*vector1[\\n\\s]*\\(vector[\\n\\s]*1[\\n\\s]*1[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(1[\\n\\s]*1[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7\\)[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*array1[\\n\\s]*vector1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (identity 101) *→* 101\n (mapcan #'identity (list (list 1 2 3) '(4 5 6))) *→* (1 2 3 4 5 6)\n\\endcode","\\(identity[\\n\\s]*101\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*101[\\n\\s]*[\\n\\s]*\\(mapcan[\\n\\s]*#'identity[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(4[\\n\\s]*5[\\n\\s]*6\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)"],["\\code\n(defun identity (x) x)\n\\endcode","\\(defun[\\n\\s]*identity[\\n\\s]*\\(x\\)[\\n\\s]*x\\)"],["\\code\n (funcall (complement #'zerop) 1) *→ true*\n (funcall (complement #'characterp) #\\\\A) *→ false*\n (funcall (complement #'member) 'a '(a b c)) *→ false*\n (funcall (complement #'member) 'd '(a b c)) *→ true*\n\\endcode","\\(funcall[\\n\\s]*\\(complement[\\n\\s]*#'zerop\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(complement[\\n\\s]*#'characterp\\)[\\n\\s]*#\\\\\\\\A\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(complement[\\n\\s]*#'member\\)[\\n\\s]*'a[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(complement[\\n\\s]*#'member\\)[\\n\\s]*'d[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (complement \\i&#123;x&#125;) \\EQ #'(lambda (&rest arguments) (not (apply \\i&#123;x&#125; arguments)))\n\\endcode","\\(complement[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&rest[\\n\\s]*arguments\\)[\\n\\s]*\\(not[\\n\\s]*\\(apply[\\n\\s]*\\\\i&#123;x&#125;[\\n\\s]*arguments\\)\\)\\)"],["\\code\n(\\i&#123;xxx&#125;-if-not \\i&#123;f&#125; . \\i&#123;arguments&#125;) \\EQ (\\i&#123;xxx&#125;-if (complement \\i&#123;f&#125;) . \\i&#123;arguments&#125;)\n\\endcode","\\(\\\\i&#123;xxx&#125;-if-not[\\n\\s]*\\\\i&#123;f&#125;[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;arguments&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(\\\\i&#123;xxx&#125;-if[\\n\\s]*\\(complement[\\n\\s]*\\\\i&#123;f&#125;\\)[\\n\\s]*\\.[\\n\\s]*\\\\i&#123;arguments&#125;\\)"],["\\code\n (find-if-not #'zerop '(0 0 3)) \\EQ\n (find-if (complement #'zerop) '(0 0 3)) *→* 3\n\\endcode","\\(find-if-not[\\n\\s]*#'zerop[\\n\\s]*'\\(0[\\n\\s]*0[\\n\\s]*3\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(find-if[\\n\\s]*\\(complement[\\n\\s]*#'zerop\\)[\\n\\s]*'\\(0[\\n\\s]*0[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (mapcar (constantly 3) '(a b c d)) *→* (3 3 3 3)\n (defmacro with-vars (vars &body forms)\n   `((lambda ,vars ,@forms) ,@(mapcar (constantly nil) vars)))\n*→* WITH-VARS\n (macroexpand '(with-vars (a b) (setq a 3 b (* a a)) (list a b)))\n*→* ((LAMBDA (A B) (SETQ A 3 B (* A A)) (LIST A B)) NIL NIL), true\n\\endcode","\\(mapcar[\\n\\s]*\\(constantly[\\n\\s]*3\\)[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*3[\\n\\s]*3[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*with-vars[\\n\\s]*\\(vars[\\n\\s]*&body[\\n\\s]*forms\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(\\(lambda[\\n\\s]*,vars[\\n\\s]*,@forms\\)[\\n\\s]*,@\\(mapcar[\\n\\s]*\\(constantly[\\n\\s]*nil\\)[\\n\\s]*vars\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*WITH-VARS[\\n\\s]*[\\n\\s]*\\(macroexpand[\\n\\s]*'\\(with-vars[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*3[\\n\\s]*b[\\n\\s]*\\(\\*[\\n\\s]*a[\\n\\s]*a\\)\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(LAMBDA[\\n\\s]*\\(A[\\n\\s]*B\\)[\\n\\s]*\\(SETQ[\\n\\s]*A[\\n\\s]*3[\\n\\s]*B[\\n\\s]*\\(\\*[\\n\\s]*A[\\n\\s]*A\\)\\)[\\n\\s]*\\(LIST[\\n\\s]*A[\\n\\s]*B\\)\\)[\\n\\s]*NIL[\\n\\s]*NIL\\),[\\n\\s]*true"],["\\code\n (defun constantly (object)\n   #'(lambda (&rest arguments) object))\n\\endcode","\\(defun[\\n\\s]*constantly[\\n\\s]*\\(object\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&rest[\\n\\s]*arguments\\)[\\n\\s]*object\\)\\)"],["\\code\n (every #'characterp \"abc\") *→ true*\n (some #'= '(1 2 3 4 5) '(5 4 3 2 1)) *→ true*\n (notevery #'&#60; '(1 2 3 4) '(5 6 7 8) '(9 10 11 12)) *→ false*\n (notany #'&#62; '(1 2 3 4) '(5 6 7 8) '(9 10 11 12)) *→ true* \n\\endcode","\\(every[\\n\\s]*#'characterp[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(some[\\n\\s]*#'=[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*'\\(5[\\n\\s]*4[\\n\\s]*3[\\n\\s]*2[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(notevery[\\n\\s]*#'&#60;[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*'\\(5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8\\)[\\n\\s]*'\\(9[\\n\\s]*10[\\n\\s]*11[\\n\\s]*12\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(notany[\\n\\s]*#'&#62;[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*'\\(5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8\\)[\\n\\s]*'\\(9[\\n\\s]*10[\\n\\s]*11[\\n\\s]*12\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (notany \\param&#123;predicate&#125; \\starparam&#123;sequence&#125;) \\EQ (not (some \\param&#123;predicate&#125; \\starparam&#123;sequence&#125;))\n (notevery \\param&#123;predicate&#125; \\starparam&#123;sequence&#125;) \\EQ (not (every \\param&#123;predicate&#125; \\starparam&#123;sequence&#125;))\n\\endcode","\\(notany[\\n\\s]*\\\\param&#123;predicate&#125;[\\n\\s]*\\\\starparam&#123;sequence&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(some[\\n\\s]*\\\\param&#123;predicate&#125;[\\n\\s]*\\\\starparam&#123;sequence&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(notevery[\\n\\s]*\\\\param&#123;predicate&#125;[\\n\\s]*\\\\starparam&#123;sequence&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(every[\\n\\s]*\\\\param&#123;predicate&#125;[\\n\\s]*\\\\starparam&#123;sequence&#125;\\)\\)"],["\\code\n (if (and (&#62;= n 0)\n          (&#60; n (length a-simple-vector))\n          (eq (elt a-simple-vector n) 'foo))\n     (princ \"Foo!\"))\n\\endcode","\\(if[\\n\\s]*\\(and[\\n\\s]*\\(&#62;=[\\n\\s]*n[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(&#60;[\\n\\s]*n[\\n\\s]*\\(length[\\n\\s]*a-simple-vector\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(elt[\\n\\s]*a-simple-vector[\\n\\s]*n\\)[\\n\\s]*'foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*\"Foo!\"\\)\\)"],["\\code\n (setq temp1 1 temp2 1 temp3 1) *→* 1 \n (and (incf temp1) (incf temp2) (incf temp3)) *→* 2 \n (and (eql 2 temp1) (eql 2 temp2) (eql 2 temp3)) *→ true*\n (decf temp3) *→* 1 \n (and (decf temp1) (decf temp2) (eq temp3 'nil) (decf temp3)) *→* NIL \n (and (eql temp1 temp2) (eql temp2 temp3)) *→ true*\n (and) *→* T \n\\endcode","\\(setq[\\n\\s]*temp1[\\n\\s]*1[\\n\\s]*temp2[\\n\\s]*1[\\n\\s]*temp3[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(incf[\\n\\s]*temp1\\)[\\n\\s]*\\(incf[\\n\\s]*temp2\\)[\\n\\s]*\\(incf[\\n\\s]*temp3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(eql[\\n\\s]*2[\\n\\s]*temp1\\)[\\n\\s]*\\(eql[\\n\\s]*2[\\n\\s]*temp2\\)[\\n\\s]*\\(eql[\\n\\s]*2[\\n\\s]*temp3\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(decf[\\n\\s]*temp3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(decf[\\n\\s]*temp1\\)[\\n\\s]*\\(decf[\\n\\s]*temp2\\)[\\n\\s]*\\(eq[\\n\\s]*temp3[\\n\\s]*'nil\\)[\\n\\s]*\\(decf[\\n\\s]*temp3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(eql[\\n\\s]*temp1[\\n\\s]*temp2\\)[\\n\\s]*\\(eql[\\n\\s]*temp2[\\n\\s]*temp3\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(and\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n% (and \\param&#123;form&#125;) \\EQ \\param&#123;form&#125;\n% (and \\param&#123;form1&#125; \\param&#123;form2&#125; ...) \\EQ (when \\param&#123;form1&#125; (and \\param&#123;form2&#125; ...))\n%\\endcode","%[\\n\\s]*\\(and[\\n\\s]*\\\\param&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\\\param&#123;form&#125;[\\n\\s]*%[\\n\\s]*\\(and[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\\\param&#123;form2&#125;[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(when[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\(and[\\n\\s]*\\\\param&#123;form2&#125;[\\n\\s]*\\.\\.\\.\\)\\)[\\n\\s]*%"],["\\code\n (and \\param&#123;form&#125;) \\EQ (let () \\param&#123;form&#125;)\n (and \\param&#123;form1&#125; \\param&#123;form2&#125; ...) \\EQ (when \\param&#123;form1&#125; (and \\param&#123;form2&#125; ...))\n\\endcode","\\(and[\\n\\s]*\\\\param&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\)[\\n\\s]*\\\\param&#123;form&#125;\\)[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\\\param&#123;form2&#125;[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(when[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\(and[\\n\\s]*\\\\param&#123;form2&#125;[\\n\\s]*\\.\\.\\.\\)\\)"],["\\code\n (defun select-options ()\n   (cond ((= a 1) (setq a 2))\n         ((= a 2) (setq a 3))\n         ((and (= a 3) (floor a 2)))\n         (t (floor a 3)))) *→* SELECT-OPTIONS\n (setq a 1) *→* 1\n (select-options) *→* 2\n a *→* 2\n (select-options) *→* 3\n a *→* 3\n (select-options) *→* 1\n (setq a 5) *→* 5\n (select-options) *→* 1, 2\n\\endcode","\\(defun[\\n\\s]*select-options[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(=[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*a[\\n\\s]*2\\)[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(and[\\n\\s]*\\(=[\\n\\s]*a[\\n\\s]*3\\)[\\n\\s]*\\(floor[\\n\\s]*a[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(floor[\\n\\s]*a[\\n\\s]*3\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SELECT-OPTIONS[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(select-options\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(select-options\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(select-options\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(select-options\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2"],["\\code\n (if t 1) *→* 1\n (if nil 1 2) *→* 2 \n (defun test ()\n   (dolist (truth-value '(t nil 1 (a b c)))\n     (if truth-value (print 'true) (print 'false))\n     (prin1 truth-value))) *→* TEST\n (test)\n\\OUT TRUE T\n\\OUT FALSE NIL\n\\OUT TRUE 1\n\\OUT TRUE (A B C)\n*→* NIL\n\\endcode","\\(if[\\n\\s]*t[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*nil[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*test[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(truth-value[\\n\\s]*'\\(t[\\n\\s]*nil[\\n\\s]*1[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*truth-value[\\n\\s]*\\(print[\\n\\s]*'true\\)[\\n\\s]*\\(print[\\n\\s]*'false\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*truth-value\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEST[\\n\\s]*[\\n\\s]*\\(test\\)[\\n\\s]*\\\\OUT[\\n\\s]*TRUE[\\n\\s]*T[\\n\\s]*\\\\OUT[\\n\\s]*FALSE[\\n\\s]*NIL[\\n\\s]*\\\\OUT[\\n\\s]*TRUE[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*TRUE[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (if \\param&#123;test-form&#125; \\param&#123;then-form&#125; \\param&#123;else-form&#125;)\n \\EQ (cond (\\param&#123;test-form&#125; \\param&#123;then-form&#125;) (t \\param&#123;else-form&#125;))\n\\endcode","\\(if[\\n\\s]*\\\\param&#123;test-form&#125;[\\n\\s]*\\\\param&#123;then-form&#125;[\\n\\s]*\\\\param&#123;else-form&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(cond[\\n\\s]*\\(\\\\param&#123;test-form&#125;[\\n\\s]*\\\\param&#123;then-form&#125;\\)[\\n\\s]*\\(t[\\n\\s]*\\\\param&#123;else-form&#125;\\)\\)"],["\\code\n (or) *→* NIL \n (setq temp0 nil temp1 10 temp2 20 temp3 30) *→* 30\n (or temp0 temp1 (setq temp2 37)) *→* 10\n temp2 *→* 20\n (or (incf temp1) (incf temp2) (incf temp3)) *→* 11\n temp1 *→* 11\n temp2 *→* 20\n temp3 *→* 30\n (or (values) temp1) *→* 11\n (or (values temp1 temp2) temp3) *→* 11\n (or temp0 (values temp1 temp2)) *→* 11, 20\n (or (values temp0 temp1) (values temp2 temp3)) *→* 20, 30\n\\endcode","\\(or\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp0[\\n\\s]*nil[\\n\\s]*temp1[\\n\\s]*10[\\n\\s]*temp2[\\n\\s]*20[\\n\\s]*temp3[\\n\\s]*30\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*30[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*temp0[\\n\\s]*temp1[\\n\\s]*\\(setq[\\n\\s]*temp2[\\n\\s]*37\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*temp2[\\n\\s]*\\*\\→\\*[\\n\\s]*20[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(incf[\\n\\s]*temp1\\)[\\n\\s]*\\(incf[\\n\\s]*temp2\\)[\\n\\s]*\\(incf[\\n\\s]*temp3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*11[\\n\\s]*[\\n\\s]*temp1[\\n\\s]*\\*\\→\\*[\\n\\s]*11[\\n\\s]*[\\n\\s]*temp2[\\n\\s]*\\*\\→\\*[\\n\\s]*20[\\n\\s]*[\\n\\s]*temp3[\\n\\s]*\\*\\→\\*[\\n\\s]*30[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(values\\)[\\n\\s]*temp1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*11[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(values[\\n\\s]*temp1[\\n\\s]*temp2\\)[\\n\\s]*temp3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*11[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*temp0[\\n\\s]*\\(values[\\n\\s]*temp1[\\n\\s]*temp2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*11,[\\n\\s]*20[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(values[\\n\\s]*temp0[\\n\\s]*temp1\\)[\\n\\s]*\\(values[\\n\\s]*temp2[\\n\\s]*temp3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*20,[\\n\\s]*30"],["\\code\n (when t 'hello) *→* HELLO\n (unless t 'hello) *→* NIL\n (when nil 'hello) *→* NIL\n (unless nil 'hello) *→* HELLO\n (when t) *→* NIL\n (unless nil) *→* NIL\n (when t (prin1 1) (prin1 2) (prin1 3))\n\\OUT 123\n*→* 3\n (unless t (prin1 1) (prin1 2) (prin1 3)) *→* NIL\n (when nil (prin1 1) (prin1 2) (prin1 3)) *→* NIL\n (unless nil (prin1 1) (prin1 2) (prin1 3))\n\\OUT 123\n*→* 3\n (let ((x 3))\n   (list (when (oddp x) (incf x) (list x))\n         (when (oddp x) (incf x) (list x))\n         (unless (oddp x) (incf x) (list x))\n         (unless (oddp x) (incf x) (list x))\n         (if (oddp x) (incf x) (list x)) \n         (if (oddp x) (incf x) (list x)) \n         (if (not (oddp x)) (incf x) (list x)) \n         (if (not (oddp x)) (incf x) (list x))))\n*→* ((4) NIL (5) NIL 6 (6) 7 (7))\n\\endcode","\\(when[\\n\\s]*t[\\n\\s]*'hello\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*HELLO[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*t[\\n\\s]*'hello\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*nil[\\n\\s]*'hello\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*nil[\\n\\s]*'hello\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*HELLO[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*t[\\n\\s]*\\(prin1[\\n\\s]*1\\)[\\n\\s]*\\(prin1[\\n\\s]*2\\)[\\n\\s]*\\(prin1[\\n\\s]*3\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*123[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*t[\\n\\s]*\\(prin1[\\n\\s]*1\\)[\\n\\s]*\\(prin1[\\n\\s]*2\\)[\\n\\s]*\\(prin1[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*nil[\\n\\s]*\\(prin1[\\n\\s]*1\\)[\\n\\s]*\\(prin1[\\n\\s]*2\\)[\\n\\s]*\\(prin1[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*nil[\\n\\s]*\\(prin1[\\n\\s]*1\\)[\\n\\s]*\\(prin1[\\n\\s]*2\\)[\\n\\s]*\\(prin1[\\n\\s]*3\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*123[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(when[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(not[\\n\\s]*\\(oddp[\\n\\s]*x\\)\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(not[\\n\\s]*\\(oddp[\\n\\s]*x\\)\\)[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(list[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(4\\)[\\n\\s]*NIL[\\n\\s]*\\(5\\)[\\n\\s]*NIL[\\n\\s]*6[\\n\\s]*\\(6\\)[\\n\\s]*7[\\n\\s]*\\(7\\)\\)"],["\\code\n (when \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (and \\param&#123;test&#125; (progn \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;))\n (when \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (cond (\\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;))\n (when \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (if \\param&#123;test&#125; (progn \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) nil)\n (when \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (unless (not \\param&#123;test&#125;) \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;)\n (unless \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (cond ((not \\param&#123;test&#125;) \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;))\n (unless \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (if \\param&#123;test&#125; nil (progn \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;))\n (unless \\param&#123;test&#125; \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;) \\EQ (when (not \\param&#123;test&#125;) \\plus&#123;\\curly&#123;\\param&#123;form&#125;&#125;&#125;)\n\\endcode","\\(when[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(and[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\(progn[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(cond[\\n\\s]*\\(\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(if[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\(progn[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(unless[\\n\\s]*\\(not[\\n\\s]*\\\\param&#123;test&#125;\\)[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(cond[\\n\\s]*\\(\\(not[\\n\\s]*\\\\param&#123;test&#125;\\)[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(if[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*nil[\\n\\s]*\\(progn[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\\\param&#123;test&#125;[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(when[\\n\\s]*\\(not[\\n\\s]*\\\\param&#123;test&#125;\\)[\\n\\s]*\\\\plus&#123;\\\\curly&#123;\\\\param&#123;form&#125;&#125;&#125;\\)"],["\\code\n (dolist (k '(1 2 3 :four #\\\\v () t 'other))\n    (format t \"~S \"\n       (case k ((1 2) 'clause1)\n               (3 'clause2)\n               (nil 'no-keys-so-never-seen)\n               ((nil) 'nilslot)\n               ((:four #\\\\v) 'clause4)\n               ((t) 'tslot)\n               (otherwise 'others)))) \n\\OUT CLAUSE1 CLAUSE1 CLAUSE2 CLAUSE4 CLAUSE4 NILSLOT TSLOT OTHERS \n*→* NIL\n (defun add-em (x) (apply #'+ (mapcar #'decode x)))\n*→* ADD-EM\n (defun decode (x)\n   (ccase x\n     ((i uno) 1)\n     ((ii dos) 2)\n     ((iii tres) 3)\n     ((iv cuatro) 4)))\n*→* DECODE\n (add-em '(uno iii)) *→* 4\n (add-em '(uno iiii))\n\\OUT Error: The value of X, IIII, is not I, UNO, II, DOS, III,\n\\OUT        TRES, IV, or CUATRO.\n\\OUT  1: Supply a value to use instead.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Value to evaluate and use for X: \\IN&#123;'IV&#125;\n*→* 5\n\\endcode","\\(dolist[\\n\\s]*\\(k[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*:four[\\n\\s]*#\\\\\\\\v[\\n\\s]*\\(\\)[\\n\\s]*t[\\n\\s]*'other\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~S[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*k[\\n\\s]*\\(\\(1[\\n\\s]*2\\)[\\n\\s]*'clause1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(3[\\n\\s]*'clause2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nil[\\n\\s]*'no-keys-so-never-seen\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(nil\\)[\\n\\s]*'nilslot\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(:four[\\n\\s]*#\\\\\\\\v\\)[\\n\\s]*'clause4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(t\\)[\\n\\s]*'tslot\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(otherwise[\\n\\s]*'others\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*CLAUSE1[\\n\\s]*CLAUSE1[\\n\\s]*CLAUSE2[\\n\\s]*CLAUSE4[\\n\\s]*CLAUSE4[\\n\\s]*NILSLOT[\\n\\s]*TSLOT[\\n\\s]*OTHERS[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*add-em[\\n\\s]*\\(x\\)[\\n\\s]*\\(apply[\\n\\s]*#'\\+[\\n\\s]*\\(mapcar[\\n\\s]*#'decode[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ADD-EM[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*decode[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ccase[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(i[\\n\\s]*uno\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(ii[\\n\\s]*dos\\)[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(iii[\\n\\s]*tres\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(iv[\\n\\s]*cuatro\\)[\\n\\s]*4\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DECODE[\\n\\s]*[\\n\\s]*\\(add-em[\\n\\s]*'\\(uno[\\n\\s]*iii\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(add-em[\\n\\s]*'\\(uno[\\n\\s]*iiii\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*X,[\\n\\s]*IIII,[\\n\\s]*is[\\n\\s]*not[\\n\\s]*I,[\\n\\s]*UNO,[\\n\\s]*II,[\\n\\s]*DOS,[\\n\\s]*III,[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*TRES,[\\n\\s]*IV,[\\n\\s]*or[\\n\\s]*CUATRO\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Supply[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Value[\\n\\s]*to[\\n\\s]*evaluate[\\n\\s]*and[\\n\\s]*use[\\n\\s]*for[\\n\\s]*X:[\\n\\s]*\\\\IN&#123;'IV&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*5"],["\\code\n(case \\param&#123;test-key&#125;\n  \\star&#123;\\curly&#123;((\\starparam&#123;key&#125;) \\starparam&#123;form&#125;)&#125;&#125;)\n\\EQ\n(let ((#1=#:g0001 \\param&#123;test-key&#125;))\n  (cond \\star&#123;\\curly&#123;((member #1# '(\\starparam&#123;key&#125;)) \\starparam&#123;form&#125;)&#125;&#125;))\n\\endcode","\\(case[\\n\\s]*\\\\param&#123;test-key&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\(\\(\\\\starparam&#123;key&#125;\\)[\\n\\s]*\\\\starparam&#123;form&#125;\\)&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\(#1=#:g0001[\\n\\s]*\\\\param&#123;test-key&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\(\\(member[\\n\\s]*#1#[\\n\\s]*'\\(\\\\starparam&#123;key&#125;\\)\\)[\\n\\s]*\\\\starparam&#123;form&#125;\\)&#125;&#125;\\)\\)"],["\\code\n;;; (Note that the parts of this example which use TYPE-OF \n;;;  are implementation-dependent.)\n (defun what-is-it (x)\n   (format t \"~&~S is ~A.~%\"\n           x (typecase x\n               (float \"a float\")\n               (null \"a symbol, boolean false, or the empty list\")\n               (list \"a list\")\n               (t (format nil \"a(n) ~(~A~)\" (type-of x))))))\n*→* WHAT-IS-IT\n (map 'nil #'what-is-it '(nil (a b) 7.0 7 box))\n\\OUT NIL is a symbol, boolean false, or the empty list.\n\\OUT (A B) is a list.\n\\OUT 7.0 is a float.\n\\OUT 7 is a(n) integer.\n\\OUT BOX is a(n) symbol.\n*→* NIL\n (setq x 1/3)\n*→* 1/3\n (ctypecase x\n     (integer (* x 4))\n     (symbol  (symbol-value x)))\n\\OUT Error: The value of X, 1/3, is neither an integer nor a symbol.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use instead.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Use value: \\IN&#123;3.7&#125;\n\\OUT Error: The value of X, 3.7, is neither an integer nor a symbol.\n\\OUT To continue, type :CONTINUE followed by an option number:\n\\OUT  1: Specify a value to use instead.\n\\OUT  2: Return to Lisp Toplevel.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE 1&#125;\n\\OUT Use value: \\IN&#123;12&#125;\n*→* 48\n x *→* 12\n\\endcode",";;;[\\n\\s]*\\(Note[\\n\\s]*that[\\n\\s]*the[\\n\\s]*parts[\\n\\s]*of[\\n\\s]*this[\\n\\s]*example[\\n\\s]*which[\\n\\s]*use[\\n\\s]*TYPE-OF[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*are[\\n\\s]*implementation-dependent\\.\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*what-is-it[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~S[\\n\\s]*is[\\n\\s]*~A\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\(typecase[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(float[\\n\\s]*\"a[\\n\\s]*float\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(null[\\n\\s]*\"a[\\n\\s]*symbol,[\\n\\s]*boolean[\\n\\s]*false,[\\n\\s]*or[\\n\\s]*the[\\n\\s]*empty[\\n\\s]*list\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\"a[\\n\\s]*list\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(t[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"a\\(n\\)[\\n\\s]*~\\(~A~\\)\"[\\n\\s]*\\(type-of[\\n\\s]*x\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*WHAT-IS-IT[\\n\\s]*[\\n\\s]*\\(map[\\n\\s]*'nil[\\n\\s]*#'what-is-it[\\n\\s]*'\\(nil[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*7\\.0[\\n\\s]*7[\\n\\s]*box\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*NIL[\\n\\s]*is[\\n\\s]*a[\\n\\s]*symbol,[\\n\\s]*boolean[\\n\\s]*false,[\\n\\s]*or[\\n\\s]*the[\\n\\s]*empty[\\n\\s]*list\\.[\\n\\s]*\\\\OUT[\\n\\s]*\\(A[\\n\\s]*B\\)[\\n\\s]*is[\\n\\s]*a[\\n\\s]*list\\.[\\n\\s]*\\\\OUT[\\n\\s]*7\\.0[\\n\\s]*is[\\n\\s]*a[\\n\\s]*float\\.[\\n\\s]*\\\\OUT[\\n\\s]*7[\\n\\s]*is[\\n\\s]*a\\(n\\)[\\n\\s]*integer\\.[\\n\\s]*\\\\OUT[\\n\\s]*BOX[\\n\\s]*is[\\n\\s]*a\\(n\\)[\\n\\s]*symbol\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*1/3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1/3[\\n\\s]*[\\n\\s]*\\(ctypecase[\\n\\s]*x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(integer[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*X,[\\n\\s]*1/3,[\\n\\s]*is[\\n\\s]*neither[\\n\\s]*an[\\n\\s]*integer[\\n\\s]*nor[\\n\\s]*a[\\n\\s]*symbol\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Use[\\n\\s]*value:[\\n\\s]*\\\\IN&#123;3\\.7&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*value[\\n\\s]*of[\\n\\s]*X,[\\n\\s]*3\\.7,[\\n\\s]*is[\\n\\s]*neither[\\n\\s]*an[\\n\\s]*integer[\\n\\s]*nor[\\n\\s]*a[\\n\\s]*symbol\\.[\\n\\s]*\\\\OUT[\\n\\s]*To[\\n\\s]*continue,[\\n\\s]*type[\\n\\s]*:CONTINUE[\\n\\s]*followed[\\n\\s]*by[\\n\\s]*an[\\n\\s]*option[\\n\\s]*number:[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*1:[\\n\\s]*Specify[\\n\\s]*a[\\n\\s]*value[\\n\\s]*to[\\n\\s]*use[\\n\\s]*instead\\.[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*2:[\\n\\s]*Return[\\n\\s]*to[\\n\\s]*Lisp[\\n\\s]*Toplevel\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE[\\n\\s]*1&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Use[\\n\\s]*value:[\\n\\s]*\\\\IN&#123;12&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*48[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*12"],["\\code\n(typecase \\param&#123;test-key&#125;\n  \\star&#123;\\curly&#123;(\\param&#123;type&#125; \\starparam&#123;form&#125;)&#125;&#125;)\n\\EQ\n(let ((#1=#:g0001 \\param&#123;test-key&#125;))\n  (cond \\star&#123;\\curly&#123;((typep #1# '\\param&#123;type&#125;) \\starparam&#123;form&#125;)&#125;&#125;))\n\\endcode","\\(typecase[\\n\\s]*\\\\param&#123;test-key&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\(\\\\param&#123;type&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\(#1=#:g0001[\\n\\s]*\\\\param&#123;test-key&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\(\\(typep[\\n\\s]*#1#[\\n\\s]*'\\\\param&#123;type&#125;\\)[\\n\\s]*\\\\starparam&#123;form&#125;\\)&#125;&#125;\\)\\)"],["\\code\n (multiple-value-bind (f r) \n     (floor 130 11)\n   (list f r)) *→* (11 9)\n\\endcode","\\(multiple-value-bind[\\n\\s]*\\(f[\\n\\s]*r\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(floor[\\n\\s]*130[\\n\\s]*11\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*f[\\n\\s]*r\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(11[\\n\\s]*9\\)"],["\\code\n (multiple-value-bind (\\starparam&#123;var&#125;) \\param&#123;values-form&#125; \\starparam&#123;form&#125;)\n \\EQ (multiple-value-call #'(lambda (&optional \\starparam&#123;var&#125; &rest #1=#:ignore)\n                             (declare (ignore #1#))\n                             \\starparam&#123;form&#125;)\n                         \\param&#123;values-form&#125;)\n\\endcode","\\(multiple-value-bind[\\n\\s]*\\(\\\\starparam&#123;var&#125;\\)[\\n\\s]*\\\\param&#123;values-form&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(multiple-value-call[\\n\\s]*#'\\(lambda[\\n\\s]*\\(&optional[\\n\\s]*\\\\starparam&#123;var&#125;[\\n\\s]*&rest[\\n\\s]*#1=#:ignore\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*#1#\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;values-form&#125;\\)"],["\\code\n (multiple-value-call #'list 1 '/ (values 2 3) '/ (values) '/ (floor 2.5))\n*→* (1 / 2 3 / / 2 0.5)\n (+ (floor 5 3) (floor 19 4)) \\EQ (+ 1 4)\n*→* 5\n (multiple-value-call #'+ (floor 5 3) (floor 19 4)) \\EQ (+ 1 2 4 3)\n*→* 10\n\\endcode","\\(multiple-value-call[\\n\\s]*#'list[\\n\\s]*1[\\n\\s]*'/[\\n\\s]*\\(values[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'/[\\n\\s]*\\(values\\)[\\n\\s]*'/[\\n\\s]*\\(floor[\\n\\s]*2\\.5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*/[\\n\\s]*2[\\n\\s]*3[\\n\\s]*/[\\n\\s]*/[\\n\\s]*2[\\n\\s]*0\\.5\\)[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*\\(floor[\\n\\s]*5[\\n\\s]*3\\)[\\n\\s]*\\(floor[\\n\\s]*19[\\n\\s]*4\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(\\+[\\n\\s]*1[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(multiple-value-call[\\n\\s]*#'\\+[\\n\\s]*\\(floor[\\n\\s]*5[\\n\\s]*3\\)[\\n\\s]*\\(floor[\\n\\s]*19[\\n\\s]*4\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(\\+[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n (multiple-value-list (floor -3 4)) *→* (-1 1)\n\\endcode","\\(multiple-value-list[\\n\\s]*\\(floor[\\n\\s]*-3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(-1[\\n\\s]*1\\)"],["\\code\n (multiple-value-list form) \\EQ (multiple-value-call #'list form)\n\\endcode","\\(multiple-value-list[\\n\\s]*form\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(multiple-value-call[\\n\\s]*#'list[\\n\\s]*form\\)"],["\\code\n (setq temp '(1 2 3)) *→* (1 2 3)\n (multiple-value-prog1\n    (values-list temp)\n    (setq temp nil)\n    (values-list temp)) *→* 1, 2, 3\n\\endcode","\\(setq[\\n\\s]*temp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(multiple-value-prog1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values-list[\\n\\s]*temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values-list[\\n\\s]*temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2,[\\n\\s]*3"],["\\code\n (multiple-value-setq (\\i&#123;symbol&#125;\\subOne ... \\i&#123;symbol&#125;\\subN) \\i&#123;value-producing-form&#125;)\n\\endcode","\\(multiple-value-setq[\\n\\s]*\\(\\\\i&#123;symbol&#125;\\\\subOne[\\n\\s]*\\.\\.\\.[\\n\\s]*\\\\i&#123;symbol&#125;\\\\subN\\)[\\n\\s]*\\\\i&#123;value-producing-form&#125;\\)"],["\\code\n (values (setf (values \\i&#123;symbol&#125;\\subOne ... \\i&#123;symbol&#125;\\subN) \\i&#123;value-producing-form&#125;))\n\\endcode","\\(values[\\n\\s]*\\(setf[\\n\\s]*\\(values[\\n\\s]*\\\\i&#123;symbol&#125;\\\\subOne[\\n\\s]*\\.\\.\\.[\\n\\s]*\\\\i&#123;symbol&#125;\\\\subN\\)[\\n\\s]*\\\\i&#123;value-producing-form&#125;\\)\\)"],["\\code\n (multiple-value-setq (quotient remainder) (truncate 3.2 2)) *→* 1\n quotient *→* 1\n remainder *→* 1.2\n (multiple-value-setq (a b c) (values 1 2)) *→* 1\n a *→* 1\n b *→* 2\n c *→* NIL\n (multiple-value-setq (a b) (values 4 5 6)) *→* 4\n a *→* 4\n b *→* 5\n\\endcode","\\(multiple-value-setq[\\n\\s]*\\(quotient[\\n\\s]*remainder\\)[\\n\\s]*\\(truncate[\\n\\s]*3\\.2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*quotient[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*remainder[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.2[\\n\\s]*[\\n\\s]*\\(multiple-value-setq[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(multiple-value-setq[\\n\\s]*\\(a[\\n\\s]*b\\)[\\n\\s]*\\(values[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*5"],["\\code\n (values) *→* \\novalues\n (values 1) *→* 1\n (values 1 2) *→* 1, 2\n (values 1 2 3) *→* 1, 2, 3\n (values (values 1 2 3) 4 5) *→* 1, 4, 5\n (defun polar (x y)\n   (values (sqrt (+ (* x x) (* y y))) (atan y x))) *→* POLAR\n (multiple-value-bind (r theta) (polar 3.0 4.0)\n   (vector r theta))\n*→* #(5.0 0.927295)\n\\endcode","\\(values\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\novalues[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2,[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*4,[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*polar[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(\\*[\\n\\s]*y[\\n\\s]*y\\)\\)\\)[\\n\\s]*\\(atan[\\n\\s]*y[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*POLAR[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(r[\\n\\s]*theta\\)[\\n\\s]*\\(polar[\\n\\s]*3\\.0[\\n\\s]*4\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(vector[\\n\\s]*r[\\n\\s]*theta\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(5\\.0[\\n\\s]*0\\.927295\\)"],["\\code\n (defun foo (x y)\n   (floor (+ x y) y)) *→* FOO\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(floor[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO"],["\\code\n (defun foo (x y)\n   (values (floor (+ x y) y))) *→* FOO\n\\endcode","\\(defun[\\n\\s]*foo[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(floor[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*y\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO"],["\\code\n (values-list nil) *→* \\novalues\n (values-list '(1)) *→* 1\n (values-list '(1 2)) *→* 1, 2\n (values-list '(1 2 3)) *→* 1, 2, 3\n\\endcode","\\(values-list[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\novalues[\\n\\s]*[\\n\\s]*\\(values-list[\\n\\s]*'\\(1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(values-list[\\n\\s]*'\\(1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(values-list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2,[\\n\\s]*3"],["\\code\n (values-list \\param&#123;list&#125;) \\EQ (apply #'values \\param&#123;list&#125;)\n\\endcode","\\(values-list[\\n\\s]*\\\\param&#123;list&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(apply[\\n\\s]*#'values[\\n\\s]*\\\\param&#123;list&#125;\\)"],["\\code\n (nth-value 0 (values 'a 'b)) *→* A\n (nth-value 1 (values 'a 'b)) *→* B\n (nth-value 2 (values 'a 'b)) *→* NIL\n (let* ((x 83927472397238947423879243432432432)\n        (y 32423489732)\n        (a (nth-value 1 (floor x y)))\n        (b (mod x y)))\n   (values a b (= a b)))\n*→* 3332987528, 3332987528, true\n\\endcode","\\(nth-value[\\n\\s]*0[\\n\\s]*\\(values[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(nth-value[\\n\\s]*1[\\n\\s]*\\(values[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B[\\n\\s]*[\\n\\s]*\\(nth-value[\\n\\s]*2[\\n\\s]*\\(values[\\n\\s]*'a[\\n\\s]*'b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(x[\\n\\s]*83927472397238947423879243432432432\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*32423489732\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*\\(nth-value[\\n\\s]*1[\\n\\s]*\\(floor[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*\\(mod[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*a[\\n\\s]*b[\\n\\s]*\\(=[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3332987528,[\\n\\s]*3332987528,[\\n\\s]*true"],["\\code\n (nth-value \\param&#123;n&#125; \\param&#123;form&#125;) \\EQ (nth \\param&#123;n&#125; (multiple-value-list \\param&#123;form&#125;))\n\\endcode","\\(nth-value[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\\\param&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(nth[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\(multiple-value-list[\\n\\s]*\\\\param&#123;form&#125;\\)\\)"],["\\code\n (prog (var1 var2 (var3 init-form-3) var4 (var5 init-form-5))\n       \\starparam&#123;declaration&#125;\n       statement1\n  tag1\n       statement2\n       statement3\n       statement4\n  tag2\n       statement5\n       ...\n       )\n\\endcode","\\(prog[\\n\\s]*\\(var1[\\n\\s]*var2[\\n\\s]*\\(var3[\\n\\s]*init-form-3\\)[\\n\\s]*var4[\\n\\s]*\\(var5[\\n\\s]*init-form-5\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\starparam&#123;declaration&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*statement1[\\n\\s]*[\\n\\s]*[\\n\\s]*tag1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*statement2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*statement3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*statement4[\\n\\s]*[\\n\\s]*[\\n\\s]*tag2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*statement5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)"],["\\code\n(prog* ((y z) (x (car y)))\n       (return x))\n\\endcode","\\(prog\\*[\\n\\s]*\\(\\(y[\\n\\s]*z\\)[\\n\\s]*\\(x[\\n\\s]*\\(car[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*x\\)\\)"],["\\code\n (setq a 1) *→* 1\n (prog ((a 2) (b a)) (return (if (= a b) '= '/=))) *→* /=\n (prog* ((a 2) (b a)) (return (if (= a b) '= '/=))) *→* =\n (prog () 'no-return-value) *→* NIL\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(prog[\\n\\s]*\\(\\(a[\\n\\s]*2\\)[\\n\\s]*\\(b[\\n\\s]*a\\)\\)[\\n\\s]*\\(return[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*'=[\\n\\s]*'/=\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*/=[\\n\\s]*[\\n\\s]*\\(prog\\*[\\n\\s]*\\(\\(a[\\n\\s]*2\\)[\\n\\s]*\\(b[\\n\\s]*a\\)\\)[\\n\\s]*\\(return[\\n\\s]*\\(if[\\n\\s]*\\(=[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*'=[\\n\\s]*'/=\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*=[\\n\\s]*[\\n\\s]*\\(prog[\\n\\s]*\\(\\)[\\n\\s]*'no-return-value\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defun king-of-confusion (w)\n   \"Take a cons of two lists and make a list of conses.\n    Think of this function as being like a zipper.\"\n   (prog (x y z)          ;Initialize x, y, z to NIL\n        (setq y (car w) z (cdr w))\n    loop\n        (cond ((null y) (return x))\n              ((null z) (go err)))\n    rejoin\n        (setq x (cons (cons (car y) (car z)) x))\n        (setq y (cdr y) z (cdr z))\n        (go loop)\n    err\n        (cerror \"Will self-pair extraneous items\"\n                \"Mismatch - gleep!  ~S\" y)\n        (setq z y)\n        (go rejoin))) *→* KING-OF-CONFUSION \n\\endcode","\\(defun[\\n\\s]*king-of-confusion[\\n\\s]*\\(w\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Take[\\n\\s]*a[\\n\\s]*cons[\\n\\s]*of[\\n\\s]*two[\\n\\s]*lists[\\n\\s]*and[\\n\\s]*make[\\n\\s]*a[\\n\\s]*list[\\n\\s]*of[\\n\\s]*conses\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Think[\\n\\s]*of[\\n\\s]*this[\\n\\s]*function[\\n\\s]*as[\\n\\s]*being[\\n\\s]*like[\\n\\s]*a[\\n\\s]*zipper\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prog[\\n\\s]*\\(x[\\n\\s]*y[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Initialize[\\n\\s]*x,[\\n\\s]*y,[\\n\\s]*z[\\n\\s]*to[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(car[\\n\\s]*w\\)[\\n\\s]*z[\\n\\s]*\\(cdr[\\n\\s]*w\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*loop[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cond[\\n\\s]*\\(\\(null[\\n\\s]*y\\)[\\n\\s]*\\(return[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*z\\)[\\n\\s]*\\(go[\\n\\s]*err\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*rejoin[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*\\(cons[\\n\\s]*\\(car[\\n\\s]*y\\)[\\n\\s]*\\(car[\\n\\s]*z\\)\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(cdr[\\n\\s]*y\\)[\\n\\s]*z[\\n\\s]*\\(cdr[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*loop\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*err[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Will[\\n\\s]*self-pair[\\n\\s]*extraneous[\\n\\s]*items\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Mismatch[\\n\\s]*-[\\n\\s]*gleep![\\n\\s]*[\\n\\s]*~S\"[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*z[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(go[\\n\\s]*rejoin\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*KING-OF-CONFUSION"],["\\code\n (defun prince-of-clarity (w)\n   \"Take a cons of two lists and make a list of conses.\n    Think of this function as being like a zipper.\"\n   (do ((y (car w) (cdr y))\n        (z (cdr w) (cdr z))\n        (x '\\empty (cons (cons (car y) (car z)) x)))\n       ((null y) x)\n     (when (null z)\n       (cerror \"Will self-pair extraneous items\"\n              \"Mismatch - gleep!  ~S\" y)\n       (setq z y)))) *→* PRINCE-OF-CLARITY \n\\endcode","\\(defun[\\n\\s]*prince-of-clarity[\\n\\s]*\\(w\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Take[\\n\\s]*a[\\n\\s]*cons[\\n\\s]*of[\\n\\s]*two[\\n\\s]*lists[\\n\\s]*and[\\n\\s]*make[\\n\\s]*a[\\n\\s]*list[\\n\\s]*of[\\n\\s]*conses\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Think[\\n\\s]*of[\\n\\s]*this[\\n\\s]*function[\\n\\s]*as[\\n\\s]*being[\\n\\s]*like[\\n\\s]*a[\\n\\s]*zipper\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(y[\\n\\s]*\\(car[\\n\\s]*w\\)[\\n\\s]*\\(cdr[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(z[\\n\\s]*\\(cdr[\\n\\s]*w\\)[\\n\\s]*\\(cdr[\\n\\s]*z\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*'\\\\empty[\\n\\s]*\\(cons[\\n\\s]*\\(cons[\\n\\s]*\\(car[\\n\\s]*y\\)[\\n\\s]*\\(car[\\n\\s]*z\\)\\)[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*y\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(null[\\n\\s]*z\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cerror[\\n\\s]*\"Will[\\n\\s]*self-pair[\\n\\s]*extraneous[\\n\\s]*items\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Mismatch[\\n\\s]*-[\\n\\s]*gleep![\\n\\s]*[\\n\\s]*~S\"[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*z[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*PRINCE-OF-CLARITY"],["\\code\n (prog \\param&#123;variable-list&#125; \\param&#123;declaration&#125; . \\param&#123;body&#125;)\n    \\EQ (block nil (let \\param&#123;variable-list&#125; \\param&#123;declaration&#125; (tagbody . \\param&#123;body&#125;)))\n\\endcode","\\(prog[\\n\\s]*\\\\param&#123;variable-list&#125;[\\n\\s]*\\\\param&#123;declaration&#125;[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;body&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(block[\\n\\s]*nil[\\n\\s]*\\(let[\\n\\s]*\\\\param&#123;variable-list&#125;[\\n\\s]*\\\\param&#123;declaration&#125;[\\n\\s]*\\(tagbody[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;body&#125;\\)\\)\\)"],["\\code\n (setq temp 1) *→* 1\n (prog1 temp (print temp) (incf temp) (print temp))\n\\OUT 1\n\\OUT 2\n*→* 1\n (prog1 temp (setq temp nil)) *→* 2\n temp *→* NIL\n (prog1 (values 1 2 3) 4) *→* 1 \n (setq temp (list 'a 'b 'c))\n (prog1 (car temp) (setf (car temp) 'alpha)) *→* A\n temp *→* (ALPHA B C)\n (flet ((swap-symbol-values (x y)\n          (setf (symbol-value x) \n                (prog1 (symbol-value y)\n                       (setf (symbol-value y) (symbol-value x))))))\n   (let ((*foo* 1) (*bar* 2))\n     (declare (special *foo* *bar*))\n     (swap-symbol-values '*foo* '*bar*)\n     (values *foo* *bar*)))\n*→* 2, 1\n (setq temp 1) *→* 1\n (prog2 (incf temp) (incf temp) (incf temp)) *→* 3\n temp *→* 4\n (prog2 1 (values 2 3 4) 5) *→* 2\n\\endcode","\\(setq[\\n\\s]*temp[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*temp[\\n\\s]*\\(print[\\n\\s]*temp\\)[\\n\\s]*\\(incf[\\n\\s]*temp\\)[\\n\\s]*\\(print[\\n\\s]*temp\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*temp[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*temp[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*\\(car[\\n\\s]*temp\\)[\\n\\s]*\\(setf[\\n\\s]*\\(car[\\n\\s]*temp\\)[\\n\\s]*'alpha\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*temp[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ALPHA[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(swap-symbol-values[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*\\(symbol-value[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*y\\)[\\n\\s]*\\(symbol-value[\\n\\s]*x\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*foo\\*[\\n\\s]*1\\)[\\n\\s]*\\(\\*bar\\*[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*\\*foo\\*[\\n\\s]*\\*bar\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(swap-symbol-values[\\n\\s]*'\\*foo\\*[\\n\\s]*'\\*bar\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\*foo\\*[\\n\\s]*\\*bar\\*\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2,[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(prog2[\\n\\s]*\\(incf[\\n\\s]*temp\\)[\\n\\s]*\\(incf[\\n\\s]*temp\\)[\\n\\s]*\\(incf[\\n\\s]*temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*temp[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(prog2[\\n\\s]*1[\\n\\s]*\\(values[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n% (prog1 \\starparam&#123;form&#125;) \\EQ (values (multiple-value-prog1 \\starparam&#123;form&#125;))\n% (prog2 \\param&#123;form1&#125; \\starparam&#123;form&#125;) \\EQ (progn \\param&#123;form1&#125; (prog1 \\starparam&#123;form&#125;))\n%\\endcode","%[\\n\\s]*\\(prog1[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(values[\\n\\s]*\\(multiple-value-prog1[\\n\\s]*\\\\starparam&#123;form&#125;\\)\\)[\\n\\s]*%[\\n\\s]*\\(prog2[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(progn[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\(prog1[\\n\\s]*\\\\starparam&#123;form&#125;\\)\\)[\\n\\s]*%"],["\\code\n (prog1 \\starparam&#123;form&#125;) \\EQ (values (multiple-value-prog1 \\starparam&#123;form&#125;))\n (prog2 \\param&#123;form1&#125; \\starparam&#123;form&#125;) \\EQ (let () \\param&#123;form1&#125; (prog1 \\starparam&#123;form&#125;))\n\\endcode","\\(prog1[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(values[\\n\\s]*\\(multiple-value-prog1[\\n\\s]*\\\\starparam&#123;form&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(prog2[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\\\starparam&#123;form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(let[\\n\\s]*\\(\\)[\\n\\s]*\\\\param&#123;form1&#125;[\\n\\s]*\\(prog1[\\n\\s]*\\\\starparam&#123;form&#125;\\)\\)"],["\\code\n (progn) *→* NIL\n (progn 1 2 3) *→* 3\n (progn (values 1 2 3)) *→* 1, 2, 3\n (setq a 1) *→* 1\n (if a\n      (progn (setq a nil) 'here)\n      (progn (setq a t) 'there)) *→* HERE\n a *→* NIL\n\\endcode","\\(progn\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(values[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2,[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*a[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*nil\\)[\\n\\s]*'here\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*t\\)[\\n\\s]*'there\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*HERE[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defmacro \\param&#123;name&#125; (reference . \\param&#123;lambda-list&#125;)\n   \\param&#123;documentation&#125;\n   \\bq(setf ,reference\n          (\\param&#123;function&#125; ,reference ,\\i&#123;arg1&#125; ,\\i&#123;arg2&#125; ...)))\n\\endcode","\\(defmacro[\\n\\s]*\\\\param&#123;name&#125;[\\n\\s]*\\(reference[\\n\\s]*\\.[\\n\\s]*\\\\param&#123;lambda-list&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;documentation&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\bq\\(setf[\\n\\s]*,reference[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\\\param&#123;function&#125;[\\n\\s]*,reference[\\n\\s]*,\\\\i&#123;arg1&#125;[\\n\\s]*,\\\\i&#123;arg2&#125;[\\n\\s]*\\.\\.\\.\\)\\)\\)"],["\\code\n (define-modify-macro appendf (&rest args) \n    append \"Append onto list\") *→* APPENDF\n (setq x '(a b c) y x) *→* (A B C)\n (appendf x '(d e f) '(1 2 3)) *→* (A B C D E F 1 2 3)\n x *→* (A B C D E F 1 2 3)\n y *→* (A B C)\n (define-modify-macro new-incf (&optional (delta 1)) +)\n (define-modify-macro unionf (other-set &rest keywords) union)\n\\endcode","\\(define-modify-macro[\\n\\s]*appendf[\\n\\s]*\\(&rest[\\n\\s]*args\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*append[\\n\\s]*\"Append[\\n\\s]*onto[\\n\\s]*list\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*APPENDF[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*y[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(appendf[\\n\\s]*x[\\n\\s]*'\\(d[\\n\\s]*e[\\n\\s]*f\\)[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*y[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(define-modify-macro[\\n\\s]*new-incf[\\n\\s]*\\(&optional[\\n\\s]*\\(delta[\\n\\s]*1\\)\\)[\\n\\s]*\\+\\)[\\n\\s]*[\\n\\s]*\\(define-modify-macro[\\n\\s]*unionf[\\n\\s]*\\(other-set[\\n\\s]*&rest[\\n\\s]*keywords\\)[\\n\\s]*union\\)"],["\\code\n%  (defsetf access-fn update-fn \\lbracket\\ doc-string\\rbracket)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defsetf[\\n\\s]*access-fn[\\n\\s]*update-fn[\\n\\s]*\\\\lbracket\\\\[\\n\\s]*doc-string\\\\rbracket\\)[\\n\\s]*%"],["\\code\n%  (defsetf access-fn lambda-list (store-variable) . body)\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defsetf[\\n\\s]*access-fn[\\n\\s]*lambda-list[\\n\\s]*\\(store-variable\\)[\\n\\s]*\\.[\\n\\s]*body\\)[\\n\\s]*%"],["\\code\n (defsetf symbol-value set)\n\\endcode","\\(defsetf[\\n\\s]*symbol-value[\\n\\s]*set\\)"],["\\code\n (defsetf car rplaca)\n\\endcode","\\(defsetf[\\n\\s]*car[\\n\\s]*rplaca\\)"],["\\code\n (defun middleguy (x) (nth (truncate (1- (list-length x)) 2) x)) *→* MIDDLEGUY\n (defun set-middleguy (x v)\n    (unless (null x)\n      (rplaca (nthcdr (truncate (1- (list-length x)) 2) x) v))\n    v) *→* SET-MIDDLEGUY\n (defsetf middleguy set-middleguy) *→* MIDDLEGUY\n (setq a (list 'a 'b 'c 'd)\n       b (list 'x)\n       c (list 1 2 3 (list 4 5 6) 7 8 9)) *→* (1 2 3 (4 5 6) 7 8 9)\n (setf (middleguy a) 3) *→* 3\n (setf (middleguy b) 7) *→* 7\n (setf (middleguy (middleguy c)) 'middleguy-symbol) *→* MIDDLEGUY-SYMBOL\n a *→* (A 3 C D)\n b *→* (7)\n c *→* (1 2 3 (4 MIDDLEGUY-SYMBOL 6) 7 8 9)\n\\endcode","\\(defun[\\n\\s]*middleguy[\\n\\s]*\\(x\\)[\\n\\s]*\\(nth[\\n\\s]*\\(truncate[\\n\\s]*\\(1-[\\n\\s]*\\(list-length[\\n\\s]*x\\)\\)[\\n\\s]*2\\)[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MIDDLEGUY[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*set-middleguy[\\n\\s]*\\(x[\\n\\s]*v\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(null[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rplaca[\\n\\s]*\\(nthcdr[\\n\\s]*\\(truncate[\\n\\s]*\\(1-[\\n\\s]*\\(list-length[\\n\\s]*x\\)\\)[\\n\\s]*2\\)[\\n\\s]*x\\)[\\n\\s]*v\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*v\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SET-MIDDLEGUY[\\n\\s]*[\\n\\s]*\\(defsetf[\\n\\s]*middleguy[\\n\\s]*set-middleguy\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MIDDLEGUY[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\(list[\\n\\s]*'x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(list[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(middleguy[\\n\\s]*a\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(middleguy[\\n\\s]*b\\)[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(middleguy[\\n\\s]*\\(middleguy[\\n\\s]*c\\)\\)[\\n\\s]*'middleguy-symbol\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MIDDLEGUY-SYMBOL[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*3[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(7\\)[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(4[\\n\\s]*MIDDLEGUY-SYMBOL[\\n\\s]*6\\)[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)"],["\\code\n (defsetf subseq (sequence start &optional end) (new-sequence)\n   `(progn (replace ,sequence ,new-sequence\n                    :start1 ,start :end1 ,end)\n           ,new-sequence)) *→* SUBSEQ\n\\endcode","\\(defsetf[\\n\\s]*subseq[\\n\\s]*\\(sequence[\\n\\s]*start[\\n\\s]*&optional[\\n\\s]*end\\)[\\n\\s]*\\(new-sequence\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(progn[\\n\\s]*\\(replace[\\n\\s]*,sequence[\\n\\s]*,new-sequence[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:start1[\\n\\s]*,start[\\n\\s]*:end1[\\n\\s]*,end\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,new-sequence\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SUBSEQ"],["\\code\n (defvar *xy* (make-array '(10 10)))\n (defun xy (&key ((x x) 0) ((y y) 0)) (aref *xy* x y)) *→* XY\n (defun set-xy (new-value &key ((x x) 0) ((y y) 0))\n   (setf (aref *xy* x y) new-value)) *→* SET-XY\n (defsetf xy (&key ((x x) 0) ((y y) 0)) (store)\n   `(set-xy ,store 'x ,x 'y ,y)) *→* XY\n (get-setf-expansion '(xy a b))\n*→* (#:t0 #:t1),\n   (a b),\n   (#:store),\n   ((lambda (&key ((x #:x)) ((y #:y))) \n      (set-xy #:store 'x #:x 'y #:y))\n    #:t0 #:t1),\n   (xy #:t0 #:t1)\n (xy 'x 1) *→* NIL\n (setf (xy 'x 1) 1) *→* 1\n (xy 'x 1) *→* 1\n (let ((a 'x) (b 'y))\n   (setf (xy a 1 b 2) 3)\n   (setf (xy b 5 a 9) 14))\n*→* 14\n (xy 'y 0 'x 1) *→* 1\n (xy 'x 1 'y 2) *→* 3\n\\endcode","\\(defvar[\\n\\s]*\\*xy\\*[\\n\\s]*\\(make-array[\\n\\s]*'\\(10[\\n\\s]*10\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*xy[\\n\\s]*\\(&key[\\n\\s]*\\(\\(x[\\n\\s]*x\\)[\\n\\s]*0\\)[\\n\\s]*\\(\\(y[\\n\\s]*y\\)[\\n\\s]*0\\)\\)[\\n\\s]*\\(aref[\\n\\s]*\\*xy\\*[\\n\\s]*x[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*XY[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*set-xy[\\n\\s]*\\(new-value[\\n\\s]*&key[\\n\\s]*\\(\\(x[\\n\\s]*x\\)[\\n\\s]*0\\)[\\n\\s]*\\(\\(y[\\n\\s]*y\\)[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*\\*xy\\*[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*new-value\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SET-XY[\\n\\s]*[\\n\\s]*\\(defsetf[\\n\\s]*xy[\\n\\s]*\\(&key[\\n\\s]*\\(\\(x[\\n\\s]*x\\)[\\n\\s]*0\\)[\\n\\s]*\\(\\(y[\\n\\s]*y\\)[\\n\\s]*0\\)\\)[\\n\\s]*\\(store\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(set-xy[\\n\\s]*,store[\\n\\s]*'x[\\n\\s]*,x[\\n\\s]*'y[\\n\\s]*,y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*XY[\\n\\s]*[\\n\\s]*\\(get-setf-expansion[\\n\\s]*'\\(xy[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#:t0[\\n\\s]*#:t1\\),[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*b\\),[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#:store\\),[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(lambda[\\n\\s]*\\(&key[\\n\\s]*\\(\\(x[\\n\\s]*#:x\\)\\)[\\n\\s]*\\(\\(y[\\n\\s]*#:y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-xy[\\n\\s]*#:store[\\n\\s]*'x[\\n\\s]*#:x[\\n\\s]*'y[\\n\\s]*#:y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#:t0[\\n\\s]*#:t1\\),[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(xy[\\n\\s]*#:t0[\\n\\s]*#:t1\\)[\\n\\s]*[\\n\\s]*\\(xy[\\n\\s]*'x[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(xy[\\n\\s]*'x[\\n\\s]*1\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(xy[\\n\\s]*'x[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*'x\\)[\\n\\s]*\\(b[\\n\\s]*'y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(xy[\\n\\s]*a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(xy[\\n\\s]*b[\\n\\s]*5[\\n\\s]*a[\\n\\s]*9\\)[\\n\\s]*14\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*14[\\n\\s]*[\\n\\s]*\\(xy[\\n\\s]*'y[\\n\\s]*0[\\n\\s]*'x[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(xy[\\n\\s]*'x[\\n\\s]*1[\\n\\s]*'y[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (defun lastguy (x) (car (last x))) *→* LASTGUY\n (define-setf-expander lastguy (x &environment env)\n   \"Set the last element in a list to the given value.\"\n   (multiple-value-bind (dummies vals newval setter getter)\n       (get-setf-expansion x env)\n     (let ((store (gensym)))\n       (values dummies\n               vals\n               `(,store)\n               `(progn (rplaca (last ,getter) ,store) ,store)\n               `(lastguy ,getter))))) *→* LASTGUY\n (setq a (list 'a 'b 'c 'd)\n       b (list 'x)\n       c (list 1 2 3 (list 4 5 6))) *→* (1 2 3 (4 5 6))\n (setf (lastguy a) 3) *→* 3\n (setf (lastguy b) 7) *→* 7\n (setf (lastguy (lastguy c)) 'lastguy-symbol) *→* LASTGUY-SYMBOL\n a *→* (A B C 3)\n b *→* (7)\n c *→* (1 2 3 (4 5 LASTGUY-SYMBOL))\n\\endcode","\\(defun[\\n\\s]*lastguy[\\n\\s]*\\(x\\)[\\n\\s]*\\(car[\\n\\s]*\\(last[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*LASTGUY[\\n\\s]*[\\n\\s]*\\(define-setf-expander[\\n\\s]*lastguy[\\n\\s]*\\(x[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Set[\\n\\s]*the[\\n\\s]*last[\\n\\s]*element[\\n\\s]*in[\\n\\s]*a[\\n\\s]*list[\\n\\s]*to[\\n\\s]*the[\\n\\s]*given[\\n\\s]*value\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(dummies[\\n\\s]*vals[\\n\\s]*newval[\\n\\s]*setter[\\n\\s]*getter\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(get-setf-expansion[\\n\\s]*x[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(store[\\n\\s]*\\(gensym\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*dummies[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*vals[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(,store\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(progn[\\n\\s]*\\(rplaca[\\n\\s]*\\(last[\\n\\s]*,getter\\)[\\n\\s]*,store\\)[\\n\\s]*,store\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(lastguy[\\n\\s]*,getter\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*LASTGUY[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\(list[\\n\\s]*'x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(list[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(lastguy[\\n\\s]*a\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(lastguy[\\n\\s]*b\\)[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(lastguy[\\n\\s]*\\(lastguy[\\n\\s]*c\\)\\)[\\n\\s]*'lastguy-symbol\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*LASTGUY-SYMBOL[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(7\\)[\\n\\s]*[\\n\\s]*c[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*LASTGUY-SYMBOL\\)\\)"],["\\code\n;;; Setf expander for the form (LDB bytespec int).\n;;; Recall that the int form must itself be suitable for SETF.\n (define-setf-expander ldb (bytespec int &environment env)\n   (multiple-value-bind (temps vals stores\n                          store-form access-form)\n       (get-setf-expansion int env);Get setf expansion for int.\n     (let ((btemp (gensym))     ;Temp var for byte specifier.\n           (store (gensym))     ;Temp var for byte to store.\n           (stemp (first stores))) ;Temp var for int to store.\n       (if (cdr stores) (error \"Can't expand this.\"))\n;;; Return the setf expansion for LDB as five values.\n       (values (cons btemp temps)       ;Temporary variables.\n               (cons bytespec vals)     ;Value forms.\n               (list store)             ;Store variables.\n               \\bq(let ((,stemp (dpb ,store ,btemp ,access-form)))\n                  ,store-form\n                  ,store)               ;Storing form.\n               \\bq(ldb ,btemp ,access-form) ;Accessing form.\n              ))))\n\\endcode",";;;[\\n\\s]*Setf[\\n\\s]*expander[\\n\\s]*for[\\n\\s]*the[\\n\\s]*form[\\n\\s]*\\(LDB[\\n\\s]*bytespec[\\n\\s]*int\\)\\.[\\n\\s]*;;;[\\n\\s]*Recall[\\n\\s]*that[\\n\\s]*the[\\n\\s]*int[\\n\\s]*form[\\n\\s]*must[\\n\\s]*itself[\\n\\s]*be[\\n\\s]*suitable[\\n\\s]*for[\\n\\s]*SETF\\.[\\n\\s]*[\\n\\s]*\\(define-setf-expander[\\n\\s]*ldb[\\n\\s]*\\(bytespec[\\n\\s]*int[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(temps[\\n\\s]*vals[\\n\\s]*stores[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*store-form[\\n\\s]*access-form\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(get-setf-expansion[\\n\\s]*int[\\n\\s]*env\\);Get[\\n\\s]*setf[\\n\\s]*expansion[\\n\\s]*for[\\n\\s]*int\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(btemp[\\n\\s]*\\(gensym\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Temp[\\n\\s]*var[\\n\\s]*for[\\n\\s]*byte[\\n\\s]*specifier\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(store[\\n\\s]*\\(gensym\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Temp[\\n\\s]*var[\\n\\s]*for[\\n\\s]*byte[\\n\\s]*to[\\n\\s]*store\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(stemp[\\n\\s]*\\(first[\\n\\s]*stores\\)\\)\\)[\\n\\s]*;Temp[\\n\\s]*var[\\n\\s]*for[\\n\\s]*int[\\n\\s]*to[\\n\\s]*store\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(cdr[\\n\\s]*stores\\)[\\n\\s]*\\(error[\\n\\s]*\"Can't[\\n\\s]*expand[\\n\\s]*this\\.\"\\)\\)[\\n\\s]*;;;[\\n\\s]*Return[\\n\\s]*the[\\n\\s]*setf[\\n\\s]*expansion[\\n\\s]*for[\\n\\s]*LDB[\\n\\s]*as[\\n\\s]*five[\\n\\s]*values\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(cons[\\n\\s]*btemp[\\n\\s]*temps\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Temporary[\\n\\s]*variables\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*bytespec[\\n\\s]*vals\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Value[\\n\\s]*forms\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*store\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Store[\\n\\s]*variables\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\bq\\(let[\\n\\s]*\\(\\(,stemp[\\n\\s]*\\(dpb[\\n\\s]*,store[\\n\\s]*,btemp[\\n\\s]*,access-form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,store-form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,store\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Storing[\\n\\s]*form\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\bq\\(ldb[\\n\\s]*,btemp[\\n\\s]*,access-form\\)[\\n\\s]*;Accessing[\\n\\s]*form\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)\\)\\)\\)"],["\\code\n (get-setf-expansion 'x)\n*→* NIL, NIL, (#:G0001), (SETQ X #:G0001), X \n\\endcode","\\(get-setf-expansion[\\n\\s]*'x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL,[\\n\\s]*\\(#:G0001\\),[\\n\\s]*\\(SETQ[\\n\\s]*X[\\n\\s]*#:G0001\\),[\\n\\s]*X"],["\\code\n%  (define-setf-expander multivalue (x)\n%      (values '() '() `(,(gensym) ,(gensym)) `(setq ,x 3) '4))\n% *→* MULTIVALUE\n%  (get-setf-expansion '(multivalue dummy-symbol))\n% *→* NIL, NIL, (#:G0002 #:G0003), (SETQ DUMMY-SYMBOL 3), 4\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(define-setf-expander[\\n\\s]*multivalue[\\n\\s]*\\(x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*'\\(\\)[\\n\\s]*'\\(\\)[\\n\\s]*`\\(,\\(gensym\\)[\\n\\s]*,\\(gensym\\)\\)[\\n\\s]*`\\(setq[\\n\\s]*,x[\\n\\s]*3\\)[\\n\\s]*'4\\)\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*MULTIVALUE[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(get-setf-expansion[\\n\\s]*'\\(multivalue[\\n\\s]*dummy-symbol\\)\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL,[\\n\\s]*\\(#:G0002[\\n\\s]*#:G0003\\),[\\n\\s]*\\(SETQ[\\n\\s]*DUMMY-SYMBOL[\\n\\s]*3\\),[\\n\\s]*4[\\n\\s]*%"],["\\code\n;;; This macro is like POP \n\n (defmacro xpop (place &environment env)\n   (multiple-value-bind (dummies vals new setter getter)\n                        (get-setf-expansion place env)\n      `(let* (,@(mapcar #'list dummies vals) (,(car new) ,getter))\n         (if (cdr new) (error \"Can't expand this.\"))\n         (prog1 (car ,(car new))\n                (setq ,(car new) (cdr ,(car new)))\n                ,setter))))\n \n (defsetf frob (x) (value) \n     `(setf (car ,x) ,value)) *→* FROB\n;;; The following is an error; an error might be signaled at macro expansion time\n (flet ((frob (x) (cdr x)))  ;Invalid\n   (xpop (frob z)))\n \n\\endcode",";;;[\\n\\s]*This[\\n\\s]*macro[\\n\\s]*is[\\n\\s]*like[\\n\\s]*POP[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*xpop[\\n\\s]*\\(place[\\n\\s]*&environment[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(dummies[\\n\\s]*vals[\\n\\s]*new[\\n\\s]*setter[\\n\\s]*getter\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(get-setf-expansion[\\n\\s]*place[\\n\\s]*env\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(let\\*[\\n\\s]*\\(,@\\(mapcar[\\n\\s]*#'list[\\n\\s]*dummies[\\n\\s]*vals\\)[\\n\\s]*\\(,\\(car[\\n\\s]*new\\)[\\n\\s]*,getter\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(cdr[\\n\\s]*new\\)[\\n\\s]*\\(error[\\n\\s]*\"Can't[\\n\\s]*expand[\\n\\s]*this\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*\\(car[\\n\\s]*,\\(car[\\n\\s]*new\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*,\\(car[\\n\\s]*new\\)[\\n\\s]*\\(cdr[\\n\\s]*,\\(car[\\n\\s]*new\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,setter\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defsetf[\\n\\s]*frob[\\n\\s]*\\(x\\)[\\n\\s]*\\(value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(setf[\\n\\s]*\\(car[\\n\\s]*,x\\)[\\n\\s]*,value\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FROB[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*following[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error;[\\n\\s]*an[\\n\\s]*error[\\n\\s]*might[\\n\\s]*be[\\n\\s]*signaled[\\n\\s]*at[\\n\\s]*macro[\\n\\s]*expansion[\\n\\s]*time[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(frob[\\n\\s]*\\(x\\)[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*;Invalid[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(xpop[\\n\\s]*\\(frob[\\n\\s]*z\\)\\)\\)"],["\\code\n% (defmacro setf (reference value)\n%   (multiple-value-bind (vars vals stores store-form access-form)\n%       (get-setf-expansion reference)\n%     (declare (ignore access-form))\n%     \\bq(let* ,(mapcar #'list\n%                    (append vars stores)\n%                    (append vals (list value)))\n%        ,store-form)))\n%\\endcode","%[\\n\\s]*\\(defmacro[\\n\\s]*setf[\\n\\s]*\\(reference[\\n\\s]*value\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(vars[\\n\\s]*vals[\\n\\s]*stores[\\n\\s]*store-form[\\n\\s]*access-form\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(get-setf-expansion[\\n\\s]*reference\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*access-form\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\bq\\(let\\*[\\n\\s]*,\\(mapcar[\\n\\s]*#'list[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*vars[\\n\\s]*stores\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*vals[\\n\\s]*\\(list[\\n\\s]*value\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,store-form\\)\\)\\)[\\n\\s]*%"],["\\code\n (setf place-1 newvalue-1\n       place-2 newvalue-2\n       ...\n       place-N newvalue-N)\n\\endcode","\\(setf[\\n\\s]*place-1[\\n\\s]*newvalue-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*place-2[\\n\\s]*newvalue-2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*place-N[\\n\\s]*newvalue-N\\)"],["\\code\n (progn (setf place-1 newvalue-1)\n        (setf place-2 newvalue-2)\n        ...\n        (setf place-N newvalue-N))\n\\endcode","\\(progn[\\n\\s]*\\(setf[\\n\\s]*place-1[\\n\\s]*newvalue-1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*place-2[\\n\\s]*newvalue-2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*place-N[\\n\\s]*newvalue-N\\)\\)"],["\\code\n (setq x (cons 'a 'b) y (list 1 2 3)) *→* (1 2 3) \n (setf (car x) 'x (cadr y) (car x) (cdr x) y) *→* (1 X 3) \n x *→* (X 1 X 3) \n y *→* (1 X 3) \n (setq x (cons 'a 'b) y (list 1 2 3)) *→* (1 2 3) \n (psetf (car x) 'x (cadr y) (car x) (cdr x) y) *→* NIL \n x *→* (X 1 A 3) \n y *→* (1 A 3) \n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*y[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'x[\\n\\s]*\\(cadr[\\n\\s]*y\\)[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*\\(cdr[\\n\\s]*x\\)[\\n\\s]*y\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*X[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(X[\\n\\s]*1[\\n\\s]*X[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*y[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*X[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(cons[\\n\\s]*'a[\\n\\s]*'b\\)[\\n\\s]*y[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(psetf[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'x[\\n\\s]*\\(cadr[\\n\\s]*y\\)[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*\\(cdr[\\n\\s]*x\\)[\\n\\s]*y\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(X[\\n\\s]*1[\\n\\s]*A[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*y[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*A[\\n\\s]*3\\)"],["\\code\n (setq x (list 1 2 3) y 'trash) *→* TRASH\n (shiftf y x (cdr x) '(hi there)) *→* TRASH\n x *→* (2 3)\n y *→* (1 HI THERE)\n\n (setq x (list 'a 'b 'c)) *→* (A B C)\n (shiftf (cadr x) 'z) *→* B\n x *→* (A Z C)\n (shiftf (cadr x) (cddr x) 'q) *→* Z\n x *→* (A (C) . Q)\n (setq n 0) *→* 0\n (setq x (list 'a 'b 'c 'd)) *→* (A B C D)\n (shiftf (nth (setq n (+ n 1)) x) 'z) *→* B\n x *→* (A Z C D)\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*y[\\n\\s]*'trash\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TRASH[\\n\\s]*[\\n\\s]*\\(shiftf[\\n\\s]*y[\\n\\s]*x[\\n\\s]*\\(cdr[\\n\\s]*x\\)[\\n\\s]*'\\(hi[\\n\\s]*there\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TRASH[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*y[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*HI[\\n\\s]*THERE\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(shiftf[\\n\\s]*\\(cadr[\\n\\s]*x\\)[\\n\\s]*'z\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*Z[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(shiftf[\\n\\s]*\\(cadr[\\n\\s]*x\\)[\\n\\s]*\\(cddr[\\n\\s]*x\\)[\\n\\s]*'q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*Z[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\(C\\)[\\n\\s]*\\.[\\n\\s]*Q\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(shiftf[\\n\\s]*\\(nth[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*x\\)[\\n\\s]*'z\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*Z[\\n\\s]*C[\\n\\s]*D\\)"],["\\code\n (let ((var1 \\param&#123;place1&#125;)\n       (var2 \\param&#123;place2&#125;)\n       ...\n       (varn \\param&#123;placen&#125;)\n       (var0 \\param&#123;newvalue&#125;))\n   (setf \\param&#123;place1&#125; var2)\n   (setf \\param&#123;place2&#125; var3)\n   ...\n   (setf \\param&#123;placen&#125; var0)\n   var1)\n\\endcode","\\(let[\\n\\s]*\\(\\(var1[\\n\\s]*\\\\param&#123;place1&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(var2[\\n\\s]*\\\\param&#123;place2&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(varn[\\n\\s]*\\\\param&#123;placen&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(var0[\\n\\s]*\\\\param&#123;newvalue&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\\\param&#123;place1&#125;[\\n\\s]*var2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\\\param&#123;place2&#125;[\\n\\s]*var3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\\\param&#123;placen&#125;[\\n\\s]*var0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*var1\\)"],["\\code\n (setq n 0) *→* 0\n (setq x (list 'a 'b 'c 'd)) *→* (A B C D)\n (prog1 (nth (setq n (+ n 1)) x)\n        (setf (nth (setq n (+ n 1)) x) 'z)) *→* B\n x *→* (A B Z D)\n\\endcode","\\(setq[\\n\\s]*n[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D\\)[\\n\\s]*[\\n\\s]*\\(prog1[\\n\\s]*\\(nth[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(nth[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*x\\)[\\n\\s]*'z\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*Z[\\n\\s]*D\\)"],["\\code\n (let ((n 0)\n        (x (list 'a 'b 'c 'd 'e 'f 'g)))\n    (rotatef (nth (incf n) x)\n             (nth (incf n) x)\n             (nth (incf n) x))\n    x) *→* (A C D B E F G)\n\\endcode","\\(let[\\n\\s]*\\(\\(n[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d[\\n\\s]*'e[\\n\\s]*'f[\\n\\s]*'g\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rotatef[\\n\\s]*\\(nth[\\n\\s]*\\(incf[\\n\\s]*n\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nth[\\n\\s]*\\(incf[\\n\\s]*n\\)[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nth[\\n\\s]*\\(incf[\\n\\s]*n\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*C[\\n\\s]*D[\\n\\s]*B[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G\\)"],["\\code\n (psetf \\param&#123;place1&#125; \\param&#123;place2&#125;\n        \\param&#123;place2&#125; \\param&#123;place3&#125;\n        ...\n        \\param&#123;placen&#125; \\param&#123;place1&#125;)\n\\endcode","\\(psetf[\\n\\s]*\\\\param&#123;place1&#125;[\\n\\s]*\\\\param&#123;place2&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;place2&#125;[\\n\\s]*\\\\param&#123;place3&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;placen&#125;[\\n\\s]*\\\\param&#123;place1&#125;\\)"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 46142754&#62;\n (setf (gethash \"one\" table) 1) *→* 1\n (gethash \"one\" table) *→* NIL, false\n (setq table (make-hash-table :test 'equal)) *→* #&#60;HASH-TABLE EQUAL 0/139 46145547&#62;\n (setf (gethash \"one\" table) 1) *→* 1\n (gethash \"one\" table) *→* 1, T\n (make-hash-table :rehash-size 1.5 :rehash-threshold 0.7) \n*→* #&#60;HASH-TABLE EQL 0/120 46156620&#62;\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*46142754&#62;[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*\"one\"[\\n\\s]*table\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*\"one\"[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table[\\n\\s]*:test[\\n\\s]*'equal\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQUAL[\\n\\s]*0/139[\\n\\s]*46145547&#62;[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*\"one\"[\\n\\s]*table\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*\"one\"[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(make-hash-table[\\n\\s]*:rehash-size[\\n\\s]*1\\.5[\\n\\s]*:rehash-threshold[\\n\\s]*0\\.7\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*46156620&#62;"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32511220&#62;\n (hash-table-p table) *→ true*\n (hash-table-p 37) *→ false*\n (hash-table-p '((a . 1) (b . 2))) *→ false*\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32511220&#62;[\\n\\s]*[\\n\\s]*\\(hash-table-p[\\n\\s]*table\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(hash-table-p[\\n\\s]*37\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(hash-table-p[\\n\\s]*'\\(\\(a[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*\\.[\\n\\s]*2\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (hash-table-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'hash-table)\n\\endcode","\\(hash-table-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'hash-table\\)"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32115135&#62;\n (hash-table-count table) *→* 0\n (setf (gethash 57 table) \"fifty-seven\") *→* \"fifty-seven\"\n (hash-table-count table) *→* 1\n (dotimes (i 100) (setf (gethash i table) i)) *→* NIL\n (hash-table-count table) *→* 100\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32115135&#62;[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*57[\\n\\s]*table\\)[\\n\\s]*\"fifty-seven\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"fifty-seven\"[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*100\\)[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*i[\\n\\s]*table\\)[\\n\\s]*i\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*100"],["\\code\n (hash-table-count \\param&#123;table&#125;) \\EQ\n (loop for value being the hash-values of \\param&#123;table&#125; count t) \\EQ\n (let ((total 0))\n   (maphash #'(lambda (key value)\n                (declare (ignore key value))\n                (incf total))\n            \\param&#123;table&#125;)\n   total)\n\\endcode","\\(hash-table-count[\\n\\s]*\\\\param&#123;table&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*value[\\n\\s]*being[\\n\\s]*the[\\n\\s]*hash-values[\\n\\s]*of[\\n\\s]*\\\\param&#123;table&#125;[\\n\\s]*count[\\n\\s]*t\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(total[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(maphash[\\n\\s]*#'\\(lambda[\\n\\s]*\\(key[\\n\\s]*value\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*key[\\n\\s]*value\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*total\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\param&#123;table&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*total\\)"],["\\code\n (setq table (make-hash-table :size 100 :rehash-size 1.4))\n*→* #&#60;HASH-TABLE EQL 0/100 2556371&#62;\n (hash-table-rehash-size table) *→* 1.4\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table[\\n\\s]*:size[\\n\\s]*100[\\n\\s]*:rehash-size[\\n\\s]*1\\.4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/100[\\n\\s]*2556371&#62;[\\n\\s]*[\\n\\s]*\\(hash-table-rehash-size[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.4"],["\\code\n (setq table (make-hash-table :size 100 :rehash-threshold 0.5))\n*→* #&#60;HASH-TABLE EQL 0/100 2562446&#62;\n (hash-table-rehash-threshold table) *→* 0.5\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table[\\n\\s]*:size[\\n\\s]*100[\\n\\s]*:rehash-threshold[\\n\\s]*0\\.5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/100[\\n\\s]*2562446&#62;[\\n\\s]*[\\n\\s]*\\(hash-table-rehash-threshold[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.5"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32206334&#62;\n (gethash 1 table) *→* NIL, false\n (gethash 1 table 2) *→* 2, false\n (setf (gethash 1 table) \"one\") *→* \"one\"\n (setf (gethash 2 table \"two\") \"two\") *→* \"two\"\n (gethash 1 table) *→* \"one\", true\n (gethash 2 table) *→* \"two\", true\n (gethash nil table) *→* NIL, false\n (setf (gethash nil table) nil) *→* NIL \n (gethash nil table) *→* NIL, true\n (defvar *counters* (make-hash-table)) *→* *COUNTERS*\n (gethash 'foo *counters*) *→* NIL, false\n (gethash 'foo *counters* 0) *→* 0, false\n (defmacro how-many (obj) `(values (gethash ,obj *counters* 0))) *→* HOW-MANY\n (defun count-it (obj) (incf (how-many obj))) *→* COUNT-IT\n (dolist (x '(bar foo foo bar bar baz)) (count-it x))\n (how-many 'foo) *→* 2\n (how-many 'bar) *→* 3\n (how-many 'quux) *→* 0\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32206334&#62;[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*1[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*1[\\n\\s]*table[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*1[\\n\\s]*table\\)[\\n\\s]*\"one\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"one\"[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*2[\\n\\s]*table[\\n\\s]*\"two\"\\)[\\n\\s]*\"two\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"two\"[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*1[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"one\",[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*2[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"two\",[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*nil[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*nil[\\n\\s]*table\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*nil[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*counters\\*[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*COUNTERS\\*[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*'foo[\\n\\s]*\\*counters\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*'foo[\\n\\s]*\\*counters\\*[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*how-many[\\n\\s]*\\(obj\\)[\\n\\s]*`\\(values[\\n\\s]*\\(gethash[\\n\\s]*,obj[\\n\\s]*\\*counters\\*[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*HOW-MANY[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*count-it[\\n\\s]*\\(obj\\)[\\n\\s]*\\(incf[\\n\\s]*\\(how-many[\\n\\s]*obj\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*COUNT-IT[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(x[\\n\\s]*'\\(bar[\\n\\s]*foo[\\n\\s]*foo[\\n\\s]*bar[\\n\\s]*bar[\\n\\s]*baz\\)\\)[\\n\\s]*\\(count-it[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*\\(how-many[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(how-many[\\n\\s]*'bar\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(how-many[\\n\\s]*'quux\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32115666&#62;\n (setf (gethash 100 table) \"C\") *→* \"C\"\n (gethash 100 table) *→* \"C\", true\n (remhash 100 table) *→ true*\n (gethash 100 table) *→* NIL, false\n (remhash 100 table) *→ false*\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32115666&#62;[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*100[\\n\\s]*table\\)[\\n\\s]*\"C\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"C\"[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*100[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"C\",[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(remhash[\\n\\s]*100[\\n\\s]*table\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*100[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(remhash[\\n\\s]*100[\\n\\s]*table\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32304110&#62;\n (dotimes (i 10) (setf (gethash i table) i)) *→* NIL\n (let ((sum-of-squares 0))\n    (maphash #'(lambda (key val) \n                 (let ((square (* val val)))\n                   (incf sum-of-squares square)\n                   (setf (gethash key table) square)))\n             table)\n    sum-of-squares) *→* 285\n (hash-table-count table) *→* 10\n (maphash #'(lambda (key val)\n               (when (oddp val) (remhash key table)))\n           table) *→* NIL\n (hash-table-count table) *→* 5\n (maphash #'(lambda (k v) (print (list k v))) table)\n(0 0) \n(8 64) \n(2 4) \n(6 36) \n(4 16) \n*→* NIL\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32304110&#62;[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*10\\)[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*i[\\n\\s]*table\\)[\\n\\s]*i\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(sum-of-squares[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(maphash[\\n\\s]*#'\\(lambda[\\n\\s]*\\(key[\\n\\s]*val\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(square[\\n\\s]*\\(\\*[\\n\\s]*val[\\n\\s]*val\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*sum-of-squares[\\n\\s]*square\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*key[\\n\\s]*table\\)[\\n\\s]*square\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*table\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*sum-of-squares\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*285[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(maphash[\\n\\s]*#'\\(lambda[\\n\\s]*\\(key[\\n\\s]*val\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(oddp[\\n\\s]*val\\)[\\n\\s]*\\(remhash[\\n\\s]*key[\\n\\s]*table\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(maphash[\\n\\s]*#'\\(lambda[\\n\\s]*\\(k[\\n\\s]*v\\)[\\n\\s]*\\(print[\\n\\s]*\\(list[\\n\\s]*k[\\n\\s]*v\\)\\)\\)[\\n\\s]*table\\)[\\n\\s]*\\(0[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(8[\\n\\s]*64\\)[\\n\\s]*[\\n\\s]*\\(2[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(6[\\n\\s]*36\\)[\\n\\s]*[\\n\\s]*\\(4[\\n\\s]*16\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defun test-hash-table-iterator (hash-table)\n   (let ((all-entries '())\n         (generated-entries '())\n         (unique (list nil)))\n     (maphash #'(lambda (key value) (push (list key value) all-entries))\n              hash-table)\n     (with-hash-table-iterator (generator-fn hash-table)\n       (loop     \n         (multiple-value-bind (more? key value) (generator-fn)\n           (unless more? (return))\n           (unless (eql value (gethash key hash-table unique))\n             (error \"Key ~S not found for value ~S\" key value))\n           (push (list key value) generated-entries))))\n     (unless (= (length all-entries)\n                (length generated-entries)\n                (length (union all-entries generated-entries\n                               :key #'car :test (hash-table-test hash-table))))\n       (error \"Generated entries and Maphash entries don't correspond\"))\n     t))\n\\endcode","\\(defun[\\n\\s]*test-hash-table-iterator[\\n\\s]*\\(hash-table\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(all-entries[\\n\\s]*'\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(generated-entries[\\n\\s]*'\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unique[\\n\\s]*\\(list[\\n\\s]*nil\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(maphash[\\n\\s]*#'\\(lambda[\\n\\s]*\\(key[\\n\\s]*value\\)[\\n\\s]*\\(push[\\n\\s]*\\(list[\\n\\s]*key[\\n\\s]*value\\)[\\n\\s]*all-entries\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*hash-table\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-hash-table-iterator[\\n\\s]*\\(generator-fn[\\n\\s]*hash-table\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(more\\?[\\n\\s]*key[\\n\\s]*value\\)[\\n\\s]*\\(generator-fn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*more\\?[\\n\\s]*\\(return\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(eql[\\n\\s]*value[\\n\\s]*\\(gethash[\\n\\s]*key[\\n\\s]*hash-table[\\n\\s]*unique\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Key[\\n\\s]*~S[\\n\\s]*not[\\n\\s]*found[\\n\\s]*for[\\n\\s]*value[\\n\\s]*~S\"[\\n\\s]*key[\\n\\s]*value\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(list[\\n\\s]*key[\\n\\s]*value\\)[\\n\\s]*generated-entries\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(=[\\n\\s]*\\(length[\\n\\s]*all-entries\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*generated-entries\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*\\(union[\\n\\s]*all-entries[\\n\\s]*generated-entries[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'car[\\n\\s]*:test[\\n\\s]*\\(hash-table-test[\\n\\s]*hash-table\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Generated[\\n\\s]*entries[\\n\\s]*and[\\n\\s]*Maphash[\\n\\s]*entries[\\n\\s]*don't[\\n\\s]*correspond\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*t\\)\\)"],["\\code\n (defun maphash (function hash-table)\n   (with-hash-table-iterator (next-entry hash-table)\n     (loop (multiple-value-bind (more key value) (next-entry)\n             (unless more (return nil))\n             (funcall function key value)))))\n\\endcode","\\(defun[\\n\\s]*maphash[\\n\\s]*\\(function[\\n\\s]*hash-table\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-hash-table-iterator[\\n\\s]*\\(next-entry[\\n\\s]*hash-table\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(more[\\n\\s]*key[\\n\\s]*value\\)[\\n\\s]*\\(next-entry\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*more[\\n\\s]*\\(return[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*function[\\n\\s]*key[\\n\\s]*value\\)\\)\\)\\)\\)"],["\\code\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32004073&#62;\n (dotimes (i 100) (setf (gethash i table) (format nil \"~R\" i))) *→* NIL\n (hash-table-count table) *→* 100\n (gethash 57 table) *→* \"fifty-seven\", true\n (clrhash table) *→* #&#60;HASH-TABLE EQL 0/120 32004073&#62;\n (hash-table-count table) *→* 0\n (gethash 57 table) *→* NIL, false\n\\endcode","\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32004073&#62;[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*100\\)[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*i[\\n\\s]*table\\)[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~R\"[\\n\\s]*i\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*100[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*57[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"fifty-seven\",[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(clrhash[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32004073&#62;[\\n\\s]*[\\n\\s]*\\(hash-table-count[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(gethash[\\n\\s]*57[\\n\\s]*table\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false"],["\\code\n (= (sxhash (list 'list \"ab\")) (sxhash (list 'list \"ab\"))) *→ true*\n (= (sxhash \"a\") (sxhash (make-string 1 :initial-element #\\\\a))) *→ true*\n (let ((r (make-random-state)))\n   (= (sxhash r) (sxhash (make-random-state r))))\n*→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(=[\\n\\s]*\\(sxhash[\\n\\s]*\\(list[\\n\\s]*'list[\\n\\s]*\"ab\"\\)\\)[\\n\\s]*\\(sxhash[\\n\\s]*\\(list[\\n\\s]*'list[\\n\\s]*\"ab\"\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(=[\\n\\s]*\\(sxhash[\\n\\s]*\"a\"\\)[\\n\\s]*\\(sxhash[\\n\\s]*\\(make-string[\\n\\s]*1[\\n\\s]*:initial-element[\\n\\s]*#\\\\\\\\a\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(r[\\n\\s]*\\(make-random-state\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(=[\\n\\s]*\\(sxhash[\\n\\s]*r\\)[\\n\\s]*\\(sxhash[\\n\\s]*\\(make-random-state[\\n\\s]*r\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (do ((temp-one 1 (1+ temp-one))\n       (temp-two 0 (1- temp-two)))\n      ((&#62; (- temp-one temp-two) 5) temp-one)) *→* 4\n\n (do ((temp-one 1 (1+ temp-one))\n       (temp-two 0 (1+ temp-one)))     \n      ((= 3 temp-two) temp-one)) *→* 3\n\n (do* ((temp-one 1 (1+ temp-one))\n        (temp-two 0 (1+ temp-one)))\n       ((= 3 temp-two) temp-one)) *→* 2                     \n\n (do ((j 0 (+ j 1)))\n     (nil)                       ;Do forever.\n   (format t \"~%Input ~D:\" j)\n   (let ((item (read)))\n     (if (null item) (return)   ;Process items until NIL seen.\n         (format t \"~&Output ~D: ~S\" j item))))\n\\OUT Input 0: \\IN&#123;banana&#125;\n\\OUT Output 0: BANANA\n\\OUT Input 1: \\IN&#123;(57 boxes)&#125;\n\\OUT Output 1: (57 BOXES)\n\\OUT Input 2: \\IN&#123;NIL&#125;\n*→* NIL\n\n (setq a-vector (vector 1 nil 3 nil))\n (do ((i 0 (+ i 1))     ;Sets every null element of a-vector to zero.\n      (n (array-dimension a-vector 0)))\n     ((= i n))\n   (when (null (aref a-vector i))\n     (setf (aref a-vector i) 0))) *→* NIL\na-vector *→* #(1 0 3 0)\n\\endcode","\\(do[\\n\\s]*\\(\\(temp-one[\\n\\s]*1[\\n\\s]*\\(1\\+[\\n\\s]*temp-one\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(temp-two[\\n\\s]*0[\\n\\s]*\\(1-[\\n\\s]*temp-two\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(&#62;[\\n\\s]*\\(-[\\n\\s]*temp-one[\\n\\s]*temp-two\\)[\\n\\s]*5\\)[\\n\\s]*temp-one\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(temp-one[\\n\\s]*1[\\n\\s]*\\(1\\+[\\n\\s]*temp-one\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(temp-two[\\n\\s]*0[\\n\\s]*\\(1\\+[\\n\\s]*temp-one\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*3[\\n\\s]*temp-two\\)[\\n\\s]*temp-one\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do\\*[\\n\\s]*\\(\\(temp-one[\\n\\s]*1[\\n\\s]*\\(1\\+[\\n\\s]*temp-one\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(temp-two[\\n\\s]*0[\\n\\s]*\\(1\\+[\\n\\s]*temp-one\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*3[\\n\\s]*temp-two\\)[\\n\\s]*temp-one\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(j[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*j[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Do[\\n\\s]*forever\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~%Input[\\n\\s]*~D:\"[\\n\\s]*j\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(item[\\n\\s]*\\(read\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(null[\\n\\s]*item\\)[\\n\\s]*\\(return\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Process[\\n\\s]*items[\\n\\s]*until[\\n\\s]*NIL[\\n\\s]*seen\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Output[\\n\\s]*~D:[\\n\\s]*~S\"[\\n\\s]*j[\\n\\s]*item\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Input[\\n\\s]*0:[\\n\\s]*\\\\IN&#123;banana&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Output[\\n\\s]*0:[\\n\\s]*BANANA[\\n\\s]*\\\\OUT[\\n\\s]*Input[\\n\\s]*1:[\\n\\s]*\\\\IN&#123;\\(57[\\n\\s]*boxes\\)&#125;[\\n\\s]*\\\\OUT[\\n\\s]*Output[\\n\\s]*1:[\\n\\s]*\\(57[\\n\\s]*BOXES\\)[\\n\\s]*\\\\OUT[\\n\\s]*Input[\\n\\s]*2:[\\n\\s]*\\\\IN&#123;NIL&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a-vector[\\n\\s]*\\(vector[\\n\\s]*1[\\n\\s]*nil[\\n\\s]*3[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(i[\\n\\s]*0[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Sets[\\n\\s]*every[\\n\\s]*null[\\n\\s]*element[\\n\\s]*of[\\n\\s]*a-vector[\\n\\s]*to[\\n\\s]*zero\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(n[\\n\\s]*\\(array-dimension[\\n\\s]*a-vector[\\n\\s]*0\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(=[\\n\\s]*i[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(null[\\n\\s]*\\(aref[\\n\\s]*a-vector[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(aref[\\n\\s]*a-vector[\\n\\s]*i\\)[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*a-vector[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(1[\\n\\s]*0[\\n\\s]*3[\\n\\s]*0\\)"],["\\code\n (do ((x e (cdr x))\n      (oldx x x))\n     ((null x))\n   body)\n\\endcode","\\(do[\\n\\s]*\\(\\(x[\\n\\s]*e[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(oldx[\\n\\s]*x[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*body\\)"],["\\code\n (do ((x foo (cdr x))\n      (y bar (cdr y))\n      (z '() (cons (f (car x) (car y)) z)))\n     ((or (null x) (null y))\n      (nreverse z)))\n\\endcode","\\(do[\\n\\s]*\\(\\(x[\\n\\s]*foo[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*bar[\\n\\s]*\\(cdr[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(z[\\n\\s]*'\\(\\)[\\n\\s]*\\(cons[\\n\\s]*\\(f[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*\\(car[\\n\\s]*y\\)\\)[\\n\\s]*z\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(or[\\n\\s]*\\(null[\\n\\s]*x\\)[\\n\\s]*\\(null[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nreverse[\\n\\s]*z\\)\\)\\)"],["\\code\n (defun list-reverse (list)\n        (do ((x list (cdr x))\n             (y '() (cons (car x) y)))\n            ((endp x) y)))\n\\endcode","\\(defun[\\n\\s]*list-reverse[\\n\\s]*\\(list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(x[\\n\\s]*list[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*'\\(\\)[\\n\\s]*\\(cons[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(endp[\\n\\s]*x\\)[\\n\\s]*y\\)\\)\\)"],["\\code\n (defun ribcage-lookup (sym ribcage)           \n        (do ((r ribcage (cdr r)))\n            ((null r) nil)\n          (do ((s (caar r) (cdr s))\n               (v (cdar r) (cdr v))) \n              ((null s))\n            (when (eq (car s) sym)\n              (return-from ribcage-lookup (car v)))))) *→* RIBCAGE-LOOKUP\n\\endcode","\\(defun[\\n\\s]*ribcage-lookup[\\n\\s]*\\(sym[\\n\\s]*ribcage\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(r[\\n\\s]*ribcage[\\n\\s]*\\(cdr[\\n\\s]*r\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*r\\)[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(s[\\n\\s]*\\(caar[\\n\\s]*r\\)[\\n\\s]*\\(cdr[\\n\\s]*s\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(v[\\n\\s]*\\(cdar[\\n\\s]*r\\)[\\n\\s]*\\(cdr[\\n\\s]*v\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(null[\\n\\s]*s\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(eq[\\n\\s]*\\(car[\\n\\s]*s\\)[\\n\\s]*sym\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return-from[\\n\\s]*ribcage-lookup[\\n\\s]*\\(car[\\n\\s]*v\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*RIBCAGE-LOOKUP"],["\\code\n (block nil        \n   (let ((var1 init1)\n         (var2 init2)\n         ...\n         (varn initn))\n     \\i&#123;declarations&#125;\n     (loop (when end-test (return (progn . result)))\n           (tagbody . tagbody)\n           (psetq var1 step1\n                  var2 step2\n                  ...\n                  varn stepn))))\n\\endcode","\\(block[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(var1[\\n\\s]*init1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(var2[\\n\\s]*init2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(varn[\\n\\s]*initn\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;declarations&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(when[\\n\\s]*end-test[\\n\\s]*\\(return[\\n\\s]*\\(progn[\\n\\s]*\\.[\\n\\s]*result\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tagbody[\\n\\s]*\\.[\\n\\s]*tagbody\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(psetq[\\n\\s]*var1[\\n\\s]*step1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*var2[\\n\\s]*step2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*varn[\\n\\s]*stepn\\)\\)\\)\\)"],["\\code\n (dotimes (temp-one 10 temp-one)) *→* 10\n (setq temp-two 0) *→* 0\n (dotimes (temp-one 10 t) (incf temp-two)) *→* T\n temp-two *→* 10\n\\endcode","\\(dotimes[\\n\\s]*\\(temp-one[\\n\\s]*10[\\n\\s]*temp-one\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp-two[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(temp-one[\\n\\s]*10[\\n\\s]*t\\)[\\n\\s]*\\(incf[\\n\\s]*temp-two\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*temp-two[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n;;; True if the specified subsequence of the string is a\n;;; palindrome (reads the same forwards and backwards).\n (defun palindromep (string \\optional\n                           (start 0)\n                           (end (length string)))\n   (dotimes (k (floor (- end start) 2) t)\n    (unless (char-equal (char string (+ start k))\n                        (char string (- end k 1)))\n      (return nil))))\n (palindromep \"Able was I ere I saw Elba\") *→* T\n (palindromep \"A man, a plan, a canal--Panama!\") *→* NIL\n (remove-if-not #'alpha-char-p          ;Remove punctuation.\n               \"A man, a plan, a canal--Panama!\")\n*→* \"AmanaplanacanalPanama\"\n (palindromep\n  (remove-if-not #'alpha-char-p\n                \"A man, a plan, a canal--Panama!\")) *→* T\n (palindromep\n  (remove-if-not\n   #'alpha-char-p\n   \"Unremarkable was I ere I saw Elba Kramer, nu?\")) *→* T\n (palindromep\n  (remove-if-not\n   #'alpha-char-p\n   \"A man, a plan, a cat, a ham, a yak,\n                  a yam, a hat, a canal--Panama!\")) *→* T\n\\endcode",";;;[\\n\\s]*True[\\n\\s]*if[\\n\\s]*the[\\n\\s]*specified[\\n\\s]*subsequence[\\n\\s]*of[\\n\\s]*the[\\n\\s]*string[\\n\\s]*is[\\n\\s]*a[\\n\\s]*;;;[\\n\\s]*palindrome[\\n\\s]*\\(reads[\\n\\s]*the[\\n\\s]*same[\\n\\s]*forwards[\\n\\s]*and[\\n\\s]*backwards\\)\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*palindromep[\\n\\s]*\\(string[\\n\\s]*\\\\optional[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(start[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(end[\\n\\s]*\\(length[\\n\\s]*string\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(k[\\n\\s]*\\(floor[\\n\\s]*\\(-[\\n\\s]*end[\\n\\s]*start\\)[\\n\\s]*2\\)[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(char-equal[\\n\\s]*\\(char[\\n\\s]*string[\\n\\s]*\\(\\+[\\n\\s]*start[\\n\\s]*k\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(char[\\n\\s]*string[\\n\\s]*\\(-[\\n\\s]*end[\\n\\s]*k[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*nil\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(palindromep[\\n\\s]*\"Able[\\n\\s]*was[\\n\\s]*I[\\n\\s]*ere[\\n\\s]*I[\\n\\s]*saw[\\n\\s]*Elba\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(palindromep[\\n\\s]*\"A[\\n\\s]*man,[\\n\\s]*a[\\n\\s]*plan,[\\n\\s]*a[\\n\\s]*canal--Panama!\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(remove-if-not[\\n\\s]*#'alpha-char-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Remove[\\n\\s]*punctuation\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"A[\\n\\s]*man,[\\n\\s]*a[\\n\\s]*plan,[\\n\\s]*a[\\n\\s]*canal--Panama!\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"AmanaplanacanalPanama\"[\\n\\s]*[\\n\\s]*\\(palindromep[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(remove-if-not[\\n\\s]*#'alpha-char-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"A[\\n\\s]*man,[\\n\\s]*a[\\n\\s]*plan,[\\n\\s]*a[\\n\\s]*canal--Panama!\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(palindromep[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(remove-if-not[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'alpha-char-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"Unremarkable[\\n\\s]*was[\\n\\s]*I[\\n\\s]*ere[\\n\\s]*I[\\n\\s]*saw[\\n\\s]*Elba[\\n\\s]*Kramer,[\\n\\s]*nu\\?\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(palindromep[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(remove-if-not[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'alpha-char-p[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"A[\\n\\s]*man,[\\n\\s]*a[\\n\\s]*plan,[\\n\\s]*a[\\n\\s]*cat,[\\n\\s]*a[\\n\\s]*ham,[\\n\\s]*a[\\n\\s]*yak,[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a[\\n\\s]*yam,[\\n\\s]*a[\\n\\s]*hat,[\\n\\s]*a[\\n\\s]*canal--Panama!\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n (setq temp-two '()) *→* NIL\n (dolist (temp-one '(1 2 3 4) temp-two) (push temp-one temp-two)) *→* (4 3 2 1)\n\n (setq temp-two 0) *→* 0\n (dolist (temp-one '(1 2 3 4)) (incf temp-two)) *→* NIL\n temp-two *→* 4\n\n (dolist (x '(a b c d)) (prin1 x) (princ \" \")) \n\\OUT A B C D \n*→* NIL\n\\endcode","\\(setq[\\n\\s]*temp-two[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(temp-one[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*temp-two\\)[\\n\\s]*\\(push[\\n\\s]*temp-one[\\n\\s]*temp-two\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*3[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp-two[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(temp-one[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\(incf[\\n\\s]*temp-two\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*temp-two[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(x[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d\\)\\)[\\n\\s]*\\(prin1[\\n\\s]*x\\)[\\n\\s]*\\(princ[\\n\\s]*\"[\\n\\s]*\"\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n;; An example of the simple form of LOOP.\n (defun sqrt-advisor ()\n   (loop (format t \"~&Number: \")\n         (let ((n (parse-integer (read-line) :junk-allowed t)))\n           (when (not n) (return))\n           (format t \"~&The square root of ~D is ~D.~%\" n (sqrt n)))))\n*→* SQRT-ADVISOR\n (sqrt-advisor)\n\\OUT Number: \\IN&#123;5\\CRLF&#125;\n\\OUT The square root of 5 is 2.236068.\n\\OUT Number: \\IN&#123;4\\CRLF&#125;\n\\OUT The square root of 4 is 2.\n\\OUT Number: \\IN&#123;done\\CRLF&#125;\n*→* NIL\n\n;; An example of the extended form of LOOP.\n (defun square-advisor ()\n   (loop as n = (progn (format t \"~&Number: \")\n                       (parse-integer (read-line) :junk-allowed t))\n         while n\n         do (format t \"~&The square of ~D is ~D.~%\" n (* n n))))\n*→* SQUARE-ADVISOR\n (square-advisor)\n\\OUT Number: \\IN&#123;4\\CRLF&#125;\n\\OUT The square of 4 is 16.\n\\OUT Number: \\IN&#123;23\\CRLF&#125;\n\\OUT The square of 23 is 529.\n\\OUT Number: \\IN&#123;done\\CRLF&#125;\n*→* NIL\n\n;; Another example of the extended form of LOOP.\n (loop for n from 1 to 10\n       when (oddp n)\n         collect n)\n*→* (1 3 5 7 9)\n\\endcode",";;[\\n\\s]*An[\\n\\s]*example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*simple[\\n\\s]*form[\\n\\s]*of[\\n\\s]*LOOP\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*sqrt-advisor[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Number:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*\\(parse-integer[\\n\\s]*\\(read-line\\)[\\n\\s]*:junk-allowed[\\n\\s]*t\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(not[\\n\\s]*n\\)[\\n\\s]*\\(return\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&The[\\n\\s]*square[\\n\\s]*root[\\n\\s]*of[\\n\\s]*~D[\\n\\s]*is[\\n\\s]*~D\\.~%\"[\\n\\s]*n[\\n\\s]*\\(sqrt[\\n\\s]*n\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SQRT-ADVISOR[\\n\\s]*[\\n\\s]*\\(sqrt-advisor\\)[\\n\\s]*\\\\OUT[\\n\\s]*Number:[\\n\\s]*\\\\IN&#123;5\\\\CRLF&#125;[\\n\\s]*\\\\OUT[\\n\\s]*The[\\n\\s]*square[\\n\\s]*root[\\n\\s]*of[\\n\\s]*5[\\n\\s]*is[\\n\\s]*2\\.236068\\.[\\n\\s]*\\\\OUT[\\n\\s]*Number:[\\n\\s]*\\\\IN&#123;4\\\\CRLF&#125;[\\n\\s]*\\\\OUT[\\n\\s]*The[\\n\\s]*square[\\n\\s]*root[\\n\\s]*of[\\n\\s]*4[\\n\\s]*is[\\n\\s]*2\\.[\\n\\s]*\\\\OUT[\\n\\s]*Number:[\\n\\s]*\\\\IN&#123;done\\\\CRLF&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*;;[\\n\\s]*An[\\n\\s]*example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*extended[\\n\\s]*form[\\n\\s]*of[\\n\\s]*LOOP\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*square-advisor[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*as[\\n\\s]*n[\\n\\s]*=[\\n\\s]*\\(progn[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Number:[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(parse-integer[\\n\\s]*\\(read-line\\)[\\n\\s]*:junk-allowed[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*while[\\n\\s]*n[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&The[\\n\\s]*square[\\n\\s]*of[\\n\\s]*~D[\\n\\s]*is[\\n\\s]*~D\\.~%\"[\\n\\s]*n[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*n\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SQUARE-ADVISOR[\\n\\s]*[\\n\\s]*\\(square-advisor\\)[\\n\\s]*\\\\OUT[\\n\\s]*Number:[\\n\\s]*\\\\IN&#123;4\\\\CRLF&#125;[\\n\\s]*\\\\OUT[\\n\\s]*The[\\n\\s]*square[\\n\\s]*of[\\n\\s]*4[\\n\\s]*is[\\n\\s]*16\\.[\\n\\s]*\\\\OUT[\\n\\s]*Number:[\\n\\s]*\\\\IN&#123;23\\\\CRLF&#125;[\\n\\s]*\\\\OUT[\\n\\s]*The[\\n\\s]*square[\\n\\s]*of[\\n\\s]*23[\\n\\s]*is[\\n\\s]*529\\.[\\n\\s]*\\\\OUT[\\n\\s]*Number:[\\n\\s]*\\\\IN&#123;done\\\\CRLF&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Another[\\n\\s]*example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*extended[\\n\\s]*form[\\n\\s]*of[\\n\\s]*LOOP\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*n[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(oddp[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7[\\n\\s]*9\\)"],["\\code\n (loop \\starparam&#123;compound-form&#125;) \\EQ (loop do \\starparam&#123;compound-form&#125;)\n\\endcode","\\(loop[\\n\\s]*\\\\starparam&#123;compound-form&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(loop[\\n\\s]*do[\\n\\s]*\\\\starparam&#123;compound-form&#125;\\)"],["\\code\n;; Terminate the loop, but return the accumulated count.\n (loop for i in '(1 2 3 stop-here 4 5 6)\n       when (symbolp i) do (loop-finish)\n       count i)\n*→* 3\n \n;; The preceding loop is equivalent to:\n (loop for i in '(1 2 3 stop-here 4 5 6)\n       until (symbolp i)\n       count i)\n*→* 3\n\n;; While LOOP-FINISH can be used can be used in a variety of \n;; situations it is really most needed in a situation where a need\n;; to exit is detected at other than the loop's `top level'\n;; (where UNTIL or WHEN often work just as well), or where some \n;; computation must occur between the point where a need to exit is\n;; detected and the point where the exit actually occurs.  For example:\n (defun tokenize-sentence (string)\n   (macrolet ((add-word (wvar svar)\n                `(when ,wvar\n                   (push (coerce (nreverse ,wvar) 'string) ,svar)\n                   (setq ,wvar nil))))\n     (loop with word = '() and sentence = '() and endpos = nil\n           for i below (length string)\n           do (let ((char (aref string i)))\n                (case char\n                  (#\\\\Space (add-word word sentence))\n                  (#\\\\. (setq endpos (1+ i)) (loop-finish))\n                  (otherwise (push char word))))\n           finally (add-word word sentence)\n                   (return (values (nreverse sentence) endpos)))))\n*→* TOKENIZE-SENTENCE\n \n (tokenize-sentence \"this is a sentence. this is another sentence.\")\n*→* (\"this\" \"is\" \"a\" \"sentence\"), 19\n \n (tokenize-sentence \"this is a sentence\")\n*→* (\"this\" \"is\" \"a\" \"sentence\"), NIL\n\n\\endcode",";;[\\n\\s]*Terminate[\\n\\s]*the[\\n\\s]*loop,[\\n\\s]*but[\\n\\s]*return[\\n\\s]*the[\\n\\s]*accumulated[\\n\\s]*count\\.[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*stop-here[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(symbolp[\\n\\s]*i\\)[\\n\\s]*do[\\n\\s]*\\(loop-finish\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*preceding[\\n\\s]*loop[\\n\\s]*is[\\n\\s]*equivalent[\\n\\s]*to:[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*in[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*stop-here[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*until[\\n\\s]*\\(symbolp[\\n\\s]*i\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*count[\\n\\s]*i\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*;;[\\n\\s]*While[\\n\\s]*LOOP-FINISH[\\n\\s]*can[\\n\\s]*be[\\n\\s]*used[\\n\\s]*can[\\n\\s]*be[\\n\\s]*used[\\n\\s]*in[\\n\\s]*a[\\n\\s]*variety[\\n\\s]*of[\\n\\s]*[\\n\\s]*;;[\\n\\s]*situations[\\n\\s]*it[\\n\\s]*is[\\n\\s]*really[\\n\\s]*most[\\n\\s]*needed[\\n\\s]*in[\\n\\s]*a[\\n\\s]*situation[\\n\\s]*where[\\n\\s]*a[\\n\\s]*need[\\n\\s]*;;[\\n\\s]*to[\\n\\s]*exit[\\n\\s]*is[\\n\\s]*detected[\\n\\s]*at[\\n\\s]*other[\\n\\s]*than[\\n\\s]*the[\\n\\s]*loop's[\\n\\s]*`top[\\n\\s]*level'[\\n\\s]*;;[\\n\\s]*\\(where[\\n\\s]*UNTIL[\\n\\s]*or[\\n\\s]*WHEN[\\n\\s]*often[\\n\\s]*work[\\n\\s]*just[\\n\\s]*as[\\n\\s]*well\\),[\\n\\s]*or[\\n\\s]*where[\\n\\s]*some[\\n\\s]*[\\n\\s]*;;[\\n\\s]*computation[\\n\\s]*must[\\n\\s]*occur[\\n\\s]*between[\\n\\s]*the[\\n\\s]*point[\\n\\s]*where[\\n\\s]*a[\\n\\s]*need[\\n\\s]*to[\\n\\s]*exit[\\n\\s]*is[\\n\\s]*;;[\\n\\s]*detected[\\n\\s]*and[\\n\\s]*the[\\n\\s]*point[\\n\\s]*where[\\n\\s]*the[\\n\\s]*exit[\\n\\s]*actually[\\n\\s]*occurs\\.[\\n\\s]*[\\n\\s]*For[\\n\\s]*example:[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*tokenize-sentence[\\n\\s]*\\(string\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(macrolet[\\n\\s]*\\(\\(add-word[\\n\\s]*\\(wvar[\\n\\s]*svar\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(when[\\n\\s]*,wvar[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(coerce[\\n\\s]*\\(nreverse[\\n\\s]*,wvar\\)[\\n\\s]*'string\\)[\\n\\s]*,svar\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*,wvar[\\n\\s]*nil\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*with[\\n\\s]*word[\\n\\s]*=[\\n\\s]*'\\(\\)[\\n\\s]*and[\\n\\s]*sentence[\\n\\s]*=[\\n\\s]*'\\(\\)[\\n\\s]*and[\\n\\s]*endpos[\\n\\s]*=[\\n\\s]*nil[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*for[\\n\\s]*i[\\n\\s]*below[\\n\\s]*\\(length[\\n\\s]*string\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(let[\\n\\s]*\\(\\(char[\\n\\s]*\\(aref[\\n\\s]*string[\\n\\s]*i\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*char[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#\\\\\\\\Space[\\n\\s]*\\(add-word[\\n\\s]*word[\\n\\s]*sentence\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(#\\\\\\\\\\.[\\n\\s]*\\(setq[\\n\\s]*endpos[\\n\\s]*\\(1\\+[\\n\\s]*i\\)\\)[\\n\\s]*\\(loop-finish\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(otherwise[\\n\\s]*\\(push[\\n\\s]*char[\\n\\s]*word\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*finally[\\n\\s]*\\(add-word[\\n\\s]*word[\\n\\s]*sentence\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return[\\n\\s]*\\(values[\\n\\s]*\\(nreverse[\\n\\s]*sentence\\)[\\n\\s]*endpos\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TOKENIZE-SENTENCE[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tokenize-sentence[\\n\\s]*\"this[\\n\\s]*is[\\n\\s]*a[\\n\\s]*sentence\\.[\\n\\s]*this[\\n\\s]*is[\\n\\s]*another[\\n\\s]*sentence\\.\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"this\"[\\n\\s]*\"is\"[\\n\\s]*\"a\"[\\n\\s]*\"sentence\"\\),[\\n\\s]*19[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(tokenize-sentence[\\n\\s]*\"this[\\n\\s]*is[\\n\\s]*a[\\n\\s]*sentence\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"this\"[\\n\\s]*\"is\"[\\n\\s]*\"a\"[\\n\\s]*\"sentence\"\\),[\\n\\s]*NIL"],["\\code\n%  (loop (loop-finish))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(loop-finish\\)\\)[\\n\\s]*%"],["\\code\n%  (loop do (loop (loop-finish)))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*do[\\n\\s]*\\(loop[\\n\\s]*\\(loop-finish\\)\\)\\)[\\n\\s]*%"],["\\code\n (max 3) *→* 3 \n (min 3) *→* 3\n (max 6 12) *→* 12 \n (min 6 12) *→* 6\n (max -6 -12) *→* -6 \n (min -6 -12) *→* -12\n (max 1 3 2 -7) *→* 3 \n (min 1 3 2 -7) *→* -7\n (max -2 3 0 7) *→* 7 \n (min -2 3 0 7) *→* -2\n (max 5.0 2) *→* 5.0 \n (min 5.0 2)\n*→* 2\n\\OV 2.0\n (max 3.0 7 1)\n*→* 7\n\\OV 7.0 \n (min 3.0 7 1)\n*→* 1\n\\OV 1.0\n (max 1.0s0 7.0d0) *→* 7.0d0\n (min 1.0s0 7.0d0)\n*→* 1.0s0\n\\OV 1.0d0\n (max 3 1 1.0s0 1.0d0)\n*→* 3\n\\OV 3.0d0\n (min 3 1 1.0s0 1.0d0)\n*→* 1\n\\OV 1.0s0 \n\\OV 1.0d0\n\\endcode","\\(max[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*6[\\n\\s]*12\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*12[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*6[\\n\\s]*12\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*-6[\\n\\s]*-12\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-6[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*-6[\\n\\s]*-12\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-12[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*1[\\n\\s]*3[\\n\\s]*2[\\n\\s]*-7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*1[\\n\\s]*3[\\n\\s]*2[\\n\\s]*-7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-7[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*-2[\\n\\s]*3[\\n\\s]*0[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*-2[\\n\\s]*3[\\n\\s]*0[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-2[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*5\\.0[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*5\\.0[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*\\\\OV[\\n\\s]*2\\.0[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*3\\.0[\\n\\s]*7[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*\\\\OV[\\n\\s]*7\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*3\\.0[\\n\\s]*7[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*\\\\OV[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*1\\.0s0[\\n\\s]*7\\.0d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7\\.0d0[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*1\\.0s0[\\n\\s]*7\\.0d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0s0[\\n\\s]*\\\\OV[\\n\\s]*1\\.0d0[\\n\\s]*[\\n\\s]*\\(max[\\n\\s]*3[\\n\\s]*1[\\n\\s]*1\\.0s0[\\n\\s]*1\\.0d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*\\\\OV[\\n\\s]*3\\.0d0[\\n\\s]*[\\n\\s]*\\(min[\\n\\s]*3[\\n\\s]*1[\\n\\s]*1\\.0s0[\\n\\s]*1\\.0d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*\\\\OV[\\n\\s]*1\\.0s0[\\n\\s]*[\\n\\s]*\\\\OV[\\n\\s]*1\\.0d0"],["\\code\n (minusp -1) *→ true*\n (plusp 0) *→ false*\n (plusp least-positive-single-float) *→ true*\n\\endcode","\\(minusp[\\n\\s]*-1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(plusp[\\n\\s]*0\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(plusp[\\n\\s]*least-positive-single-float\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (zerop 0) *→ true*\n (zerop 1) *→ false*\n (zerop -0.0) *→ true*\n (zerop 0/100) *→ true*\n (zerop #c(0 0.0)) *→ true*\n\\endcode","\\(zerop[\\n\\s]*0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(zerop[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(zerop[\\n\\s]*-0\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(zerop[\\n\\s]*0/100\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(zerop[\\n\\s]*#c\\(0[\\n\\s]*0\\.0\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (zerop \\param&#123;number&#125;) \\EQ (= \\param&#123;number&#125; 0)\n\\endcode","\\(zerop[\\n\\s]*\\\\param&#123;number&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(=[\\n\\s]*\\\\param&#123;number&#125;[\\n\\s]*0\\)"],["\\code\n (floor 3/2) *→* 1, 1/2\n (ceiling 3 2) *→* 2, -1\n (ffloor 3 2) *→* 1.0, 1\n (ffloor -4.7) *→* -5.0, 0.3\n (ffloor 3.5d0) *→* 3.0d0, 0.5d0\n (fceiling 3/2) *→* 2.0, -1/2\n (truncate 1) *→* 1, 0\n (truncate .5) *→* 0, 0.5\n (round .5) *→* 0, 0.5\n (ftruncate -7 2) *→* -3.0, -1\n (fround -7 2) *→* -4.0, 1\n (dolist (n '(2.6 2.5 2.4 0.7 0.3 -0.3 -0.7 -2.4 -2.5 -2.6))\n   (format t \"~&~4,1@F ~2,' D ~2,' D ~2,' D ~2,' D\"\n           n (floor n) (ceiling n) (truncate n) (round n)))\n\\OUT +2.6  2  3  2  3\n\\OUT +2.5  2  3  2  2\n\\OUT +2.4  2  3  2  2\n\\OUT +0.7  0  1  0  1\n\\OUT +0.3  0  1  0  0\n\\OUT -0.3 -1  0  0  0\n\\OUT -0.7 -1  0  0 -1\n\\OUT -2.4 -3 -2 -2 -2\n\\OUT -2.5 -3 -2 -2 -2\n\\OUT -2.6 -3 -2 -2 -3\n*→* NIL\n\\endcode","\\(floor[\\n\\s]*3/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*1/2[\\n\\s]*[\\n\\s]*\\(ceiling[\\n\\s]*3[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2,[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(ffloor[\\n\\s]*3[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0,[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(ffloor[\\n\\s]*-4\\.7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-5\\.0,[\\n\\s]*0\\.3[\\n\\s]*[\\n\\s]*\\(ffloor[\\n\\s]*3\\.5d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0d0,[\\n\\s]*0\\.5d0[\\n\\s]*[\\n\\s]*\\(fceiling[\\n\\s]*3/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0,[\\n\\s]*-1/2[\\n\\s]*[\\n\\s]*\\(truncate[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(truncate[\\n\\s]*\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*0\\.5[\\n\\s]*[\\n\\s]*\\(round[\\n\\s]*\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0,[\\n\\s]*0\\.5[\\n\\s]*[\\n\\s]*\\(ftruncate[\\n\\s]*-7[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-3\\.0,[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(fround[\\n\\s]*-7[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-4\\.0,[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(n[\\n\\s]*'\\(2\\.6[\\n\\s]*2\\.5[\\n\\s]*2\\.4[\\n\\s]*0\\.7[\\n\\s]*0\\.3[\\n\\s]*-0\\.3[\\n\\s]*-0\\.7[\\n\\s]*-2\\.4[\\n\\s]*-2\\.5[\\n\\s]*-2\\.6\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~4,1@F[\\n\\s]*~2,'[\\n\\s]*D[\\n\\s]*~2,'[\\n\\s]*D[\\n\\s]*~2,'[\\n\\s]*D[\\n\\s]*~2,'[\\n\\s]*D\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*n[\\n\\s]*\\(floor[\\n\\s]*n\\)[\\n\\s]*\\(ceiling[\\n\\s]*n\\)[\\n\\s]*\\(truncate[\\n\\s]*n\\)[\\n\\s]*\\(round[\\n\\s]*n\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\+2\\.6[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*3[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*3[\\n\\s]*\\\\OUT[\\n\\s]*\\+2\\.5[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*3[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*\\+2\\.4[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*3[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*\\+0\\.7[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*1[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*\\+0\\.3[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*1[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*0[\\n\\s]*\\\\OUT[\\n\\s]*-0\\.3[\\n\\s]*-1[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*0[\\n\\s]*\\\\OUT[\\n\\s]*-0\\.7[\\n\\s]*-1[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*0[\\n\\s]*-1[\\n\\s]*\\\\OUT[\\n\\s]*-2\\.4[\\n\\s]*-3[\\n\\s]*-2[\\n\\s]*-2[\\n\\s]*-2[\\n\\s]*\\\\OUT[\\n\\s]*-2\\.5[\\n\\s]*-3[\\n\\s]*-2[\\n\\s]*-2[\\n\\s]*-2[\\n\\s]*\\\\OUT[\\n\\s]*-2\\.6[\\n\\s]*-3[\\n\\s]*-2[\\n\\s]*-2[\\n\\s]*-3[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (floor 5 2) *→* 2, 1\n (floor (/ 5 2)) *→* 2, 1/2\n\\endcode","\\(floor[\\n\\s]*5[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2,[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(floor[\\n\\s]*\\(/[\\n\\s]*5[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2,[\\n\\s]*1/2"],["\\code\n (sin 0) *→* 0.0\n (cos 0.7853982) *→* 0.707107\n (tan #c(0 1)) *→* #C(0.0 0.761594)\n\\endcode","\\(sin[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0[\\n\\s]*[\\n\\s]*\\(cos[\\n\\s]*0\\.7853982\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.707107[\\n\\s]*[\\n\\s]*\\(tan[\\n\\s]*#c\\(0[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*0\\.761594\\)"],["\\code\n (asin 0) *→* 0.0 \n (acos #c(0 1))  *→* #C(1.5707963267948966 -0.8813735870195432)\n (/ (atan 1 (sqrt 3)) 6)  *→* 0.087266 \n (atan #c(0 2)) *→* #C(-1.5707964 0.54930615)\n\\endcode","\\(asin[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(acos[\\n\\s]*#c\\(0[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.5707963267948966[\\n\\s]*-0\\.8813735870195432\\)[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*\\(atan[\\n\\s]*1[\\n\\s]*\\(sqrt[\\n\\s]*3\\)\\)[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.087266[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(atan[\\n\\s]*#c\\(0[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(-1\\.5707964[\\n\\s]*0\\.54930615\\)"],["\\code\n ;; In each of the following computations, the precision depends \n ;; on the implementation.  Also, if `long float' is treated by \n ;; the implementation as equivalent to some other float format \n ;; (e.g., `double float') the exponent marker might be the marker\n ;; for that equivalent (e.g., `D' instead of `L').\n pi *→* 3.141592653589793L0\n (cos pi) *→* -1.0L0\n\n (defun sin-of-degrees (degrees)\n   (let ((x (if (floatp degrees) degrees (float degrees pi))))\n     (sin (* x (/ (float pi x) 180)))))\n\\endcode",";;[\\n\\s]*In[\\n\\s]*each[\\n\\s]*of[\\n\\s]*the[\\n\\s]*following[\\n\\s]*computations,[\\n\\s]*the[\\n\\s]*precision[\\n\\s]*depends[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*on[\\n\\s]*the[\\n\\s]*implementation\\.[\\n\\s]*[\\n\\s]*Also,[\\n\\s]*if[\\n\\s]*`long[\\n\\s]*float'[\\n\\s]*is[\\n\\s]*treated[\\n\\s]*by[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*the[\\n\\s]*implementation[\\n\\s]*as[\\n\\s]*equivalent[\\n\\s]*to[\\n\\s]*some[\\n\\s]*other[\\n\\s]*float[\\n\\s]*format[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*\\(e\\.g\\.,[\\n\\s]*`double[\\n\\s]*float'\\)[\\n\\s]*the[\\n\\s]*exponent[\\n\\s]*marker[\\n\\s]*might[\\n\\s]*be[\\n\\s]*the[\\n\\s]*marker[\\n\\s]*[\\n\\s]*;;[\\n\\s]*for[\\n\\s]*that[\\n\\s]*equivalent[\\n\\s]*\\(e\\.g\\.,[\\n\\s]*`D'[\\n\\s]*instead[\\n\\s]*of[\\n\\s]*`L'\\)\\.[\\n\\s]*[\\n\\s]*pi[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.141592653589793L0[\\n\\s]*[\\n\\s]*\\(cos[\\n\\s]*pi\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1\\.0L0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*sin-of-degrees[\\n\\s]*\\(degrees\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(if[\\n\\s]*\\(floatp[\\n\\s]*degrees\\)[\\n\\s]*degrees[\\n\\s]*\\(float[\\n\\s]*degrees[\\n\\s]*pi\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sin[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*\\(/[\\n\\s]*\\(float[\\n\\s]*pi[\\n\\s]*x\\)[\\n\\s]*180\\)\\)\\)\\)\\)"],["\\code\n (sinh 0) *→* 0.0 \n (cosh (complex 0 -1)) *→* #C(0.540302 -0.0)\n\\endcode","\\(sinh[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cosh[\\n\\s]*\\(complex[\\n\\s]*0[\\n\\s]*-1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.540302[\\n\\s]*-0\\.0\\)"],["\\code\n (*) *→* 1\n (* 3 5) *→* 15\n (* 1.0 #c(22 33) 55/98) *→* #C(12.346938775510203 18.520408163265305)\n\\endcode","\\(\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*1\\.0[\\n\\s]*#c\\(22[\\n\\s]*33\\)[\\n\\s]*55/98\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(12\\.346938775510203[\\n\\s]*18\\.520408163265305\\)"],["\\code\n (+) *→* 0\n (+ 1) *→* 1\n (+ 31/100 69/100) *→* 1\n (+ 1/5 0.8) *→* 1.0\n\\endcode","\\(\\+\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*31/100[\\n\\s]*69/100\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*1/5[\\n\\s]*0\\.8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0"],["\\code\n (- 55.55) *→* -55.55\n (- #c(3 -5)) *→* #C(-3 5)\n (- 0) *→* 0\n (eql (- 0.0) -0.0) *→ true*\n (- #c(100 45) #c(0 45)) *→* 100\n (- 10 1 2 3 4) *→* 0\n\\endcode","\\(-[\\n\\s]*55\\.55\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-55\\.55[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*#c\\(3[\\n\\s]*-5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(-3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\\(-[\\n\\s]*0\\.0\\)[\\n\\s]*-0\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*#c\\(100[\\n\\s]*45\\)[\\n\\s]*#c\\(0[\\n\\s]*45\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*100[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*10[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0"],["\\code\n (/ 12 4) *→* 3\n (/ 13 4) *→* 13/4\n (/ -8) *→* -1/8\n (/ 3 4 5) *→* 3/20\n (/ 0.5) *→* 2.0\n (/ 20 5) *→* 4\n (/ 5 20) *→* 1/4\n (/ 60 -2 3 5.0) *→* -2.0\n (/ 2 #c(2 2)) *→* #C(1/2 -1/2)\n\\endcode","\\(/[\\n\\s]*12[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*13[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*13/4[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*-8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1/8[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3/20[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*0\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*20[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*5[\\n\\s]*20\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1/4[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*60[\\n\\s]*-2[\\n\\s]*3[\\n\\s]*5\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-2\\.0[\\n\\s]*[\\n\\s]*\\(/[\\n\\s]*2[\\n\\s]*#c\\(2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1/2[\\n\\s]*-1/2\\)"],["\\code\n (1+ 99) *→* 100 \n (1- 100) *→* 99 \n (1+ (complex 0.0)) *→* #C(1.0 0.0) \n (1- 5/3) *→* 2/3 \n\\endcode","\\(1\\+[\\n\\s]*99\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*100[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(1-[\\n\\s]*100\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*99[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(1\\+[\\n\\s]*\\(complex[\\n\\s]*0\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(1-[\\n\\s]*5/3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2/3"],["\\code\n (1+ \\param&#123;number&#125;) \\EQ (+ \\param&#123;number&#125; 1)\n (1- \\param&#123;number&#125;) \\EQ (- \\param&#123;number&#125; 1)\n\\endcode","\\(1\\+[\\n\\s]*\\\\param&#123;number&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(\\+[\\n\\s]*\\\\param&#123;number&#125;[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(1-[\\n\\s]*\\\\param&#123;number&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(-[\\n\\s]*\\\\param&#123;number&#125;[\\n\\s]*1\\)"],["\\code\n (abs 0) *→* 0\n (abs 12/13) *→* 12/13\n (abs -1.09) *→* 1.09\n (abs #c(5.0 -5.0)) *→* 7.071068\n (abs #c(5 5)) *→* 7.071068\n (abs #c(3/5 4/5)) *→* 1 or approximately 1.0\n (eql (abs -0.0) -0.0) *→ true*\n\\endcode","\\(abs[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(abs[\\n\\s]*12/13\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*12/13[\\n\\s]*[\\n\\s]*\\(abs[\\n\\s]*-1\\.09\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.09[\\n\\s]*[\\n\\s]*\\(abs[\\n\\s]*#c\\(5\\.0[\\n\\s]*-5\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7\\.071068[\\n\\s]*[\\n\\s]*\\(abs[\\n\\s]*#c\\(5[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7\\.071068[\\n\\s]*[\\n\\s]*\\(abs[\\n\\s]*#c\\(3/5[\\n\\s]*4/5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*or[\\n\\s]*approximately[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\\(abs[\\n\\s]*-0\\.0\\)[\\n\\s]*-0\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (evenp 0) *→ true*\n (oddp 10000000000000000000000) *→ false*\n (oddp -1) *→ true*\n\\endcode","\\(evenp[\\n\\s]*0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(oddp[\\n\\s]*10000000000000000000000\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(oddp[\\n\\s]*-1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (evenp \\param&#123;integer&#125;) \\EQ (not (oddp \\param&#123;integer&#125;))\n (oddp \\param&#123;integer&#125;)  \\EQ (not (evenp \\param&#123;integer&#125;))\n\\endcode","\\(evenp[\\n\\s]*\\\\param&#123;integer&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(oddp[\\n\\s]*\\\\param&#123;integer&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(oddp[\\n\\s]*\\\\param&#123;integer&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(evenp[\\n\\s]*\\\\param&#123;integer&#125;\\)\\)"],["\\code\n (expt x 0) \\EQ (coerce 1 (type-of x))\n\\endcode","\\(expt[\\n\\s]*x[\\n\\s]*0\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(coerce[\\n\\s]*1[\\n\\s]*\\(type-of[\\n\\s]*x\\)\\)"],["\\code\n (exp 0) *→* 1.0\n (exp 1) *→* 2.718282\n (exp (log 5)) *→* 5.0 \n (expt 2 8) *→* 256\n (expt 4 .5) *→* 2.0\n (expt #c(0 1) 2) *→* -1\n (expt #c(2 2) 3) *→* #C(-16 16)\n (expt #c(2 2) 4) *→* -64 \n\\endcode","\\(exp[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(exp[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.718282[\\n\\s]*[\\n\\s]*\\(exp[\\n\\s]*\\(log[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*256[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*4[\\n\\s]*\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*#c\\(0[\\n\\s]*1\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*#c\\(2[\\n\\s]*2\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(-16[\\n\\s]*16\\)[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*#c\\(2[\\n\\s]*2\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-64"],["\\code\n (setq x (exp (/ (* 2 pi #c(0 1)) 3)))         ;exp(2.pi.i/3)\n (expt x 3) *→* 1 ;except for round-off error\n (sqrt (expt x 3)) *→* 1 ;except for round-off error\n (expt x 3/2) *→* -1 ;except for round-off error\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(exp[\\n\\s]*\\(/[\\n\\s]*\\(\\*[\\n\\s]*2[\\n\\s]*pi[\\n\\s]*#c\\(0[\\n\\s]*1\\)\\)[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;exp\\(2\\.pi\\.i/3\\)[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*x[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*;except[\\n\\s]*for[\\n\\s]*round-off[\\n\\s]*error[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*\\(expt[\\n\\s]*x[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*;except[\\n\\s]*for[\\n\\s]*round-off[\\n\\s]*error[\\n\\s]*[\\n\\s]*\\(expt[\\n\\s]*x[\\n\\s]*3/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*;except[\\n\\s]*for[\\n\\s]*round-off[\\n\\s]*error"],["\\code\n (gcd) *→* 0\n (gcd 60 42) *→* 6\n (gcd 3333 -33 101) *→* 1\n (gcd 3333 -33 1002001) *→* 11\n (gcd 91 -49) *→* 7\n (gcd 63 -42 35) *→* 7\n (gcd 5) *→* 5\n (gcd -4) *→* 4\n\\endcode","\\(gcd\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*60[\\n\\s]*42\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*3333[\\n\\s]*-33[\\n\\s]*101\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*3333[\\n\\s]*-33[\\n\\s]*1002001\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*11[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*91[\\n\\s]*-49\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*63[\\n\\s]*-42[\\n\\s]*35\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(gcd[\\n\\s]*-4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4"],["\\code\n (gcd b c ... z) \\EQ (gcd (gcd a b) c ... z)\n\\endcode","\\(gcd[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.\\.\\.[\\n\\s]*z\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(gcd[\\n\\s]*\\(gcd[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*c[\\n\\s]*\\.\\.\\.[\\n\\s]*z\\)"],["\\code\n (setq n 0)\n (incf n) *→* 1      \n n *→* 1\n (decf n 3) *→* -2   \n n *→* -2\n (decf n -5) *→* 3      \n (decf n) *→* 2      \n (incf n 0.5) *→* 2.5\n (decf n) *→* 1.5\n n *→* 1.5\n\\endcode","\\(setq[\\n\\s]*n[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*n[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(decf[\\n\\s]*n[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*n[\\n\\s]*\\*\\→\\*[\\n\\s]*-2[\\n\\s]*[\\n\\s]*\\(decf[\\n\\s]*n[\\n\\s]*-5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(decf[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(incf[\\n\\s]*n[\\n\\s]*0\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.5[\\n\\s]*[\\n\\s]*\\(decf[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.5[\\n\\s]*[\\n\\s]*n[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.5"],["\\code\n%  (setf \\param&#123;place&#125; (+ \\param&#123;place&#125; \\param&#123;delta&#125;))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*\\(\\+[\\n\\s]*\\\\param&#123;place&#125;[\\n\\s]*\\\\param&#123;delta&#125;\\)\\)[\\n\\s]*%"],["\\code\n (lcm a b) \\EQ (/ (abs (* a b)) (gcd a b))\n\\endcode","\\(lcm[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(/[\\n\\s]*\\(abs[\\n\\s]*\\(\\*[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\(gcd[\\n\\s]*a[\\n\\s]*b\\)\\)"],["\\code\n (lcm a 0) \\EQ (lcm 0 a) \\EQ 0\n\\endcode","\\(lcm[\\n\\s]*a[\\n\\s]*0\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(lcm[\\n\\s]*0[\\n\\s]*a\\)[\\n\\s]*\\\\EQ[\\n\\s]*0"],["\\code\n (lcm a b c ... z) \\EQ (lcm (lcm a b) c ... z)\n\\endcode","\\(lcm[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*\\.\\.\\.[\\n\\s]*z\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(lcm[\\n\\s]*\\(lcm[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*c[\\n\\s]*\\.\\.\\.[\\n\\s]*z\\)"],["\\code\n (lcm 10) *→* 10\n (lcm 25 30) *→* 150\n (lcm -24 18 10) *→* 360\n (lcm 14 35) *→* 70\n (lcm 0 5) *→* 0\n (lcm 1 2 3 4 5 6) *→* 60\n\\endcode","\\(lcm[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(lcm[\\n\\s]*25[\\n\\s]*30\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*150[\\n\\s]*[\\n\\s]*\\(lcm[\\n\\s]*-24[\\n\\s]*18[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*360[\\n\\s]*[\\n\\s]*\\(lcm[\\n\\s]*14[\\n\\s]*35\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*70[\\n\\s]*[\\n\\s]*\\(lcm[\\n\\s]*0[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(lcm[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*60"],["\\code\n (log -1.0) \\EQ (complex 0.0 (float pi 0.0))\n\\endcode","\\(log[\\n\\s]*-1\\.0\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(complex[\\n\\s]*0\\.0[\\n\\s]*\\(float[\\n\\s]*pi[\\n\\s]*0\\.0\\)\\)"],["\\code\n%  (log \\param&#123;complex&#125;)\n%  \\EQ (+ (log (abs \\param&#123;complex&#125;)) (* (phase \\param&#123;complex&#125;) #c(0 1)))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(log[\\n\\s]*\\\\param&#123;complex&#125;\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(\\+[\\n\\s]*\\(log[\\n\\s]*\\(abs[\\n\\s]*\\\\param&#123;complex&#125;\\)\\)[\\n\\s]*\\(\\*[\\n\\s]*\\(phase[\\n\\s]*\\\\param&#123;complex&#125;\\)[\\n\\s]*#c\\(0[\\n\\s]*1\\)\\)\\)[\\n\\s]*%"],["\\code\n(log \\i&#123;x&#125;) \\EQ (complex (log (abs \\i&#123;x&#125;)) (phase \\i&#123;x&#125;))\n\\endcode","\\(log[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(complex[\\n\\s]*\\(log[\\n\\s]*\\(abs[\\n\\s]*\\\\i&#123;x&#125;\\)\\)[\\n\\s]*\\(phase[\\n\\s]*\\\\i&#123;x&#125;\\)\\)"],["\\code\n (log \\param&#123;base&#125; \\param&#123;number&#125;)\n \\EQ (/ (log \\param&#123;number&#125;) (log \\param&#123;base&#125;))\n\\endcode","\\(log[\\n\\s]*\\\\param&#123;base&#125;[\\n\\s]*\\\\param&#123;number&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(/[\\n\\s]*\\(log[\\n\\s]*\\\\param&#123;number&#125;\\)[\\n\\s]*\\(log[\\n\\s]*\\\\param&#123;base&#125;\\)\\)"],["\\code\n (log 100 10)\n*→* 2.0\n*→* 2\n (log 100.0 10) *→* 2.0\n (log #c(0 1) #c(0 -1))\n*→* #C(-1.0 0.0)\n\\OV #C(-1 0)\n (log 8.0 2) *→* 3.0\n\\endcode","\\(log[\\n\\s]*100[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(log[\\n\\s]*100\\.0[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0[\\n\\s]*[\\n\\s]*\\(log[\\n\\s]*#c\\(0[\\n\\s]*1\\)[\\n\\s]*#c\\(0[\\n\\s]*-1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(-1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*\\\\OV[\\n\\s]*#C\\(-1[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(log[\\n\\s]*8\\.0[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0"],["\\code\n (log #c(-16 16) #c(2 2)) *→* 3 or approximately #c(3.0 0.0)\n                               or approximately 3.0 (unlikely)\n\\endcode","\\(log[\\n\\s]*#c\\(-16[\\n\\s]*16\\)[\\n\\s]*#c\\(2[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*or[\\n\\s]*approximately[\\n\\s]*#c\\(3\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*or[\\n\\s]*approximately[\\n\\s]*3\\.0[\\n\\s]*\\(unlikely\\)"],["\\code\n (rem -1 5) *→* -1\n (mod -1 5) *→* 4\n (mod 13 4) *→* 1\n (rem 13 4) *→* 1\n (mod -13 4) *→* 3\n (rem -13 4) *→* -1\n (mod 13 -4) *→* -3\n (rem 13 -4) *→* 1\n (mod -13 -4) *→* -1\n (rem -13 -4) *→* -1\n (mod 13.4 1) *→* 0.4\n (rem 13.4 1) *→* 0.4\n (mod -13.4 1) *→* 0.6\n (rem -13.4 1) *→* -0.4\n\\endcode","\\(rem[\\n\\s]*-1[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*-1[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*13[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(rem[\\n\\s]*13[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*-13[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(rem[\\n\\s]*-13[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*13[\\n\\s]*-4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-3[\\n\\s]*[\\n\\s]*\\(rem[\\n\\s]*13[\\n\\s]*-4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*-13[\\n\\s]*-4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(rem[\\n\\s]*-13[\\n\\s]*-4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*13\\.4[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.4[\\n\\s]*[\\n\\s]*\\(rem[\\n\\s]*13\\.4[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.4[\\n\\s]*[\\n\\s]*\\(mod[\\n\\s]*-13\\.4[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.6[\\n\\s]*[\\n\\s]*\\(rem[\\n\\s]*-13\\.4[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-0\\.4"],["\\code\n (signum 0) *→* 0\n (signum 99) *→* 1\n (signum 4/5) *→* 1\n (signum -99/100) *→* -1\n (signum 0.0) *→* 0.0\n (signum #c(0 33)) *→* #C(0.0 1.0)\n (signum #c(7.5 10.0)) *→* #C(0.6 0.8)\n (signum #c(0.0 -14.7)) *→* #C(0.0 -1.0)\n (eql (signum -0.0) -0.0) *→ true*\n\\endcode","\\(signum[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*99\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*4/5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*-99/100\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*0\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*#c\\(0[\\n\\s]*33\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*1\\.0\\)[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*#c\\(7\\.5[\\n\\s]*10\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.6[\\n\\s]*0\\.8\\)[\\n\\s]*[\\n\\s]*\\(signum[\\n\\s]*#c\\(0\\.0[\\n\\s]*-14\\.7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*-1\\.0\\)[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\\(signum[\\n\\s]*-0\\.0\\)[\\n\\s]*-0\\.0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (signum x) \\EQ (if (zerop x) x (/ x (abs x)))\n\\endcode","\\(signum[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(if[\\n\\s]*\\(zerop[\\n\\s]*x\\)[\\n\\s]*x[\\n\\s]*\\(/[\\n\\s]*x[\\n\\s]*\\(abs[\\n\\s]*x\\)\\)\\)"],["\\code\n (sqrt 9.0) *→* 3.0\n (sqrt -9.0) *→* #C(0.0 3.0)\n (isqrt 9) *→* 3\n (sqrt 12) *→* 3.4641016\n (isqrt 12) *→* 3\n (isqrt 300) *→* 17\n (isqrt 325) *→* 18\n (sqrt 25)\n*→* 5\n\\OV 5.0\n (isqrt 25) *→* 5\n (sqrt -1) *→* #C(0.0 1.0)\n (sqrt #c(0 2)) *→* #C(1.0 1.0)\n\\endcode","\\(sqrt[\\n\\s]*9\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.0[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*-9\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*3\\.0\\)[\\n\\s]*[\\n\\s]*\\(isqrt[\\n\\s]*9\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*12\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.4641016[\\n\\s]*[\\n\\s]*\\(isqrt[\\n\\s]*12\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(isqrt[\\n\\s]*300\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*17[\\n\\s]*[\\n\\s]*\\(isqrt[\\n\\s]*325\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*18[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*25\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*\\\\OV[\\n\\s]*5\\.0[\\n\\s]*[\\n\\s]*\\(isqrt[\\n\\s]*25\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*1\\.0\\)[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*#c\\(0[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.0[\\n\\s]*1\\.0\\)"],["\\code\n (isqrt x) \\EQ (values (floor (sqrt x))) \n\\endcode","\\(isqrt[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(values[\\n\\s]*\\(floor[\\n\\s]*\\(sqrt[\\n\\s]*x\\)\\)\\)"],["\\code\n (let* ((rs1 (make-random-state nil))\n        (rs2 (make-random-state t))\n        (rs3 (make-random-state rs2))\n        (rs4 nil))\n   (list (loop for i from 1 to 10 \n               collect (random 100)\n               when (= i 5)\n                do (setq rs4 (make-random-state)))\n         (loop for i from 1 to 10 collect (random 100 rs1))\n         (loop for i from 1 to 10 collect (random 100 rs2))\n         (loop for i from 1 to 10 collect (random 100 rs3))\n         (loop for i from 1 to 10 collect (random 100 rs4))))\n*→* ((29 25 72 57 55 68 24 35 54 65)\n    (29 25 72 57 55 68 24 35 54 65)\n    (93 85 53 99 58 62 2 23 23 59)\n    (93 85 53 99 58 62 2 23 23 59)\n    (68 24 35 54 65 54 55 50 59 49))\n\\endcode","\\(let\\*[\\n\\s]*\\(\\(rs1[\\n\\s]*\\(make-random-state[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rs2[\\n\\s]*\\(make-random-state[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rs3[\\n\\s]*\\(make-random-state[\\n\\s]*rs2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rs4[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*\\(random[\\n\\s]*100\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*when[\\n\\s]*\\(=[\\n\\s]*i[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(setq[\\n\\s]*rs4[\\n\\s]*\\(make-random-state\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random[\\n\\s]*100[\\n\\s]*rs1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random[\\n\\s]*100[\\n\\s]*rs2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random[\\n\\s]*100[\\n\\s]*rs3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random[\\n\\s]*100[\\n\\s]*rs4\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(29[\\n\\s]*25[\\n\\s]*72[\\n\\s]*57[\\n\\s]*55[\\n\\s]*68[\\n\\s]*24[\\n\\s]*35[\\n\\s]*54[\\n\\s]*65\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(29[\\n\\s]*25[\\n\\s]*72[\\n\\s]*57[\\n\\s]*55[\\n\\s]*68[\\n\\s]*24[\\n\\s]*35[\\n\\s]*54[\\n\\s]*65\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(93[\\n\\s]*85[\\n\\s]*53[\\n\\s]*99[\\n\\s]*58[\\n\\s]*62[\\n\\s]*2[\\n\\s]*23[\\n\\s]*23[\\n\\s]*59\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(93[\\n\\s]*85[\\n\\s]*53[\\n\\s]*99[\\n\\s]*58[\\n\\s]*62[\\n\\s]*2[\\n\\s]*23[\\n\\s]*23[\\n\\s]*59\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(68[\\n\\s]*24[\\n\\s]*35[\\n\\s]*54[\\n\\s]*65[\\n\\s]*54[\\n\\s]*55[\\n\\s]*50[\\n\\s]*59[\\n\\s]*49\\)\\)"],["\\code\n (&#60;= 0 (random 1000) 1000) *→ true*\n (let ((state1 (make-random-state))\n       (state2 (make-random-state)))\n   (= (random 1000 state1) (random 1000 state2))) *→ true*\n\\endcode","\\(&#60;=[\\n\\s]*0[\\n\\s]*\\(random[\\n\\s]*1000\\)[\\n\\s]*1000\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(state1[\\n\\s]*\\(make-random-state\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(state2[\\n\\s]*\\(make-random-state\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(=[\\n\\s]*\\(random[\\n\\s]*1000[\\n\\s]*state1\\)[\\n\\s]*\\(random[\\n\\s]*1000[\\n\\s]*state2\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (random-state-p *random-state*) *→ true*\n (random-state-p (make-random-state)) *→ true*\n (random-state-p 'test-function) *→ false*\n\\endcode","\\(random-state-p[\\n\\s]*\\*random-state\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(random-state-p[\\n\\s]*\\(make-random-state\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(random-state-p[\\n\\s]*'test-function\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (random-state-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'random-state)\n\\endcode","\\(random-state-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'random-state\\)"],["\\code\n (random-state-p *random-state*) *→ true*\n (setq snap-shot (make-random-state))\n ;; The series from any given point is random,\n ;; but if you backtrack to that point, you get the same series.\n (list (loop for i from 1 to 10 collect (random))\n       (let ((*random-state* snap-shot))\n         (loop for i from 1 to 10 collect (random)))\n       (loop for i from 1 to 10 collect (random))\n       (let ((*random-state* snap-shot))\n         (loop for i from 1 to 10 collect (random))))\n*→* ((19 16 44 19 96 15 76 96 13 61)\n    (19 16 44 19 96 15 76 96 13 61)\n    (16 67 0 43 70 79 58 5 63 50)\n    (16 67 0 43 70 79 58 5 63 50))\n\\endcode","\\(random-state-p[\\n\\s]*\\*random-state\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*snap-shot[\\n\\s]*\\(make-random-state\\)\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*series[\\n\\s]*from[\\n\\s]*any[\\n\\s]*given[\\n\\s]*point[\\n\\s]*is[\\n\\s]*random,[\\n\\s]*[\\n\\s]*;;[\\n\\s]*but[\\n\\s]*if[\\n\\s]*you[\\n\\s]*backtrack[\\n\\s]*to[\\n\\s]*that[\\n\\s]*point,[\\n\\s]*you[\\n\\s]*get[\\n\\s]*the[\\n\\s]*same[\\n\\s]*series\\.[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*random-state\\*[\\n\\s]*snap-shot\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*random-state\\*[\\n\\s]*snap-shot\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*i[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*10[\\n\\s]*collect[\\n\\s]*\\(random\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(19[\\n\\s]*16[\\n\\s]*44[\\n\\s]*19[\\n\\s]*96[\\n\\s]*15[\\n\\s]*76[\\n\\s]*96[\\n\\s]*13[\\n\\s]*61\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(19[\\n\\s]*16[\\n\\s]*44[\\n\\s]*19[\\n\\s]*96[\\n\\s]*15[\\n\\s]*76[\\n\\s]*96[\\n\\s]*13[\\n\\s]*61\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(16[\\n\\s]*67[\\n\\s]*0[\\n\\s]*43[\\n\\s]*70[\\n\\s]*79[\\n\\s]*58[\\n\\s]*5[\\n\\s]*63[\\n\\s]*50\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(16[\\n\\s]*67[\\n\\s]*0[\\n\\s]*43[\\n\\s]*70[\\n\\s]*79[\\n\\s]*58[\\n\\s]*5[\\n\\s]*63[\\n\\s]*50\\)\\)"],["\\code\n (numberp 12) *→ true*\n (numberp (expt 2 130)) *→ true*\n (numberp #c(5/3 7.2)) *→ true*\n (numberp nil) *→ false*\n (numberp (cons 1 2)) *→ false*\n\\endcode","\\(numberp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(numberp[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*130\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(numberp[\\n\\s]*#c\\(5/3[\\n\\s]*7\\.2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(numberp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(numberp[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (numberp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'number)\n\\endcode","\\(numberp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'number\\)"],["\\code\n (cis 0) *→* #C(1.0 0.0)\n\\endcode","\\(cis[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)"],["\\code\n (complex 0) *→* 0\n (complex 0.0) *→* #C(0.0 0.0)\n (complex 1 1/2) *→* #C(1 1/2)\n (complex 1 .99) *→* #C(1.0 0.99)\n (complex 3/2 0.0) *→* #C(1.5 0.0)\n\\endcode","\\(complex[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(complex[\\n\\s]*0\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*[\\n\\s]*\\(complex[\\n\\s]*1[\\n\\s]*1/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1[\\n\\s]*1/2\\)[\\n\\s]*[\\n\\s]*\\(complex[\\n\\s]*1[\\n\\s]*\\.99\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.99\\)[\\n\\s]*[\\n\\s]*\\(complex[\\n\\s]*3/2[\\n\\s]*0\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1\\.5[\\n\\s]*0\\.0\\)"],["\\code\n%  #c(a b) \\EQ #.(complex a b)\n% \\endcode","%[\\n\\s]*[\\n\\s]*#c\\(a[\\n\\s]*b\\)[\\n\\s]*\\\\EQ[\\n\\s]*#\\.\\(complex[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*%"],["\\code\n (complexp 1.2d2) *→ false*\n (complexp #c(5/3 7.2)) *→ true*\n\n\\endcode","\\(complexp[\\n\\s]*1\\.2d2\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(complexp[\\n\\s]*#c\\(5/3[\\n\\s]*7\\.2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (complexp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'complex)\n\\endcode","\\(complexp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'complex\\)"],["\\code\n (conjugate #c(0 -1)) *→* #C(0 1)\n (conjugate #c(1 1)) *→* #C(1 -1)\n (conjugate 1.5) *→* 1.5\n (conjugate #C(3/5 4/5)) *→* #C(3/5 -4/5)\n (conjugate #C(0.0D0 -1.0D0)) *→* #C(0.0D0 1.0D0)\n (conjugate 3.7) *→* 3.7\n\\endcode","\\(conjugate[\\n\\s]*#c\\(0[\\n\\s]*-1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(conjugate[\\n\\s]*#c\\(1[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(1[\\n\\s]*-1\\)[\\n\\s]*[\\n\\s]*\\(conjugate[\\n\\s]*1\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.5[\\n\\s]*[\\n\\s]*\\(conjugate[\\n\\s]*#C\\(3/5[\\n\\s]*4/5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(3/5[\\n\\s]*-4/5\\)[\\n\\s]*[\\n\\s]*\\(conjugate[\\n\\s]*#C\\(0\\.0D0[\\n\\s]*-1\\.0D0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(0\\.0D0[\\n\\s]*1\\.0D0\\)[\\n\\s]*[\\n\\s]*\\(conjugate[\\n\\s]*3\\.7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.7"],["\\code\n (conjugate z) \\EQ (complex (realpart z) (- (imagpart z)))\n\\endcode","\\(conjugate[\\n\\s]*z\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(complex[\\n\\s]*\\(realpart[\\n\\s]*z\\)[\\n\\s]*\\(-[\\n\\s]*\\(imagpart[\\n\\s]*z\\)\\)\\)"],["\\code\n (phase 1) *→* 0.0s0\n (phase 0) *→* 0.0s0\n (phase (cis 30)) *→* -1.4159266\n (phase #c(0 1)) *→* 1.5707964\n\\endcode","\\(phase[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0s0[\\n\\s]*[\\n\\s]*\\(phase[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0s0[\\n\\s]*[\\n\\s]*\\(phase[\\n\\s]*\\(cis[\\n\\s]*30\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1\\.4159266[\\n\\s]*[\\n\\s]*\\(phase[\\n\\s]*#c\\(0[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.5707964"],["\\code\n (realpart #c(23 41)) *→* 23\n (imagpart #c(23 41.0)) *→* 41.0\n (realpart #c(23 41.0)) *→* 23.0\n (imagpart 23.0) *→* 0.0\n\\endcode","\\(realpart[\\n\\s]*#c\\(23[\\n\\s]*41\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*23[\\n\\s]*[\\n\\s]*\\(imagpart[\\n\\s]*#c\\(23[\\n\\s]*41\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*41\\.0[\\n\\s]*[\\n\\s]*\\(realpart[\\n\\s]*#c\\(23[\\n\\s]*41\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*23\\.0[\\n\\s]*[\\n\\s]*\\(imagpart[\\n\\s]*23\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0"],["\\code\n (realp 12) *→ true*\n (realp #c(5/3 7.2)) *→ false*\n (realp nil) *→ false*\n (realp (cons 1 2)) *→ false*\n\\endcode","\\(realp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(realp[\\n\\s]*#c\\(5/3[\\n\\s]*7\\.2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(realp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(realp[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (realp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'real)\n\\endcode","\\(realp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'real\\)"],["\\code\n (numerator 1/2) *→* 1\n (denominator 12/36) *→* 3\n (numerator -1) *→* -1\n (denominator (/ -33)) *→* 33\n (numerator (/ 8 -6)) *→* -4\n (denominator (/ 8 -6)) *→* 3\n\\endcode","\\(numerator[\\n\\s]*1/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(denominator[\\n\\s]*12/36\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(numerator[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(denominator[\\n\\s]*\\(/[\\n\\s]*-33\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*33[\\n\\s]*[\\n\\s]*\\(numerator[\\n\\s]*\\(/[\\n\\s]*8[\\n\\s]*-6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-4[\\n\\s]*[\\n\\s]*\\(denominator[\\n\\s]*\\(/[\\n\\s]*8[\\n\\s]*-6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3"],["\\code\n (gcd (numerator x) (denominator x)) *→* 1\n\\endcode","\\(gcd[\\n\\s]*\\(numerator[\\n\\s]*x\\)[\\n\\s]*\\(denominator[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n (rational 0) *→* 0\n (rationalize -11/100) *→* -11/100\n (rational .1) *→* 13421773/134217728 ;implementation-dependent\n (rationalize .1) *→* 1/10\n\\endcode","\\(rational[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(rationalize[\\n\\s]*-11/100\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-11/100[\\n\\s]*[\\n\\s]*\\(rational[\\n\\s]*\\.1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*13421773/134217728[\\n\\s]*;implementation-dependent[\\n\\s]*[\\n\\s]*\\(rationalize[\\n\\s]*\\.1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1/10"],["\\code\n (float (rational x) x) \\EQ x\n\\endcode","\\(float[\\n\\s]*\\(rational[\\n\\s]*x\\)[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*x"],["\\code\n (float (rationalize x) x) \\EQ x\n\\endcode","\\(float[\\n\\s]*\\(rationalize[\\n\\s]*x\\)[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*x"],["\\code\n (rationalp 12) *→ true*\n (rationalp 6/5) *→ true*\n (rationalp 1.212) *→ false*\n\\endcode","\\(rationalp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(rationalp[\\n\\s]*6/5\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(rationalp[\\n\\s]*1\\.212\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (rationalp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'rational)\n\\endcode","\\(rationalp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'rational\\)"],["\\code\n (ash 16 1) *→* 32\n (ash 16 0) *→* 16\n (ash 16 -1) *→* 8\n (ash -100000000000000000000000000000000 -100) *→* -79\n\\endcode","\\(ash[\\n\\s]*16[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*32[\\n\\s]*[\\n\\s]*\\(ash[\\n\\s]*16[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*16[\\n\\s]*[\\n\\s]*\\(ash[\\n\\s]*16[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*8[\\n\\s]*[\\n\\s]*\\(ash[\\n\\s]*-100000000000000000000000000000000[\\n\\s]*-100\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-79"],["\\code\n (logbitp \\param&#123;j&#125; (ash \\param&#123;n&#125; \\param&#123;k&#125;))\n \\EQ (and (&#62;= \\param&#123;j&#125; \\param&#123;k&#125;) (logbitp (- \\param&#123;j&#125; \\param&#123;k&#125;) \\param&#123;n&#125;))\n\\endcode","\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(ash[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\\\param&#123;k&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(and[\\n\\s]*\\(&#62;=[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;k&#125;\\)[\\n\\s]*\\(logbitp[\\n\\s]*\\(-[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;k&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)\\)"],["\\code\n (integer-length 0) *→* 0\n (integer-length 1) *→* 1\n (integer-length 3) *→* 2\n (integer-length 4) *→* 3\n (integer-length 7) *→* 3\n (integer-length -1) *→* 0\n (integer-length -4) *→* 2\n (integer-length -7) *→* 3\n (integer-length -8) *→* 3\n (integer-length (expt 2 9)) *→* 10\n (integer-length (1- (expt 2 9))) *→* 9\n (integer-length (- (expt 2 9))) *→* 9\n (integer-length (- (1+ (expt 2 9)))) *→* 10\n\\endcode","\\(integer-length[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*-4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*-7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*-8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*9\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*\\(1-[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*9\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*\\(-[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*9\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*9[\\n\\s]*[\\n\\s]*\\(integer-length[\\n\\s]*\\(-[\\n\\s]*\\(1\\+[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*9\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n(defun integer-length (integer)\n  (ceiling (log (if (minusp integer)\n                    (- integer)\n                    (1+ integer))\n                2)))\n\\endcode","\\(defun[\\n\\s]*integer-length[\\n\\s]*\\(integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(ceiling[\\n\\s]*\\(log[\\n\\s]*\\(if[\\n\\s]*\\(minusp[\\n\\s]*integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(-[\\n\\s]*integer\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(1\\+[\\n\\s]*integer\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*2\\)\\)\\)"],["\\code\n (integerp 1) *→ true*\n (integerp (expt 2 130)) *→ true*\n (integerp 6/5) *→ false*\n (integerp nil) *→ false*\n\n\\endcode","\\(integerp[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(integerp[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*130\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(integerp[\\n\\s]*6/5\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(integerp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (integerp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'integer)\n\\endcode","\\(integerp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'integer\\)"],["\\code\n (parse-integer \"123\") *→* 123, 3\n (parse-integer \"123\" :start 1 :radix 5) *→* 13, 3\n (parse-integer \"no-integer\" :junk-allowed t) *→* NIL, 0\n\\endcode","\\(parse-integer[\\n\\s]*\"123\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*123,[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(parse-integer[\\n\\s]*\"123\"[\\n\\s]*:start[\\n\\s]*1[\\n\\s]*:radix[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*13,[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(parse-integer[\\n\\s]*\"no-integer\"[\\n\\s]*:junk-allowed[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*0"],["\\code\n (boole boole-ior 1 16) *→* 17\n (boole boole-and -2 5) *→* 4\n (boole boole-eqv 17 15) *→* -31\n\n;;; These examples illustrate the result of applying BOOLE and each\n;;; of the possible values of OP to each possible combination of bits.\n (progn\n   (format t \"~&Results of (BOOLE &#60;op&#62; #b0011 #b0101) ...~\n           ~%---Op-------Decimal-----Binary----Bits---~%\")\n   (dolist (symbol '(boole-1     boole-2    boole-and  boole-andc1\n                     boole-andc2 boole-c1   boole-c2   boole-clr\n                     boole-eqv   boole-ior  boole-nand boole-nor\n                     boole-orc1  boole-orc2 boole-set  boole-xor))\n     (let ((result (boole (symbol-value symbol) #b0011 #b0101)))\n       (format t \"~& ~A~13T~3,' D~23T~:*~5,' B~31T ...~4,'0B~%\" \n               symbol result (logand result #b1111)))))\n\\OUT Results of (BOOLE &#60;op&#62; #b0011 #b0101) ...\n\\OUT ---Op-------Decimal-----Binary----Bits---\n\\OUT  BOOLE-1       3          11    ...0011\n\\OUT  BOOLE-2       5         101    ...0101\n\\OUT  BOOLE-AND     1           1    ...0001\n\\OUT  BOOLE-ANDC1   4         100    ...0100\n\\OUT  BOOLE-ANDC2   2          10    ...0010\n\\OUT  BOOLE-C1     -4        -100    ...1100\n\\OUT  BOOLE-C2     -6        -110    ...1010\n\\OUT  BOOLE-CLR     0           0    ...0000\n\\OUT  BOOLE-EQV    -7        -111    ...1001\n\\OUT  BOOLE-IOR     7         111    ...0111\n\\OUT  BOOLE-NAND   -2         -10    ...1110\n\\OUT  BOOLE-NOR    -8       -1000    ...1000\n\\OUT  BOOLE-ORC1   -3         -11    ...1101\n\\OUT  BOOLE-ORC2   -5        -101    ...1011\n\\OUT  BOOLE-SET    -1          -1    ...1111\n\\OUT  BOOLE-XOR     6         110    ...0110\n*→* NIL\n\\endcode","\\(boole[\\n\\s]*boole-ior[\\n\\s]*1[\\n\\s]*16\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*17[\\n\\s]*[\\n\\s]*\\(boole[\\n\\s]*boole-and[\\n\\s]*-2[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(boole[\\n\\s]*boole-eqv[\\n\\s]*17[\\n\\s]*15\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-31[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*These[\\n\\s]*examples[\\n\\s]*illustrate[\\n\\s]*the[\\n\\s]*result[\\n\\s]*of[\\n\\s]*applying[\\n\\s]*BOOLE[\\n\\s]*and[\\n\\s]*each[\\n\\s]*;;;[\\n\\s]*of[\\n\\s]*the[\\n\\s]*possible[\\n\\s]*values[\\n\\s]*of[\\n\\s]*OP[\\n\\s]*to[\\n\\s]*each[\\n\\s]*possible[\\n\\s]*combination[\\n\\s]*of[\\n\\s]*bits\\.[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Results[\\n\\s]*of[\\n\\s]*\\(BOOLE[\\n\\s]*&#60;op&#62;[\\n\\s]*#b0011[\\n\\s]*#b0101\\)[\\n\\s]*\\.\\.\\.~[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*~%---Op-------Decimal-----Binary----Bits---~%\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(symbol[\\n\\s]*'\\(boole-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-and[\\n\\s]*[\\n\\s]*boole-andc1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-andc2[\\n\\s]*boole-c1[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-c2[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-clr[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-eqv[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-ior[\\n\\s]*[\\n\\s]*boole-nand[\\n\\s]*boole-nor[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-orc1[\\n\\s]*[\\n\\s]*boole-orc2[\\n\\s]*boole-set[\\n\\s]*[\\n\\s]*boole-xor\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(result[\\n\\s]*\\(boole[\\n\\s]*\\(symbol-value[\\n\\s]*symbol\\)[\\n\\s]*#b0011[\\n\\s]*#b0101\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&[\\n\\s]*~A~13T~3,'[\\n\\s]*D~23T~:\\*~5,'[\\n\\s]*B~31T[\\n\\s]*\\.\\.\\.~4,'0B~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*symbol[\\n\\s]*result[\\n\\s]*\\(logand[\\n\\s]*result[\\n\\s]*#b1111\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Results[\\n\\s]*of[\\n\\s]*\\(BOOLE[\\n\\s]*&#60;op&#62;[\\n\\s]*#b0011[\\n\\s]*#b0101\\)[\\n\\s]*\\.\\.\\.[\\n\\s]*\\\\OUT[\\n\\s]*---Op-------Decimal-----Binary----Bits---[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*11[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0011[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*101[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0101[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-AND[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0001[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-ANDC1[\\n\\s]*[\\n\\s]*[\\n\\s]*4[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*100[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0100[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-ANDC2[\\n\\s]*[\\n\\s]*[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0010[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-C1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-4[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-100[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1100[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-C2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-110[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1010[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-CLR[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0000[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-EQV[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-7[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-111[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1001[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-IOR[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*7[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*111[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0111[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-NAND[\\n\\s]*[\\n\\s]*[\\n\\s]*-2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-10[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1110[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-NOR[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-8[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-1000[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1000[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-ORC1[\\n\\s]*[\\n\\s]*[\\n\\s]*-3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-11[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1101[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-ORC2[\\n\\s]*[\\n\\s]*[\\n\\s]*-5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-101[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1011[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-SET[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.1111[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*BOOLE-XOR[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*110[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.0110[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (boole boole-and x y) \\EQ (logand x y)\n\\endcode","\\(boole[\\n\\s]*boole-and[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(logand[\\n\\s]*x[\\n\\s]*y\\)"],["\\code\n;; The order of the values in this `table' are such that\n;; (logand (boole (elt boole-n-vector n) #b0101 #b0011) #b1111) =&#62; n\n (defconstant boole-n-vector\n    (vector boole-clr   boole-and  boole-andc1 boole-2\n            boole-andc2 boole-1    boole-xor   boole-ior\n            boole-nor   boole-eqv  boole-c1    boole-orc1\n            boole-c2    boole-orc2 boole-nand  boole-set))\n*→* BOOLE-N-VECTOR\n (proclaim '(inline boole-n))\n*→* \\term&#123;implementation-dependent&#125;\n (defun boole-n (n integer &rest more-integers)\n   (apply #'boole (elt boole-n-vector n) integer more-integers))\n*→* BOOLE-N\n (boole-n #b0111 5 3) *→* 7\n (boole-n #b0001 5 3) *→* 1\n (boole-n #b1101 5 3) *→* -3\n (loop for n from #b0000 to #b1111 collect (boole-n n 5 3))\n*→* (0 1 2 3 4 5 6 7 -8 -7 -6 -5 -4 -3 -2 -1)\n\\endcode",";;[\\n\\s]*The[\\n\\s]*order[\\n\\s]*of[\\n\\s]*the[\\n\\s]*values[\\n\\s]*in[\\n\\s]*this[\\n\\s]*`table'[\\n\\s]*are[\\n\\s]*such[\\n\\s]*that[\\n\\s]*;;[\\n\\s]*\\(logand[\\n\\s]*\\(boole[\\n\\s]*\\(elt[\\n\\s]*boole-n-vector[\\n\\s]*n\\)[\\n\\s]*#b0101[\\n\\s]*#b0011\\)[\\n\\s]*#b1111\\)[\\n\\s]*=&#62;[\\n\\s]*n[\\n\\s]*[\\n\\s]*\\(defconstant[\\n\\s]*boole-n-vector[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(vector[\\n\\s]*boole-clr[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-and[\\n\\s]*[\\n\\s]*boole-andc1[\\n\\s]*boole-2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-andc2[\\n\\s]*boole-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-xor[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-ior[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-nor[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-eqv[\\n\\s]*[\\n\\s]*boole-c1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-orc1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-c2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*boole-orc2[\\n\\s]*boole-nand[\\n\\s]*[\\n\\s]*boole-set\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BOOLE-N-VECTOR[\\n\\s]*[\\n\\s]*\\(proclaim[\\n\\s]*'\\(inline[\\n\\s]*boole-n\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*boole-n[\\n\\s]*\\(n[\\n\\s]*integer[\\n\\s]*&rest[\\n\\s]*more-integers\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'boole[\\n\\s]*\\(elt[\\n\\s]*boole-n-vector[\\n\\s]*n\\)[\\n\\s]*integer[\\n\\s]*more-integers\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BOOLE-N[\\n\\s]*[\\n\\s]*\\(boole-n[\\n\\s]*#b0111[\\n\\s]*5[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(boole-n[\\n\\s]*#b0001[\\n\\s]*5[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(boole-n[\\n\\s]*#b1101[\\n\\s]*5[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-3[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*n[\\n\\s]*from[\\n\\s]*#b0000[\\n\\s]*to[\\n\\s]*#b1111[\\n\\s]*collect[\\n\\s]*\\(boole-n[\\n\\s]*n[\\n\\s]*5[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*-8[\\n\\s]*-7[\\n\\s]*-6[\\n\\s]*-5[\\n\\s]*-4[\\n\\s]*-3[\\n\\s]*-2[\\n\\s]*-1\\)"],["\\code\n (boole boole-ior 1 16) *→* 17\n (boole boole-and -2 5) *→* 4\n (boole boole-eqv 17 15) *→* -31\n\\endcode","\\(boole[\\n\\s]*boole-ior[\\n\\s]*1[\\n\\s]*16\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*17[\\n\\s]*[\\n\\s]*\\(boole[\\n\\s]*boole-and[\\n\\s]*-2[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(boole[\\n\\s]*boole-eqv[\\n\\s]*17[\\n\\s]*15\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-31"],["\\code\n (logior 1 2 4 8) *→* 15\n (logxor 1 3 7 15) *→* 10\n (logeqv) *→* -1\n (logand 16 31) *→* 16\n (lognot 0) *→* -1\n (lognot 1) *→* -2\n (lognot -1) *→* 0\n (lognot (1+ (lognot 1000))) *→* 999\n\n;;; In the following example, m is a mask.  For each bit in\n;;; the mask that is a 1, the corresponding bits in x and y are\n;;; exchanged.  For each bit in the mask that is a 0, the \n;;; corresponding bits of x and y are left unchanged.\n (flet ((show (m x y)\n          (format t \"~%m = #o~6,'0O~%x = #o~6,'0O~%y = #o~6,'0O~%\"\n                  m x y)))\n   (let ((m #o007750)\n         (x #o452576)\n         (y #o317407))\n     (show m x y)\n     (let ((z (logand (logxor x y) m)))\n       (setq x (logxor z x))\n       (setq y (logxor z y))\n       (show m x y))))\n\\OUT m = #o007750\n\\OUT x = #o452576\n\\OUT y = #o317407\n\\OUT \n\\OUT m = #o007750\n\\OUT x = #o457426\n\\OUT y = #o312557\n*→* NIL\n\\endcode","\\(logior[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*8\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(logxor[\\n\\s]*1[\\n\\s]*3[\\n\\s]*7[\\n\\s]*15\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(logeqv\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(logand[\\n\\s]*16[\\n\\s]*31\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*16[\\n\\s]*[\\n\\s]*\\(lognot[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1[\\n\\s]*[\\n\\s]*\\(lognot[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-2[\\n\\s]*[\\n\\s]*\\(lognot[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(lognot[\\n\\s]*\\(1\\+[\\n\\s]*\\(lognot[\\n\\s]*1000\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*999[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*In[\\n\\s]*the[\\n\\s]*following[\\n\\s]*example,[\\n\\s]*m[\\n\\s]*is[\\n\\s]*a[\\n\\s]*mask\\.[\\n\\s]*[\\n\\s]*For[\\n\\s]*each[\\n\\s]*bit[\\n\\s]*in[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*mask[\\n\\s]*that[\\n\\s]*is[\\n\\s]*a[\\n\\s]*1,[\\n\\s]*the[\\n\\s]*corresponding[\\n\\s]*bits[\\n\\s]*in[\\n\\s]*x[\\n\\s]*and[\\n\\s]*y[\\n\\s]*are[\\n\\s]*;;;[\\n\\s]*exchanged\\.[\\n\\s]*[\\n\\s]*For[\\n\\s]*each[\\n\\s]*bit[\\n\\s]*in[\\n\\s]*the[\\n\\s]*mask[\\n\\s]*that[\\n\\s]*is[\\n\\s]*a[\\n\\s]*0,[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*corresponding[\\n\\s]*bits[\\n\\s]*of[\\n\\s]*x[\\n\\s]*and[\\n\\s]*y[\\n\\s]*are[\\n\\s]*left[\\n\\s]*unchanged\\.[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(show[\\n\\s]*\\(m[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~%m[\\n\\s]*=[\\n\\s]*#o~6,'0O~%x[\\n\\s]*=[\\n\\s]*#o~6,'0O~%y[\\n\\s]*=[\\n\\s]*#o~6,'0O~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*m[\\n\\s]*x[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(m[\\n\\s]*#o007750\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x[\\n\\s]*#o452576\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*#o317407\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(show[\\n\\s]*m[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(z[\\n\\s]*\\(logand[\\n\\s]*\\(logxor[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*m\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(logxor[\\n\\s]*z[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*y[\\n\\s]*\\(logxor[\\n\\s]*z[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(show[\\n\\s]*m[\\n\\s]*x[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*m[\\n\\s]*=[\\n\\s]*#o007750[\\n\\s]*\\\\OUT[\\n\\s]*x[\\n\\s]*=[\\n\\s]*#o452576[\\n\\s]*\\\\OUT[\\n\\s]*y[\\n\\s]*=[\\n\\s]*#o317407[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*m[\\n\\s]*=[\\n\\s]*#o007750[\\n\\s]*\\\\OUT[\\n\\s]*x[\\n\\s]*=[\\n\\s]*#o457426[\\n\\s]*\\\\OUT[\\n\\s]*y[\\n\\s]*=[\\n\\s]*#o312557[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (lognand \\param&#123;n1&#125; \\param&#123;n2&#125;) \\EQ (lognot (logand \\param&#123;n1&#125; \\param&#123;n2&#125;))\n (lognor \\param&#123;n1&#125; \\param&#123;n2&#125;) \\EQ (lognot (logior \\param&#123;n1&#125; \\param&#123;n2&#125;))\n (logandc1 \\param&#123;n1&#125; \\param&#123;n2&#125;) \\EQ (logand (lognot \\param&#123;n1&#125;) \\param&#123;n2&#125;)\n (logandc2 \\param&#123;n1&#125; \\param&#123;n2&#125;) \\EQ (logand \\param&#123;n1&#125; (lognot \\param&#123;n2&#125;))\n (logiorc1 \\param&#123;n1&#125; \\param&#123;n2&#125;) \\EQ (logior (lognot \\param&#123;n1&#125;) \\param&#123;n2&#125;)\n (logiorc2 \\param&#123;n1&#125; \\param&#123;n2&#125;) \\EQ (logior \\param&#123;n1&#125; (lognot \\param&#123;n2&#125;))\n (logbitp \\param&#123;j&#125; (lognot \\param&#123;x&#125;)) \\EQ (not (logbitp \\param&#123;j&#125; \\param&#123;x&#125;))\n\\endcode","\\(lognand[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(lognot[\\n\\s]*\\(logand[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(lognor[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(lognot[\\n\\s]*\\(logior[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(logandc1[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(logand[\\n\\s]*\\(lognot[\\n\\s]*\\\\param&#123;n1&#125;\\)[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*[\\n\\s]*\\(logandc2[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(logand[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\(lognot[\\n\\s]*\\\\param&#123;n2&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(logiorc1[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(logior[\\n\\s]*\\(lognot[\\n\\s]*\\\\param&#123;n1&#125;\\)[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*[\\n\\s]*\\(logiorc2[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\\\param&#123;n2&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(logior[\\n\\s]*\\\\param&#123;n1&#125;[\\n\\s]*\\(lognot[\\n\\s]*\\\\param&#123;n2&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(lognot[\\n\\s]*\\\\param&#123;x&#125;\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;x&#125;\\)\\)"],["\\code\n (logbitp 1 1) *→ false*\n (logbitp 0 1) *→ true*\n (logbitp 3 10) *→ true*\n (logbitp 1000000 -1) *→ true*\n (logbitp 2 6) *→ true*\n (logbitp 0 6) *→ false*\n\\endcode","\\(logbitp[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*0[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*3[\\n\\s]*10\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*1000000[\\n\\s]*-1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*2[\\n\\s]*6\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*0[\\n\\s]*6\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (logbitp \\param&#123;k&#125; \\param&#123;n&#125;) \\EQ (ldb-test (byte 1 \\param&#123;k&#125;) \\param&#123;n&#125;)\n\\endcode","\\(logbitp[\\n\\s]*\\\\param&#123;k&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(ldb-test[\\n\\s]*\\(byte[\\n\\s]*1[\\n\\s]*\\\\param&#123;k&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)"],["\\code\n (logcount 0) *→* 0\n (logcount -1) *→* 0\n (logcount 7) *→* 3\n (logcount  13) *→* 3 ;Two's-complement binary: ...0001101\n (logcount -13) *→* 2 ;Two's-complement binary: ...1110011\n (logcount  30) *→* 4 ;Two's-complement binary: ...0011110\n (logcount -30) *→* 4 ;Two's-complement binary: ...1100010\n (logcount (expt 2 100)) *→* 1\n (logcount (- (expt 2 100))) *→* 100\n (logcount (- (1+ (expt 2 100)))) *→* 1\n\\endcode","\\(logcount[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*[\\n\\s]*13\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*;Two's-complement[\\n\\s]*binary:[\\n\\s]*\\.\\.\\.0001101[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*-13\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*;Two's-complement[\\n\\s]*binary:[\\n\\s]*\\.\\.\\.1110011[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*[\\n\\s]*30\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*;Two's-complement[\\n\\s]*binary:[\\n\\s]*\\.\\.\\.0011110[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*-30\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*;Two's-complement[\\n\\s]*binary:[\\n\\s]*\\.\\.\\.1100010[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*100\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*\\(-[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*100\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*100[\\n\\s]*[\\n\\s]*\\(logcount[\\n\\s]*\\(-[\\n\\s]*\\(1\\+[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*100\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1"],["\\code\n    (logcount \\param&#123;x&#125;)\n \\EQ (logcount (- (+ \\param&#123;x&#125; 1)))\n \\EQ (logcount (lognot \\param&#123;x&#125;))\n\\endcode","\\(logcount[\\n\\s]*\\\\param&#123;x&#125;\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(logcount[\\n\\s]*\\(-[\\n\\s]*\\(\\+[\\n\\s]*\\\\param&#123;x&#125;[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(logcount[\\n\\s]*\\(lognot[\\n\\s]*\\\\param&#123;x&#125;\\)\\)"],["\\code\n (logtest 1 7) *→ true*\n (logtest 1 2) *→ false*\n (logtest -2 -1) *→ true*\n (logtest 0 -1) *→ false*\n\\endcode","\\(logtest[\\n\\s]*1[\\n\\s]*7\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(logtest[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(logtest[\\n\\s]*-2[\\n\\s]*-1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(logtest[\\n\\s]*0[\\n\\s]*-1\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (logtest \\param&#123;x&#125; \\param&#123;y&#125;) \\EQ (not (zerop (logand \\param&#123;x&#125; \\param&#123;y&#125;)))\n\\endcode","\\(logtest[\\n\\s]*\\\\param&#123;x&#125;[\\n\\s]*\\\\param&#123;y&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(not[\\n\\s]*\\(zerop[\\n\\s]*\\(logand[\\n\\s]*\\\\param&#123;x&#125;[\\n\\s]*\\\\param&#123;y&#125;\\)\\)\\)"],["\\code\n (setq b (byte 100 200)) *→* #&#60;BYTE-SPECIFIER size 100 position 200&#62;\n (byte-size b) *→* 100\n (byte-position b) *→* 200\n\\endcode","\\(setq[\\n\\s]*b[\\n\\s]*\\(byte[\\n\\s]*100[\\n\\s]*200\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;BYTE-SPECIFIER[\\n\\s]*size[\\n\\s]*100[\\n\\s]*position[\\n\\s]*200&#62;[\\n\\s]*[\\n\\s]*\\(byte-size[\\n\\s]*b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*100[\\n\\s]*[\\n\\s]*\\(byte-position[\\n\\s]*b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*200"],["\\code\n (byte-size (byte \\param&#123;j&#125; \\param&#123;k&#125;)) \\EQ \\param&#123;j&#125;\n (byte-position (byte \\param&#123;j&#125; \\param&#123;k&#125;)) \\EQ \\param&#123;k&#125;\n\\endcode","\\(byte-size[\\n\\s]*\\(byte[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;k&#125;\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*[\\n\\s]*\\(byte-position[\\n\\s]*\\(byte[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;k&#125;\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\\\param&#123;k&#125;"],["\\code\n (ldb (byte 0 3) #o7777) *→* 0\n (dpb #o7777 (byte 0 3) 0) *→* 0\n\\endcode","\\(ldb[\\n\\s]*\\(byte[\\n\\s]*0[\\n\\s]*3\\)[\\n\\s]*#o7777\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(dpb[\\n\\s]*#o7777[\\n\\s]*\\(byte[\\n\\s]*0[\\n\\s]*3\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0"],["\\code\n (deposit-field 7 (byte 2 1) 0) *→* 6\n (deposit-field -1 (byte 4 0) 0) *→* 15\n (deposit-field 0 (byte 2 1) -3) *→* -7\n\\endcode","\\(deposit-field[\\n\\s]*7[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\(deposit-field[\\n\\s]*-1[\\n\\s]*\\(byte[\\n\\s]*4[\\n\\s]*0\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(deposit-field[\\n\\s]*0[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*-3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-7"],["\\code\n (logbitp \\param&#123;j&#125; (deposit-field \\param&#123;m&#125; (byte \\param&#123;s&#125; \\param&#123;p&#125;) \\param&#123;n&#125;))\n \\EQ (if (and (&#62;= \\param&#123;j&#125; \\param&#123;p&#125;) (&#60; \\param&#123;j&#125; (+ \\param&#123;p&#125; \\param&#123;s&#125;)))\n        (logbitp \\param&#123;j&#125; \\param&#123;m&#125;)\n        (logbitp \\param&#123;j&#125; \\param&#123;n&#125;))\n\\endcode","\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(deposit-field[\\n\\s]*\\\\param&#123;m&#125;[\\n\\s]*\\(byte[\\n\\s]*\\\\param&#123;s&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(if[\\n\\s]*\\(and[\\n\\s]*\\(&#62;=[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\(&#60;[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(\\+[\\n\\s]*\\\\param&#123;p&#125;[\\n\\s]*\\\\param&#123;s&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;m&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)\\)"],["\\code\n (dpb 1 (byte 1 10) 0) *→* 1024\n (dpb -2 (byte 2 10) 0) *→* 2048\n (dpb 1 (byte 2 10) 2048) *→* 1024\n\\endcode","\\(dpb[\\n\\s]*1[\\n\\s]*\\(byte[\\n\\s]*1[\\n\\s]*10\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1024[\\n\\s]*[\\n\\s]*\\(dpb[\\n\\s]*-2[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*10\\)[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2048[\\n\\s]*[\\n\\s]*\\(dpb[\\n\\s]*1[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*10\\)[\\n\\s]*2048\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1024"],["\\code\n (logbitp \\param&#123;j&#125; (dpb \\param&#123;m&#125; (byte \\param&#123;s&#125; \\param&#123;p&#125;) \\param&#123;n&#125;))\n \\EQ (if (and (&#62;= \\param&#123;j&#125; \\param&#123;p&#125;) (&#60; \\param&#123;j&#125; (+ \\param&#123;p&#125; \\param&#123;s&#125;)))\n        (logbitp (- \\param&#123;j&#125; \\param&#123;p&#125;) \\param&#123;m&#125;)\n        (logbitp \\param&#123;j&#125; \\param&#123;n&#125;))\n\\endcode","\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(dpb[\\n\\s]*\\\\param&#123;m&#125;[\\n\\s]*\\(byte[\\n\\s]*\\\\param&#123;s&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(if[\\n\\s]*\\(and[\\n\\s]*\\(&#62;=[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\(&#60;[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(\\+[\\n\\s]*\\\\param&#123;p&#125;[\\n\\s]*\\\\param&#123;s&#125;\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*\\(-[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\\\param&#123;m&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)\\)"],["\\code\n (dpb \\param&#123;x&#125; (byte 0 \\param&#123;y&#125;) \\param&#123;z&#125;) *→* \\param&#123;z&#125;\n\\endcode","\\(dpb[\\n\\s]*\\\\param&#123;x&#125;[\\n\\s]*\\(byte[\\n\\s]*0[\\n\\s]*\\\\param&#123;y&#125;\\)[\\n\\s]*\\\\param&#123;z&#125;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\param&#123;z&#125;"],["\\code\n (ldb (byte 2 1) 10) *→* 1\n (setq a (list 8)) *→* (8)\n (setf (ldb (byte 2 1) (car a)) 1) *→* 1\n a *→* (10)\n\\endcode","\\(ldb[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*\\(list[\\n\\s]*8\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(8\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(ldb[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*\\(car[\\n\\s]*a\\)\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(10\\)"],["\\code\n (logbitp \\param&#123;j&#125; (ldb (byte \\param&#123;s&#125; \\param&#123;p&#125;) \\param&#123;n&#125;))\n    \\EQ (and (&#60; \\param&#123;j&#125; \\param&#123;s&#125;) (logbitp (+ \\param&#123;j&#125; \\param&#123;p&#125;) \\param&#123;n&#125;))\n\\endcode","\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(ldb[\\n\\s]*\\(byte[\\n\\s]*\\\\param&#123;s&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(and[\\n\\s]*\\(&#60;[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;s&#125;\\)[\\n\\s]*\\(logbitp[\\n\\s]*\\(\\+[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)\\)"],["\\code\n (ldb (byte 0 \\param&#123;x&#125;) \\param&#123;y&#125;) *→* 0\n\\endcode","\\(ldb[\\n\\s]*\\(byte[\\n\\s]*0[\\n\\s]*\\\\param&#123;x&#125;\\)[\\n\\s]*\\\\param&#123;y&#125;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0"],["\\code\n (ldb-test (byte 4 1) 16) *→ true*\n (ldb-test (byte 3 1) 16) *→ false*\n (ldb-test (byte 3 2) 16) *→ true*\n\\endcode","\\(ldb-test[\\n\\s]*\\(byte[\\n\\s]*4[\\n\\s]*1\\)[\\n\\s]*16\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(ldb-test[\\n\\s]*\\(byte[\\n\\s]*3[\\n\\s]*1\\)[\\n\\s]*16\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(ldb-test[\\n\\s]*\\(byte[\\n\\s]*3[\\n\\s]*2\\)[\\n\\s]*16\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (ldb-test bytespec n) \\EQ\n (not (zerop (ldb bytespec n))) \\EQ\n (logtest (ldb bytespec -1) n)\n\\endcode","\\(ldb-test[\\n\\s]*bytespec[\\n\\s]*n\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(zerop[\\n\\s]*\\(ldb[\\n\\s]*bytespec[\\n\\s]*n\\)\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*[\\n\\s]*\\(logtest[\\n\\s]*\\(ldb[\\n\\s]*bytespec[\\n\\s]*-1\\)[\\n\\s]*n\\)"],["\\code\n (mask-field (byte 1 5) -1) *→* 32\n (setq a 15) *→* 15\n (mask-field (byte 2 0) a) *→* 3\n a *→* 15\n (setf (mask-field (byte 2 0) a) 1) *→* 1\n a *→* 13\n\\endcode","\\(mask-field[\\n\\s]*\\(byte[\\n\\s]*1[\\n\\s]*5\\)[\\n\\s]*-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*32[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*15\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(mask-field[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*0\\)[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(mask-field[\\n\\s]*\\(byte[\\n\\s]*2[\\n\\s]*0\\)[\\n\\s]*a\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*13"],["\\code\n (ldb \\param&#123;bs&#125; (mask-field \\param&#123;bs&#125; \\param&#123;n&#125;)) \\EQ (ldb \\param&#123;bs&#125; \\param&#123;n&#125;)\n (logbitp \\param&#123;j&#125; (mask-field (byte \\param&#123;s&#125; \\param&#123;p&#125;) \\param&#123;n&#125;))\n   \\EQ (and (&#62;= \\param&#123;j&#125; \\param&#123;p&#125;) (&#60; \\param&#123;j&#125; \\param&#123;s&#125;) (logbitp \\param&#123;j&#125; \\param&#123;n&#125;))\n (mask-field \\param&#123;bs&#125; \\param&#123;n&#125;) \\EQ (logand \\param&#123;n&#125; (dpb -1 \\param&#123;bs&#125; 0))\n\\endcode","\\(ldb[\\n\\s]*\\\\param&#123;bs&#125;[\\n\\s]*\\(mask-field[\\n\\s]*\\\\param&#123;bs&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(ldb[\\n\\s]*\\\\param&#123;bs&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)[\\n\\s]*[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\(mask-field[\\n\\s]*\\(byte[\\n\\s]*\\\\param&#123;s&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\\\param&#123;n&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(and[\\n\\s]*\\(&#62;=[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;p&#125;\\)[\\n\\s]*\\(&#60;[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;s&#125;\\)[\\n\\s]*\\(logbitp[\\n\\s]*\\\\param&#123;j&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)\\)[\\n\\s]*[\\n\\s]*\\(mask-field[\\n\\s]*\\\\param&#123;bs&#125;[\\n\\s]*\\\\param&#123;n&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(logand[\\n\\s]*\\\\param&#123;n&#125;[\\n\\s]*\\(dpb[\\n\\s]*-1[\\n\\s]*\\\\param&#123;bs&#125;[\\n\\s]*0\\)\\)"],["\\code\n (multiple-value-bind (signif expon sign)\n                      (integer-decode-float f)\n   (scale-float (float signif f) expon)) \\EQ (abs f)\n\\endcode","\\(multiple-value-bind[\\n\\s]*\\(signif[\\n\\s]*expon[\\n\\s]*sign\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(integer-decode-float[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(scale-float[\\n\\s]*\\(float[\\n\\s]*signif[\\n\\s]*f\\)[\\n\\s]*expon\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(abs[\\n\\s]*f\\)"],["\\code\n ;; Note that since the purpose of this functionality is to expose\n ;; details of the implementation, all of these examples are necessarily\n ;; very implementation-dependent.  Results may vary widely.\n ;; Values shown here are chosen consistently from one particular implementation.\n (decode-float .5) *→* 0.5, 0, 1.0\n (decode-float 1.0) *→* 0.5, 1, 1.0\n (scale-float 1.0 1) *→* 2.0\n (scale-float 10.01 -2) *→* 2.5025\n (scale-float 23.0 0) *→* 23.0\n (float-radix 1.0) *→* 2\n (float-sign 5.0) *→* 1.0\n (float-sign -5.0) *→* -1.0\n (float-sign 0.0) *→* 1.0\n (float-sign 1.0 0.0) *→* 0.0\n (float-sign 1.0 -10.0) *→* 10.0\n (float-sign -1.0 10.0) *→* -10.0\n (float-digits 1.0) *→* 24\n (float-precision 1.0) *→* 24\n (float-precision least-positive-single-float) *→* 1\n (integer-decode-float 1.0) *→* 8388608, -23, 1\n\\endcode",";;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*since[\\n\\s]*the[\\n\\s]*purpose[\\n\\s]*of[\\n\\s]*this[\\n\\s]*functionality[\\n\\s]*is[\\n\\s]*to[\\n\\s]*expose[\\n\\s]*[\\n\\s]*;;[\\n\\s]*details[\\n\\s]*of[\\n\\s]*the[\\n\\s]*implementation,[\\n\\s]*all[\\n\\s]*of[\\n\\s]*these[\\n\\s]*examples[\\n\\s]*are[\\n\\s]*necessarily[\\n\\s]*[\\n\\s]*;;[\\n\\s]*very[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*Results[\\n\\s]*may[\\n\\s]*vary[\\n\\s]*widely\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Values[\\n\\s]*shown[\\n\\s]*here[\\n\\s]*are[\\n\\s]*chosen[\\n\\s]*consistently[\\n\\s]*from[\\n\\s]*one[\\n\\s]*particular[\\n\\s]*implementation\\.[\\n\\s]*[\\n\\s]*\\(decode-float[\\n\\s]*\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.5,[\\n\\s]*0,[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(decode-float[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.5,[\\n\\s]*1,[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(scale-float[\\n\\s]*1\\.0[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.0[\\n\\s]*[\\n\\s]*\\(scale-float[\\n\\s]*10\\.01[\\n\\s]*-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2\\.5025[\\n\\s]*[\\n\\s]*\\(scale-float[\\n\\s]*23\\.0[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*23\\.0[\\n\\s]*[\\n\\s]*\\(float-radix[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(float-sign[\\n\\s]*5\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(float-sign[\\n\\s]*-5\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-1\\.0[\\n\\s]*[\\n\\s]*\\(float-sign[\\n\\s]*0\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(float-sign[\\n\\s]*1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0[\\n\\s]*[\\n\\s]*\\(float-sign[\\n\\s]*1\\.0[\\n\\s]*-10\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10\\.0[\\n\\s]*[\\n\\s]*\\(float-sign[\\n\\s]*-1\\.0[\\n\\s]*10\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-10\\.0[\\n\\s]*[\\n\\s]*\\(float-digits[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*24[\\n\\s]*[\\n\\s]*\\(float-precision[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*24[\\n\\s]*[\\n\\s]*\\(float-precision[\\n\\s]*least-positive-single-float\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(integer-decode-float[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*8388608,[\\n\\s]*-23,[\\n\\s]*1"],["\\code\n (multiple-value-bind (signif expon sign)\n                      (decode-float f)\n   (scale-float signif expon))\n\\EQ (abs f)\n\\endcode","\\(multiple-value-bind[\\n\\s]*\\(signif[\\n\\s]*expon[\\n\\s]*sign\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(decode-float[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(scale-float[\\n\\s]*signif[\\n\\s]*expon\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(abs[\\n\\s]*f\\)"],["\\code\n (multiple-value-bind (signif expon sign)\n                      (decode-float f)\n   (* (scale-float signif expon) sign))\n\\EQ f\n\\endcode","\\(multiple-value-bind[\\n\\s]*\\(signif[\\n\\s]*expon[\\n\\s]*sign\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(decode-float[\\n\\s]*f\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*[\\n\\s]*\\(scale-float[\\n\\s]*signif[\\n\\s]*expon\\)[\\n\\s]*sign\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*f"],["\\code\n (float 0) *→* 0.0\n (float 1 .5) *→* 1.0\n (float 1.0) *→* 1.0\n (float 1/2) *→* 0.5\n*→* 1.0d0\n\\OV 1.0\n (eql (float 1.0 1.0d0) 1.0d0) *→ true*\n\\endcode","\\(float[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0[\\n\\s]*[\\n\\s]*\\(float[\\n\\s]*1[\\n\\s]*\\.5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(float[\\n\\s]*1\\.0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(float[\\n\\s]*1/2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.5[\\n\\s]*\\*\\→\\*[\\n\\s]*1\\.0d0[\\n\\s]*\\\\OV[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*\\(float[\\n\\s]*1\\.0[\\n\\s]*1\\.0d0\\)[\\n\\s]*1\\.0d0\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (floatp 1.2d2) *→ true*\n (floatp 1.212) *→ true*\n (floatp 1.2s2) *→ true*\n (floatp (expt 2 130)) *→ false*\n\\endcode","\\(floatp[\\n\\s]*1\\.2d2\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(floatp[\\n\\s]*1\\.212\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(floatp[\\n\\s]*1\\.2s2\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(floatp[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*130\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (floatp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'float)\n\\endcode","\\(floatp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'float\\)"],["\\code\n (defmethod gf1 ((a integer) &optional (b 2)\n                 &key (c 3) ((:dee d) 4) e ((eff f)))\n   (list a b c d e f))\n*→* #&#60;STANDARD-METHOD GF1 (INTEGER) 36324653&#62;\n (find-method #'gf1 '() (list (find-class 'integer))) \n*→* #&#60;STANDARD-METHOD GF1 (INTEGER) 36324653&#62;\n (function-keywords *)\n*→* (:C :DEE :E EFF), false\n (defmethod gf2 ((a integer))\n   (list a b c d e f))\n*→* #&#60;STANDARD-METHOD GF2 (INTEGER) 42701775&#62;\n (function-keywords (find-method #'gf1 '() (list (find-class 'integer))))\n*→* (), false\n (defmethod gf3 ((a integer) &key b c d &allow-other-keys)\n   (list a b c d e f))\n (function-keywords *)\n*→* (:B :C :D), true\n\\endcode","\\(defmethod[\\n\\s]*gf1[\\n\\s]*\\(\\(a[\\n\\s]*integer\\)[\\n\\s]*&optional[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&key[\\n\\s]*\\(c[\\n\\s]*3\\)[\\n\\s]*\\(\\(:dee[\\n\\s]*d\\)[\\n\\s]*4\\)[\\n\\s]*e[\\n\\s]*\\(\\(eff[\\n\\s]*f\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*GF1[\\n\\s]*\\(INTEGER\\)[\\n\\s]*36324653&#62;[\\n\\s]*[\\n\\s]*\\(find-method[\\n\\s]*#'gf1[\\n\\s]*'\\(\\)[\\n\\s]*\\(list[\\n\\s]*\\(find-class[\\n\\s]*'integer\\)\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*GF1[\\n\\s]*\\(INTEGER\\)[\\n\\s]*36324653&#62;[\\n\\s]*[\\n\\s]*\\(function-keywords[\\n\\s]*\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:C[\\n\\s]*:DEE[\\n\\s]*:E[\\n\\s]*EFF\\),[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*gf2[\\n\\s]*\\(\\(a[\\n\\s]*integer\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*GF2[\\n\\s]*\\(INTEGER\\)[\\n\\s]*42701775&#62;[\\n\\s]*[\\n\\s]*\\(function-keywords[\\n\\s]*\\(find-method[\\n\\s]*#'gf1[\\n\\s]*'\\(\\)[\\n\\s]*\\(list[\\n\\s]*\\(find-class[\\n\\s]*'integer\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\),[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*gf3[\\n\\s]*\\(\\(a[\\n\\s]*integer\\)[\\n\\s]*&key[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*&allow-other-keys\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f\\)\\)[\\n\\s]*[\\n\\s]*\\(function-keywords[\\n\\s]*\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:B[\\n\\s]*:C[\\n\\s]*:D\\),[\\n\\s]*true"],["\\code\n  \n (defclass position () ())\n \n (defclass x-y-position (position)\n     ((x :initform 0 :accessor position-x)\n      (y :initform 0 :accessor position-y)))\n \n;;; It turns out polar coordinates are used more than Cartesian \n;;; coordinates, so the representation is altered and some new\n;;; accessor methods are added.\n \n (defmethod update-instance-for-redefined-class :before\n    ((pos x-y-position) added deleted plist &key)\n   ;; Transform the x-y coordinates to polar coordinates\n   ;; and store into the new slots.\n   (let ((x (getf plist 'x))\n         (y (getf plist 'y)))\n     (setf (position-rho pos) (sqrt (+ (* x x) (* y y)))\n           (position-theta pos) (atan y x))))\n  \n (defclass x-y-position (position)\n     ((rho :initform 0 :accessor position-rho)\n      (theta :initform 0 :accessor position-theta)))\n  \n;;; All instances of the old x-y-position class will be updated\n;;; automatically.\n \n;;; The new representation is given the look and feel of the old one.\n \n (defmethod position-x ((pos x-y-position))  \n    (with-slots (rho theta) pos (* rho (cos theta))))\n \n (defmethod (setf position-x) (new-x (pos x-y-position))\n    (with-slots (rho theta) pos\n      (let ((y (position-y pos)))\n        (setq rho (sqrt (+ (* new-x new-x) (* y y)))\n              theta (atan y new-x))\n        new-x)))\n \n (defmethod position-y ((pos x-y-position))\n    (with-slots (rho theta) pos (* rho (sin theta))))\n \n (defmethod (setf position-y) (new-y (pos x-y-position))\n    (with-slots (rho theta) pos\n      (let ((x (position-x pos)))\n        (setq rho (sqrt (+ (* x x) (* new-y new-y)))\n              theta (atan new-y x))\n        new-y)))\n \n\\endcode","\\(defclass[\\n\\s]*position[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*x-y-position[\\n\\s]*\\(position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(x[\\n\\s]*:initform[\\n\\s]*0[\\n\\s]*:accessor[\\n\\s]*position-x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*:initform[\\n\\s]*0[\\n\\s]*:accessor[\\n\\s]*position-y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*It[\\n\\s]*turns[\\n\\s]*out[\\n\\s]*polar[\\n\\s]*coordinates[\\n\\s]*are[\\n\\s]*used[\\n\\s]*more[\\n\\s]*than[\\n\\s]*Cartesian[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*coordinates,[\\n\\s]*so[\\n\\s]*the[\\n\\s]*representation[\\n\\s]*is[\\n\\s]*altered[\\n\\s]*and[\\n\\s]*some[\\n\\s]*new[\\n\\s]*;;;[\\n\\s]*accessor[\\n\\s]*methods[\\n\\s]*are[\\n\\s]*added\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*update-instance-for-redefined-class[\\n\\s]*:before[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(pos[\\n\\s]*x-y-position\\)[\\n\\s]*added[\\n\\s]*deleted[\\n\\s]*plist[\\n\\s]*&key\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Transform[\\n\\s]*the[\\n\\s]*x-y[\\n\\s]*coordinates[\\n\\s]*to[\\n\\s]*polar[\\n\\s]*coordinates[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*and[\\n\\s]*store[\\n\\s]*into[\\n\\s]*the[\\n\\s]*new[\\n\\s]*slots\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(getf[\\n\\s]*plist[\\n\\s]*'x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*\\(getf[\\n\\s]*plist[\\n\\s]*'y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(position-rho[\\n\\s]*pos\\)[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(\\*[\\n\\s]*y[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(position-theta[\\n\\s]*pos\\)[\\n\\s]*\\(atan[\\n\\s]*y[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*x-y-position[\\n\\s]*\\(position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(rho[\\n\\s]*:initform[\\n\\s]*0[\\n\\s]*:accessor[\\n\\s]*position-rho\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(theta[\\n\\s]*:initform[\\n\\s]*0[\\n\\s]*:accessor[\\n\\s]*position-theta\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*All[\\n\\s]*instances[\\n\\s]*of[\\n\\s]*the[\\n\\s]*old[\\n\\s]*x-y-position[\\n\\s]*class[\\n\\s]*will[\\n\\s]*be[\\n\\s]*updated[\\n\\s]*;;;[\\n\\s]*automatically\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*new[\\n\\s]*representation[\\n\\s]*is[\\n\\s]*given[\\n\\s]*the[\\n\\s]*look[\\n\\s]*and[\\n\\s]*feel[\\n\\s]*of[\\n\\s]*the[\\n\\s]*old[\\n\\s]*one\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*position-x[\\n\\s]*\\(\\(pos[\\n\\s]*x-y-position\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(rho[\\n\\s]*theta\\)[\\n\\s]*pos[\\n\\s]*\\(\\*[\\n\\s]*rho[\\n\\s]*\\(cos[\\n\\s]*theta\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*\\(setf[\\n\\s]*position-x\\)[\\n\\s]*\\(new-x[\\n\\s]*\\(pos[\\n\\s]*x-y-position\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(rho[\\n\\s]*theta\\)[\\n\\s]*pos[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(y[\\n\\s]*\\(position-y[\\n\\s]*pos\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*rho[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(\\*[\\n\\s]*new-x[\\n\\s]*new-x\\)[\\n\\s]*\\(\\*[\\n\\s]*y[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*theta[\\n\\s]*\\(atan[\\n\\s]*y[\\n\\s]*new-x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*new-x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*position-y[\\n\\s]*\\(\\(pos[\\n\\s]*x-y-position\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(rho[\\n\\s]*theta\\)[\\n\\s]*pos[\\n\\s]*\\(\\*[\\n\\s]*rho[\\n\\s]*\\(sin[\\n\\s]*theta\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*\\(setf[\\n\\s]*position-y\\)[\\n\\s]*\\(new-y[\\n\\s]*\\(pos[\\n\\s]*x-y-position\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(rho[\\n\\s]*theta\\)[\\n\\s]*pos[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(position-x[\\n\\s]*pos\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*rho[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(\\*[\\n\\s]*new-y[\\n\\s]*new-y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*theta[\\n\\s]*\\(atan[\\n\\s]*new-y[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*new-y\\)\\)\\)"],["\\code\n \n (defclass position () ())\n  \n (defclass x-y-position (position)\n     ((x :initform 0 :initarg :x)\n      (y :initform 0 :initarg :y)))\n  \n (defclass rho-theta-position (position)\n     ((rho :initform 0)\n      (theta :initform 0)))\n  \n (defmethod update-instance-for-different-class :before ((old x-y-position) \n                                                         (new rho-theta-position)\n                                                         &key)\n   ;; Copy the position information from old to new to make new\n   ;; be a rho-theta-position at the same position as old.\n   (let ((x (slot-value old 'x))\n         (y (slot-value old 'y)))\n     (setf (slot-value new 'rho) (sqrt (+ (* x x) (* y y)))\n           (slot-value new 'theta) (atan y x))))\n  \n;;; At this point an instance of the class x-y-position can be\n;;; changed to be an instance of the class rho-theta-position using\n;;; change-class:\n \n (setq p1 (make-instance 'x-y-position :x 2 :y 0))\n  \n (change-class p1 'rho-theta-position)\n  \n;;; The result is that the instance bound to p1 is now an instance of\n;;; the class rho-theta-position.   The update-instance-for-different-class\n;;; method performed the initialization of the rho and theta slots based\n;;; on the value of the x and y slots, which were maintained by\n;;; the old instance.\n \n\\endcode","\\(defclass[\\n\\s]*position[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*x-y-position[\\n\\s]*\\(position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(x[\\n\\s]*:initform[\\n\\s]*0[\\n\\s]*:initarg[\\n\\s]*:x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*:initform[\\n\\s]*0[\\n\\s]*:initarg[\\n\\s]*:y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*rho-theta-position[\\n\\s]*\\(position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(rho[\\n\\s]*:initform[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(theta[\\n\\s]*:initform[\\n\\s]*0\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*update-instance-for-different-class[\\n\\s]*:before[\\n\\s]*\\(\\(old[\\n\\s]*x-y-position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(new[\\n\\s]*rho-theta-position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*&key\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Copy[\\n\\s]*the[\\n\\s]*position[\\n\\s]*information[\\n\\s]*from[\\n\\s]*old[\\n\\s]*to[\\n\\s]*new[\\n\\s]*to[\\n\\s]*make[\\n\\s]*new[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*be[\\n\\s]*a[\\n\\s]*rho-theta-position[\\n\\s]*at[\\n\\s]*the[\\n\\s]*same[\\n\\s]*position[\\n\\s]*as[\\n\\s]*old\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(slot-value[\\n\\s]*old[\\n\\s]*'x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*\\(slot-value[\\n\\s]*old[\\n\\s]*'y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(slot-value[\\n\\s]*new[\\n\\s]*'rho\\)[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(\\*[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*\\(\\*[\\n\\s]*y[\\n\\s]*y\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(slot-value[\\n\\s]*new[\\n\\s]*'theta\\)[\\n\\s]*\\(atan[\\n\\s]*y[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*At[\\n\\s]*this[\\n\\s]*point[\\n\\s]*an[\\n\\s]*instance[\\n\\s]*of[\\n\\s]*the[\\n\\s]*class[\\n\\s]*x-y-position[\\n\\s]*can[\\n\\s]*be[\\n\\s]*;;;[\\n\\s]*changed[\\n\\s]*to[\\n\\s]*be[\\n\\s]*an[\\n\\s]*instance[\\n\\s]*of[\\n\\s]*the[\\n\\s]*class[\\n\\s]*rho-theta-position[\\n\\s]*using[\\n\\s]*;;;[\\n\\s]*change-class:[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*p1[\\n\\s]*\\(make-instance[\\n\\s]*'x-y-position[\\n\\s]*:x[\\n\\s]*2[\\n\\s]*:y[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(change-class[\\n\\s]*p1[\\n\\s]*'rho-theta-position\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*result[\\n\\s]*is[\\n\\s]*that[\\n\\s]*the[\\n\\s]*instance[\\n\\s]*bound[\\n\\s]*to[\\n\\s]*p1[\\n\\s]*is[\\n\\s]*now[\\n\\s]*an[\\n\\s]*instance[\\n\\s]*of[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*class[\\n\\s]*rho-theta-position\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*The[\\n\\s]*update-instance-for-different-class[\\n\\s]*;;;[\\n\\s]*method[\\n\\s]*performed[\\n\\s]*the[\\n\\s]*initialization[\\n\\s]*of[\\n\\s]*the[\\n\\s]*rho[\\n\\s]*and[\\n\\s]*theta[\\n\\s]*slots[\\n\\s]*based[\\n\\s]*;;;[\\n\\s]*on[\\n\\s]*the[\\n\\s]*value[\\n\\s]*of[\\n\\s]*the[\\n\\s]*x[\\n\\s]*and[\\n\\s]*y[\\n\\s]*slots,[\\n\\s]*which[\\n\\s]*were[\\n\\s]*maintained[\\n\\s]*by[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*old[\\n\\s]*instance\\."],["\\code\n (slot-missing (class-of \\i&#123;instance&#125;)\n               \\i&#123;instance&#125;\n               \\i&#123;slot-name&#125;\n               'slot-boundp)\n\\endcode","\\(slot-missing[\\n\\s]*\\(class-of[\\n\\s]*\\\\i&#123;instance&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;instance&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;slot-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'slot-boundp\\)"],["\\code\n(slot-missing (class-of \\i&#123;instance&#125;)\n              \\i&#123;instance&#125;\n              \\i&#123;slot-name&#125;\n              'slot-makunbound)\n\\endcode","\\(slot-missing[\\n\\s]*\\(class-of[\\n\\s]*\\\\i&#123;instance&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;instance&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;slot-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'slot-makunbound\\)"],["\\code\n (defclass foo () \n   ((a :accessor foo-a :initarg :a :initform 1)\n    (b :accessor foo-b :initarg :b)\n    (c :accessor foo-c :initform 3)))\n*→* #&#60;STANDARD-CLASS FOO 244020371&#62;\n (setq foo1 (make-instance 'foo :a 'one :b 'two))\n*→* #&#60;FOO 36325624&#62;\n (slot-value foo1 'a) *→* ONE\n (slot-value foo1 'b) *→* TWO\n (slot-value foo1 'c) *→* 3\n (setf (slot-value foo1 'a) 'uno) *→* UNO\n (slot-value foo1 'a) *→* UNO\n (defmethod foo-method ((x foo))\n   (slot-value x 'a))\n*→* #&#60;STANDARD-METHOD FOO-METHOD (FOO) 42720573&#62;\n (foo-method foo1) *→* UNO\n\\endcode","\\(defclass[\\n\\s]*foo[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(a[\\n\\s]*:accessor[\\n\\s]*foo-a[\\n\\s]*:initarg[\\n\\s]*:a[\\n\\s]*:initform[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(b[\\n\\s]*:accessor[\\n\\s]*foo-b[\\n\\s]*:initarg[\\n\\s]*:b\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(c[\\n\\s]*:accessor[\\n\\s]*foo-c[\\n\\s]*:initform[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*FOO[\\n\\s]*244020371&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo1[\\n\\s]*\\(make-instance[\\n\\s]*'foo[\\n\\s]*:a[\\n\\s]*'one[\\n\\s]*:b[\\n\\s]*'two\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FOO[\\n\\s]*36325624&#62;[\\n\\s]*[\\n\\s]*\\(slot-value[\\n\\s]*foo1[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ONE[\\n\\s]*[\\n\\s]*\\(slot-value[\\n\\s]*foo1[\\n\\s]*'b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TWO[\\n\\s]*[\\n\\s]*\\(slot-value[\\n\\s]*foo1[\\n\\s]*'c\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(slot-value[\\n\\s]*foo1[\\n\\s]*'a\\)[\\n\\s]*'uno\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*UNO[\\n\\s]*[\\n\\s]*\\(slot-value[\\n\\s]*foo1[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*UNO[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*foo-method[\\n\\s]*\\(\\(x[\\n\\s]*foo\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(slot-value[\\n\\s]*x[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*FOO-METHOD[\\n\\s]*\\(FOO\\)[\\n\\s]*42720573&#62;[\\n\\s]*[\\n\\s]*\\(foo-method[\\n\\s]*foo1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*UNO"],["\\code\n (slot-missing (class-of \\i&#123;instance&#125;)\n               \\i&#123;instance&#125;\n               \\i&#123;slot-name&#125;\n               'slot-value)\n\\endcode","\\(slot-missing[\\n\\s]*\\(class-of[\\n\\s]*\\\\i&#123;instance&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;instance&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;slot-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'slot-value\\)"],["\\code\n (slot-missing (class-of \\i&#123;instance&#125;)\n               \\i&#123;instance&#125;\n               \\i&#123;slot-name&#125;\n               'setf\n               \\i&#123;new-value&#125;)\n\\endcode","\\(slot-missing[\\n\\s]*\\(class-of[\\n\\s]*\\\\i&#123;instance&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;instance&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;slot-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'setf[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;new-value&#125;\\)"],["\\code\n (defmethod some-gf :before ((a integer)) a)\n*→* #&#60;STANDARD-METHOD SOME-GF (:BEFORE) (INTEGER) 42736540&#62;\n (method-qualifiers *) *→* (:BEFORE)\n\\endcode","\\(defmethod[\\n\\s]*some-gf[\\n\\s]*:before[\\n\\s]*\\(\\(a[\\n\\s]*integer\\)\\)[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*SOME-GF[\\n\\s]*\\(:BEFORE\\)[\\n\\s]*\\(INTEGER\\)[\\n\\s]*42736540&#62;[\\n\\s]*[\\n\\s]*\\(method-qualifiers[\\n\\s]*\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:BEFORE\\)"],["\\code\n (defclass obj ()\n    ((x :initarg :x :reader obj-x)\n     (y :initarg :y :reader obj-y)\n     (dist :accessor obj-dist)))\n*→* #&#60;STANDARD-CLASS OBJ 250020030&#62;\n (defmethod shared-initialize :after ((self obj) slot-names &rest keys)\n   (declare (ignore slot-names keys))\n   (unless (slot-boundp self 'dist)\n     (setf (obj-dist self)\n           (sqrt (+ (expt (obj-x self) 2) (expt (obj-y self) 2))))))\n*→* #&#60;STANDARD-METHOD SHARED-INITIALIZE (:AFTER) (OBJ T) 26266714&#62;\n (defmethod make-load-form ((self obj) &optional environment)\n   (declare (ignore environment))\n   ;; Note that this definition only works because X and Y do not\n   ;; contain information which refers back to the object itself.\n   ;; For a more general solution to this problem, see revised example below.\n   `(make-instance ',(class-of self)\n                   :x ',(obj-x self) :y ',(obj-y self)))\n*→* #&#60;STANDARD-METHOD MAKE-LOAD-FORM (OBJ) 26267532&#62;\n (setq obj1 (make-instance 'obj :x 3.0 :y 4.0)) *→* #&#60;OBJ 26274136&#62;\n (obj-dist obj1) *→* 5.0\n (make-load-form obj1) *→* (MAKE-INSTANCE 'OBJ :X '3.0 :Y '4.0)\n\\endcode","\\(defclass[\\n\\s]*obj[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(x[\\n\\s]*:initarg[\\n\\s]*:x[\\n\\s]*:reader[\\n\\s]*obj-x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*:initarg[\\n\\s]*:y[\\n\\s]*:reader[\\n\\s]*obj-y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dist[\\n\\s]*:accessor[\\n\\s]*obj-dist\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*OBJ[\\n\\s]*250020030&#62;[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*shared-initialize[\\n\\s]*:after[\\n\\s]*\\(\\(self[\\n\\s]*obj\\)[\\n\\s]*slot-names[\\n\\s]*&rest[\\n\\s]*keys\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*slot-names[\\n\\s]*keys\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(slot-boundp[\\n\\s]*self[\\n\\s]*'dist\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(obj-dist[\\n\\s]*self\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(sqrt[\\n\\s]*\\(\\+[\\n\\s]*\\(expt[\\n\\s]*\\(obj-x[\\n\\s]*self\\)[\\n\\s]*2\\)[\\n\\s]*\\(expt[\\n\\s]*\\(obj-y[\\n\\s]*self\\)[\\n\\s]*2\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*SHARED-INITIALIZE[\\n\\s]*\\(:AFTER\\)[\\n\\s]*\\(OBJ[\\n\\s]*T\\)[\\n\\s]*26266714&#62;[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*make-load-form[\\n\\s]*\\(\\(self[\\n\\s]*obj\\)[\\n\\s]*&optional[\\n\\s]*environment\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*environment\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*this[\\n\\s]*definition[\\n\\s]*only[\\n\\s]*works[\\n\\s]*because[\\n\\s]*X[\\n\\s]*and[\\n\\s]*Y[\\n\\s]*do[\\n\\s]*not[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*contain[\\n\\s]*information[\\n\\s]*which[\\n\\s]*refers[\\n\\s]*back[\\n\\s]*to[\\n\\s]*the[\\n\\s]*object[\\n\\s]*itself\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*For[\\n\\s]*a[\\n\\s]*more[\\n\\s]*general[\\n\\s]*solution[\\n\\s]*to[\\n\\s]*this[\\n\\s]*problem,[\\n\\s]*see[\\n\\s]*revised[\\n\\s]*example[\\n\\s]*below\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(make-instance[\\n\\s]*',\\(class-of[\\n\\s]*self\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:x[\\n\\s]*',\\(obj-x[\\n\\s]*self\\)[\\n\\s]*:y[\\n\\s]*',\\(obj-y[\\n\\s]*self\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*MAKE-LOAD-FORM[\\n\\s]*\\(OBJ\\)[\\n\\s]*26267532&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*obj1[\\n\\s]*\\(make-instance[\\n\\s]*'obj[\\n\\s]*:x[\\n\\s]*3\\.0[\\n\\s]*:y[\\n\\s]*4\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;OBJ[\\n\\s]*26274136&#62;[\\n\\s]*[\\n\\s]*\\(obj-dist[\\n\\s]*obj1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5\\.0[\\n\\s]*[\\n\\s]*\\(make-load-form[\\n\\s]*obj1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(MAKE-INSTANCE[\\n\\s]*'OBJ[\\n\\s]*:X[\\n\\s]*'3\\.0[\\n\\s]*:Y[\\n\\s]*'4\\.0\\)"],["\\code\n ;; Redefine method defined above.\n (defmethod make-load-form ((self obj) &optional environment)\n    (make-load-form-saving-slots self\n                                 :slot-names '(x y)\n                                 :environment environment))\n*→* #&#60;STANDARD-METHOD MAKE-LOAD-FORM (OBJ) 42755655&#62;\n ;; Try MAKE-LOAD-FORM on object created above.\n (make-load-form obj1)\n*→* (ALLOCATE-INSTANCE '#&#60;STANDARD-CLASS OBJ 250020030&#62;),\n    (PROGN\n      (SETF (SLOT-VALUE '#&#60;OBJ 26274136&#62; 'X) '3.0)\n      (SETF (SLOT-VALUE '#&#60;OBJ 26274136&#62; 'Y) '4.0)\n      (INITIALIZE-INSTANCE '#&#60;OBJ 26274136&#62;))\n\\endcode",";;[\\n\\s]*Redefine[\\n\\s]*method[\\n\\s]*defined[\\n\\s]*above\\.[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*make-load-form[\\n\\s]*\\(\\(self[\\n\\s]*obj\\)[\\n\\s]*&optional[\\n\\s]*environment\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-load-form-saving-slots[\\n\\s]*self[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:slot-names[\\n\\s]*'\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:environment[\\n\\s]*environment\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*MAKE-LOAD-FORM[\\n\\s]*\\(OBJ\\)[\\n\\s]*42755655&#62;[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Try[\\n\\s]*MAKE-LOAD-FORM[\\n\\s]*on[\\n\\s]*object[\\n\\s]*created[\\n\\s]*above\\.[\\n\\s]*[\\n\\s]*\\(make-load-form[\\n\\s]*obj1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ALLOCATE-INSTANCE[\\n\\s]*'#&#60;STANDARD-CLASS[\\n\\s]*OBJ[\\n\\s]*250020030&#62;\\),[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(PROGN[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETF[\\n\\s]*\\(SLOT-VALUE[\\n\\s]*'#&#60;OBJ[\\n\\s]*26274136&#62;[\\n\\s]*'X\\)[\\n\\s]*'3\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETF[\\n\\s]*\\(SLOT-VALUE[\\n\\s]*'#&#60;OBJ[\\n\\s]*26274136&#62;[\\n\\s]*'Y\\)[\\n\\s]*'4\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(INITIALIZE-INSTANCE[\\n\\s]*'#&#60;OBJ[\\n\\s]*26274136&#62;\\)\\)"],["\\code\n (defclass my-frob ()\n    ((name :initarg :name :reader my-name)))\n (defmethod make-load-form ((self my-frob) &optional environment)\n   (declare (ignore environment))\n   `(find-my-frob ',(my-name self) :if-does-not-exist :create))\n\\endcode","\\(defclass[\\n\\s]*my-frob[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(name[\\n\\s]*:initarg[\\n\\s]*:name[\\n\\s]*:reader[\\n\\s]*my-name\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*make-load-form[\\n\\s]*\\(\\(self[\\n\\s]*my-frob\\)[\\n\\s]*&optional[\\n\\s]*environment\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*environment\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(find-my-frob[\\n\\s]*',\\(my-name[\\n\\s]*self\\)[\\n\\s]*:if-does-not-exist[\\n\\s]*:create\\)\\)"],["\\code\n (defclass tree-with-parent () ((parent :accessor tree-parent)\n                                (children :initarg :children)))\n (defmethod make-load-form ((x tree-with-parent) &optional environment)\n   (declare (ignore environment))\n   (values\n     ;; creation form\n     `(make-instance ',(class-of x) :children ',(slot-value x 'children))\n     ;; initialization form\n     `(setf (tree-parent ',x) ',(slot-value x 'parent))))\n\\endcode","\\(defclass[\\n\\s]*tree-with-parent[\\n\\s]*\\(\\)[\\n\\s]*\\(\\(parent[\\n\\s]*:accessor[\\n\\s]*tree-parent\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(children[\\n\\s]*:initarg[\\n\\s]*:children\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*make-load-form[\\n\\s]*\\(\\(x[\\n\\s]*tree-with-parent\\)[\\n\\s]*&optional[\\n\\s]*environment\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*environment\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*creation[\\n\\s]*form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(make-instance[\\n\\s]*',\\(class-of[\\n\\s]*x\\)[\\n\\s]*:children[\\n\\s]*',\\(slot-value[\\n\\s]*x[\\n\\s]*'children\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*initialization[\\n\\s]*form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(setf[\\n\\s]*\\(tree-parent[\\n\\s]*',x\\)[\\n\\s]*',\\(slot-value[\\n\\s]*x[\\n\\s]*'parent\\)\\)\\)\\)"],["\\code\n (defstruct my-struct a b c)\n (defmethod make-load-form ((s my-struct) &optional environment)\n    (make-load-form-saving-slots s :environment environment))\n\\endcode","\\(defstruct[\\n\\s]*my-struct[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*make-load-form[\\n\\s]*\\(\\(s[\\n\\s]*my-struct\\)[\\n\\s]*&optional[\\n\\s]*environment\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-load-form-saving-slots[\\n\\s]*s[\\n\\s]*:environment[\\n\\s]*environment\\)\\)"],["\\code\n (defclass thing ()\n           ((x :initarg :x :accessor thing-x)\n            (y :initarg :y :accessor thing-y)))\n*→* #&#60;STANDARD-CLASS THING 250020173&#62;\n (defmethod (setf thing-x) :before (new-x (thing thing))\n   (format t \"~&Changing X from ~D to ~D in ~S.~%\"\n           (thing-x thing) new-x thing))\n (setq thing1 (make-instance 'thing :x 1 :y 2)) *→* #&#60;THING 43135676&#62;\n (setq thing2 (make-instance 'thing :x 7 :y 8)) *→* #&#60;THING 43147374&#62;\n (with-accessors ((x1 thing-x) (y1 thing-y))\n                 thing1\n   (with-accessors ((x2 thing-x) (y2 thing-y))\n                   thing2\n     (list (list x1 (thing-x thing1) y1 (thing-y thing1)\n                 x2 (thing-x thing2) y2 (thing-y thing2))\n           (setq x1 (+ y1 x2))\n           (list x1 (thing-x thing1) y1 (thing-y thing1)\n                 x2 (thing-x thing2) y2 (thing-y thing2))\n           (setf (thing-x thing2) (list x1))\n           (list x1 (thing-x thing1) y1 (thing-y thing1)\n                 x2 (thing-x thing2) y2 (thing-y thing2)))))\n\\OUT Changing X from 1 to 9 in #&#60;THING 43135676&#62;.\n\\OUT Changing X from 7 to (9) in #&#60;THING 43147374&#62;.\n*→* ((1 1 2 2 7 7 8 8)\n     9\n     (9 9 2 2 7 7 8 8) \n     (9)\n     (9 9 2 2 (9) (9) 8 8))\n\\endcode","\\(defclass[\\n\\s]*thing[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(x[\\n\\s]*:initarg[\\n\\s]*:x[\\n\\s]*:accessor[\\n\\s]*thing-x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*:initarg[\\n\\s]*:y[\\n\\s]*:accessor[\\n\\s]*thing-y\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*THING[\\n\\s]*250020173&#62;[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*\\(setf[\\n\\s]*thing-x\\)[\\n\\s]*:before[\\n\\s]*\\(new-x[\\n\\s]*\\(thing[\\n\\s]*thing\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Changing[\\n\\s]*X[\\n\\s]*from[\\n\\s]*~D[\\n\\s]*to[\\n\\s]*~D[\\n\\s]*in[\\n\\s]*~S\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(thing-x[\\n\\s]*thing\\)[\\n\\s]*new-x[\\n\\s]*thing\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*thing1[\\n\\s]*\\(make-instance[\\n\\s]*'thing[\\n\\s]*:x[\\n\\s]*1[\\n\\s]*:y[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;THING[\\n\\s]*43135676&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*thing2[\\n\\s]*\\(make-instance[\\n\\s]*'thing[\\n\\s]*:x[\\n\\s]*7[\\n\\s]*:y[\\n\\s]*8\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;THING[\\n\\s]*43147374&#62;[\\n\\s]*[\\n\\s]*\\(with-accessors[\\n\\s]*\\(\\(x1[\\n\\s]*thing-x\\)[\\n\\s]*\\(y1[\\n\\s]*thing-y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thing1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-accessors[\\n\\s]*\\(\\(x2[\\n\\s]*thing-x\\)[\\n\\s]*\\(y2[\\n\\s]*thing-y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thing2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*x1[\\n\\s]*\\(thing-x[\\n\\s]*thing1\\)[\\n\\s]*y1[\\n\\s]*\\(thing-y[\\n\\s]*thing1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x2[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*y2[\\n\\s]*\\(thing-y[\\n\\s]*thing2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x1[\\n\\s]*\\(\\+[\\n\\s]*y1[\\n\\s]*x2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x1[\\n\\s]*\\(thing-x[\\n\\s]*thing1\\)[\\n\\s]*y1[\\n\\s]*\\(thing-y[\\n\\s]*thing1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x2[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*y2[\\n\\s]*\\(thing-y[\\n\\s]*thing2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*\\(list[\\n\\s]*x1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x1[\\n\\s]*\\(thing-x[\\n\\s]*thing1\\)[\\n\\s]*y1[\\n\\s]*\\(thing-y[\\n\\s]*thing1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x2[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*y2[\\n\\s]*\\(thing-y[\\n\\s]*thing2\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Changing[\\n\\s]*X[\\n\\s]*from[\\n\\s]*1[\\n\\s]*to[\\n\\s]*9[\\n\\s]*in[\\n\\s]*#&#60;THING[\\n\\s]*43135676&#62;\\.[\\n\\s]*\\\\OUT[\\n\\s]*Changing[\\n\\s]*X[\\n\\s]*from[\\n\\s]*7[\\n\\s]*to[\\n\\s]*\\(9\\)[\\n\\s]*in[\\n\\s]*#&#60;THING[\\n\\s]*43147374&#62;\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*1[\\n\\s]*2[\\n\\s]*2[\\n\\s]*7[\\n\\s]*7[\\n\\s]*8[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*9[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(9[\\n\\s]*9[\\n\\s]*2[\\n\\s]*2[\\n\\s]*7[\\n\\s]*7[\\n\\s]*8[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(9\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(9[\\n\\s]*9[\\n\\s]*2[\\n\\s]*2[\\n\\s]*\\(9\\)[\\n\\s]*\\(9\\)[\\n\\s]*8[\\n\\s]*8\\)\\)"],["\\code\n (defclass thing ()\n           ((x :initarg :x :accessor thing-x)\n            (y :initarg :y :accessor thing-y)))\n*→* #&#60;STANDARD-CLASS THING 250020173&#62;\n (defmethod (setf thing-x) :before (new-x (thing thing))\n   (format t \"~&Changing X from ~D to ~D in ~S.~%\"\n           (thing-x thing) new-x thing))\n (setq thing (make-instance 'thing :x 0 :y 1)) *→* #&#60;THING 62310540&#62;\n (with-slots (x y) thing (incf x) (incf y)) *→* 2\n (values (thing-x thing) (thing-y thing)) *→* 1, 2\n (setq thing1 (make-instance 'thing :x 1 :y 2)) *→* #&#60;THING 43135676&#62;\n (setq thing2 (make-instance 'thing :x 7 :y 8)) *→* #&#60;THING 43147374&#62;\n (with-slots ((x1 x) (y1 y))\n             thing1\n   (with-slots ((x2 x) (y2 y))\n               thing2\n     (list (list x1 (thing-x thing1) y1 (thing-y thing1)\n                 x2 (thing-x thing2) y2 (thing-y thing2))\n           (setq x1 (+ y1 x2))\n           (list x1 (thing-x thing1) y1 (thing-y thing1)\n                 x2 (thing-x thing2) y2 (thing-y thing2))\n           (setf (thing-x thing2) (list x1))\n           (list x1 (thing-x thing1) y1 (thing-y thing1)\n                 x2 (thing-x thing2) y2 (thing-y thing2)))))\n\\OUT Changing X from 7 to (9) in #&#60;THING 43147374&#62;.\n*→* ((1 1 2 2 7 7 8 8)\n     9\n     (9 9 2 2 7 7 8 8) \n     (9)\n     (9 9 2 2 (9) (9) 8 8))\n\\endcode","\\(defclass[\\n\\s]*thing[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(x[\\n\\s]*:initarg[\\n\\s]*:x[\\n\\s]*:accessor[\\n\\s]*thing-x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y[\\n\\s]*:initarg[\\n\\s]*:y[\\n\\s]*:accessor[\\n\\s]*thing-y\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*THING[\\n\\s]*250020173&#62;[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*\\(setf[\\n\\s]*thing-x\\)[\\n\\s]*:before[\\n\\s]*\\(new-x[\\n\\s]*\\(thing[\\n\\s]*thing\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&Changing[\\n\\s]*X[\\n\\s]*from[\\n\\s]*~D[\\n\\s]*to[\\n\\s]*~D[\\n\\s]*in[\\n\\s]*~S\\.~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(thing-x[\\n\\s]*thing\\)[\\n\\s]*new-x[\\n\\s]*thing\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*thing[\\n\\s]*\\(make-instance[\\n\\s]*'thing[\\n\\s]*:x[\\n\\s]*0[\\n\\s]*:y[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;THING[\\n\\s]*62310540&#62;[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*thing[\\n\\s]*\\(incf[\\n\\s]*x\\)[\\n\\s]*\\(incf[\\n\\s]*y\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(thing-x[\\n\\s]*thing\\)[\\n\\s]*\\(thing-y[\\n\\s]*thing\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1,[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*thing1[\\n\\s]*\\(make-instance[\\n\\s]*'thing[\\n\\s]*:x[\\n\\s]*1[\\n\\s]*:y[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;THING[\\n\\s]*43135676&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*thing2[\\n\\s]*\\(make-instance[\\n\\s]*'thing[\\n\\s]*:x[\\n\\s]*7[\\n\\s]*:y[\\n\\s]*8\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;THING[\\n\\s]*43147374&#62;[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(\\(x1[\\n\\s]*x\\)[\\n\\s]*\\(y1[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thing1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-slots[\\n\\s]*\\(\\(x2[\\n\\s]*x\\)[\\n\\s]*\\(y2[\\n\\s]*y\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*thing2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*x1[\\n\\s]*\\(thing-x[\\n\\s]*thing1\\)[\\n\\s]*y1[\\n\\s]*\\(thing-y[\\n\\s]*thing1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x2[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*y2[\\n\\s]*\\(thing-y[\\n\\s]*thing2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x1[\\n\\s]*\\(\\+[\\n\\s]*y1[\\n\\s]*x2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x1[\\n\\s]*\\(thing-x[\\n\\s]*thing1\\)[\\n\\s]*y1[\\n\\s]*\\(thing-y[\\n\\s]*thing1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x2[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*y2[\\n\\s]*\\(thing-y[\\n\\s]*thing2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*\\(list[\\n\\s]*x1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*x1[\\n\\s]*\\(thing-x[\\n\\s]*thing1\\)[\\n\\s]*y1[\\n\\s]*\\(thing-y[\\n\\s]*thing1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x2[\\n\\s]*\\(thing-x[\\n\\s]*thing2\\)[\\n\\s]*y2[\\n\\s]*\\(thing-y[\\n\\s]*thing2\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Changing[\\n\\s]*X[\\n\\s]*from[\\n\\s]*7[\\n\\s]*to[\\n\\s]*\\(9\\)[\\n\\s]*in[\\n\\s]*#&#60;THING[\\n\\s]*43147374&#62;\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*1[\\n\\s]*2[\\n\\s]*2[\\n\\s]*7[\\n\\s]*7[\\n\\s]*8[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*9[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(9[\\n\\s]*9[\\n\\s]*2[\\n\\s]*2[\\n\\s]*7[\\n\\s]*7[\\n\\s]*8[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(9\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(9[\\n\\s]*9[\\n\\s]*2[\\n\\s]*2[\\n\\s]*\\(9\\)[\\n\\s]*\\(9\\)[\\n\\s]*8[\\n\\s]*8\\)\\)"],["\\code\n;;; Examples of the short form of define-method-combination\n \n (define-method-combination and :identity-with-one-argument t) \n  \n (defmethod func and ((x class1) y) ...)\n \n;;; The equivalent of this example in the long form is:\n \n (define-method-combination and \n         (&optional (order :most-specific-first))\n         ((around (:around))\n          (primary (and) :order order :required t))\n   (let ((form (if (rest primary)\n                   `(and ,@(mapcar #'(lambda (method)\n                                       `(call-method ,method))\n                                   primary))\n                   `(call-method ,(first primary)))))\n     (if around\n         `(call-method ,(first around)\n                       (,@(rest around)\n                        (make-method ,form)))\n         form)))\n  \n;;; Examples of the long form of define-method-combination\n \n;The default method-combination technique\n (define-method-combination standard ()\n         ((around (:around))\n          (before (:before))\n          (primary () :required t)\n          (after (:after)))\n   (flet ((call-methods (methods)\n            (mapcar #'(lambda (method)\n                        `(call-method ,method))\n                    methods)))\n     (let ((form (if (or before after (rest primary))\n                     `(multiple-value-prog1\n                        (progn ,@(call-methods before)\n                               (call-method ,(first primary)\n                                            ,(rest primary)))\n                        ,@(call-methods (reverse after)))\n                     `(call-method ,(first primary)))))\n       (if around\n           `(call-method ,(first around)\n                         (,@(rest around)\n                          (make-method ,form)))\n           form))))\n  \n;A simple way to try several methods until one returns non-nil\n (define-method-combination or ()\n         ((methods (or)))\n   `(or ,@(mapcar #'(lambda (method)\n                      `(call-method ,method))\n                  methods)))\n  \n;A more complete version of the preceding\n (define-method-combination or \n         (&optional (order ':most-specific-first))\n         ((around (:around))\n          (primary (or)))\n   ;; Process the order argument\n   (case order\n     (:most-specific-first)\n     (:most-specific-last (setq primary (reverse primary)))\n     (otherwise (method-combination-error \"~S is an invalid order.~@\n     :most-specific-first and :most-specific-last are the possible values.\"\n                                          order)))\n   ;; Must have a primary method\n   (unless primary\n     (method-combination-error \"A primary method is required.\"))\n   ;; Construct the form that calls the primary methods\n   (let ((form (if (rest primary)\n                   `(or ,@(mapcar #'(lambda (method)\n                                      `(call-method ,method))\n                                  primary))\n                   `(call-method ,(first primary)))))\n     ;; Wrap the around methods around that form\n     (if around\n         `(call-method ,(first around)\n                       (,@(rest around)\n                        (make-method ,form)))\n         form)))\n  \n;The same thing, using the :order and :required keyword options\n (define-method-combination or \n         (&optional (order ':most-specific-first))\n         ((around (:around))\n          (primary (or) :order order :required t))\n   (let ((form (if (rest primary)\n                   `(or ,@(mapcar #'(lambda (method)\n                                      `(call-method ,method))\n                                  primary))\n                   `(call-method ,(first primary)))))\n     (if around\n         `(call-method ,(first around)\n                       (,@(rest around)\n                        (make-method ,form)))\n         form)))\n  \n;This short-form call is behaviorally identical to the preceding\n (define-method-combination or :identity-with-one-argument t)\n \n;Order methods by positive integer qualifiers\n;:around methods are disallowed to keep the example small\n (define-method-combination example-method-combination ()\n         ((methods positive-integer-qualifier-p))\n   `(progn ,@(mapcar #'(lambda (method)\n                         `(call-method ,method))\n                     (stable-sort methods #'&#60;\n                       :key #'(lambda (method)\n                                (first (method-qualifiers method)))))))\n \n (defun positive-integer-qualifier-p (method-qualifiers)\n   (and (= (length method-qualifiers) 1)\n        (typep (first method-qualifiers) '(integer 0 *))))\n  \n;;; Example of the use of :arguments\n (define-method-combination progn-with-lock ()\n         ((methods ()))\n   (:arguments object)\n   `(unwind-protect\n        (progn (lock (object-lock ,object))\n               ,@(mapcar #'(lambda (method)\n                             `(call-method ,method))\n                         methods))\n      (unlock (object-lock ,object))))\n  \n\\endcode",";;;[\\n\\s]*Examples[\\n\\s]*of[\\n\\s]*the[\\n\\s]*short[\\n\\s]*form[\\n\\s]*of[\\n\\s]*define-method-combination[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*and[\\n\\s]*:identity-with-one-argument[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defmethod[\\n\\s]*func[\\n\\s]*and[\\n\\s]*\\(\\(x[\\n\\s]*class1\\)[\\n\\s]*y\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*The[\\n\\s]*equivalent[\\n\\s]*of[\\n\\s]*this[\\n\\s]*example[\\n\\s]*in[\\n\\s]*the[\\n\\s]*long[\\n\\s]*form[\\n\\s]*is:[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*and[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(&optional[\\n\\s]*\\(order[\\n\\s]*:most-specific-first\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(around[\\n\\s]*\\(:around\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(primary[\\n\\s]*\\(and\\)[\\n\\s]*:order[\\n\\s]*order[\\n\\s]*:required[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(form[\\n\\s]*\\(if[\\n\\s]*\\(rest[\\n\\s]*primary\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(and[\\n\\s]*,@\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*primary\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*primary\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*around[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(,@\\(rest[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-method[\\n\\s]*,form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Examples[\\n\\s]*of[\\n\\s]*the[\\n\\s]*long[\\n\\s]*form[\\n\\s]*of[\\n\\s]*define-method-combination[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*default[\\n\\s]*method-combination[\\n\\s]*technique[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*standard[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(around[\\n\\s]*\\(:around\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(before[\\n\\s]*\\(:before\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(primary[\\n\\s]*\\(\\)[\\n\\s]*:required[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(after[\\n\\s]*\\(:after\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(call-methods[\\n\\s]*\\(methods\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*methods\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(form[\\n\\s]*\\(if[\\n\\s]*\\(or[\\n\\s]*before[\\n\\s]*after[\\n\\s]*\\(rest[\\n\\s]*primary\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(multiple-value-prog1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*,@\\(call-methods[\\n\\s]*before\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(call-method[\\n\\s]*,\\(first[\\n\\s]*primary\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,\\(rest[\\n\\s]*primary\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,@\\(call-methods[\\n\\s]*\\(reverse[\\n\\s]*after\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*primary\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*around[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(,@\\(rest[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-method[\\n\\s]*,form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*form\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*simple[\\n\\s]*way[\\n\\s]*to[\\n\\s]*try[\\n\\s]*several[\\n\\s]*methods[\\n\\s]*until[\\n\\s]*one[\\n\\s]*returns[\\n\\s]*non-nil[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*or[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(methods[\\n\\s]*\\(or\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(or[\\n\\s]*,@\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*methods\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;A[\\n\\s]*more[\\n\\s]*complete[\\n\\s]*version[\\n\\s]*of[\\n\\s]*the[\\n\\s]*preceding[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*or[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(&optional[\\n\\s]*\\(order[\\n\\s]*':most-specific-first\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(around[\\n\\s]*\\(:around\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(primary[\\n\\s]*\\(or\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Process[\\n\\s]*the[\\n\\s]*order[\\n\\s]*argument[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(case[\\n\\s]*order[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:most-specific-first\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:most-specific-last[\\n\\s]*\\(setq[\\n\\s]*primary[\\n\\s]*\\(reverse[\\n\\s]*primary\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(otherwise[\\n\\s]*\\(method-combination-error[\\n\\s]*\"~S[\\n\\s]*is[\\n\\s]*an[\\n\\s]*invalid[\\n\\s]*order\\.~@[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:most-specific-first[\\n\\s]*and[\\n\\s]*:most-specific-last[\\n\\s]*are[\\n\\s]*the[\\n\\s]*possible[\\n\\s]*values\\.\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*order\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Must[\\n\\s]*have[\\n\\s]*a[\\n\\s]*primary[\\n\\s]*method[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*primary[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(method-combination-error[\\n\\s]*\"A[\\n\\s]*primary[\\n\\s]*method[\\n\\s]*is[\\n\\s]*required\\.\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Construct[\\n\\s]*the[\\n\\s]*form[\\n\\s]*that[\\n\\s]*calls[\\n\\s]*the[\\n\\s]*primary[\\n\\s]*methods[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(form[\\n\\s]*\\(if[\\n\\s]*\\(rest[\\n\\s]*primary\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(or[\\n\\s]*,@\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*primary\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*primary\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Wrap[\\n\\s]*the[\\n\\s]*around[\\n\\s]*methods[\\n\\s]*around[\\n\\s]*that[\\n\\s]*form[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*around[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(,@\\(rest[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-method[\\n\\s]*,form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;The[\\n\\s]*same[\\n\\s]*thing,[\\n\\s]*using[\\n\\s]*the[\\n\\s]*:order[\\n\\s]*and[\\n\\s]*:required[\\n\\s]*keyword[\\n\\s]*options[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*or[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(&optional[\\n\\s]*\\(order[\\n\\s]*':most-specific-first\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(around[\\n\\s]*\\(:around\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(primary[\\n\\s]*\\(or\\)[\\n\\s]*:order[\\n\\s]*order[\\n\\s]*:required[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(form[\\n\\s]*\\(if[\\n\\s]*\\(rest[\\n\\s]*primary\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(or[\\n\\s]*,@\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*primary\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*primary\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*around[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,\\(first[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(,@\\(rest[\\n\\s]*around\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-method[\\n\\s]*,form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*form\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;This[\\n\\s]*short-form[\\n\\s]*call[\\n\\s]*is[\\n\\s]*behaviorally[\\n\\s]*identical[\\n\\s]*to[\\n\\s]*the[\\n\\s]*preceding[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*or[\\n\\s]*:identity-with-one-argument[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Order[\\n\\s]*methods[\\n\\s]*by[\\n\\s]*positive[\\n\\s]*integer[\\n\\s]*qualifiers[\\n\\s]*;:around[\\n\\s]*methods[\\n\\s]*are[\\n\\s]*disallowed[\\n\\s]*to[\\n\\s]*keep[\\n\\s]*the[\\n\\s]*example[\\n\\s]*small[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*example-method-combination[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(methods[\\n\\s]*positive-integer-qualifier-p\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(progn[\\n\\s]*,@\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(stable-sort[\\n\\s]*methods[\\n\\s]*#'&#60;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:key[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(first[\\n\\s]*\\(method-qualifiers[\\n\\s]*method\\)\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*positive-integer-qualifier-p[\\n\\s]*\\(method-qualifiers\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(=[\\n\\s]*\\(length[\\n\\s]*method-qualifiers\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*\\(first[\\n\\s]*method-qualifiers\\)[\\n\\s]*'\\(integer[\\n\\s]*0[\\n\\s]*\\*\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*of[\\n\\s]*the[\\n\\s]*use[\\n\\s]*of[\\n\\s]*:arguments[\\n\\s]*[\\n\\s]*\\(define-method-combination[\\n\\s]*progn-with-lock[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(methods[\\n\\s]*\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:arguments[\\n\\s]*object\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(unwind-protect[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(lock[\\n\\s]*\\(object-lock[\\n\\s]*,object\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,@\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(method\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(call-method[\\n\\s]*,method\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*methods\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unlock[\\n\\s]*\\(object-lock[\\n\\s]*,object\\)\\)\\)\\)"],["\\code\n (defmethod some-operation ((a integer) (b float)) (list a b))\n*→* #&#60;STANDARD-METHOD SOME-OPERATION (INTEGER FLOAT) 26723357&#62;\n (find-method #'some-operation '() (mapcar #'find-class '(integer float)))\n*→* #&#60;STANDARD-METHOD SOME-OPERATION (INTEGER FLOAT) 26723357&#62;\n (find-method #'some-operation '() (mapcar #'find-class '(integer integer)))\n\\OUT Error: No matching method\n (find-method #'some-operation '() (mapcar #'find-class '(integer integer)) nil)\n*→* NIL\n\\endcode","\\(defmethod[\\n\\s]*some-operation[\\n\\s]*\\(\\(a[\\n\\s]*integer\\)[\\n\\s]*\\(b[\\n\\s]*float\\)\\)[\\n\\s]*\\(list[\\n\\s]*a[\\n\\s]*b\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*SOME-OPERATION[\\n\\s]*\\(INTEGER[\\n\\s]*FLOAT\\)[\\n\\s]*26723357&#62;[\\n\\s]*[\\n\\s]*\\(find-method[\\n\\s]*#'some-operation[\\n\\s]*'\\(\\)[\\n\\s]*\\(mapcar[\\n\\s]*#'find-class[\\n\\s]*'\\(integer[\\n\\s]*float\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-METHOD[\\n\\s]*SOME-OPERATION[\\n\\s]*\\(INTEGER[\\n\\s]*FLOAT\\)[\\n\\s]*26723357&#62;[\\n\\s]*[\\n\\s]*\\(find-method[\\n\\s]*#'some-operation[\\n\\s]*'\\(\\)[\\n\\s]*\\(mapcar[\\n\\s]*#'find-class[\\n\\s]*'\\(integer[\\n\\s]*integer\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*No[\\n\\s]*matching[\\n\\s]*method[\\n\\s]*[\\n\\s]*\\(find-method[\\n\\s]*#'some-operation[\\n\\s]*'\\(\\)[\\n\\s]*\\(mapcar[\\n\\s]*#'find-class[\\n\\s]*'\\(integer[\\n\\s]*integer\\)\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (class-of 'fred) *→* #&#60;BUILT-IN-CLASS SYMBOL 610327300&#62;\n (class-of 2/3) *→* #&#60;BUILT-IN-CLASS RATIO 610326642&#62;\n \n (defclass book () ()) *→* #&#60;STANDARD-CLASS BOOK 33424745&#62;\n (class-of (make-instance 'book)) *→* #&#60;STANDARD-CLASS BOOK 33424745&#62;\n \n (defclass novel (book) ()) *→* #&#60;STANDARD-CLASS NOVEL 33424764&#62;\n (class-of (make-instance 'novel)) *→* #&#60;STANDARD-CLASS NOVEL 33424764&#62;\n\n (defstruct kons kar kdr) *→* KONS\n (class-of (make-kons :kar 3 :kdr 4)) *→* #&#60;STRUCTURE-CLASS KONS 250020317&#62;\n\\endcode","\\(class-of[\\n\\s]*'fred\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;BUILT-IN-CLASS[\\n\\s]*SYMBOL[\\n\\s]*610327300&#62;[\\n\\s]*[\\n\\s]*\\(class-of[\\n\\s]*2/3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;BUILT-IN-CLASS[\\n\\s]*RATIO[\\n\\s]*610326642&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*book[\\n\\s]*\\(\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*BOOK[\\n\\s]*33424745&#62;[\\n\\s]*[\\n\\s]*\\(class-of[\\n\\s]*\\(make-instance[\\n\\s]*'book\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*BOOK[\\n\\s]*33424745&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defclass[\\n\\s]*novel[\\n\\s]*\\(book\\)[\\n\\s]*\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*NOVEL[\\n\\s]*33424764&#62;[\\n\\s]*[\\n\\s]*\\(class-of[\\n\\s]*\\(make-instance[\\n\\s]*'novel\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STANDARD-CLASS[\\n\\s]*NOVEL[\\n\\s]*33424764&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*kons[\\n\\s]*kar[\\n\\s]*kdr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*KONS[\\n\\s]*[\\n\\s]*\\(class-of[\\n\\s]*\\(make-kons[\\n\\s]*:kar[\\n\\s]*3[\\n\\s]*:kdr[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;STRUCTURE-CLASS[\\n\\s]*KONS[\\n\\s]*250020317&#62;"],["\\code\n (make-package 'temp :use nil) *→* #&#60;PACKAGE \"TEMP\"&#62;\n (use-package 'temp) *→* T\n (intern \"TEMP-SYM\" 'temp) *→* TEMP::TEMP-SYM, NIL\n (find-symbol \"TEMP-SYM\") *→* NIL, NIL\n (export (find-symbol \"TEMP-SYM\" 'temp) 'temp) *→* T\n (find-symbol \"TEMP-SYM\") *→* TEMP-SYM, :INHERITED\n\\endcode","\\(make-package[\\n\\s]*'temp[\\n\\s]*:use[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEMP\"&#62;[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"TEMP-SYM\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::TEMP-SYM,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"TEMP-SYM\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\(find-symbol[\\n\\s]*\"TEMP-SYM\"[\\n\\s]*'temp\\)[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"TEMP-SYM\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP-SYM,[\\n\\s]*:INHERITED"],["\\code\n (find-symbol \"NEVER-BEFORE-USED\") *→* NIL, NIL\n (find-symbol \"NEVER-BEFORE-USED\") *→* NIL, NIL\n (intern \"NEVER-BEFORE-USED\") *→* NEVER-BEFORE-USED, NIL\n (intern \"NEVER-BEFORE-USED\") *→* NEVER-BEFORE-USED, :INTERNAL\n (find-symbol \"NEVER-BEFORE-USED\") *→* NEVER-BEFORE-USED, :INTERNAL\n (find-symbol \"never-before-used\") *→* NIL, NIL\n (find-symbol \"CAR\" 'common-lisp-user) *→* CAR, :INHERITED\n (find-symbol \"CAR\" 'common-lisp) *→* CAR, :EXTERNAL\n (find-symbol \"NIL\" 'common-lisp-user) *→* NIL, :INHERITED\n (find-symbol \"NIL\" 'common-lisp) *→* NIL, :EXTERNAL\n (find-symbol \"NIL\" (prog1 (make-package \"JUST-TESTING\" :use '())\n                           (intern \"NIL\" \"JUST-TESTING\")))\n*→* JUST-TESTING::NIL, :INTERNAL\n (export 'just-testing::nil 'just-testing)\n (find-symbol \"NIL\" 'just-testing) *→* JUST-TESTING:NIL, :EXTERNAL\n (find-symbol \"NIL\" \"KEYWORD\")\n*→* NIL, NIL\n\\OV :NIL, :EXTERNAL\n (find-symbol (symbol-name :nil) \"KEYWORD\") *→* :NIL, :EXTERNAL\n\\endcode","\\(find-symbol[\\n\\s]*\"NEVER-BEFORE-USED\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NEVER-BEFORE-USED\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"NEVER-BEFORE-USED\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NEVER-BEFORE-USED,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"NEVER-BEFORE-USED\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NEVER-BEFORE-USED,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NEVER-BEFORE-USED\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NEVER-BEFORE-USED,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"never-before-used\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CAR\"[\\n\\s]*'common-lisp-user\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CAR,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CAR\"[\\n\\s]*'common-lisp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CAR,[\\n\\s]*:EXTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NIL\"[\\n\\s]*'common-lisp-user\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NIL\"[\\n\\s]*'common-lisp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*:EXTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NIL\"[\\n\\s]*\\(prog1[\\n\\s]*\\(make-package[\\n\\s]*\"JUST-TESTING\"[\\n\\s]*:use[\\n\\s]*'\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"NIL\"[\\n\\s]*\"JUST-TESTING\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*JUST-TESTING::NIL,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*'just-testing::nil[\\n\\s]*'just-testing\\)[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NIL\"[\\n\\s]*'just-testing\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*JUST-TESTING:NIL,[\\n\\s]*:EXTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"NIL\"[\\n\\s]*\"KEYWORD\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*\\\\OV[\\n\\s]*:NIL,[\\n\\s]*:EXTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\\(symbol-name[\\n\\s]*:nil\\)[\\n\\s]*\"KEYWORD\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:NIL,[\\n\\s]*:EXTERNAL"],["\\code\n (find-package 'common-lisp) *→* #&#60;PACKAGE \"COMMON-LISP\"&#62;\n (find-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (find-package 'not-there) *→* NIL\n\\endcode","\\(find-package[\\n\\s]*'common-lisp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP\"&#62;[\\n\\s]*[\\n\\s]*\\(find-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(find-package[\\n\\s]*'not-there\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (find-all-symbols 'car)\n*→* (CAR)\n\\OV (CAR VEHICLES:CAR)\n\\OV (VEHICLES:CAR CAR)\n (intern \"CAR\" (make-package 'temp :use nil)) *→* TEMP::CAR, NIL\n (find-all-symbols 'car)\n*→* (TEMP::CAR CAR)\n\\OV (CAR TEMP::CAR)\n\\OV (TEMP::CAR CAR VEHICLES:CAR)\n\\OV (CAR TEMP::CAR VEHICLES:CAR)\n\\endcode","\\(find-all-symbols[\\n\\s]*'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(CAR\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(CAR[\\n\\s]*VEHICLES:CAR\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(VEHICLES:CAR[\\n\\s]*CAR\\)[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"CAR\"[\\n\\s]*\\(make-package[\\n\\s]*'temp[\\n\\s]*:use[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::CAR,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-all-symbols[\\n\\s]*'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TEMP::CAR[\\n\\s]*CAR\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(CAR[\\n\\s]*TEMP::CAR\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(TEMP::CAR[\\n\\s]*CAR[\\n\\s]*VEHICLES:CAR\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(CAR[\\n\\s]*TEMP::CAR[\\n\\s]*VEHICLES:CAR\\)"],["\\code\n (import 'common-lisp::car (make-package 'temp :use nil)) *→* T\n (find-symbol \"CAR\" 'temp) *→* CAR, :INTERNAL\n (find-symbol \"CDR\" 'temp) *→* NIL, NIL \n\\endcode","\\(import[\\n\\s]*'common-lisp::car[\\n\\s]*\\(make-package[\\n\\s]*'temp[\\n\\s]*:use[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CAR\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CAR,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CDR\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL"],["\\code\n (let ((before (list-all-packages)))\n    (make-package 'temp)\n    (set-difference (list-all-packages) before)) *→* (#&#60;PACKAGE \"TEMP\"&#62;)\n\\endcode","\\(let[\\n\\s]*\\(\\(before[\\n\\s]*\\(list-all-packages\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-difference[\\n\\s]*\\(list-all-packages\\)[\\n\\s]*before\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"TEMP\"&#62;\\)"],["\\code\n (make-package 'temporary :nicknames '(\"TEMP\")) *→* #&#60;PACKAGE \"TEMPORARY\"&#62;\n (rename-package 'temp 'ephemeral) *→* #&#60;PACKAGE \"EPHEMERAL\"&#62;\n (package-nicknames (find-package 'ephemeral)) *→* ()\n (find-package 'temporary) *→* NIL\n (rename-package 'ephemeral 'temporary '(temp fleeting))\n*→* #&#60;PACKAGE \"TEMPORARY\"&#62;\n (package-nicknames (find-package 'temp)) *→* (\"TEMP\" \"FLEETING\")\n\\endcode","\\(make-package[\\n\\s]*'temporary[\\n\\s]*:nicknames[\\n\\s]*'\\(\"TEMP\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEMPORARY\"&#62;[\\n\\s]*[\\n\\s]*\\(rename-package[\\n\\s]*'temp[\\n\\s]*'ephemeral\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"EPHEMERAL\"&#62;[\\n\\s]*[\\n\\s]*\\(package-nicknames[\\n\\s]*\\(find-package[\\n\\s]*'ephemeral\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(find-package[\\n\\s]*'temporary\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(rename-package[\\n\\s]*'ephemeral[\\n\\s]*'temporary[\\n\\s]*'\\(temp[\\n\\s]*fleeting\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEMPORARY\"&#62;[\\n\\s]*[\\n\\s]*\\(package-nicknames[\\n\\s]*\\(find-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"TEMP\"[\\n\\s]*\"FLEETING\"\\)"],["\\code\n (package-shadowing-symbols (make-package 'temp)) *→* NIL\n (find-symbol 'car 'temp) *→* CAR, :INHERITED\n (shadow 'car 'temp) *→* T\n (find-symbol 'car 'temp) *→* TEMP::CAR, :INTERNAL\n (package-shadowing-symbols 'temp) *→* (TEMP::CAR)\n\\endcode","\\(package-shadowing-symbols[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*'car[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CAR,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(shadow[\\n\\s]*'car[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*'car[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::CAR,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(package-shadowing-symbols[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TEMP::CAR\\)"],["\\code\n (make-package 'test-1) *→* #&#60;PACKAGE \"TEST-1\"&#62;\n (intern \"TEST\" (find-package 'test-1)) *→* TEST-1::TEST, NIL\n (shadow 'test-1::test (find-package 'test-1)) *→* T\n (shadow 'TEST (find-package 'test-1)) *→* T\n (assert (not (null (member 'test-1::test (package-shadowing-symbols\n                                            (find-package 'test-1))))))\n \n (make-package 'test-2) *→* #&#60;PACKAGE \"TEST-2\"&#62;\n (intern \"TEST\" (find-package 'test-2)) *→* TEST-2::TEST, NIL\n (export 'test-2::test (find-package 'test-2)) *→* T\n (use-package 'test-2 (find-package 'test-1))    ;should not error\n \n\\endcode","\\(make-package[\\n\\s]*'test-1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEST-1\"&#62;[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"TEST\"[\\n\\s]*\\(find-package[\\n\\s]*'test-1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEST-1::TEST,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(shadow[\\n\\s]*'test-1::test[\\n\\s]*\\(find-package[\\n\\s]*'test-1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(shadow[\\n\\s]*'TEST[\\n\\s]*\\(find-package[\\n\\s]*'test-1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(assert[\\n\\s]*\\(not[\\n\\s]*\\(null[\\n\\s]*\\(member[\\n\\s]*'test-1::test[\\n\\s]*\\(package-shadowing-symbols[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-package[\\n\\s]*'test-1\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*'test-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEST-2\"&#62;[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"TEST\"[\\n\\s]*\\(find-package[\\n\\s]*'test-2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEST-2::TEST,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*'test-2::test[\\n\\s]*\\(find-package[\\n\\s]*'test-2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*'test-2[\\n\\s]*\\(find-package[\\n\\s]*'test-1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;should[\\n\\s]*not[\\n\\s]*error"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (setq sym (intern \"CONFLICT\")) *→* CONFLICT\n (intern \"CONFLICT\" (make-package 'temp)) *→* TEMP::CONFLICT, NIL\n (package-shadowing-symbols 'temp) *→* NIL\n (shadowing-import sym 'temp) *→* T \n (package-shadowing-symbols 'temp) *→* (CONFLICT)\n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*sym[\\n\\s]*\\(intern[\\n\\s]*\"CONFLICT\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CONFLICT[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"CONFLICT\"[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::CONFLICT,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(package-shadowing-symbols[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(shadowing-import[\\n\\s]*sym[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-shadowing-symbols[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(CONFLICT\\)"],["\\code\n (setq *foo-package* (make-package \"FOO\" :use nil))\n (setq *foo-symbol*  (intern \"FOO\" *foo-package*))\n (export *foo-symbol* *foo-package*)\n\n (setq *bar-package* (make-package \"BAR\" :use '(\"FOO\")))\n (setq *bar-symbol*  (intern \"BAR\" *bar-package*))\n (export *foo-symbol* *bar-package*)\n (export *bar-symbol* *bar-package*)\n\n (setq *baz-package* (make-package \"BAZ\" :use '(\"BAR\")))\n\n (symbol-package *foo-symbol*) *→* #&#60;PACKAGE \"FOO\"&#62;\n (symbol-package *bar-symbol*) *→* #&#60;PACKAGE \"BAR\"&#62;\n\n (prin1-to-string *foo-symbol*) *→* \"FOO:FOO\"\n (prin1-to-string *bar-symbol*) *→* \"BAR:BAR\"\n\n (find-symbol \"FOO\" *bar-package*) *→* FOO:FOO, :EXTERNAL\n\n (find-symbol \"FOO\" *baz-package*) *→* FOO:FOO, :INHERITED\n (find-symbol \"BAR\" *baz-package*) *→* BAR:BAR, :INHERITED\n\n (packagep *foo-package*) *→ true*\n (packagep *bar-package*) *→ true*\n (packagep *baz-package*) *→ true*\n\n (package-name *foo-package*) *→* \"FOO\"\n (package-name *bar-package*) *→* \"BAR\"\n (package-name *baz-package*) *→* \"BAZ\"\n\n (package-use-list *foo-package*) *→* ()\n (package-use-list *bar-package*) *→* (#&#60;PACKAGE \"FOO\"&#62;)\n (package-use-list *baz-package*) *→* (#&#60;PACKAGE \"BAR\"&#62;)\n\n (package-used-by-list *foo-package*) *→* (#&#60;PACKAGE \"BAR\"&#62;)\n (package-used-by-list *bar-package*) *→* (#&#60;PACKAGE \"BAZ\"&#62;)\n (package-used-by-list *baz-package*) *→* ()\n\n (delete-package *bar-package*)\n\\OUT Error: Package BAZ uses package BAR.\n\\OUT If continued, BAZ will be made to unuse-package BAR,\n\\OUT and then BAR will be deleted.\n\\OUT Type :CONTINUE to continue.\n\\OUT Debug&#62; \\IN&#123;:CONTINUE&#125;\n*→* T\n\n (symbol-package *foo-symbol*) *→* #&#60;PACKAGE \"FOO\"&#62;\n (symbol-package *bar-symbol*) is unspecified\n\n (prin1-to-string *foo-symbol*) *→* \"FOO:FOO\"\n (prin1-to-string *bar-symbol*) is unspecified\n\n (find-symbol \"FOO\" *bar-package*) is unspecified\n\n (find-symbol \"FOO\" *baz-package*) *→* NIL, NIL\n (find-symbol \"BAR\" *baz-package*) *→* NIL, NIL\n\n (packagep *foo-package*) *→* T\n (packagep *bar-package*) *→* T\n (packagep *baz-package*) *→* T\n\n (package-name *foo-package*) *→* \"FOO\"\n (package-name *bar-package*) *→* NIL\n (package-name *baz-package*) *→* \"BAZ\"\n\n (package-use-list *foo-package*) *→* ()\n (package-use-list *bar-package*) is unspecified\n (package-use-list *baz-package*) *→* ()\n\n (package-used-by-list *foo-package*) *→* ()\n (package-used-by-list *bar-package*) is unspecified\n (package-used-by-list *baz-package*) *→* ()\n\\endcode","\\(setq[\\n\\s]*\\*foo-package\\*[\\n\\s]*\\(make-package[\\n\\s]*\"FOO\"[\\n\\s]*:use[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*foo-symbol\\*[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"FOO\"[\\n\\s]*\\*foo-package\\*\\)\\)[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\*foo-symbol\\*[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*bar-package\\*[\\n\\s]*\\(make-package[\\n\\s]*\"BAR\"[\\n\\s]*:use[\\n\\s]*'\\(\"FOO\"\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*bar-symbol\\*[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"BAR\"[\\n\\s]*\\*bar-package\\*\\)\\)[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\*foo-symbol\\*[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\*bar-symbol\\*[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*baz-package\\*[\\n\\s]*\\(make-package[\\n\\s]*\"BAZ\"[\\n\\s]*:use[\\n\\s]*'\\(\"BAR\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*\\*foo-symbol\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"FOO\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*\\*bar-symbol\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"BAR\"&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*\\*foo-symbol\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO:FOO\"[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*\\*bar-symbol\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"BAR:BAR\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"FOO\"[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO:FOO,[\\n\\s]*:EXTERNAL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"FOO\"[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO:FOO,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"BAR\"[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BAR:BAR,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO\"[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"BAR\"[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"BAZ\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"FOO\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"BAR\"&#62;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"BAR\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"BAZ\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(delete-package[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*Package[\\n\\s]*BAZ[\\n\\s]*uses[\\n\\s]*package[\\n\\s]*BAR\\.[\\n\\s]*\\\\OUT[\\n\\s]*If[\\n\\s]*continued,[\\n\\s]*BAZ[\\n\\s]*will[\\n\\s]*be[\\n\\s]*made[\\n\\s]*to[\\n\\s]*unuse-package[\\n\\s]*BAR,[\\n\\s]*\\\\OUT[\\n\\s]*and[\\n\\s]*then[\\n\\s]*BAR[\\n\\s]*will[\\n\\s]*be[\\n\\s]*deleted\\.[\\n\\s]*\\\\OUT[\\n\\s]*Type[\\n\\s]*:CONTINUE[\\n\\s]*to[\\n\\s]*continue\\.[\\n\\s]*\\\\OUT[\\n\\s]*Debug&#62;[\\n\\s]*\\\\IN&#123;:CONTINUE&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*\\*foo-symbol\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"FOO\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*\\*bar-symbol\\*\\)[\\n\\s]*is[\\n\\s]*unspecified[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*\\*foo-symbol\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO:FOO\"[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*\\*bar-symbol\\*\\)[\\n\\s]*is[\\n\\s]*unspecified[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"FOO\"[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*is[\\n\\s]*unspecified[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"FOO\"[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"BAR\"[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO\"[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"BAZ\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*is[\\n\\s]*unspecified[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*\\*bar-package\\*\\)[\\n\\s]*is[\\n\\s]*unspecified[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*\\*baz-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)"],["\\code\n (make-package 'temporary :nicknames '(\"TEMP\" \"temp\")) *→* #&#60;PACKAGE \"TEMPORARY\"&#62;\n (make-package \"OWNER\" :use '(\"temp\")) *→* #&#60;PACKAGE \"OWNER\"&#62;\n (package-used-by-list 'temp) *→* (#&#60;PACKAGE \"OWNER\"&#62;)\n (package-use-list 'owner) *→* (#&#60;PACKAGE \"TEMPORARY\"&#62;)\n\\endcode","\\(make-package[\\n\\s]*'temporary[\\n\\s]*:nicknames[\\n\\s]*'\\(\"TEMP\"[\\n\\s]*\"temp\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEMPORARY\"&#62;[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*\"OWNER\"[\\n\\s]*:use[\\n\\s]*'\\(\"temp\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"OWNER\"&#62;[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"OWNER\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*'owner\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"TEMPORARY\"&#62;\\)"],["\\code\n (defun test-package-iterator (package)\n   (unless (packagep package)\n     (setq package (find-package package)))\n   (let ((all-entries '())\n         (generated-entries '()))\n     (do-symbols (x package) \n       (multiple-value-bind (symbol accessibility) \n           (find-symbol (symbol-name x) package)\n         (push (list symbol accessibility) all-entries)))\n     (with-package-iterator (generator-fn package \n                             :internal :external :inherited)\n       (loop     \n         (multiple-value-bind (more? symbol accessibility pkg)\n             (generator-fn)\n           (unless more? (return))\n           (let ((l (multiple-value-list (find-symbol (symbol-name symbol) \n                                                      package))))\n             (unless (equal l (list symbol accessibility))\n               (error \"Symbol ~S not found as ~S in package ~A [~S]\"\n                      symbol accessibility (package-name package) l))\n             (push l generated-entries)))))\n     (unless (and (subsetp all-entries generated-entries :test #'equal)\n                  (subsetp generated-entries all-entries :test #'equal))\n      (error \"Generated entries and Do-Symbols entries don't correspond\"))\n     t))\n\\endcode","\\(defun[\\n\\s]*test-package-iterator[\\n\\s]*\\(package\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(packagep[\\n\\s]*package\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*package[\\n\\s]*\\(find-package[\\n\\s]*package\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(all-entries[\\n\\s]*'\\(\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(generated-entries[\\n\\s]*'\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do-symbols[\\n\\s]*\\(x[\\n\\s]*package\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(symbol[\\n\\s]*accessibility\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\\(symbol-name[\\n\\s]*x\\)[\\n\\s]*package\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*\\(list[\\n\\s]*symbol[\\n\\s]*accessibility\\)[\\n\\s]*all-entries\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-package-iterator[\\n\\s]*\\(generator-fn[\\n\\s]*package[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:internal[\\n\\s]*:external[\\n\\s]*:inherited\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(more\\?[\\n\\s]*symbol[\\n\\s]*accessibility[\\n\\s]*pkg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(generator-fn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*more\\?[\\n\\s]*\\(return\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(l[\\n\\s]*\\(multiple-value-list[\\n\\s]*\\(find-symbol[\\n\\s]*\\(symbol-name[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*package\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(equal[\\n\\s]*l[\\n\\s]*\\(list[\\n\\s]*symbol[\\n\\s]*accessibility\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Symbol[\\n\\s]*~S[\\n\\s]*not[\\n\\s]*found[\\n\\s]*as[\\n\\s]*~S[\\n\\s]*in[\\n\\s]*package[\\n\\s]*~A[\\n\\s]*\\[~S\\]\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*symbol[\\n\\s]*accessibility[\\n\\s]*\\(package-name[\\n\\s]*package\\)[\\n\\s]*l\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*l[\\n\\s]*generated-entries\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(and[\\n\\s]*\\(subsetp[\\n\\s]*all-entries[\\n\\s]*generated-entries[\\n\\s]*:test[\\n\\s]*#'equal\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(subsetp[\\n\\s]*generated-entries[\\n\\s]*all-entries[\\n\\s]*:test[\\n\\s]*#'equal\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"Generated[\\n\\s]*entries[\\n\\s]*and[\\n\\s]*Do-Symbols[\\n\\s]*entries[\\n\\s]*don't[\\n\\s]*correspond\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*t\\)\\)"],["\\code\n (defun print-all-symbols () \n   (with-package-iterator (next-symbol (list-all-packages)\n                           :internal :external)\n     (loop\n       (multiple-value-bind (more? symbol) (next-symbol)\n         (if more? \n            (print symbol)\n            (return))))))\n\\endcode","\\(defun[\\n\\s]*print-all-symbols[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-package-iterator[\\n\\s]*\\(next-symbol[\\n\\s]*\\(list-all-packages\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:internal[\\n\\s]*:external\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(multiple-value-bind[\\n\\s]*\\(more\\?[\\n\\s]*symbol\\)[\\n\\s]*\\(next-symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*more\\?[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(return\\)\\)\\)\\)\\)\\)"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (export (intern \"CONTRABAND\" (make-package 'temp)) 'temp) *→* T\n (find-symbol \"CONTRABAND\") *→* NIL, NIL \n (use-package 'temp) *→* T \n (find-symbol \"CONTRABAND\") *→* CONTRABAND, :INHERITED\n (unexport 'contraband 'temp) *→* T\n (find-symbol \"CONTRABAND\") *→* NIL, NIL\n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\(intern[\\n\\s]*\"CONTRABAND\"[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CONTRABAND\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CONTRABAND\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CONTRABAND,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(unexport[\\n\\s]*'contraband[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"CONTRABAND\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (setq temps-unpack (intern \"UNPACK\" (make-package 'temp))) *→* TEMP::UNPACK \n (unintern temps-unpack 'temp) *→* T\n (find-symbol \"UNPACK\" 'temp) *→* NIL, NIL \n temps-unpack *→* #:UNPACK \n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temps-unpack[\\n\\s]*\\(intern[\\n\\s]*\"UNPACK\"[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::UNPACK[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unintern[\\n\\s]*temps-unpack[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"UNPACK\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*temps-unpack[\\n\\s]*\\*\\→\\*[\\n\\s]*#:UNPACK"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (export (intern \"SHOES\" (make-package 'temp)) 'temp) *→* T\n (find-symbol \"SHOES\") *→* NIL, NIL\n (use-package 'temp) *→* T\n (find-symbol \"SHOES\") *→* SHOES, :INHERITED\n (find (find-package 'temp) (package-use-list 'common-lisp-user)) *→* #&#60;PACKAGE \"TEMP\"&#62;\n (unuse-package 'temp) *→* T\n (find-symbol \"SHOES\") *→* NIL, NIL\n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\(intern[\\n\\s]*\"SHOES\"[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"SHOES\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"SHOES\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SHOES,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(find[\\n\\s]*\\(find-package[\\n\\s]*'temp\\)[\\n\\s]*\\(package-use-list[\\n\\s]*'common-lisp-user\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEMP\"&#62;[\\n\\s]*[\\n\\s]*\\(unuse-package[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"SHOES\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL"],["\\code\n (export (intern \"LAND-FILL\" (make-package 'trash)) 'trash) *→* T\n (find-symbol \"LAND-FILL\" (make-package 'temp)) *→* NIL, NIL\n (package-use-list 'temp) *→* (#&#60;PACKAGE \"TEMP\"&#62;)\n (use-package 'trash 'temp) *→* T\n (package-use-list 'temp) *→* (#&#60;PACKAGE \"TEMP\"&#62; #&#60;PACKAGE \"TRASH\"&#62;)\n (find-symbol \"LAND-FILL\" 'temp) *→* TRASH:LAND-FILL, :INHERITED\n\\endcode","\\(export[\\n\\s]*\\(intern[\\n\\s]*\"LAND-FILL\"[\\n\\s]*\\(make-package[\\n\\s]*'trash\\)\\)[\\n\\s]*'trash\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"LAND-FILL\"[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"TEMP\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*'trash[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"TEMP\"&#62;[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TRASH\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"LAND-FILL\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TRASH:LAND-FILL,[\\n\\s]*:INHERITED"],["\\code\n (defpackage \"MY-PACKAGE\"\n   (:nicknames \"MYPKG\" \"MY-PKG\")\n   (:use \"COMMON-LISP\")\n   (:shadow \"CAR\" \"CDR\")\n   (:shadowing-import-from \"VENDOR-COMMON-LISP\"  \"CONS\")\n   (:import-from \"VENDOR-COMMON-LISP\"  \"GC\")\n   (:export \"EQ\" \"CONS\" \"FROBOLA\")\n   )\n \n \n (defpackage my-package\n   (:nicknames mypkg :MY-PKG)  ; remember Common Lisp conventions for case\n   (:use common-lisp)          ; conversion on symbols\n   (:shadow CAR :cdr #:cons)                              \n   (:export \"CONS\")            ; this is the shadowed one.\n   )\n\\endcode","\\(defpackage[\\n\\s]*\"MY-PACKAGE\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:nicknames[\\n\\s]*\"MYPKG\"[\\n\\s]*\"MY-PKG\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:use[\\n\\s]*\"COMMON-LISP\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:shadow[\\n\\s]*\"CAR\"[\\n\\s]*\"CDR\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:shadowing-import-from[\\n\\s]*\"VENDOR-COMMON-LISP\"[\\n\\s]*[\\n\\s]*\"CONS\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:import-from[\\n\\s]*\"VENDOR-COMMON-LISP\"[\\n\\s]*[\\n\\s]*\"GC\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:export[\\n\\s]*\"EQ\"[\\n\\s]*\"CONS\"[\\n\\s]*\"FROBOLA\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defpackage[\\n\\s]*my-package[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:nicknames[\\n\\s]*mypkg[\\n\\s]*:MY-PKG\\)[\\n\\s]*[\\n\\s]*;[\\n\\s]*remember[\\n\\s]*Common[\\n\\s]*Lisp[\\n\\s]*conventions[\\n\\s]*for[\\n\\s]*case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:use[\\n\\s]*common-lisp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*conversion[\\n\\s]*on[\\n\\s]*symbols[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:shadow[\\n\\s]*CAR[\\n\\s]*:cdr[\\n\\s]*#:cons\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:export[\\n\\s]*\"CONS\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*this[\\n\\s]*is[\\n\\s]*the[\\n\\s]*shadowed[\\n\\s]*one\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\)"],["\\code\n (defpackage my-package\n   (:use common-lisp your-package)    ;requires your-package to exist first\n   (:export \"MY-FUN\"))                \n (defpackage your-package\n   (:use common-lisp)\n   (:import-from my-package \"MY-FUN\") ;requires my-package to exist first\n   (:export \"MY-FUN\"))\n\\endcode","\\(defpackage[\\n\\s]*my-package[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:use[\\n\\s]*common-lisp[\\n\\s]*your-package\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;requires[\\n\\s]*your-package[\\n\\s]*to[\\n\\s]*exist[\\n\\s]*first[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:export[\\n\\s]*\"MY-FUN\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defpackage[\\n\\s]*your-package[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:use[\\n\\s]*common-lisp\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:import-from[\\n\\s]*my-package[\\n\\s]*\"MY-FUN\"\\)[\\n\\s]*;requires[\\n\\s]*my-package[\\n\\s]*to[\\n\\s]*exist[\\n\\s]*first[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:export[\\n\\s]*\"MY-FUN\"\\)\\)"],["\\code\n (make-package 'temp :use nil) *→* #&#60;PACKAGE \"TEMP\"&#62;\n (intern \"SHY\" 'temp) *→* TEMP::SHY, NIL ;SHY will be an internal symbol\n                                         ;in the package TEMP\n (export (intern \"BOLD\" 'temp) 'temp)  *→* T  ;BOLD will be external  \n (let ((lst ()))\n   (do-symbols (s (find-package 'temp)) (push s lst))\n   lst)\n*→* (TEMP::SHY TEMP:BOLD)\n\\OV (TEMP:BOLD TEMP::SHY)\n (let ((lst ()))\n   (do-external-symbols (s (find-package 'temp) lst) (push s lst))\n   lst) \n*→* (TEMP:BOLD)\n (let ((lst ()))                                                     \n   (do-all-symbols (s lst)\n     (when (eq (find-package 'temp) (symbol-package s)) (push s lst)))\n   lst)\n*→* (TEMP::SHY TEMP:BOLD)\n\\OV (TEMP:BOLD TEMP::SHY)\n\\endcode","\\(make-package[\\n\\s]*'temp[\\n\\s]*:use[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TEMP\"&#62;[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"SHY\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::SHY,[\\n\\s]*NIL[\\n\\s]*;SHY[\\n\\s]*will[\\n\\s]*be[\\n\\s]*an[\\n\\s]*internal[\\n\\s]*symbol[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;in[\\n\\s]*the[\\n\\s]*package[\\n\\s]*TEMP[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\(intern[\\n\\s]*\"BOLD\"[\\n\\s]*'temp\\)[\\n\\s]*'temp\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*;BOLD[\\n\\s]*will[\\n\\s]*be[\\n\\s]*external[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(lst[\\n\\s]*\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do-symbols[\\n\\s]*\\(s[\\n\\s]*\\(find-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\(push[\\n\\s]*s[\\n\\s]*lst\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TEMP::SHY[\\n\\s]*TEMP:BOLD\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(TEMP:BOLD[\\n\\s]*TEMP::SHY\\)[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(lst[\\n\\s]*\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do-external-symbols[\\n\\s]*\\(s[\\n\\s]*\\(find-package[\\n\\s]*'temp\\)[\\n\\s]*lst\\)[\\n\\s]*\\(push[\\n\\s]*s[\\n\\s]*lst\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TEMP:BOLD\\)[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(lst[\\n\\s]*\\(\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do-all-symbols[\\n\\s]*\\(s[\\n\\s]*lst\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(eq[\\n\\s]*\\(find-package[\\n\\s]*'temp\\)[\\n\\s]*\\(symbol-package[\\n\\s]*s\\)\\)[\\n\\s]*\\(push[\\n\\s]*s[\\n\\s]*lst\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*lst\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TEMP::SHY[\\n\\s]*TEMP:BOLD\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(TEMP:BOLD[\\n\\s]*TEMP::SHY\\)"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (intern \"Never-Before\") *→* |Never-Before|, NIL\n (intern \"Never-Before\") *→* |Never-Before|, :INTERNAL \n (intern \"NEVER-BEFORE\" \"KEYWORD\") *→* :NEVER-BEFORE, NIL\n (intern \"NEVER-BEFORE\" \"KEYWORD\") *→* :NEVER-BEFORE, :EXTERNAL\n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"Never-Before\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*|Never-Before|,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"Never-Before\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*|Never-Before|,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"NEVER-BEFORE\"[\\n\\s]*\"KEYWORD\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:NEVER-BEFORE,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"NEVER-BEFORE\"[\\n\\s]*\"KEYWORD\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:NEVER-BEFORE,[\\n\\s]*:EXTERNAL"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (package-name *package*) *→* \"COMMON-LISP-USER\"\n (package-name (symbol-package :test)) *→* \"KEYWORD\"\n (package-name (find-package 'common-lisp)) *→* \"COMMON-LISP\"\n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"COMMON-LISP-USER\"[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\(symbol-package[\\n\\s]*:test\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"KEYWORD\"[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\(find-package[\\n\\s]*'common-lisp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"COMMON-LISP\""],["\\code\n (defvar *foo-package* (make-package \"FOO\"))\n (rename-package \"FOO\" \"FOO0\")\n (package-name *foo-package*) *→* \"FOO0\"\n\\endcode","\\(defvar[\\n\\s]*\\*foo-package\\*[\\n\\s]*\\(make-package[\\n\\s]*\"FOO\"\\)\\)[\\n\\s]*[\\n\\s]*\\(rename-package[\\n\\s]*\"FOO\"[\\n\\s]*\"FOO0\"\\)[\\n\\s]*[\\n\\s]*\\(package-name[\\n\\s]*\\*foo-package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO0\""],["\\code\n (package-nicknames (make-package 'temporary\n                                   :nicknames '(\"TEMP\" \"temp\")))\n*→* (\"temp\" \"TEMP\") \n\\endcode","\\(package-nicknames[\\n\\s]*\\(make-package[\\n\\s]*'temporary[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:nicknames[\\n\\s]*'\\(\"TEMP\"[\\n\\s]*\"temp\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"temp\"[\\n\\s]*\"TEMP\"\\)"],["\\code\n (package-shadowing-symbols (make-package 'temp)) *→* ()\n (shadow 'cdr 'temp) *→* T\n (package-shadowing-symbols 'temp) *→* (TEMP::CDR)\n (intern \"PILL\" 'temp) *→* TEMP::PILL, NIL\n (shadowing-import 'pill 'temp) *→* T\n (package-shadowing-symbols 'temp) *→* (PILL TEMP::CDR)\n\\endcode","\\(package-shadowing-symbols[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(shadow[\\n\\s]*'cdr[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(package-shadowing-symbols[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(TEMP::CDR\\)[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"PILL\"[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP::PILL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(shadowing-import[\\n\\s]*'pill[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(package-shadowing-symbols[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PILL[\\n\\s]*TEMP::CDR\\)"],["\\code\n (package-use-list (make-package 'temp)) *→* (#&#60;PACKAGE \"COMMON-LISP\"&#62;)\n (use-package 'common-lisp-user 'temp) *→* T\n (package-use-list 'temp) *→* (#&#60;PACKAGE \"COMMON-LISP\"&#62; #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;)\n\\endcode","\\(package-use-list[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*'common-lisp-user[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(package-use-list[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP\"&#62;[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;\\)"],["\\code\n (package-used-by-list (make-package 'temp)) *→* ()\n (make-package 'trash :use '(temp)) *→* #&#60;PACKAGE \"TRASH\"&#62;\n (package-used-by-list 'temp) *→* (#&#60;PACKAGE \"TRASH\"&#62;)\n\\endcode","\\(package-used-by-list[\\n\\s]*\\(make-package[\\n\\s]*'temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*'trash[\\n\\s]*:use[\\n\\s]*'\\(temp\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"TRASH\"&#62;[\\n\\s]*[\\n\\s]*\\(package-used-by-list[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"TRASH\"&#62;\\)"],["\\code\n (packagep *package*) *→ true* \n (packagep 'common-lisp) *→ false* \n (packagep (find-package 'common-lisp)) *→ true* \n\\endcode","\\(packagep[\\n\\s]*\\*package\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*'common-lisp\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(packagep[\\n\\s]*\\(find-package[\\n\\s]*'common-lisp\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (packagep \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'package)\n\\endcode","\\(packagep[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'package\\)"],["\\code\n (in-package \"COMMON-LISP-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n *package* *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (make-package \"SAMPLE-PACKAGE\" :use '(\"COMMON-LISP\"))\n*→* #&#60;PACKAGE \"SAMPLE-PACKAGE\"&#62;\n (list \n   (symbol-package\n     (let ((*package* (find-package 'sample-package)))\n       (setq *some-symbol* (read-from-string \"just-testing\"))))\n   *package*)\n*→* (#&#60;PACKAGE \"SAMPLE-PACKAGE\"&#62; #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;)\n (list (symbol-package (read-from-string \"just-testing\"))\n       *package*)\n*→* (#&#60;PACKAGE \"COMMON-LISP-USER\"&#62; #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;)\n (eq 'foo (intern \"FOO\")) *→ true*\n (eq 'foo (let ((*package* (find-package 'sample-package)))\n            (intern \"FOO\")))\n*→ false*\n\\endcode","\\(in-package[\\n\\s]*\"COMMON-LISP-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\*package\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*\"SAMPLE-PACKAGE\"[\\n\\s]*:use[\\n\\s]*'\\(\"COMMON-LISP\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"SAMPLE-PACKAGE\"&#62;[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*package\\*[\\n\\s]*\\(find-package[\\n\\s]*'sample-package\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*some-symbol\\*[\\n\\s]*\\(read-from-string[\\n\\s]*\"just-testing\"\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"SAMPLE-PACKAGE\"&#62;[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(symbol-package[\\n\\s]*\\(read-from-string[\\n\\s]*\"just-testing\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*package\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;\\)[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'foo[\\n\\s]*\\(intern[\\n\\s]*\"FOO\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*'foo[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*package\\*[\\n\\s]*\\(find-package[\\n\\s]*'sample-package\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"FOO\"\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (package-error-package \n   (make-condition 'package-error\n     :package (find-package \"COMMON-LISP\")))\n*→* #&#60;Package \"COMMON-LISP\"&#62;\n\\endcode","\\(package-error-package[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-condition[\\n\\s]*'package-error[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:package[\\n\\s]*\\(find-package[\\n\\s]*\"COMMON-LISP\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Package[\\n\\s]*\"COMMON-LISP\"&#62;"],["\\code\n ;; There is a great degree of variability permitted here.  The next\n ;; several examples are intended to illustrate just a few of the many\n ;; possibilities.  Whether the name is canonicalized to a particular\n ;; case (either upper or lower) depends on both the file system and the\n ;; implementation since two different implementations using the same\n ;; file system might differ on many issues.  How information is stored\n ;; internally (and possibly presented in #S notation) might vary,\n ;; possibly requiring `accessors' such as PATHNAME-NAME to perform case\n ;; conversion upon access.  The format of a namestring is dependent both\n ;; on the file system and the implementation since, for example, one\n ;; implementation might include the host name in a namestring, and\n ;; another might not.  #S notation would generally only be used in a\n ;; situation where no appropriate namestring could be constructed for use\n ;; with #P.\n (setq p1 (pathname \"test\"))\n*→* #P\"CHOCOLATE:TEST\" ; with case canonicalization (e.g., VMS)\n\\OV #P\"VANILLA:test\"   ; without case canonicalization (e.g., Unix)\n\\OV #P\"test\"\n\\OV #S(PATHNAME :HOST \"STRAWBERRY\" :NAME \"TEST\")\n\\OV #S(PATHNAME :HOST \"BELGIAN-CHOCOLATE\" :NAME \"test\")\n (setq p2 (pathname \"test\"))\n*→* #P\"CHOCOLATE:TEST\"\n\\OV #P\"VANILLA:test\"\n\\OV #P\"test\"\n\\OV #S(PATHNAME :HOST \"STRAWBERRY\" :NAME \"TEST\")\n\\OV #S(PATHNAME :HOST \"BELGIAN-CHOCOLATE\" :NAME \"test\")\n (pathnamep p1) *→ true*\n (eq p1 (pathname p1)) *→ true*\n (eq p1 p2)\n*→ true*\n\\OV false\n (with-open-file (stream \"test\" :direction :output)\n   (pathname stream))\n*→* #P\"ORANGE-CHOCOLATE:&#62;Gus&#62;test.lisp.newest\"\n\\endcode",";;[\\n\\s]*There[\\n\\s]*is[\\n\\s]*a[\\n\\s]*great[\\n\\s]*degree[\\n\\s]*of[\\n\\s]*variability[\\n\\s]*permitted[\\n\\s]*here\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*next[\\n\\s]*[\\n\\s]*;;[\\n\\s]*several[\\n\\s]*examples[\\n\\s]*are[\\n\\s]*intended[\\n\\s]*to[\\n\\s]*illustrate[\\n\\s]*just[\\n\\s]*a[\\n\\s]*few[\\n\\s]*of[\\n\\s]*the[\\n\\s]*many[\\n\\s]*[\\n\\s]*;;[\\n\\s]*possibilities\\.[\\n\\s]*[\\n\\s]*Whether[\\n\\s]*the[\\n\\s]*name[\\n\\s]*is[\\n\\s]*canonicalized[\\n\\s]*to[\\n\\s]*a[\\n\\s]*particular[\\n\\s]*[\\n\\s]*;;[\\n\\s]*case[\\n\\s]*\\(either[\\n\\s]*upper[\\n\\s]*or[\\n\\s]*lower\\)[\\n\\s]*depends[\\n\\s]*on[\\n\\s]*both[\\n\\s]*the[\\n\\s]*file[\\n\\s]*system[\\n\\s]*and[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;[\\n\\s]*implementation[\\n\\s]*since[\\n\\s]*two[\\n\\s]*different[\\n\\s]*implementations[\\n\\s]*using[\\n\\s]*the[\\n\\s]*same[\\n\\s]*[\\n\\s]*;;[\\n\\s]*file[\\n\\s]*system[\\n\\s]*might[\\n\\s]*differ[\\n\\s]*on[\\n\\s]*many[\\n\\s]*issues\\.[\\n\\s]*[\\n\\s]*How[\\n\\s]*information[\\n\\s]*is[\\n\\s]*stored[\\n\\s]*[\\n\\s]*;;[\\n\\s]*internally[\\n\\s]*\\(and[\\n\\s]*possibly[\\n\\s]*presented[\\n\\s]*in[\\n\\s]*#S[\\n\\s]*notation\\)[\\n\\s]*might[\\n\\s]*vary,[\\n\\s]*[\\n\\s]*;;[\\n\\s]*possibly[\\n\\s]*requiring[\\n\\s]*`accessors'[\\n\\s]*such[\\n\\s]*as[\\n\\s]*PATHNAME-NAME[\\n\\s]*to[\\n\\s]*perform[\\n\\s]*case[\\n\\s]*[\\n\\s]*;;[\\n\\s]*conversion[\\n\\s]*upon[\\n\\s]*access\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*format[\\n\\s]*of[\\n\\s]*a[\\n\\s]*namestring[\\n\\s]*is[\\n\\s]*dependent[\\n\\s]*both[\\n\\s]*[\\n\\s]*;;[\\n\\s]*on[\\n\\s]*the[\\n\\s]*file[\\n\\s]*system[\\n\\s]*and[\\n\\s]*the[\\n\\s]*implementation[\\n\\s]*since,[\\n\\s]*for[\\n\\s]*example,[\\n\\s]*one[\\n\\s]*[\\n\\s]*;;[\\n\\s]*implementation[\\n\\s]*might[\\n\\s]*include[\\n\\s]*the[\\n\\s]*host[\\n\\s]*name[\\n\\s]*in[\\n\\s]*a[\\n\\s]*namestring,[\\n\\s]*and[\\n\\s]*[\\n\\s]*;;[\\n\\s]*another[\\n\\s]*might[\\n\\s]*not\\.[\\n\\s]*[\\n\\s]*#S[\\n\\s]*notation[\\n\\s]*would[\\n\\s]*generally[\\n\\s]*only[\\n\\s]*be[\\n\\s]*used[\\n\\s]*in[\\n\\s]*a[\\n\\s]*[\\n\\s]*;;[\\n\\s]*situation[\\n\\s]*where[\\n\\s]*no[\\n\\s]*appropriate[\\n\\s]*namestring[\\n\\s]*could[\\n\\s]*be[\\n\\s]*constructed[\\n\\s]*for[\\n\\s]*use[\\n\\s]*[\\n\\s]*;;[\\n\\s]*with[\\n\\s]*#P\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*p1[\\n\\s]*\\(pathname[\\n\\s]*\"test\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"CHOCOLATE:TEST\"[\\n\\s]*;[\\n\\s]*with[\\n\\s]*case[\\n\\s]*canonicalization[\\n\\s]*\\(e\\.g\\.,[\\n\\s]*VMS\\)[\\n\\s]*\\\\OV[\\n\\s]*#P\"VANILLA:test\"[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*without[\\n\\s]*case[\\n\\s]*canonicalization[\\n\\s]*\\(e\\.g\\.,[\\n\\s]*Unix\\)[\\n\\s]*\\\\OV[\\n\\s]*#P\"test\"[\\n\\s]*\\\\OV[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*\"STRAWBERRY\"[\\n\\s]*:NAME[\\n\\s]*\"TEST\"\\)[\\n\\s]*\\\\OV[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*\"BELGIAN-CHOCOLATE\"[\\n\\s]*:NAME[\\n\\s]*\"test\"\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*p2[\\n\\s]*\\(pathname[\\n\\s]*\"test\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"CHOCOLATE:TEST\"[\\n\\s]*\\\\OV[\\n\\s]*#P\"VANILLA:test\"[\\n\\s]*\\\\OV[\\n\\s]*#P\"test\"[\\n\\s]*\\\\OV[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*\"STRAWBERRY\"[\\n\\s]*:NAME[\\n\\s]*\"TEST\"\\)[\\n\\s]*\\\\OV[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*\"BELGIAN-CHOCOLATE\"[\\n\\s]*:NAME[\\n\\s]*\"test\"\\)[\\n\\s]*[\\n\\s]*\\(pathnamep[\\n\\s]*p1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*p1[\\n\\s]*\\(pathname[\\n\\s]*p1\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*p1[\\n\\s]*p2\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*\\\\OV[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"test\"[\\n\\s]*:direction[\\n\\s]*:output\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pathname[\\n\\s]*stream\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"ORANGE-CHOCOLATE:&#62;Gus&#62;test\\.lisp\\.newest\""],["\\code\n ;; Implementation A -- an implementation with access to a single\n ;;  Unix file system.  This implementation happens to never display\n ;;  the `host' information in a namestring, since there is only one host. \n (make-pathname :directory '(:absolute \"public\" \"games\")\n                :name \"chess\" :type \"db\")\n*→* #P\"/public/games/chess.db\" \n\\medbreak\n ;; Implementation B -- an implementation with access to one or more\n ;;  VMS file systems.  This implementation displays `host' information\n ;;  in the namestring only when the host is not the local host.\n ;;  It uses a double colon to separate a host name from the host's local\n ;;  file name.\n (make-pathname :directory '(:absolute \"PUBLIC\" \"GAMES\")\n                :name \"CHESS\" :type \"DB\")\n*→* #P\"SYS$DISK:[PUBLIC.GAMES]CHESS.DB\" \n (make-pathname :host \"BOBBY\"\n                :directory '(:absolute \"PUBLIC\" \"GAMES\")\n                :name \"CHESS\" :type \"DB\")\n*→* #P\"BOBBY::SYS$DISK:[PUBLIC.GAMES]CHESS.DB\" \n\\medbreak\n ;; Implementation C -- an implementation with simultaneous access to\n ;;  multiple file systems from the same Lisp image.  In this \n ;;  implementation, there is a convention that any text preceding the\n ;;  first colon in a pathname namestring is a host name.\n (dolist (case '(:common :local))\n   (dolist (host '(\"MY-LISPM\" \"MY-VAX\" \"MY-UNIX\"))\n     (print (make-pathname :host host :case case\n                           :directory '(:absolute \"PUBLIC\" \"GAMES\")\n                           :name \"CHESS\" :type \"DB\"))))\n\\OUT #P\"MY-LISPM:&#62;public&#62;games&#62;chess.db\"\n\\OUT #P\"MY-VAX:SYS$DISK:[PUBLIC.GAMES]CHESS.DB\"\n\\OUT #P\"MY-UNIX:/public/games/chess.db\"\n\\OUT #P\"MY-LISPM:&#62;public&#62;games&#62;chess.db\" \n\\OUT #P\"MY-VAX:SYS$DISK:[PUBLIC.GAMES]CHESS.DB\" \n\\OUT #P\"MY-UNIX:/PUBLIC/GAMES/CHESS.DB\" \n*→* NIL\n\\endcode",";;[\\n\\s]*Implementation[\\n\\s]*A[\\n\\s]*--[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*with[\\n\\s]*access[\\n\\s]*to[\\n\\s]*a[\\n\\s]*single[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*Unix[\\n\\s]*file[\\n\\s]*system\\.[\\n\\s]*[\\n\\s]*This[\\n\\s]*implementation[\\n\\s]*happens[\\n\\s]*to[\\n\\s]*never[\\n\\s]*display[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*the[\\n\\s]*`host'[\\n\\s]*information[\\n\\s]*in[\\n\\s]*a[\\n\\s]*namestring,[\\n\\s]*since[\\n\\s]*there[\\n\\s]*is[\\n\\s]*only[\\n\\s]*one[\\n\\s]*host\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:directory[\\n\\s]*'\\(:absolute[\\n\\s]*\"public\"[\\n\\s]*\"games\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*\"chess\"[\\n\\s]*:type[\\n\\s]*\"db\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"/public/games/chess\\.db\"[\\n\\s]*[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*B[\\n\\s]*--[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*with[\\n\\s]*access[\\n\\s]*to[\\n\\s]*one[\\n\\s]*or[\\n\\s]*more[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*VMS[\\n\\s]*file[\\n\\s]*systems\\.[\\n\\s]*[\\n\\s]*This[\\n\\s]*implementation[\\n\\s]*displays[\\n\\s]*`host'[\\n\\s]*information[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*in[\\n\\s]*the[\\n\\s]*namestring[\\n\\s]*only[\\n\\s]*when[\\n\\s]*the[\\n\\s]*host[\\n\\s]*is[\\n\\s]*not[\\n\\s]*the[\\n\\s]*local[\\n\\s]*host\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*It[\\n\\s]*uses[\\n\\s]*a[\\n\\s]*double[\\n\\s]*colon[\\n\\s]*to[\\n\\s]*separate[\\n\\s]*a[\\n\\s]*host[\\n\\s]*name[\\n\\s]*from[\\n\\s]*the[\\n\\s]*host's[\\n\\s]*local[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*file[\\n\\s]*name\\.[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:directory[\\n\\s]*'\\(:absolute[\\n\\s]*\"PUBLIC\"[\\n\\s]*\"GAMES\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*\"CHESS\"[\\n\\s]*:type[\\n\\s]*\"DB\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"SYS$DISK:\\[PUBLIC\\.GAMES\\]CHESS\\.DB\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:host[\\n\\s]*\"BOBBY\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:directory[\\n\\s]*'\\(:absolute[\\n\\s]*\"PUBLIC\"[\\n\\s]*\"GAMES\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*\"CHESS\"[\\n\\s]*:type[\\n\\s]*\"DB\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"BOBBY::SYS$DISK:\\[PUBLIC\\.GAMES\\]CHESS\\.DB\"[\\n\\s]*[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*C[\\n\\s]*--[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*with[\\n\\s]*simultaneous[\\n\\s]*access[\\n\\s]*to[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*multiple[\\n\\s]*file[\\n\\s]*systems[\\n\\s]*from[\\n\\s]*the[\\n\\s]*same[\\n\\s]*Lisp[\\n\\s]*image\\.[\\n\\s]*[\\n\\s]*In[\\n\\s]*this[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*implementation,[\\n\\s]*there[\\n\\s]*is[\\n\\s]*a[\\n\\s]*convention[\\n\\s]*that[\\n\\s]*any[\\n\\s]*text[\\n\\s]*preceding[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;[\\n\\s]*[\\n\\s]*first[\\n\\s]*colon[\\n\\s]*in[\\n\\s]*a[\\n\\s]*pathname[\\n\\s]*namestring[\\n\\s]*is[\\n\\s]*a[\\n\\s]*host[\\n\\s]*name\\.[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(case[\\n\\s]*'\\(:common[\\n\\s]*:local\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(host[\\n\\s]*'\\(\"MY-LISPM\"[\\n\\s]*\"MY-VAX\"[\\n\\s]*\"MY-UNIX\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(make-pathname[\\n\\s]*:host[\\n\\s]*host[\\n\\s]*:case[\\n\\s]*case[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:directory[\\n\\s]*'\\(:absolute[\\n\\s]*\"PUBLIC\"[\\n\\s]*\"GAMES\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*\"CHESS\"[\\n\\s]*:type[\\n\\s]*\"DB\"\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#P\"MY-LISPM:&#62;public&#62;games&#62;chess\\.db\"[\\n\\s]*\\\\OUT[\\n\\s]*#P\"MY-VAX:SYS$DISK:\\[PUBLIC\\.GAMES\\]CHESS\\.DB\"[\\n\\s]*\\\\OUT[\\n\\s]*#P\"MY-UNIX:/public/games/chess\\.db\"[\\n\\s]*\\\\OUT[\\n\\s]*#P\"MY-LISPM:&#62;public&#62;games&#62;chess\\.db\"[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*#P\"MY-VAX:SYS$DISK:\\[PUBLIC\\.GAMES\\]CHESS\\.DB\"[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*#P\"MY-UNIX:/PUBLIC/GAMES/CHESS\\.DB\"[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (setq q \"test\")  *→* \"test\"\n (pathnamep q) *→ false*\n (setq q (pathname \"test\"))\n*→* #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME \"test\" :TYPE NIL\n       :VERSION NIL)\n (pathnamep q) *→ true* \n (setq q (logical-pathname \"SYS:SITE;FOO.SYSTEM\"))\n*→* #P\"SYS:SITE;FOO.SYSTEM\"\n (pathnamep q) *→ true*\n\\endcode","\\(setq[\\n\\s]*q[\\n\\s]*\"test\"\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"test\"[\\n\\s]*[\\n\\s]*\\(pathnamep[\\n\\s]*q\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*q[\\n\\s]*\\(pathname[\\n\\s]*\"test\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*NIL[\\n\\s]*:DIRECTORY[\\n\\s]*NIL[\\n\\s]*:NAME[\\n\\s]*\"test\"[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:VERSION[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(pathnamep[\\n\\s]*q\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*q[\\n\\s]*\\(logical-pathname[\\n\\s]*\"SYS:SITE;FOO\\.SYSTEM\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"SYS:SITE;FOO\\.SYSTEM\"[\\n\\s]*[\\n\\s]*\\(pathnamep[\\n\\s]*q\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (pathnamep \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'pathname)\n\\endcode","\\(pathnamep[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'pathname\\)"],["\\code\n (setq q (make-pathname :host \"KATHY\"\n                        :directory \"CHAPMAN\" \n                        :name \"LOGIN\" :type \"COM\"))\n*→* #P\"KATHY::[CHAPMAN]LOGIN.COM\"\n (pathname-host q) *→* \"KATHY\"\n (pathname-name q) *→* \"LOGIN\"\n (pathname-type q) *→* \"COM\"\n\n ;; Because namestrings are used, the results shown in the remaining\n ;; examples are not necessarily the only possible results.  Mappings\n ;; from namestring representation to pathname representation are \n ;; dependent both on the file system involved and on the implementation\n ;; (since there may be several implementations which can manipulate the\n ;; the same file system, and those implementations are not constrained\n ;; to agree on all details). Consult the documentation for each\n ;; implementation for specific information on how namestrings are treated\n ;; that implementation.\n\n ;; VMS\n (pathname-directory (parse-namestring \"[FOO.*.BAR]BAZ.LSP\"))\n*→* (:ABSOLUTE \"FOO\" \"BAR\")\n (pathname-directory (parse-namestring \"[FOO.*.BAR]BAZ.LSP\") :case :common)\n*→* (:ABSOLUTE \"FOO\" \"BAR\")\n\n ;; Unix\n (pathname-directory \"foo.l\") *→* NIL\n (pathname-device \"foo.l\") *→* :UNSPECIFIC\n (pathname-name \"foo.l\") *→* \"foo\"\n (pathname-name \"foo.l\" :case :local) *→* \"foo\"\n (pathname-name \"foo.l\" :case :common) *→* \"FOO\"\n (pathname-type \"foo.l\") *→* \"l\"\n (pathname-type \"foo.l\" :case :local) *→* \"l\"\n (pathname-type \"foo.l\" :case :common) *→* \"L\"\n (pathname-type \"foo\") *→* :UNSPECIFIC\n (pathname-type \"foo\" :case :common) *→* :UNSPECIFIC\n (pathname-type \"foo.\") *→* \"\"\n (pathname-type \"foo.\" :case :common) *→* \"\"\n (pathname-directory (parse-namestring \"/foo/bar/baz.lisp\") :case :local)\n*→* (:ABSOLUTE \"foo\" \"bar\")\n (pathname-directory (parse-namestring \"/foo/bar/baz.lisp\") :case :local)\n*→* (:ABSOLUTE \"FOO\" \"BAR\")\n (pathname-directory (parse-namestring \"../baz.lisp\"))\n*→* (:RELATIVE :UP)\n (PATHNAME-DIRECTORY (PARSE-NAMESTRING \"/foo/BAR/../Mum/baz\"))\n*→* (:ABSOLUTE \"foo\" \"BAR\" :UP \"Mum\")\n (PATHNAME-DIRECTORY (PARSE-NAMESTRING \"/foo/BAR/../Mum/baz\") :case :common)\n*→* (:ABSOLUTE \"FOO\" \"bar\" :UP \"Mum\")\n (PATHNAME-DIRECTORY (PARSE-NAMESTRING \"/foo/*/bar/baz.l\"))\n*→* (:ABSOLUTE \"foo\" :WILD \"bar\")\n (PATHNAME-DIRECTORY (PARSE-NAMESTRING \"/foo/*/bar/baz.l\") :case :common)\n*→* (:ABSOLUTE \"FOO\" :WILD \"BAR\")\n\n ;; Symbolics LMFS\n (pathname-directory (parse-namestring \"&#62;foo&#62;**&#62;bar&#62;baz.lisp\"))\n*→* (:ABSOLUTE \"foo\" :WILD-INFERIORS \"bar\")\n (pathname-directory (parse-namestring \"&#62;foo&#62;*&#62;bar&#62;baz.lisp\"))\n*→* (:ABSOLUTE \"foo\" :WILD \"bar\")\n (pathname-directory (parse-namestring \"&#62;foo&#62;*&#62;bar&#62;baz.lisp\") :case :common)\n*→* (:ABSOLUTE \"FOO\" :WILD \"BAR\")\n (pathname-device (parse-namestring \"&#62;foo&#62;baz.lisp\")) *→* :UNSPECIFIC\n\\endcode","\\(setq[\\n\\s]*q[\\n\\s]*\\(make-pathname[\\n\\s]*:host[\\n\\s]*\"KATHY\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:directory[\\n\\s]*\"CHAPMAN\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*\"LOGIN\"[\\n\\s]*:type[\\n\\s]*\"COM\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"KATHY::\\[CHAPMAN\\]LOGIN\\.COM\"[\\n\\s]*[\\n\\s]*\\(pathname-host[\\n\\s]*q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"KATHY\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"LOGIN\"[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"COM\"[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Because[\\n\\s]*namestrings[\\n\\s]*are[\\n\\s]*used,[\\n\\s]*the[\\n\\s]*results[\\n\\s]*shown[\\n\\s]*in[\\n\\s]*the[\\n\\s]*remaining[\\n\\s]*[\\n\\s]*;;[\\n\\s]*examples[\\n\\s]*are[\\n\\s]*not[\\n\\s]*necessarily[\\n\\s]*the[\\n\\s]*only[\\n\\s]*possible[\\n\\s]*results\\.[\\n\\s]*[\\n\\s]*Mappings[\\n\\s]*[\\n\\s]*;;[\\n\\s]*from[\\n\\s]*namestring[\\n\\s]*representation[\\n\\s]*to[\\n\\s]*pathname[\\n\\s]*representation[\\n\\s]*are[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*dependent[\\n\\s]*both[\\n\\s]*on[\\n\\s]*the[\\n\\s]*file[\\n\\s]*system[\\n\\s]*involved[\\n\\s]*and[\\n\\s]*on[\\n\\s]*the[\\n\\s]*implementation[\\n\\s]*[\\n\\s]*;;[\\n\\s]*\\(since[\\n\\s]*there[\\n\\s]*may[\\n\\s]*be[\\n\\s]*several[\\n\\s]*implementations[\\n\\s]*which[\\n\\s]*can[\\n\\s]*manipulate[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;[\\n\\s]*the[\\n\\s]*same[\\n\\s]*file[\\n\\s]*system,[\\n\\s]*and[\\n\\s]*those[\\n\\s]*implementations[\\n\\s]*are[\\n\\s]*not[\\n\\s]*constrained[\\n\\s]*[\\n\\s]*;;[\\n\\s]*to[\\n\\s]*agree[\\n\\s]*on[\\n\\s]*all[\\n\\s]*details\\)\\.[\\n\\s]*Consult[\\n\\s]*the[\\n\\s]*documentation[\\n\\s]*for[\\n\\s]*each[\\n\\s]*[\\n\\s]*;;[\\n\\s]*implementation[\\n\\s]*for[\\n\\s]*specific[\\n\\s]*information[\\n\\s]*on[\\n\\s]*how[\\n\\s]*namestrings[\\n\\s]*are[\\n\\s]*treated[\\n\\s]*[\\n\\s]*;;[\\n\\s]*that[\\n\\s]*implementation\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*VMS[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"\\[FOO\\.\\*\\.BAR\\]BAZ\\.LSP\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"\\)[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"\\[FOO\\.\\*\\.BAR\\]BAZ\\.LSP\"\\)[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Unix[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\"foo\\.l\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(pathname-device[\\n\\s]*\"foo\\.l\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:UNSPECIFIC[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\"foo\\.l\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foo\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\"foo\\.l\"[\\n\\s]*:case[\\n\\s]*:local\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foo\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\"foo\\.l\"[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO\"[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\\.l\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"l\"[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\\.l\"[\\n\\s]*:case[\\n\\s]*:local\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"l\"[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\\.l\"[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"L\"[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:UNSPECIFIC[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\"[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:UNSPECIFIC[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\\.\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\"[\\n\\s]*[\\n\\s]*\\(pathname-type[\\n\\s]*\"foo\\.\"[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\"[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"/foo/bar/baz\\.lisp\"\\)[\\n\\s]*:case[\\n\\s]*:local\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"/foo/bar/baz\\.lisp\"\\)[\\n\\s]*:case[\\n\\s]*:local\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"FOO\"[\\n\\s]*\"BAR\"\\)[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"\\.\\./baz\\.lisp\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:RELATIVE[\\n\\s]*:UP\\)[\\n\\s]*[\\n\\s]*\\(PATHNAME-DIRECTORY[\\n\\s]*\\(PARSE-NAMESTRING[\\n\\s]*\"/foo/BAR/\\.\\./Mum/baz\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"foo\"[\\n\\s]*\"BAR\"[\\n\\s]*:UP[\\n\\s]*\"Mum\"\\)[\\n\\s]*[\\n\\s]*\\(PATHNAME-DIRECTORY[\\n\\s]*\\(PARSE-NAMESTRING[\\n\\s]*\"/foo/BAR/\\.\\./Mum/baz\"\\)[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"FOO\"[\\n\\s]*\"bar\"[\\n\\s]*:UP[\\n\\s]*\"Mum\"\\)[\\n\\s]*[\\n\\s]*\\(PATHNAME-DIRECTORY[\\n\\s]*\\(PARSE-NAMESTRING[\\n\\s]*\"/foo/\\*/bar/baz\\.l\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"foo\"[\\n\\s]*:WILD[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(PATHNAME-DIRECTORY[\\n\\s]*\\(PARSE-NAMESTRING[\\n\\s]*\"/foo/\\*/bar/baz\\.l\"\\)[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"FOO\"[\\n\\s]*:WILD[\\n\\s]*\"BAR\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Symbolics[\\n\\s]*LMFS[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"&#62;foo&#62;\\*\\*&#62;bar&#62;baz\\.lisp\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"foo\"[\\n\\s]*:WILD-INFERIORS[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"&#62;foo&#62;\\*&#62;bar&#62;baz\\.lisp\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"foo\"[\\n\\s]*:WILD[\\n\\s]*\"bar\"\\)[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\(parse-namestring[\\n\\s]*\"&#62;foo&#62;\\*&#62;bar&#62;baz\\.lisp\"\\)[\\n\\s]*:case[\\n\\s]*:common\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(:ABSOLUTE[\\n\\s]*\"FOO\"[\\n\\s]*:WILD[\\n\\s]*\"BAR\"\\)[\\n\\s]*[\\n\\s]*\\(pathname-device[\\n\\s]*\\(parse-namestring[\\n\\s]*\"&#62;foo&#62;baz\\.lisp\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:UNSPECIFIC"],["\\code\n (translate-logical-pathname \"hacks:weather;barometer.lisp.newest\")\n\\OUT Error: The logical host HACKS is not defined.\n (load-logical-pathname-translations \"HACKS\")\n\\OUT ;; Loading SYS:SITE;HACKS.TRANSLATIONS\n\\OUT ;; Loading done.\n*→ true*\n (translate-logical-pathname \"hacks:weather;barometer.lisp.newest\")\n*→* #P\"HELIUM:[SHARED.HACKS.WEATHER]BAROMETER.LSP;0\"\n (load-logical-pathname-translations \"HACKS\")\n*→ false*\n\\endcode","\\(translate-logical-pathname[\\n\\s]*\"hacks:weather;barometer\\.lisp\\.newest\"\\)[\\n\\s]*\\\\OUT[\\n\\s]*Error:[\\n\\s]*The[\\n\\s]*logical[\\n\\s]*host[\\n\\s]*HACKS[\\n\\s]*is[\\n\\s]*not[\\n\\s]*defined\\.[\\n\\s]*[\\n\\s]*\\(load-logical-pathname-translations[\\n\\s]*\"HACKS\"\\)[\\n\\s]*\\\\OUT[\\n\\s]*;;[\\n\\s]*Loading[\\n\\s]*SYS:SITE;HACKS\\.TRANSLATIONS[\\n\\s]*\\\\OUT[\\n\\s]*;;[\\n\\s]*Loading[\\n\\s]*done\\.[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"hacks:weather;barometer\\.lisp\\.newest\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"HELIUM:\\[SHARED\\.HACKS\\.WEATHER\\]BAROMETER\\.LSP;0\"[\\n\\s]*[\\n\\s]*\\(load-logical-pathname-translations[\\n\\s]*\"HACKS\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n ;;;A very simple example of setting up a logical pathname host.  No\n ;;;translations are necessary to get around file system restrictions, so\n ;;;all that is necessary is to specify the root of the physical directory\n ;;;tree that contains the logical file system.\n ;;;The namestring syntax on the right-hand side is implementation-dependent.\n (setf (logical-pathname-translations \"foo\")\n       '((\"**;*.*.*\"              \"MY-LISPM:&#62;library&#62;foo&#62;**&#62;\")))\n\\smallbreak \n ;;;Sample use of that logical pathname.  The return value\n ;;;is implementation-dependent.          \n (translate-logical-pathname \"foo:bar;baz;mum.quux.3\")\n*→* #P\"MY-LISPM:&#62;library&#62;foo&#62;bar&#62;baz&#62;mum.quux.3\"\n\\medbreak \n ;;;A more complex example, dividing the files among two file servers\n ;;;and several different directories.  This Unix doesn't support\n ;;;:WILD-INFERIORS in the directory, so each directory level must\n ;;;be translated individually.  No file name or type translations\n ;;;are required except for .MAIL to .MBX.\n ;;;The namestring syntax on the right-hand side is implementation-dependent.\n (setf (logical-pathname-translations \"prog\")\n       '((\"RELEASED;*.*.*\"        \"MY-UNIX:/sys/bin/my-prog/\")\n         (\"RELEASED;*;*.*.*\"      \"MY-UNIX:/sys/bin/my-prog/*/\")\n         (\"EXPERIMENTAL;*.*.*\"    \"MY-UNIX:/usr/Joe/development/prog/\")\n         (\"EXPERIMENTAL;DOCUMENTATION;*.*.*\"\n                                  \"MY-VAX:SYS$DISK:[JOE.DOC]\")\n         (\"EXPERIMENTAL;*;*.*.*\"  \"MY-UNIX:/usr/Joe/development/prog/*/\")\n         (\"MAIL;**;*.MAIL\"        \"MY-VAX:SYS$DISK:[JOE.MAIL.PROG...]*.MBX\")))\n\\smallbreak\n ;;;Sample use of that logical pathname.  The return value\n ;;;is implementation-dependent.          \n (translate-logical-pathname \"prog:mail;save;ideas.mail.3\")\n*→* #P\"MY-VAX:SYS$DISK:[JOE.MAIL.PROG.SAVE]IDEAS.MBX.3\"\n\\medbreak\n ;;;Example translations for a program that uses three files main.lisp,\n ;;;auxiliary.lisp, and documentation.lisp.  These translations might be\n ;;;supplied by a software supplier as examples.\n\\smallbreak\n ;;;For Unix with long file names\n (setf (logical-pathname-translations \"prog\")\n       '((\"CODE;*.*.*\"             \"/lib/prog/\")))\n\\smallbreak\n ;;;Sample use of that logical pathname.  The return value\n ;;;is implementation-dependent.          \n (translate-logical-pathname \"prog:code;documentation.lisp\")\n*→* #P\"/lib/prog/documentation.lisp\"\n\\smallbreak\n ;;;For Unix with 14-character file names, using .lisp as the type\n (setf (logical-pathname-translations \"prog\")\n       '((\"CODE;DOCUMENTATION.*.*\" \"/lib/prog/docum.*\")\n         (\"CODE;*.*.*\"             \"/lib/prog/\")))\n\n ;;;Sample use of that logical pathname.  The return value\n ;;;is implementation-dependent.          \n (translate-logical-pathname \"prog:code;documentation.lisp\")\n*→* #P\"/lib/prog/docum.lisp\"\n\\medbreak\n ;;;For Unix with 14-character file names, using .l as the type\n ;;;The second translation shortens the compiled file type to .b\n (setf (logical-pathname-translations \"prog\")\n       `((\"**;*.LISP.*\"            ,(logical-pathname \"PROG:**;*.L.*\"))\n         (,(compile-file-pathname (logical-pathname \"PROG:**;*.LISP.*\"))\n                                   ,(logical-pathname \"PROG:**;*.B.*\"))\n         (\"CODE;DOCUMENTATION.*.*\" \"/lib/prog/documentatio.*\")\n         (\"CODE;*.*.*\"             \"/lib/prog/\")))\n\\smallbreak\n ;;;Sample use of that logical pathname.  The return value\n ;;;is implementation-dependent.          \n (translate-logical-pathname \"prog:code;documentation.lisp\")\n*→* #P\"/lib/prog/documentatio.l\"\n\\medbreak\n ;;;For a Cray with 6 character names and no directories, types, or versions.\n (setf (logical-pathname-translations \"prog\")\n       (let ((l '((\"MAIN\" \"PGMN\")\n                  (\"AUXILIARY\" \"PGAUX\")\n                  (\"DOCUMENTATION\" \"PGDOC\")))\n             (logpath (logical-pathname \"prog:code;\"))\n             (phypath (pathname \"XXX\")))\n         (append\n           ;; Translations for source files\n           (mapcar #'(lambda (x)\n                       (let ((log (first x))\n                             (phy (second x)))\n                         (list (make-pathname :name log\n                                              :type \"LISP\"\n                                              :version :wild\n                                              :defaults logpath)\n                               (make-pathname :name phy\n                                              :defaults phypath))))\n                   l)\n           ;; Translations for compiled files\n           (mapcar #'(lambda (x)\n                       (let* ((log (first x))\n                              (phy (second x))\n                              (com (compile-file-pathname\n                                     (make-pathname :name log\n                                                    :type \"LISP\"\n                                                    :version :wild\n                                                    :defaults logpath))))\n                         (setq phy (concatenate 'string phy \"B\"))\n                         (list com\n                               (make-pathname :name phy\n                                              :defaults phypath))))\n                   l))))\n\n ;;;Sample use of that logical pathname.  The return value\n ;;;is implementation-dependent.          \n (translate-logical-pathname \"prog:code;documentation.lisp\")\n*→* #P\"PGDOC\"\n\\endcode",";;;A[\\n\\s]*very[\\n\\s]*simple[\\n\\s]*example[\\n\\s]*of[\\n\\s]*setting[\\n\\s]*up[\\n\\s]*a[\\n\\s]*logical[\\n\\s]*pathname[\\n\\s]*host\\.[\\n\\s]*[\\n\\s]*No[\\n\\s]*[\\n\\s]*;;;translations[\\n\\s]*are[\\n\\s]*necessary[\\n\\s]*to[\\n\\s]*get[\\n\\s]*around[\\n\\s]*file[\\n\\s]*system[\\n\\s]*restrictions,[\\n\\s]*so[\\n\\s]*[\\n\\s]*;;;all[\\n\\s]*that[\\n\\s]*is[\\n\\s]*necessary[\\n\\s]*is[\\n\\s]*to[\\n\\s]*specify[\\n\\s]*the[\\n\\s]*root[\\n\\s]*of[\\n\\s]*the[\\n\\s]*physical[\\n\\s]*directory[\\n\\s]*[\\n\\s]*;;;tree[\\n\\s]*that[\\n\\s]*contains[\\n\\s]*the[\\n\\s]*logical[\\n\\s]*file[\\n\\s]*system\\.[\\n\\s]*[\\n\\s]*;;;The[\\n\\s]*namestring[\\n\\s]*syntax[\\n\\s]*on[\\n\\s]*the[\\n\\s]*right-hand[\\n\\s]*side[\\n\\s]*is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(logical-pathname-translations[\\n\\s]*\"foo\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\"\\*\\*;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-LISPM:&#62;library&#62;foo&#62;\\*\\*&#62;\"\\)\\)\\)[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;Sample[\\n\\s]*use[\\n\\s]*of[\\n\\s]*that[\\n\\s]*logical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*return[\\n\\s]*value[\\n\\s]*[\\n\\s]*;;;is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"foo:bar;baz;mum\\.quux\\.3\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"MY-LISPM:&#62;library&#62;foo&#62;bar&#62;baz&#62;mum\\.quux\\.3\"[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;A[\\n\\s]*more[\\n\\s]*complex[\\n\\s]*example,[\\n\\s]*dividing[\\n\\s]*the[\\n\\s]*files[\\n\\s]*among[\\n\\s]*two[\\n\\s]*file[\\n\\s]*servers[\\n\\s]*[\\n\\s]*;;;and[\\n\\s]*several[\\n\\s]*different[\\n\\s]*directories\\.[\\n\\s]*[\\n\\s]*This[\\n\\s]*Unix[\\n\\s]*doesn't[\\n\\s]*support[\\n\\s]*[\\n\\s]*;;;:WILD-INFERIORS[\\n\\s]*in[\\n\\s]*the[\\n\\s]*directory,[\\n\\s]*so[\\n\\s]*each[\\n\\s]*directory[\\n\\s]*level[\\n\\s]*must[\\n\\s]*[\\n\\s]*;;;be[\\n\\s]*translated[\\n\\s]*individually\\.[\\n\\s]*[\\n\\s]*No[\\n\\s]*file[\\n\\s]*name[\\n\\s]*or[\\n\\s]*type[\\n\\s]*translations[\\n\\s]*[\\n\\s]*;;;are[\\n\\s]*required[\\n\\s]*except[\\n\\s]*for[\\n\\s]*\\.MAIL[\\n\\s]*to[\\n\\s]*\\.MBX\\.[\\n\\s]*[\\n\\s]*;;;The[\\n\\s]*namestring[\\n\\s]*syntax[\\n\\s]*on[\\n\\s]*the[\\n\\s]*right-hand[\\n\\s]*side[\\n\\s]*is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(logical-pathname-translations[\\n\\s]*\"prog\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\"RELEASED;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-UNIX:/sys/bin/my-prog/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"RELEASED;\\*;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-UNIX:/sys/bin/my-prog/\\*/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"EXPERIMENTAL;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-UNIX:/usr/Joe/development/prog/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"EXPERIMENTAL;DOCUMENTATION;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-VAX:SYS$DISK:\\[JOE\\.DOC\\]\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"EXPERIMENTAL;\\*;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*\"MY-UNIX:/usr/Joe/development/prog/\\*/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"MAIL;\\*\\*;\\*\\.MAIL\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-VAX:SYS$DISK:\\[JOE\\.MAIL\\.PROG\\.\\.\\.\\]\\*\\.MBX\"\\)\\)\\)[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*;;;Sample[\\n\\s]*use[\\n\\s]*of[\\n\\s]*that[\\n\\s]*logical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*return[\\n\\s]*value[\\n\\s]*[\\n\\s]*;;;is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"prog:mail;save;ideas\\.mail\\.3\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"MY-VAX:SYS$DISK:\\[JOE\\.MAIL\\.PROG\\.SAVE\\]IDEAS\\.MBX\\.3\"[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*;;;Example[\\n\\s]*translations[\\n\\s]*for[\\n\\s]*a[\\n\\s]*program[\\n\\s]*that[\\n\\s]*uses[\\n\\s]*three[\\n\\s]*files[\\n\\s]*main\\.lisp,[\\n\\s]*[\\n\\s]*;;;auxiliary\\.lisp,[\\n\\s]*and[\\n\\s]*documentation\\.lisp\\.[\\n\\s]*[\\n\\s]*These[\\n\\s]*translations[\\n\\s]*might[\\n\\s]*be[\\n\\s]*[\\n\\s]*;;;supplied[\\n\\s]*by[\\n\\s]*a[\\n\\s]*software[\\n\\s]*supplier[\\n\\s]*as[\\n\\s]*examples\\.[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*;;;For[\\n\\s]*Unix[\\n\\s]*with[\\n\\s]*long[\\n\\s]*file[\\n\\s]*names[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(logical-pathname-translations[\\n\\s]*\"prog\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\"CODE;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/lib/prog/\"\\)\\)\\)[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*;;;Sample[\\n\\s]*use[\\n\\s]*of[\\n\\s]*that[\\n\\s]*logical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*return[\\n\\s]*value[\\n\\s]*[\\n\\s]*;;;is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"prog:code;documentation\\.lisp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"/lib/prog/documentation\\.lisp\"[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*;;;For[\\n\\s]*Unix[\\n\\s]*with[\\n\\s]*14-character[\\n\\s]*file[\\n\\s]*names,[\\n\\s]*using[\\n\\s]*\\.lisp[\\n\\s]*as[\\n\\s]*the[\\n\\s]*type[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(logical-pathname-translations[\\n\\s]*\"prog\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\"CODE;DOCUMENTATION\\.\\*\\.\\*\"[\\n\\s]*\"/lib/prog/docum\\.\\*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"CODE;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/lib/prog/\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;Sample[\\n\\s]*use[\\n\\s]*of[\\n\\s]*that[\\n\\s]*logical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*return[\\n\\s]*value[\\n\\s]*[\\n\\s]*;;;is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"prog:code;documentation\\.lisp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"/lib/prog/docum\\.lisp\"[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*;;;For[\\n\\s]*Unix[\\n\\s]*with[\\n\\s]*14-character[\\n\\s]*file[\\n\\s]*names,[\\n\\s]*using[\\n\\s]*\\.l[\\n\\s]*as[\\n\\s]*the[\\n\\s]*type[\\n\\s]*[\\n\\s]*;;;The[\\n\\s]*second[\\n\\s]*translation[\\n\\s]*shortens[\\n\\s]*the[\\n\\s]*compiled[\\n\\s]*file[\\n\\s]*type[\\n\\s]*to[\\n\\s]*\\.b[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(logical-pathname-translations[\\n\\s]*\"prog\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(\\(\"\\*\\*;\\*\\.LISP\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,\\(logical-pathname[\\n\\s]*\"PROG:\\*\\*;\\*\\.L\\.\\*\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(,\\(compile-file-pathname[\\n\\s]*\\(logical-pathname[\\n\\s]*\"PROG:\\*\\*;\\*\\.LISP\\.\\*\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*,\\(logical-pathname[\\n\\s]*\"PROG:\\*\\*;\\*\\.B\\.\\*\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"CODE;DOCUMENTATION\\.\\*\\.\\*\"[\\n\\s]*\"/lib/prog/documentatio\\.\\*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"CODE;\\*\\.\\*\\.\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/lib/prog/\"\\)\\)\\)[\\n\\s]*\\\\smallbreak[\\n\\s]*[\\n\\s]*;;;Sample[\\n\\s]*use[\\n\\s]*of[\\n\\s]*that[\\n\\s]*logical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*return[\\n\\s]*value[\\n\\s]*[\\n\\s]*;;;is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"prog:code;documentation\\.lisp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"/lib/prog/documentatio\\.l\"[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*;;;For[\\n\\s]*a[\\n\\s]*Cray[\\n\\s]*with[\\n\\s]*6[\\n\\s]*character[\\n\\s]*names[\\n\\s]*and[\\n\\s]*no[\\n\\s]*directories,[\\n\\s]*types,[\\n\\s]*or[\\n\\s]*versions\\.[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(logical-pathname-translations[\\n\\s]*\"prog\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(l[\\n\\s]*'\\(\\(\"MAIN\"[\\n\\s]*\"PGMN\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"AUXILIARY\"[\\n\\s]*\"PGAUX\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"DOCUMENTATION\"[\\n\\s]*\"PGDOC\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(logpath[\\n\\s]*\\(logical-pathname[\\n\\s]*\"prog:code;\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(phypath[\\n\\s]*\\(pathname[\\n\\s]*\"XXX\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(append[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Translations[\\n\\s]*for[\\n\\s]*source[\\n\\s]*files[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(log[\\n\\s]*\\(first[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(phy[\\n\\s]*\\(second[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*log[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:type[\\n\\s]*\"LISP\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:version[\\n\\s]*:wild[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:defaults[\\n\\s]*logpath\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*phy[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:defaults[\\n\\s]*phypath\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*l\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Translations[\\n\\s]*for[\\n\\s]*compiled[\\n\\s]*files[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(log[\\n\\s]*\\(first[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(phy[\\n\\s]*\\(second[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(com[\\n\\s]*\\(compile-file-pathname[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*log[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:type[\\n\\s]*\"LISP\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:version[\\n\\s]*:wild[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:defaults[\\n\\s]*logpath\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*phy[\\n\\s]*\\(concatenate[\\n\\s]*'string[\\n\\s]*phy[\\n\\s]*\"B\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*com[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*phy[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:defaults[\\n\\s]*phypath\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*l\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;Sample[\\n\\s]*use[\\n\\s]*of[\\n\\s]*that[\\n\\s]*logical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*return[\\n\\s]*value[\\n\\s]*[\\n\\s]*;;;is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname[\\n\\s]*\"prog:code;documentation\\.lisp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"PGDOC\""],["\\code\n ;; This example illustrates a possible usage for a hypothetical Lisp running on a\n ;; DEC TOPS-20 file system.  Since pathname conventions vary between Lisp \n ;; implementations and host file system types, it is not possible to provide a\n ;; general-purpose, conforming example.\n *default-pathname-defaults* *→* #P\"PS:&#60;FRED&#62;\"\n (merge-pathnames (make-pathname :name \"CALENDAR\"))\n*→* #P\"PS:&#60;FRED&#62;CALENDAR\"\n (let ((*default-pathname-defaults* (pathname \"&#60;MARY&#62;\")))\n   (merge-pathnames (make-pathname :name \"CALENDAR\")))\n*→* #P\"&#60;MARY&#62;CALENDAR\"\n\\endcode",";;[\\n\\s]*This[\\n\\s]*example[\\n\\s]*illustrates[\\n\\s]*a[\\n\\s]*possible[\\n\\s]*usage[\\n\\s]*for[\\n\\s]*a[\\n\\s]*hypothetical[\\n\\s]*Lisp[\\n\\s]*running[\\n\\s]*on[\\n\\s]*a[\\n\\s]*[\\n\\s]*;;[\\n\\s]*DEC[\\n\\s]*TOPS-20[\\n\\s]*file[\\n\\s]*system\\.[\\n\\s]*[\\n\\s]*Since[\\n\\s]*pathname[\\n\\s]*conventions[\\n\\s]*vary[\\n\\s]*between[\\n\\s]*Lisp[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*implementations[\\n\\s]*and[\\n\\s]*host[\\n\\s]*file[\\n\\s]*system[\\n\\s]*types,[\\n\\s]*it[\\n\\s]*is[\\n\\s]*not[\\n\\s]*possible[\\n\\s]*to[\\n\\s]*provide[\\n\\s]*a[\\n\\s]*[\\n\\s]*;;[\\n\\s]*general-purpose,[\\n\\s]*conforming[\\n\\s]*example\\.[\\n\\s]*[\\n\\s]*\\*default-pathname-defaults\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"PS:&#60;FRED&#62;\"[\\n\\s]*[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*\"CALENDAR\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"PS:&#60;FRED&#62;CALENDAR\"[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*default-pathname-defaults\\*[\\n\\s]*\\(pathname[\\n\\s]*\"&#60;MARY&#62;\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*\"CALENDAR\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"&#60;MARY&#62;CALENDAR\""],["\\code\n (merge-pathnames (enough-namestring pathname defaults) defaults)\n\\EQ (merge-pathnames (parse-namestring pathname nil defaults) defaults)\n\\endcode","\\(merge-pathnames[\\n\\s]*\\(enough-namestring[\\n\\s]*pathname[\\n\\s]*defaults\\)[\\n\\s]*defaults\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(parse-namestring[\\n\\s]*pathname[\\n\\s]*nil[\\n\\s]*defaults\\)[\\n\\s]*defaults\\)"],["\\code\n (namestring \"getty\")            \n*→* \"getty\"\n (setq q (make-pathname :host \"kathy\" \n                         :directory \n                           (pathname-directory *default-pathname-defaults*)\n                         :name \"getty\")) \n*→* #S(PATHNAME :HOST \"kathy\" :DEVICE NIL :DIRECTORY \\i&#123;directory-name&#125; \n       :NAME \"getty\" :TYPE NIL :VERSION NIL)\n (file-namestring q) *→* \"getty\"\n (directory-namestring q) *→* \\i&#123;directory-name&#125;\n (host-namestring q) *→* \"kathy\" \n\\endcode","\\(namestring[\\n\\s]*\"getty\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"getty\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*q[\\n\\s]*\\(make-pathname[\\n\\s]*:host[\\n\\s]*\"kathy\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:directory[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\*default-pathname-defaults\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:name[\\n\\s]*\"getty\"\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*\"kathy\"[\\n\\s]*:DEVICE[\\n\\s]*NIL[\\n\\s]*:DIRECTORY[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:NAME[\\n\\s]*\"getty\"[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(file-namestring[\\n\\s]*q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"getty\"[\\n\\s]*[\\n\\s]*\\(directory-namestring[\\n\\s]*q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*[\\n\\s]*\\(host-namestring[\\n\\s]*q\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"kathy\""],["\\code\n ;;;Using Unix syntax and the wildcard conventions used by the\n ;;;particular version of Unix on which this example was created:\n (namestring\n   (translate-pathname \"/usr/dmr/hacks/frob.l\"\n                       \"/usr/d*/hacks/*.l\"\n                       \"/usr/d*/backup/hacks/backup-*.*\"))\n*→* \"/usr/dmr/backup/hacks/backup-frob.l\"\n (namestring\n   (translate-pathname \"/usr/dmr/hacks/frob.l\"\n                       \"/usr/d*/hacks/fr*.l\"\n                       \"/usr/d*/backup/hacks/backup-*.*\"))\n*→* \"/usr/dmr/backup/hacks/backup-ob.l\"\n \n ;;;This is similar to the above example but uses two different hosts,\n ;;;U: which is a Unix and V: which is a VMS.  Note the translation\n ;;;of file type and alphabetic case conventions.\n (namestring\n   (translate-pathname \"U:/usr/dmr/hacks/frob.l\"\n                       \"U:/usr/d*/hacks/*.l\"\n                       \"V:SYS$DISK:[D*.BACKUP.HACKS]BACKUP-*.*\"))\n*→* \"V:SYS$DISK:[DMR.BACKUP.HACKS]BACKUP-FROB.LSP\"\n (namestring\n   (translate-pathname \"U:/usr/dmr/hacks/frob.l\"\n                       \"U:/usr/d*/hacks/fr*.l\"\n                       \"V:SYS$DISK:[D*.BACKUP.HACKS]BACKUP-*.*\"))\n*→* \"V:SYS$DISK:[DMR.BACKUP.HACKS]BACKUP-OB.LSP\"\n\\endcode",";;;Using[\\n\\s]*Unix[\\n\\s]*syntax[\\n\\s]*and[\\n\\s]*the[\\n\\s]*wildcard[\\n\\s]*conventions[\\n\\s]*used[\\n\\s]*by[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;;particular[\\n\\s]*version[\\n\\s]*of[\\n\\s]*Unix[\\n\\s]*on[\\n\\s]*which[\\n\\s]*this[\\n\\s]*example[\\n\\s]*was[\\n\\s]*created:[\\n\\s]*[\\n\\s]*\\(namestring[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-pathname[\\n\\s]*\"/usr/dmr/hacks/frob\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/usr/d\\*/hacks/\\*\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/usr/d\\*/backup/hacks/backup-\\*\\.\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"/usr/dmr/backup/hacks/backup-frob\\.l\"[\\n\\s]*[\\n\\s]*\\(namestring[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-pathname[\\n\\s]*\"/usr/dmr/hacks/frob\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/usr/d\\*/hacks/fr\\*\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"/usr/d\\*/backup/hacks/backup-\\*\\.\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"/usr/dmr/backup/hacks/backup-ob\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;;This[\\n\\s]*is[\\n\\s]*similar[\\n\\s]*to[\\n\\s]*the[\\n\\s]*above[\\n\\s]*example[\\n\\s]*but[\\n\\s]*uses[\\n\\s]*two[\\n\\s]*different[\\n\\s]*hosts,[\\n\\s]*[\\n\\s]*;;;U:[\\n\\s]*which[\\n\\s]*is[\\n\\s]*a[\\n\\s]*Unix[\\n\\s]*and[\\n\\s]*V:[\\n\\s]*which[\\n\\s]*is[\\n\\s]*a[\\n\\s]*VMS\\.[\\n\\s]*[\\n\\s]*Note[\\n\\s]*the[\\n\\s]*translation[\\n\\s]*[\\n\\s]*;;;of[\\n\\s]*file[\\n\\s]*type[\\n\\s]*and[\\n\\s]*alphabetic[\\n\\s]*case[\\n\\s]*conventions\\.[\\n\\s]*[\\n\\s]*\\(namestring[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-pathname[\\n\\s]*\"U:/usr/dmr/hacks/frob\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"U:/usr/d\\*/hacks/\\*\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"V:SYS$DISK:\\[D\\*\\.BACKUP\\.HACKS\\]BACKUP-\\*\\.\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"V:SYS$DISK:\\[DMR\\.BACKUP\\.HACKS\\]BACKUP-FROB\\.LSP\"[\\n\\s]*[\\n\\s]*\\(namestring[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-pathname[\\n\\s]*\"U:/usr/dmr/hacks/frob\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"U:/usr/d\\*/hacks/fr\\*\\.l\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"V:SYS$DISK:\\[D\\*\\.BACKUP\\.HACKS\\]BACKUP-\\*\\.\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"V:SYS$DISK:\\[DMR\\.BACKUP\\.HACKS\\]BACKUP-OB\\.LSP\""],["\\code\n (setq q (parse-namestring \"test\"))  \n*→* #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME \"test\" \n       :TYPE NIL :VERSION NIL)\n (pathnamep q) *→ true*\n (parse-namestring \"test\") \n*→* #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME \"test\"\n       :TYPE NIL :VERSION NIL), 4\n (setq s (open \\i&#123;xxx&#125;)) *→* #&#60;Input File Stream...&#62;\n (parse-namestring s) \n*→* #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME \\i&#123;xxx&#125; \n       :TYPE NIL :VERSION NIL), 0\n (parse-namestring \"test\" nil nil :start 2 :end 4 )\n *→* #S(PATHNAME ...), 15\n (parse-namestring \"foo.lisp\")\n*→* #P\"foo.lisp\"\n\\endcode","\\(setq[\\n\\s]*q[\\n\\s]*\\(parse-namestring[\\n\\s]*\"test\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*NIL[\\n\\s]*:DIRECTORY[\\n\\s]*NIL[\\n\\s]*:NAME[\\n\\s]*\"test\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(pathnamep[\\n\\s]*q\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(parse-namestring[\\n\\s]*\"test\"\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*NIL[\\n\\s]*:DIRECTORY[\\n\\s]*NIL[\\n\\s]*:NAME[\\n\\s]*\"test\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*NIL\\),[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*s[\\n\\s]*\\(open[\\n\\s]*\\\\i&#123;xxx&#125;\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Input[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*[\\n\\s]*\\(parse-namestring[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*NIL[\\n\\s]*:DIRECTORY[\\n\\s]*NIL[\\n\\s]*:NAME[\\n\\s]*\\\\i&#123;xxx&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*NIL\\),[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(parse-namestring[\\n\\s]*\"test\"[\\n\\s]*nil[\\n\\s]*nil[\\n\\s]*:start[\\n\\s]*2[\\n\\s]*:end[\\n\\s]*4[\\n\\s]*\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PATHNAME[\\n\\s]*\\.\\.\\.\\),[\\n\\s]*15[\\n\\s]*[\\n\\s]*\\(parse-namestring[\\n\\s]*\"foo\\.lisp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"foo\\.lisp\""],["\\code\n ;;;The following examples are not portable.  They are written to run\n ;;;with particular file systems and particular wildcard conventions.\n ;;;Other implementations will behave differently.  These examples are\n ;;;intended to be illustrative, not to be prescriptive.\n \n (wild-pathname-p (make-pathname :name :wild)) *→ true*\n (wild-pathname-p (make-pathname :name :wild) :name) *→ true*\n (wild-pathname-p (make-pathname :name :wild) :type) *→ false*\n (wild-pathname-p (pathname \"s:&#62;foo&#62;**&#62;\")) *→ true* ;Lispm\n (wild-pathname-p (pathname :name \"F*O\")) *→ true* ;Most places\n\\endcode",";;;The[\\n\\s]*following[\\n\\s]*examples[\\n\\s]*are[\\n\\s]*not[\\n\\s]*portable\\.[\\n\\s]*[\\n\\s]*They[\\n\\s]*are[\\n\\s]*written[\\n\\s]*to[\\n\\s]*run[\\n\\s]*[\\n\\s]*;;;with[\\n\\s]*particular[\\n\\s]*file[\\n\\s]*systems[\\n\\s]*and[\\n\\s]*particular[\\n\\s]*wildcard[\\n\\s]*conventions\\.[\\n\\s]*[\\n\\s]*;;;Other[\\n\\s]*implementations[\\n\\s]*will[\\n\\s]*behave[\\n\\s]*differently\\.[\\n\\s]*[\\n\\s]*These[\\n\\s]*examples[\\n\\s]*are[\\n\\s]*[\\n\\s]*;;;intended[\\n\\s]*to[\\n\\s]*be[\\n\\s]*illustrative,[\\n\\s]*not[\\n\\s]*to[\\n\\s]*be[\\n\\s]*prescriptive\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(wild-pathname-p[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*:wild\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(wild-pathname-p[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*:wild\\)[\\n\\s]*:name\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(wild-pathname-p[\\n\\s]*\\(make-pathname[\\n\\s]*:name[\\n\\s]*:wild\\)[\\n\\s]*:type\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(wild-pathname-p[\\n\\s]*\\(pathname[\\n\\s]*\"s:&#62;foo&#62;\\*\\*&#62;\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;Lispm[\\n\\s]*[\\n\\s]*\\(wild-pathname-p[\\n\\s]*\\(pathname[\\n\\s]*:name[\\n\\s]*\"F\\*O\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;Most[\\n\\s]*places"],["\\code\n ;; The results of the following five forms are all implementation-dependent.\n ;; The second item in particular is shown with multiple results just to \n ;; emphasize one of many particular variations which commonly occurs.\n (pathname-name (translate-pathname \"foobar\" \"foo*\" \"*baz\")) *→* \"barbaz\"\n (pathname-name (translate-pathname \"foobar\" \"foo*\" \"*\"))\n*→* \"foobar\"\n\\OV \"bar\"\n (pathname-name (translate-pathname \"foobar\" \"*\"    \"foo*\")) *→* \"foofoobar\"\n (pathname-name (translate-pathname \"bar\"    \"*\"    \"foo*\")) *→* \"foobar\"\n (pathname-name (translate-pathname \"foobar\" \"foo*\" \"baz*\")) *→* \"bazbar\"\n\n (defun translate-logical-pathname-1 (pathname rules)\n   (let ((rule (assoc pathname rules :test #'pathname-match-p)))\n     (unless rule (error \"No translation rule for ~A\" pathname))\n     (translate-pathname pathname (first rule) (second rule))))\n (translate-logical-pathname-1 \"FOO:CODE;BASIC.LISP\"\n                       '((\"FOO:DOCUMENTATION;\" \"MY-UNIX:/doc/foo/\")\n                         (\"FOO:CODE;\"          \"MY-UNIX:/lib/foo/\")\n                         (\"FOO:PATCHES;*;\"     \"MY-UNIX:/lib/foo/patch/*/\")))\n*→* #P\"MY-UNIX:/lib/foo/basic.l\"\n\n;;;This example assumes one particular set of wildcard conventions\n;;;Not all file systems will run this example exactly as written\n (defun rename-files (from to)\n   (dolist (file (directory from))\n     (rename-file file (translate-pathname file from to))))\n (rename-files \"/usr/me/*.lisp\" \"/dev/her/*.l\")\n   ;Renames /usr/me/init.lisp to /dev/her/init.l\n (rename-files \"/usr/me/pcl*/*\" \"/sys/pcl/*/\")\n   ;Renames /usr/me/pcl-5-may/low.lisp to /sys/pcl/pcl-5-may/low.lisp\n   ;In some file systems the result might be /sys/pcl/5-may/low.lisp\n (rename-files \"/usr/me/pcl*/*\" \"/sys/library/*/\")\n   ;Renames /usr/me/pcl-5-may/low.lisp to /sys/library/pcl-5-may/low.lisp\n   ;In some file systems the result might be /sys/library/5-may/low.lisp\n (rename-files \"/usr/me/foo.bar\" \"/usr/me2/\")\n   ;Renames /usr/me/foo.bar to /usr/me2/foo.bar\n (rename-files \"/usr/joe/*-recipes.text\" \"/usr/jim/cookbook/joe's-*-rec.text\")\n   ;Renames /usr/joe/lamb-recipes.text to /usr/jim/cookbook/joe's-lamb-rec.text\n   ;Renames /usr/joe/pork-recipes.text to /usr/jim/cookbook/joe's-pork-rec.text\n   ;Renames /usr/joe/veg-recipes.text to /usr/jim/cookbook/joe's-veg-rec.text\n\\endcode",";;[\\n\\s]*The[\\n\\s]*results[\\n\\s]*of[\\n\\s]*the[\\n\\s]*following[\\n\\s]*five[\\n\\s]*forms[\\n\\s]*are[\\n\\s]*all[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*second[\\n\\s]*item[\\n\\s]*in[\\n\\s]*particular[\\n\\s]*is[\\n\\s]*shown[\\n\\s]*with[\\n\\s]*multiple[\\n\\s]*results[\\n\\s]*just[\\n\\s]*to[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*emphasize[\\n\\s]*one[\\n\\s]*of[\\n\\s]*many[\\n\\s]*particular[\\n\\s]*variations[\\n\\s]*which[\\n\\s]*commonly[\\n\\s]*occurs\\.[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\\(translate-pathname[\\n\\s]*\"foobar\"[\\n\\s]*\"foo\\*\"[\\n\\s]*\"\\*baz\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"barbaz\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\\(translate-pathname[\\n\\s]*\"foobar\"[\\n\\s]*\"foo\\*\"[\\n\\s]*\"\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foobar\"[\\n\\s]*\\\\OV[\\n\\s]*\"bar\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\\(translate-pathname[\\n\\s]*\"foobar\"[\\n\\s]*\"\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"foo\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foofoobar\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\\(translate-pathname[\\n\\s]*\"bar\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"\\*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"foo\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"foobar\"[\\n\\s]*[\\n\\s]*\\(pathname-name[\\n\\s]*\\(translate-pathname[\\n\\s]*\"foobar\"[\\n\\s]*\"foo\\*\"[\\n\\s]*\"baz\\*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"bazbar\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*translate-logical-pathname-1[\\n\\s]*\\(pathname[\\n\\s]*rules\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(rule[\\n\\s]*\\(assoc[\\n\\s]*pathname[\\n\\s]*rules[\\n\\s]*:test[\\n\\s]*#'pathname-match-p\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*rule[\\n\\s]*\\(error[\\n\\s]*\"No[\\n\\s]*translation[\\n\\s]*rule[\\n\\s]*for[\\n\\s]*~A\"[\\n\\s]*pathname\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(translate-pathname[\\n\\s]*pathname[\\n\\s]*\\(first[\\n\\s]*rule\\)[\\n\\s]*\\(second[\\n\\s]*rule\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(translate-logical-pathname-1[\\n\\s]*\"FOO:CODE;BASIC\\.LISP\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\\(\"FOO:DOCUMENTATION;\"[\\n\\s]*\"MY-UNIX:/doc/foo/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"FOO:CODE;\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-UNIX:/lib/foo/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\"FOO:PATCHES;\\*;\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"MY-UNIX:/lib/foo/patch/\\*/\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"MY-UNIX:/lib/foo/basic\\.l\"[\\n\\s]*[\\n\\s]*;;;This[\\n\\s]*example[\\n\\s]*assumes[\\n\\s]*one[\\n\\s]*particular[\\n\\s]*set[\\n\\s]*of[\\n\\s]*wildcard[\\n\\s]*conventions[\\n\\s]*;;;Not[\\n\\s]*all[\\n\\s]*file[\\n\\s]*systems[\\n\\s]*will[\\n\\s]*run[\\n\\s]*this[\\n\\s]*example[\\n\\s]*exactly[\\n\\s]*as[\\n\\s]*written[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*rename-files[\\n\\s]*\\(from[\\n\\s]*to\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(file[\\n\\s]*\\(directory[\\n\\s]*from\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rename-file[\\n\\s]*file[\\n\\s]*\\(translate-pathname[\\n\\s]*file[\\n\\s]*from[\\n\\s]*to\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(rename-files[\\n\\s]*\"/usr/me/\\*\\.lisp\"[\\n\\s]*\"/dev/her/\\*\\.l\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/me/init\\.lisp[\\n\\s]*to[\\n\\s]*/dev/her/init\\.l[\\n\\s]*[\\n\\s]*\\(rename-files[\\n\\s]*\"/usr/me/pcl\\*/\\*\"[\\n\\s]*\"/sys/pcl/\\*/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/me/pcl-5-may/low\\.lisp[\\n\\s]*to[\\n\\s]*/sys/pcl/pcl-5-may/low\\.lisp[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;In[\\n\\s]*some[\\n\\s]*file[\\n\\s]*systems[\\n\\s]*the[\\n\\s]*result[\\n\\s]*might[\\n\\s]*be[\\n\\s]*/sys/pcl/5-may/low\\.lisp[\\n\\s]*[\\n\\s]*\\(rename-files[\\n\\s]*\"/usr/me/pcl\\*/\\*\"[\\n\\s]*\"/sys/library/\\*/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/me/pcl-5-may/low\\.lisp[\\n\\s]*to[\\n\\s]*/sys/library/pcl-5-may/low\\.lisp[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;In[\\n\\s]*some[\\n\\s]*file[\\n\\s]*systems[\\n\\s]*the[\\n\\s]*result[\\n\\s]*might[\\n\\s]*be[\\n\\s]*/sys/library/5-may/low\\.lisp[\\n\\s]*[\\n\\s]*\\(rename-files[\\n\\s]*\"/usr/me/foo\\.bar\"[\\n\\s]*\"/usr/me2/\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/me/foo\\.bar[\\n\\s]*to[\\n\\s]*/usr/me2/foo\\.bar[\\n\\s]*[\\n\\s]*\\(rename-files[\\n\\s]*\"/usr/joe/\\*-recipes\\.text\"[\\n\\s]*\"/usr/jim/cookbook/joe's-\\*-rec\\.text\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/joe/lamb-recipes\\.text[\\n\\s]*to[\\n\\s]*/usr/jim/cookbook/joe's-lamb-rec\\.text[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/joe/pork-recipes\\.text[\\n\\s]*to[\\n\\s]*/usr/jim/cookbook/joe's-pork-rec\\.text[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Renames[\\n\\s]*/usr/joe/veg-recipes\\.text[\\n\\s]*to[\\n\\s]*/usr/jim/cookbook/joe's-veg-rec\\.text"],["\\code\n (append (pathname-directory \\param&#123;default-pathname&#125;)\n         (cdr  ;remove :relative from the front\n           (pathname-directory \\param&#123;pathname&#125;)))\n\\endcode","\\(append[\\n\\s]*\\(pathname-directory[\\n\\s]*\\\\param&#123;default-pathname&#125;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cdr[\\n\\s]*[\\n\\s]*;remove[\\n\\s]*:relative[\\n\\s]*from[\\n\\s]*the[\\n\\s]*front[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pathname-directory[\\n\\s]*\\\\param&#123;pathname&#125;\\)\\)\\)"],["\\code\n (merge-pathnames \"CMUC::FORMAT\"\n                  \"CMUC::PS:&#60;LISPIO&#62;.FASL\")\n*→* #P\"CMUC::PS:&#60;LISPIO&#62;FORMAT.FASL.0\"\n\\endcode","\\(merge-pathnames[\\n\\s]*\"CMUC::FORMAT\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"CMUC::PS:&#60;LISPIO&#62;\\.FASL\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"CMUC::PS:&#60;LISPIO&#62;FORMAT\\.FASL\\.0\""],["\\code\n  #'(lambda (*standard-output* &rest arguments)\n      (apply #'format t \\i&#123;control-string&#125; arguments)\n      \\i&#123;arguments-tail&#125;)\n\\endcode","#'\\(lambda[\\n\\s]*\\(\\*standard-output\\*[\\n\\s]*&rest[\\n\\s]*arguments\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'format[\\n\\s]*t[\\n\\s]*\\\\i&#123;control-string&#125;[\\n\\s]*arguments\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;arguments-tail&#125;\\)"],["\\code\n%((formatter \"~&~A~A\") *standard-output* 'a 'b 'c)\n%\\OUT AB\n%*→* (C)\n\\code\n(funcall (formatter \"~&~A~A\") *standard-output* 'a 'b 'c)\n\\OUT AB\n*→* (C)\n\n(format t (formatter \"~&~A~A\") 'a 'b 'c)\n\\OUT AB\n*→* NIL\n\\endcode","%\\(\\(formatter[\\n\\s]*\"~&~A~A\"\\)[\\n\\s]*\\*standard-output\\*[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)[\\n\\s]*%\\\\OUT[\\n\\s]*AB[\\n\\s]*%\\*\\→\\*[\\n\\s]*\\(C\\)[\\n\\s]*\\\\code[\\n\\s]*\\(funcall[\\n\\s]*\\(formatter[\\n\\s]*\"~&~A~A\"\\)[\\n\\s]*\\*standard-output\\*[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)[\\n\\s]*\\\\OUT[\\n\\s]*AB[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(C\\)[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\\(formatter[\\n\\s]*\"~&~A~A\"\\)[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)[\\n\\s]*\\\\OUT[\\n\\s]*AB[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n(let ((*print-pretty* t))\n  (write object :stream s))\n\\EQ (funcall (pprint-dispatch object) s object)\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*print-pretty\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*object[\\n\\s]*:stream[\\n\\s]*s\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(funcall[\\n\\s]*\\(pprint-dispatch[\\n\\s]*object\\)[\\n\\s]*s[\\n\\s]*object\\)"],["\\code\n(progn (princ \"Roads \") \n       (pprint-tabular *standard-output* '(elm main maple center) nil nil 8))\nRoads ELM     MAIN\n      MAPLE   CENTER\n\\endcode","\\(progn[\\n\\s]*\\(princ[\\n\\s]*\"Roads[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-tabular[\\n\\s]*\\*standard-output\\*[\\n\\s]*'\\(elm[\\n\\s]*main[\\n\\s]*maple[\\n\\s]*center\\)[\\n\\s]*nil[\\n\\s]*nil[\\n\\s]*8\\)\\)[\\n\\s]*Roads[\\n\\s]*ELM[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*MAIN[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*MAPLE[\\n\\s]*[\\n\\s]*[\\n\\s]*CENTER"],["\\code\n(defun pprint-tabular (s list &optional (colon-p t) at-sign-p (tabsize nil))\n  (declare (ignore at-sign-p))\n  (when (null tabsize) (setq tabsize 16))\n  (pprint-logical-block (s list :prefix (if colon-p \"(\" \"\")\n                                :suffix (if colon-p \")\" \"\"))\n    (pprint-exit-if-list-exhausted)\n    (loop (write (pprint-pop) :stream s)\n          (pprint-exit-if-list-exhausted)\n          (write-char #\\\\Space s)\n          (pprint-tab :section-relative 0 tabsize s)\n          (pprint-newline :fill s))))\n\\endcode","\\(defun[\\n\\s]*pprint-tabular[\\n\\s]*\\(s[\\n\\s]*list[\\n\\s]*&optional[\\n\\s]*\\(colon-p[\\n\\s]*t\\)[\\n\\s]*at-sign-p[\\n\\s]*\\(tabsize[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*at-sign-p\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(null[\\n\\s]*tabsize\\)[\\n\\s]*\\(setq[\\n\\s]*tabsize[\\n\\s]*16\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-logical-block[\\n\\s]*\\(s[\\n\\s]*list[\\n\\s]*:prefix[\\n\\s]*\\(if[\\n\\s]*colon-p[\\n\\s]*\"\\(\"[\\n\\s]*\"\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:suffix[\\n\\s]*\\(if[\\n\\s]*colon-p[\\n\\s]*\"\\)\"[\\n\\s]*\"\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*\\(write[\\n\\s]*\\(pprint-pop\\)[\\n\\s]*:stream[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-exit-if-list-exhausted\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-tab[\\n\\s]*:section-relative[\\n\\s]*0[\\n\\s]*tabsize[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint-newline[\\n\\s]*:fill[\\n\\s]*s\\)\\)\\)\\)"],["\\code\n (defmethod print-object ((obj airplane) stream)\n   (print-unreadable-object (obj stream :type t :identity t)\n     (princ (tail-number obj) stream)))\n\n (prin1-to-string my-airplane)\n*→* \"#&#60;Airplane NW0773 36000123135&#62;\"\n\\OV \"#&#60;FAA:AIRPLANE NW0773 17&#62;\"\n\\endcode","\\(defmethod[\\n\\s]*print-object[\\n\\s]*\\(\\(obj[\\n\\s]*airplane\\)[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print-unreadable-object[\\n\\s]*\\(obj[\\n\\s]*stream[\\n\\s]*:type[\\n\\s]*t[\\n\\s]*:identity[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*\\(tail-number[\\n\\s]*obj\\)[\\n\\s]*stream\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*my-airplane\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"#&#60;Airplane[\\n\\s]*NW0773[\\n\\s]*36000123135&#62;\"[\\n\\s]*\\\\OV[\\n\\s]*\"#&#60;FAA:AIRPLANE[\\n\\s]*NW0773[\\n\\s]*17&#62;\""],["\\code\n (cons \\param&#123;car-type&#125; \\param&#123;cdr-type&#125;)\n\\endcode","\\(cons[\\n\\s]*\\\\param&#123;car-type&#125;[\\n\\s]*\\\\param&#123;cdr-type&#125;\\)"],["\\code\n% (princ character output-stream) \\EQ (write-char character output-stream)\n%\\endcode","%[\\n\\s]*\\(princ[\\n\\s]*character[\\n\\s]*output-stream\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(write-char[\\n\\s]*character[\\n\\s]*output-stream\\)[\\n\\s]*%"],["\\code\n (prin1 object output-stream)\n\\EQ (write object :stream output-stream :escape t)\n\\endcode","\\(prin1[\\n\\s]*object[\\n\\s]*output-stream\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(write[\\n\\s]*object[\\n\\s]*:stream[\\n\\s]*output-stream[\\n\\s]*:escape[\\n\\s]*t\\)"],["\\code\n (princ object output-stream)\n\\EQ (write object stream output-stream :escape nil :readably nil)\n\\endcode","\\(princ[\\n\\s]*object[\\n\\s]*output-stream\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(write[\\n\\s]*object[\\n\\s]*stream[\\n\\s]*output-stream[\\n\\s]*:escape[\\n\\s]*nil[\\n\\s]*:readably[\\n\\s]*nil\\)"],["\\code\n (print object output-stream)\n\\EQ (progn (terpri output-stream)\n           (write object :stream output-stream\n                         :escape t)\n           (write-char #\\\\space output-stream))\n\\endcode","\\(print[\\n\\s]*object[\\n\\s]*output-stream\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(progn[\\n\\s]*\\(terpri[\\n\\s]*output-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*object[\\n\\s]*:stream[\\n\\s]*output-stream[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:escape[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\space[\\n\\s]*output-stream\\)\\)"],["\\code\n (pprint object output-stream)\n\\EQ (write object :stream output-stream :escape t :pretty t)\n\\endcode","\\(pprint[\\n\\s]*object[\\n\\s]*output-stream\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(write[\\n\\s]*object[\\n\\s]*:stream[\\n\\s]*output-stream[\\n\\s]*:escape[\\n\\s]*t[\\n\\s]*:pretty[\\n\\s]*t\\)"],["\\code\n (prin1-to-string \"abc\") *→* \"\\\\\"abc\\\\\"\"\n (princ-to-string \"abc\") *→* \"abc\"\n\\endcode","\\(prin1-to-string[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\\\\\\\\"abc\\\\\\\\\"\"[\\n\\s]*[\\n\\s]*\\(princ-to-string[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abc\""],["\\code\n (write-to-string \\param&#123;object&#125; \\star&#123;\\curly&#123;\\param&#123;key&#125; \\param&#123;argument&#125;&#125;&#125;)\n\\EQ (with-output-to-string (#1=#:string-stream) \n     (write object :stream #1# \\star&#123;\\curly&#123;\\param&#123;key&#125; \\param&#123;argument&#125;&#125;&#125;))\n\n (princ-to-string \\param&#123;object&#125;)\n\\EQ (with-output-to-string (string-stream)\n     (princ \\param&#123;object&#125; string-stream))\n\n (prin1-to-string \\param&#123;object&#125;)\n\\EQ (with-output-to-string (string-stream)\n     (prin1 \\param&#123;object&#125; string-stream))\n\\endcode","\\(write-to-string[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\\\param&#123;key&#125;[\\n\\s]*\\\\param&#123;argument&#125;&#125;&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(#1=#:string-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*object[\\n\\s]*:stream[\\n\\s]*#1#[\\n\\s]*\\\\star&#123;\\\\curly&#123;\\\\param&#123;key&#125;[\\n\\s]*\\\\param&#123;argument&#125;&#125;&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ-to-string[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(string-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*string-stream\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1-to-string[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(string-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*string-stream\\)\\)"],["\\code\n (let ((*print-base* 24.) (*print-radix* t)) \n   (print 23.))\n\\OUT #24rN\n*→* 23\n (setq *print-base* 10) *→* 10\n (setq *print-radix* nil) *→* NIL                                          \n (dotimes (i 35)\n    (let ((*print-base* (+ i 2)))           ;print the decimal number 40 \n      (write 40)                            ;in each base from 2 to 36\n      (if (zerop (mod i 10)) (terpri) (format t \" \"))))\n\\OUT 101000\n\\OUT 1111 220 130 104 55 50 44 40 37 34\n\\OUT 31 2C 2A 28 26 24 22 20 1J 1I\n\\OUT 1H 1G 1F 1E 1D 1C 1B 1A 19 18\n\\OUT 17 16 15 14 \n*→* NIL\n (dolist (pb '(2 3 8 10 16))               \n    (let ((*print-radix* t)                 ;print the integer 10 and \n          (*print-base* pb))                ;the ratio 1/10 in bases 2, \n     (format t \"~&~S  ~S~%\" 10 1/10)))        ;3, 8, 10, 16\n\\OUT #b1010  #b1/1010\n\\OUT #3r101  #3r1/101\n\\OUT #o12  #o1/12\n\\OUT 10.  #10r1/10\n\\OUT #xA  #x1/A\n*→* NIL\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*print-base\\*[\\n\\s]*24\\.\\)[\\n\\s]*\\(\\*print-radix\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*23\\.\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#24rN[\\n\\s]*\\*\\→\\*[\\n\\s]*23[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*print-base\\*[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*print-radix\\*[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*35\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-base\\*[\\n\\s]*\\(\\+[\\n\\s]*i[\\n\\s]*2\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;print[\\n\\s]*the[\\n\\s]*decimal[\\n\\s]*number[\\n\\s]*40[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*40\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;in[\\n\\s]*each[\\n\\s]*base[\\n\\s]*from[\\n\\s]*2[\\n\\s]*to[\\n\\s]*36[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(zerop[\\n\\s]*\\(mod[\\n\\s]*i[\\n\\s]*10\\)\\)[\\n\\s]*\\(terpri\\)[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"[\\n\\s]*\"\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*101000[\\n\\s]*\\\\OUT[\\n\\s]*1111[\\n\\s]*220[\\n\\s]*130[\\n\\s]*104[\\n\\s]*55[\\n\\s]*50[\\n\\s]*44[\\n\\s]*40[\\n\\s]*37[\\n\\s]*34[\\n\\s]*\\\\OUT[\\n\\s]*31[\\n\\s]*2C[\\n\\s]*2A[\\n\\s]*28[\\n\\s]*26[\\n\\s]*24[\\n\\s]*22[\\n\\s]*20[\\n\\s]*1J[\\n\\s]*1I[\\n\\s]*\\\\OUT[\\n\\s]*1H[\\n\\s]*1G[\\n\\s]*1F[\\n\\s]*1E[\\n\\s]*1D[\\n\\s]*1C[\\n\\s]*1B[\\n\\s]*1A[\\n\\s]*19[\\n\\s]*18[\\n\\s]*\\\\OUT[\\n\\s]*17[\\n\\s]*16[\\n\\s]*15[\\n\\s]*14[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(pb[\\n\\s]*'\\(2[\\n\\s]*3[\\n\\s]*8[\\n\\s]*10[\\n\\s]*16\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-radix\\*[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;print[\\n\\s]*the[\\n\\s]*integer[\\n\\s]*10[\\n\\s]*and[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-base\\*[\\n\\s]*pb\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;the[\\n\\s]*ratio[\\n\\s]*1/10[\\n\\s]*in[\\n\\s]*bases[\\n\\s]*2,[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~S[\\n\\s]*[\\n\\s]*~S~%\"[\\n\\s]*10[\\n\\s]*1/10\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;3,[\\n\\s]*8,[\\n\\s]*10,[\\n\\s]*16[\\n\\s]*\\\\OUT[\\n\\s]*#b1010[\\n\\s]*[\\n\\s]*#b1/1010[\\n\\s]*\\\\OUT[\\n\\s]*#3r101[\\n\\s]*[\\n\\s]*#3r1/101[\\n\\s]*\\\\OUT[\\n\\s]*#o12[\\n\\s]*[\\n\\s]*#o1/12[\\n\\s]*\\\\OUT[\\n\\s]*10\\.[\\n\\s]*[\\n\\s]*#10r1/10[\\n\\s]*\\\\OUT[\\n\\s]*#xA[\\n\\s]*[\\n\\s]*#x1/A[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (defun test-print-case ()\n   (dolist (*print-case* '(:upcase :downcase :capitalize))\n     (format t \"~&~S ~S~%\" 'this-and-that '|And-something-elSE|)))\n*→* TEST-PC\n;; Although the choice of which characters to escape is specified by\n;; *PRINT-CASE*, the choice of how to escape those characters \n;; (i.e., whether single escapes or multiple escapes are used)\n;; is implementation-dependent.  The examples here show two of the\n;; many valid ways in which escaping might appear.\n (test-print-case) ;Implementation A\n\\OUT THIS-AND-THAT |And-something-elSE|\n\\OUT this-and-that a\\\\n\\\\d-\\\\s\\\\o\\\\m\\\\e\\\\t\\\\h\\\\i\\\\n\\\\g-\\\\e\\\\lse\n\\OUT This-And-That A\\\\n\\\\d-\\\\s\\\\o\\\\m\\\\e\\\\t\\\\h\\\\i\\\\n\\\\g-\\\\e\\\\lse\n*→* NIL\n (test-print-case) ;Implementation B\n\\OUT THIS-AND-THAT |And-something-elSE|\n\\OUT this-and-that a|nd-something-el|se\n\\OUT This-And-That A|nd-something-el|se\n*→* NIL\n\\endcode","\\(defun[\\n\\s]*test-print-case[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(\\*print-case\\*[\\n\\s]*'\\(:upcase[\\n\\s]*:downcase[\\n\\s]*:capitalize\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~S[\\n\\s]*~S~%\"[\\n\\s]*'this-and-that[\\n\\s]*'|And-something-elSE|\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEST-PC[\\n\\s]*;;[\\n\\s]*Although[\\n\\s]*the[\\n\\s]*choice[\\n\\s]*of[\\n\\s]*which[\\n\\s]*characters[\\n\\s]*to[\\n\\s]*escape[\\n\\s]*is[\\n\\s]*specified[\\n\\s]*by[\\n\\s]*;;[\\n\\s]*\\*PRINT-CASE\\*,[\\n\\s]*the[\\n\\s]*choice[\\n\\s]*of[\\n\\s]*how[\\n\\s]*to[\\n\\s]*escape[\\n\\s]*those[\\n\\s]*characters[\\n\\s]*[\\n\\s]*;;[\\n\\s]*\\(i\\.e\\.,[\\n\\s]*whether[\\n\\s]*single[\\n\\s]*escapes[\\n\\s]*or[\\n\\s]*multiple[\\n\\s]*escapes[\\n\\s]*are[\\n\\s]*used\\)[\\n\\s]*;;[\\n\\s]*is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*The[\\n\\s]*examples[\\n\\s]*here[\\n\\s]*show[\\n\\s]*two[\\n\\s]*of[\\n\\s]*the[\\n\\s]*;;[\\n\\s]*many[\\n\\s]*valid[\\n\\s]*ways[\\n\\s]*in[\\n\\s]*which[\\n\\s]*escaping[\\n\\s]*might[\\n\\s]*appear\\.[\\n\\s]*[\\n\\s]*\\(test-print-case\\)[\\n\\s]*;Implementation[\\n\\s]*A[\\n\\s]*\\\\OUT[\\n\\s]*THIS-AND-THAT[\\n\\s]*|And-something-elSE|[\\n\\s]*\\\\OUT[\\n\\s]*this-and-that[\\n\\s]*a\\\\\\\\n\\\\\\\\d-\\\\\\\\s\\\\\\\\o\\\\\\\\m\\\\\\\\e\\\\\\\\t\\\\\\\\h\\\\\\\\i\\\\\\\\n\\\\\\\\g-\\\\\\\\e\\\\\\\\lse[\\n\\s]*\\\\OUT[\\n\\s]*This-And-That[\\n\\s]*A\\\\\\\\n\\\\\\\\d-\\\\\\\\s\\\\\\\\o\\\\\\\\m\\\\\\\\e\\\\\\\\t\\\\\\\\h\\\\\\\\i\\\\\\\\n\\\\\\\\g-\\\\\\\\e\\\\\\\\lse[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(test-print-case\\)[\\n\\s]*;Implementation[\\n\\s]*B[\\n\\s]*\\\\OUT[\\n\\s]*THIS-AND-THAT[\\n\\s]*|And-something-elSE|[\\n\\s]*\\\\OUT[\\n\\s]*this-and-that[\\n\\s]*a|nd-something-el|se[\\n\\s]*\\\\OUT[\\n\\s]*This-And-That[\\n\\s]*A|nd-something-el|se[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (let ((a (list 1 2 3)))\n   (setf (cdddr a) a)\n   (let ((*print-circle* t))\n     (write a)\n     :done))\n\\OUT #1=(1 2 3 . #1#)\n*→* :DONE\n\\endcode","\\(let[\\n\\s]*\\(\\(a[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(cdddr[\\n\\s]*a\\)[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-circle\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:done\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#1=\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\.[\\n\\s]*#1#\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:DONE"],["\\code\n (let ((*print-escape* t)) (write #\\\\a))\n\\OUT #\\\\a\n*→* #\\\\a\n (let ((*print-escape* nil)) (write #\\\\a))\n\\OUT a\n*→* #\\\\a\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*print-escape\\*[\\n\\s]*t\\)\\)[\\n\\s]*\\(write[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-escape\\*[\\n\\s]*nil\\)\\)[\\n\\s]*\\(write[\\n\\s]*#\\\\\\\\a\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a"],["\\code\n (let ((*print-gensym* nil))\n   (print (gensym)))\n\\OUT G6040 \n*→* #:G6040\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*print-gensym\\*[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(gensym\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*G6040[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G6040"],["\\code\n (setq a '(1 (2 (3 (4 (5 (6))))))) *→* (1 (2 (3 (4 (5 (6))))))\n (dotimes (i 8) \n   (let ((*print-level* i)) \n     (format t \"~&~D -- ~S~%\" i a)))\n\\OUT 0 -- #\n\\OUT 1 -- (1 #)\n\\OUT 2 -- (1 (2 #))\n\\OUT 3 -- (1 (2 (3 #)))\n\\OUT 4 -- (1 (2 (3 (4 #))))\n\\OUT 5 -- (1 (2 (3 (4 (5 #)))))\n\\OUT 6 -- (1 (2 (3 (4 (5 (6))))))\n\\OUT 7 -- (1 (2 (3 (4 (5 (6))))))\n*→* NIL\n\\medbreak\n (setq a '(1 2 3 4 5 6)) *→* (1 2 3 4 5 6)\n (dotimes (i 7) \n   (let ((*print-length* i)) \n     (format t \"~&~D -- ~S~%\" i a))) \n\\OUT 0 -- (...)\n\\OUT 1 -- (1 ...)\n\\OUT 2 -- (1 2 ...)\n\\OUT 3 -- (1 2 3 ...)\n\\OUT 4 -- (1 2 3 4 ...)\n\\OUT 5 -- (1 2 3 4 5 6)\n\\OUT 6 -- (1 2 3 4 5 6)\n*→* NIL\n\\medbreak\n(dolist (level-length '((0 1) (1 1) (1 2) (1 3) (1 4) \n                        (2 1) (2 2) (2 3) (3 2) (3 3) (3 4)))\n (let ((*print-level*  (first  level-length))\n       (*print-length* (second level-length)))\n   (format t \"~&~D ~D -- ~S~%\"\n           *print-level* *print-length* \n           '(if (member x y) (+ (car x) 3) '(foo . #(a b c d \"Baz\"))))))\n\\OUT 0 1 -- #\n\\OUT 1 1 -- (IF ...)\n\\OUT 1 2 -- (IF # ...)\n\\OUT 1 3 -- (IF # # ...)\n\\OUT 1 4 -- (IF # # #)\n\\OUT 2 1 -- (IF ...)\n\\OUT 2 2 -- (IF (MEMBER X ...) ...)\n\\OUT 2 3 -- (IF (MEMBER X Y) (+ # 3) ...)\n\\OUT 3 2 -- (IF (MEMBER X ...) ...)\n\\OUT 3 3 -- (IF (MEMBER X Y) (+ (CAR X) 3) ...)\n\\OUT 3 4 -- (IF (MEMBER X Y) (+ (CAR X) 3) '(FOO . #(A B C D ...)))\n*→* NIL\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*'\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*\\(5[\\n\\s]*\\(6\\)\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*\\(5[\\n\\s]*\\(6\\)\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-level\\*[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~D[\\n\\s]*--[\\n\\s]*~S~%\"[\\n\\s]*i[\\n\\s]*a\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*0[\\n\\s]*--[\\n\\s]*#[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*#\\)[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*#\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*#\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*4[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*#\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*\\(5[\\n\\s]*#\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*6[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*\\(5[\\n\\s]*\\(6\\)\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*7[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*\\(5[\\n\\s]*\\(6\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*7\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-length\\*[\\n\\s]*i\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~D[\\n\\s]*--[\\n\\s]*~S~%\"[\\n\\s]*i[\\n\\s]*a\\)\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*0[\\n\\s]*--[\\n\\s]*\\(\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*4[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*5[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\\\OUT[\\n\\s]*6[\\n\\s]*--[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*\\\\medbreak[\\n\\s]*\\(dolist[\\n\\s]*\\(level-length[\\n\\s]*'\\(\\(0[\\n\\s]*1\\)[\\n\\s]*\\(1[\\n\\s]*1\\)[\\n\\s]*\\(1[\\n\\s]*2\\)[\\n\\s]*\\(1[\\n\\s]*3\\)[\\n\\s]*\\(1[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(2[\\n\\s]*1\\)[\\n\\s]*\\(2[\\n\\s]*2\\)[\\n\\s]*\\(2[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*2\\)[\\n\\s]*\\(3[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*4\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-level\\*[\\n\\s]*[\\n\\s]*\\(first[\\n\\s]*[\\n\\s]*level-length\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-length\\*[\\n\\s]*\\(second[\\n\\s]*level-length\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~D[\\n\\s]*~D[\\n\\s]*--[\\n\\s]*~S~%\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*print-level\\*[\\n\\s]*\\*print-length\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(if[\\n\\s]*\\(member[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\(\\+[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*3\\)[\\n\\s]*'\\(foo[\\n\\s]*\\.[\\n\\s]*#\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*\"Baz\"\\)\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*0[\\n\\s]*1[\\n\\s]*--[\\n\\s]*#[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*1[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*2[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*#[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*3[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*#[\\n\\s]*#[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*1[\\n\\s]*4[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*#[\\n\\s]*#[\\n\\s]*#\\)[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*1[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*2[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\(MEMBER[\\n\\s]*X[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*3[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\(MEMBER[\\n\\s]*X[\\n\\s]*Y\\)[\\n\\s]*\\(\\+[\\n\\s]*#[\\n\\s]*3\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*2[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\(MEMBER[\\n\\s]*X[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*3[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\(MEMBER[\\n\\s]*X[\\n\\s]*Y\\)[\\n\\s]*\\(\\+[\\n\\s]*\\(CAR[\\n\\s]*X\\)[\\n\\s]*3\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\\\OUT[\\n\\s]*3[\\n\\s]*4[\\n\\s]*--[\\n\\s]*\\(IF[\\n\\s]*\\(MEMBER[\\n\\s]*X[\\n\\s]*Y\\)[\\n\\s]*\\(\\+[\\n\\s]*\\(CAR[\\n\\s]*X\\)[\\n\\s]*3\\)[\\n\\s]*'\\(FOO[\\n\\s]*\\.[\\n\\s]*#\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*\\.\\.\\.\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (let ((*print-right-margin* 25) (*print-lines* 3))\n   (pprint '(progn (setq a 1 b 2 c 3 d 4))))\n\\OUT (PROGN (SETQ A 1\n\\OUT              B 2\n\\OUT              C 3 ..))\n*→* \\novalues\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*print-right-margin\\*[\\n\\s]*25\\)[\\n\\s]*\\(\\*print-lines\\*[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(pprint[\\n\\s]*'\\(progn[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*1[\\n\\s]*b[\\n\\s]*2[\\n\\s]*c[\\n\\s]*3[\\n\\s]*d[\\n\\s]*4\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(PROGN[\\n\\s]*\\(SETQ[\\n\\s]*A[\\n\\s]*1[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*B[\\n\\s]*2[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*C[\\n\\s]*3[\\n\\s]*\\.\\.\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\novalues"],["\\code\n (setq *print-pretty* 'nil) *→* NIL\n (progn (write '(let ((a 1) (b 2) (c 3)) (+ a b c))) nil)\n\\OUT (LET ((A 1) (B 2) (C 3)) (+ A B C))\n*→* NIL\n (let ((*print-pretty* t))\n   (progn (write '(let ((a 1) (b 2) (c 3)) (+ a b c))) nil))\n\\OUT (LET ((A 1)\n\\OUT       (B 2)\n\\OUT       (C 3))\n\\OUT   (+ A B C))\n*→* NIL\n;; Note that the first two expressions printed by this next form\n;; differ from the second two only in whether escape characters are printed.\n;; In all four cases, extra whitespace is inserted by the pretty printer.\n (flet ((test (x)\n          (let ((*print-pretty* t))\n            (print x)\n            (format t \"~%~S \" x)\n            (terpri) (princ x) (princ \" \")\n            (format t \"~%~A \" x))))\n  (test '#'(lambda () (list \"a\" #\\b 'c #'d))))\n\\OUT #'(LAMBDA ()\n\\OUT     (LIST \"a\" #\\b 'C #'D))\n\\OUT #'(LAMBDA ()\n\\OUT     (LIST \"a\" #\\b 'C #'D))\n\\OUT #'(LAMBDA ()\n\\OUT     (LIST a b 'C #'D)) \n\\OUT #'(LAMBDA ()\n\\OUT     (LIST a b 'C #'D))\n*→* NIL\n\\endcode","\\(setq[\\n\\s]*\\*print-pretty\\*[\\n\\s]*'nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(write[\\n\\s]*'\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*\\(c[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)[\\n\\s]*nil\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\(B[\\n\\s]*2\\)[\\n\\s]*\\(C[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-pretty\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(write[\\n\\s]*'\\(let[\\n\\s]*\\(\\(a[\\n\\s]*1\\)[\\n\\s]*\\(b[\\n\\s]*2\\)[\\n\\s]*\\(c[\\n\\s]*3\\)\\)[\\n\\s]*\\(\\+[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c\\)\\)\\)[\\n\\s]*nil\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(LET[\\n\\s]*\\(\\(A[\\n\\s]*1\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(B[\\n\\s]*2\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(C[\\n\\s]*3\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*A[\\n\\s]*B[\\n\\s]*C\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*the[\\n\\s]*first[\\n\\s]*two[\\n\\s]*expressions[\\n\\s]*printed[\\n\\s]*by[\\n\\s]*this[\\n\\s]*next[\\n\\s]*form[\\n\\s]*;;[\\n\\s]*differ[\\n\\s]*from[\\n\\s]*the[\\n\\s]*second[\\n\\s]*two[\\n\\s]*only[\\n\\s]*in[\\n\\s]*whether[\\n\\s]*escape[\\n\\s]*characters[\\n\\s]*are[\\n\\s]*printed\\.[\\n\\s]*;;[\\n\\s]*In[\\n\\s]*all[\\n\\s]*four[\\n\\s]*cases,[\\n\\s]*extra[\\n\\s]*whitespace[\\n\\s]*is[\\n\\s]*inserted[\\n\\s]*by[\\n\\s]*the[\\n\\s]*pretty[\\n\\s]*printer\\.[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(test[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-pretty\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~%~S[\\n\\s]*\"[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(terpri\\)[\\n\\s]*\\(princ[\\n\\s]*x\\)[\\n\\s]*\\(princ[\\n\\s]*\"[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~%~A[\\n\\s]*\"[\\n\\s]*x\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(test[\\n\\s]*'#'\\(lambda[\\n\\s]*\\(\\)[\\n\\s]*\\(list[\\n\\s]*\"a\"[\\n\\s]*#\\\\b[\\n\\s]*'c[\\n\\s]*#'d\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#'\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(LIST[\\n\\s]*\"a\"[\\n\\s]*#\\\\b[\\n\\s]*'C[\\n\\s]*#'D\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#'\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(LIST[\\n\\s]*\"a\"[\\n\\s]*#\\\\b[\\n\\s]*'C[\\n\\s]*#'D\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#'\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(LIST[\\n\\s]*a[\\n\\s]*b[\\n\\s]*'C[\\n\\s]*#'D\\)\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*#'\\(LAMBDA[\\n\\s]*\\(\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(LIST[\\n\\s]*a[\\n\\s]*b[\\n\\s]*'C[\\n\\s]*#'D\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (let ((x (list \"a\" '\\\\a (gensym) '((a (b (c))) d e f g)))\n       (*print-escape* nil)\n       (*print-gensym* nil)\n       (*print-level* 3)\n       (*print-length* 3))\n   (write x)\n   (let ((*print-readably* t))\n     (terpri)\n     (write x)\n     :done))\n\\OUT (a a G4581 ((A #) D E ...))\n\\OUT (\"a\" |a| #:G4581 ((A (B (C))) D E F G))\n*→* :DONE\n\n;; This is setup code is shared between the examples\n;; of three hypothetical implementations which follow.\n (setq table (make-hash-table)) *→* #&#60;HASH-TABLE EQL 0/120 32005763&#62; \n (setf (gethash table 1) 'one) *→* ONE\n (setf (gethash table 2) 'two) *→* TWO\n\n;; Implementation A\n (let ((*print-readably* t)) (print table))\n Error: Can't print #&#60;HASH-TABLE EQL 0/120 32005763&#62; readably.\n\n;; Implementation B\n;; No standardized #S notation for hash tables is defined, \n;; but there might be an implementation-defined notation.\n (let ((*print-readably* t)) (print table))\n\\OUT #S(HASH-TABLE :TEST EQL :SIZE 120 :CONTENTS (1 ONE 2 TWO))\n*→* #&#60;HASH-TABLE EQL 0/120 32005763&#62;\n\n;; Implementation C\n;; Note that #. notation can only be used if *READ-EVAL* is true.\n;; If *READ-EVAL* were false, this same implementation might have to\n;; signal an error unless it had yet another printing strategy to fall\n;; back on.\n (let ((*print-readably* t)) (print table))\n\\OUT #.(LET ((HASH-TABLE (MAKE-HASH-TABLE)))\n\\OUT     (SETF (GETHASH 1 HASH-TABLE) ONE)\n\\OUT     (SETF (GETHASH 2 HASH-TABLE) TWO)\n\\OUT     HASH-TABLE)\n*→* #&#60;HASH-TABLE EQL 0/120 32005763&#62;\n\\endcode","\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(list[\\n\\s]*\"a\"[\\n\\s]*'\\\\\\\\a[\\n\\s]*\\(gensym\\)[\\n\\s]*'\\(\\(a[\\n\\s]*\\(b[\\n\\s]*\\(c\\)\\)\\)[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f[\\n\\s]*g\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-escape\\*[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-gensym\\*[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-level\\*[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\*print-length\\*[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-readably\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(terpri\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:done\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(a[\\n\\s]*a[\\n\\s]*G4581[\\n\\s]*\\(\\(A[\\n\\s]*#\\)[\\n\\s]*D[\\n\\s]*E[\\n\\s]*\\.\\.\\.\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(\"a\"[\\n\\s]*|a|[\\n\\s]*#:G4581[\\n\\s]*\\(\\(A[\\n\\s]*\\(B[\\n\\s]*\\(C\\)\\)\\)[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*G\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:DONE[\\n\\s]*[\\n\\s]*;;[\\n\\s]*This[\\n\\s]*is[\\n\\s]*setup[\\n\\s]*code[\\n\\s]*is[\\n\\s]*shared[\\n\\s]*between[\\n\\s]*the[\\n\\s]*examples[\\n\\s]*;;[\\n\\s]*of[\\n\\s]*three[\\n\\s]*hypothetical[\\n\\s]*implementations[\\n\\s]*which[\\n\\s]*follow\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*table[\\n\\s]*\\(make-hash-table\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32005763&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*table[\\n\\s]*1\\)[\\n\\s]*'one\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ONE[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(gethash[\\n\\s]*table[\\n\\s]*2\\)[\\n\\s]*'two\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TWO[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-readably\\*[\\n\\s]*t\\)\\)[\\n\\s]*\\(print[\\n\\s]*table\\)\\)[\\n\\s]*[\\n\\s]*Error:[\\n\\s]*Can't[\\n\\s]*print[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32005763&#62;[\\n\\s]*readably\\.[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*B[\\n\\s]*;;[\\n\\s]*No[\\n\\s]*standardized[\\n\\s]*#S[\\n\\s]*notation[\\n\\s]*for[\\n\\s]*hash[\\n\\s]*tables[\\n\\s]*is[\\n\\s]*defined,[\\n\\s]*[\\n\\s]*;;[\\n\\s]*but[\\n\\s]*there[\\n\\s]*might[\\n\\s]*be[\\n\\s]*an[\\n\\s]*implementation-defined[\\n\\s]*notation\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-readably\\*[\\n\\s]*t\\)\\)[\\n\\s]*\\(print[\\n\\s]*table\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#S\\(HASH-TABLE[\\n\\s]*:TEST[\\n\\s]*EQL[\\n\\s]*:SIZE[\\n\\s]*120[\\n\\s]*:CONTENTS[\\n\\s]*\\(1[\\n\\s]*ONE[\\n\\s]*2[\\n\\s]*TWO\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32005763&#62;[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*C[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*#\\.[\\n\\s]*notation[\\n\\s]*can[\\n\\s]*only[\\n\\s]*be[\\n\\s]*used[\\n\\s]*if[\\n\\s]*\\*READ-EVAL\\*[\\n\\s]*is[\\n\\s]*true\\.[\\n\\s]*;;[\\n\\s]*If[\\n\\s]*\\*READ-EVAL\\*[\\n\\s]*were[\\n\\s]*false,[\\n\\s]*this[\\n\\s]*same[\\n\\s]*implementation[\\n\\s]*might[\\n\\s]*have[\\n\\s]*to[\\n\\s]*;;[\\n\\s]*signal[\\n\\s]*an[\\n\\s]*error[\\n\\s]*unless[\\n\\s]*it[\\n\\s]*had[\\n\\s]*yet[\\n\\s]*another[\\n\\s]*printing[\\n\\s]*strategy[\\n\\s]*to[\\n\\s]*fall[\\n\\s]*;;[\\n\\s]*back[\\n\\s]*on\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*print-readably\\*[\\n\\s]*t\\)\\)[\\n\\s]*\\(print[\\n\\s]*table\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\.\\(LET[\\n\\s]*\\(\\(HASH-TABLE[\\n\\s]*\\(MAKE-HASH-TABLE\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETF[\\n\\s]*\\(GETHASH[\\n\\s]*1[\\n\\s]*HASH-TABLE\\)[\\n\\s]*ONE\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(SETF[\\n\\s]*\\(GETHASH[\\n\\s]*2[\\n\\s]*HASH-TABLE\\)[\\n\\s]*TWO\\)[\\n\\s]*\\\\OUT[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*HASH-TABLE\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;HASH-TABLE[\\n\\s]*EQL[\\n\\s]*0/120[\\n\\s]*32005763&#62;"],["\\code\n (setq zvar 123) *→* 123\n (set-syntax-from-char #\\\\z #\\\\' (setq table2 (copy-readtable))) *→* T\n zvar *→* 123\n (copy-readtable table2 *readtable*) *→* #&#60;READTABLE 614000277&#62;\n zvar *→* VAR\n (setq *readtable* (copy-readtable)) *→* #&#60;READTABLE 46210223&#62;\n zvar *→* VAR\n (setq *readtable* (copy-readtable nil)) *→* #&#60;READTABLE 46302670&#62;\n zvar *→* 123\n\\endcode","\\(setq[\\n\\s]*zvar[\\n\\s]*123\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*123[\\n\\s]*[\\n\\s]*\\(set-syntax-from-char[\\n\\s]*#\\\\\\\\z[\\n\\s]*#\\\\\\\\'[\\n\\s]*\\(setq[\\n\\s]*table2[\\n\\s]*\\(copy-readtable\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*123[\\n\\s]*[\\n\\s]*\\(copy-readtable[\\n\\s]*table2[\\n\\s]*\\*readtable\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;READTABLE[\\n\\s]*614000277&#62;[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*VAR[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*readtable\\*[\\n\\s]*\\(copy-readtable\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;READTABLE[\\n\\s]*46210223&#62;[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*VAR[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*readtable\\*[\\n\\s]*\\(copy-readtable[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;READTABLE[\\n\\s]*46302670&#62;[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*123"],["\\code\n(setq *readtable* (copy-readtable nil))\n\\endcode","\\(setq[\\n\\s]*\\*readtable\\*[\\n\\s]*\\(copy-readtable[\\n\\s]*nil\\)\\)"],["\\code\n(setq *readtable* (copy-readtable))\n\\endcode","\\(setq[\\n\\s]*\\*readtable\\*[\\n\\s]*\\(copy-readtable\\)\\)"],["\\code\n(let ((*readtable* (copy-readtable))) ...)\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*readtable\\*[\\n\\s]*\\(copy-readtable\\)\\)\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (get-macro-character #\\\\\\lbr) *→* NIL, false\n (make-dispatch-macro-character #\\\\\\lbr) *→* T\n (not (get-macro-character #\\\\\\lbr)) *→ false*\n\\endcode","\\(get-macro-character[\\n\\s]*#\\\\\\\\\\\\lbr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(make-dispatch-macro-character[\\n\\s]*#\\\\\\\\\\\\lbr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(get-macro-character[\\n\\s]*#\\\\\\\\\\\\lbr\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (read)\n\\OUT \\IN&#123;'a&#125;\n*→* (QUOTE A)\n (with-input-from-string (is \" \") (read is nil 'the-end)) *→* THE-END\n (defun skip-then-read-char (s c n)\n    (if (char= c #\\\\\\&#123;) (read s t nil t) (read-preserving-whitespace s))\n    (read-char-no-hang s)) *→* SKIP-THEN-READ-CHAR\n (let ((*readtable* (copy-readtable nil)))\n    (set-dispatch-macro-character #\\\\# #\\\\\\&#123; #'skip-then-read-char)\n    (set-dispatch-macro-character #\\\\# #\\\\\\&#125; #'skip-then-read-char)\n    (with-input-from-string (is \"#\\&#123;123 x #\\&#125;123 y\")\n      (format t \"~S ~S\" (read is) (read is)))) *→* #\\\\x, #\\\\Space, NIL\n\\endcode","\\(read\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\\\IN&#123;'a&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(QUOTE[\\n\\s]*A\\)[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(is[\\n\\s]*\"[\\n\\s]*\"\\)[\\n\\s]*\\(read[\\n\\s]*is[\\n\\s]*nil[\\n\\s]*'the-end\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THE-END[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*skip-then-read-char[\\n\\s]*\\(s[\\n\\s]*c[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(char=[\\n\\s]*c[\\n\\s]*#\\\\\\\\\\\\&#123;\\)[\\n\\s]*\\(read[\\n\\s]*s[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)[\\n\\s]*\\(read-preserving-whitespace[\\n\\s]*s\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-char-no-hang[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SKIP-THEN-READ-CHAR[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*readtable\\*[\\n\\s]*\\(copy-readtable[\\n\\s]*nil\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;[\\n\\s]*#'skip-then-read-char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#125;[\\n\\s]*#'skip-then-read-char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(is[\\n\\s]*\"#\\\\&#123;123[\\n\\s]*x[\\n\\s]*#\\\\&#125;123[\\n\\s]*y\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~S[\\n\\s]*~S\"[\\n\\s]*\\(read[\\n\\s]*is\\)[\\n\\s]*\\(read[\\n\\s]*is\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\x,[\\n\\s]*#\\\\\\\\Space,[\\n\\s]*NIL"],["\\code\n (defun slash-reader (stream char)\n   (declare (ignore char))\n   `(path . ,(loop for dir = (read-preserving-whitespace stream t nil t)\n                   then (progn (read-char stream t nil t)\n                               (read-preserving-whitespace stream t nil t))\n                   collect dir\n                   while (eql (peek-char nil stream nil nil t) #\\\\/))))\n (set-macro-character #\\\\/ #'slash-reader)\n\\endcode","\\(defun[\\n\\s]*slash-reader[\\n\\s]*\\(stream[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(path[\\n\\s]*\\.[\\n\\s]*,\\(loop[\\n\\s]*for[\\n\\s]*dir[\\n\\s]*=[\\n\\s]*\\(read-preserving-whitespace[\\n\\s]*stream[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*then[\\n\\s]*\\(progn[\\n\\s]*\\(read-char[\\n\\s]*stream[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-preserving-whitespace[\\n\\s]*stream[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*collect[\\n\\s]*dir[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*while[\\n\\s]*\\(eql[\\n\\s]*\\(peek-char[\\n\\s]*nil[\\n\\s]*stream[\\n\\s]*nil[\\n\\s]*nil[\\n\\s]*t\\)[\\n\\s]*#\\\\\\\\/\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(set-macro-character[\\n\\s]*#\\\\\\\\/[\\n\\s]*#'slash-reader\\)"],["\\code\n (zyedh /usr/games/zork /usr/games/boggle)\n\\endcode","\\(zyedh[\\n\\s]*/usr/games/zork[\\n\\s]*/usr/games/boggle\\)"],["\\code\n (zyedh (path usr games zork) (path usr games boggle))\n\\endcode","\\(zyedh[\\n\\s]*\\(path[\\n\\s]*usr[\\n\\s]*games[\\n\\s]*zork\\)[\\n\\s]*\\(path[\\n\\s]*usr[\\n\\s]*games[\\n\\s]*boggle\\)\\)"],["\\code\n (zyedh (path usr games zork usr games boggle))\n\\endcode","\\(zyedh[\\n\\s]*\\(path[\\n\\s]*usr[\\n\\s]*games[\\n\\s]*zork[\\n\\s]*usr[\\n\\s]*games[\\n\\s]*boggle\\)\\)"],["\\code\n (read-delimited-list #\\\\\\rbracket) 1 2 3 4 5 6 \\rbracket\n*→* (1 2 3 4 5 6)\n\\endcode","\\(read-delimited-list[\\n\\s]*#\\\\\\\\\\\\rbracket\\)[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*\\\\rbracket[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)"],["\\code\n #\\&#123;p q z a\\&#125;  reads as  ((p q) (p z) (p a) (q z) (q a) (z a))\n\\endcode","#\\\\&#123;p[\\n\\s]*q[\\n\\s]*z[\\n\\s]*a\\\\&#125;[\\n\\s]*[\\n\\s]*reads[\\n\\s]*as[\\n\\s]*[\\n\\s]*\\(\\(p[\\n\\s]*q\\)[\\n\\s]*\\(p[\\n\\s]*z\\)[\\n\\s]*\\(p[\\n\\s]*a\\)[\\n\\s]*\\(q[\\n\\s]*z\\)[\\n\\s]*\\(q[\\n\\s]*a\\)[\\n\\s]*\\(z[\\n\\s]*a\\)\\)"],["\\code\n (defun |#\\&#123;-reader| (stream char arg)\n   (declare (ignore char arg))\n   (mapcon #'(lambda (x)\n              (mapcar #'(lambda (y) (list (car x) y)) (cdr x)))\n          (read-delimited-list #\\\\\\&#125; stream t))) *→* |#\\&#123;-reader|\n\n (set-dispatch-macro-character #\\\\# #\\\\\\&#123; #'|#\\&#123;-reader|) *→* T \n (set-macro-character #\\\\\\&#125; (get-macro-character #\\\\) \\nil))\n\\endcode","\\(defun[\\n\\s]*|#\\\\&#123;-reader|[\\n\\s]*\\(stream[\\n\\s]*char[\\n\\s]*arg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char[\\n\\s]*arg\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcon[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(y\\)[\\n\\s]*\\(list[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*y\\)\\)[\\n\\s]*\\(cdr[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-delimited-list[\\n\\s]*#\\\\\\\\\\\\&#125;[\\n\\s]*stream[\\n\\s]*t\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*|#\\\\&#123;-reader|[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;[\\n\\s]*#'|#\\\\&#123;-reader|\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-macro-character[\\n\\s]*#\\\\\\\\\\\\&#125;[\\n\\s]*\\(get-macro-character[\\n\\s]*#\\\\\\\\\\)[\\n\\s]*\\\\nil\\)\\)"],["\\code\n (set-macro-character #\\\\\\&#125; (get-macro-character #\\\\) \\nil))\n\\endcode","\\(set-macro-character[\\n\\s]*#\\\\\\\\\\\\&#125;[\\n\\s]*\\(get-macro-character[\\n\\s]*#\\\\\\\\\\)[\\n\\s]*\\\\nil\\)\\)"],["\\code\n #\\&#123; p q z a\\&#125;\n\\endcode","#\\\\&#123;[\\n\\s]*p[\\n\\s]*q[\\n\\s]*z[\\n\\s]*a\\\\&#125;"],["\\code\n (read-from-string \" 1 3 5\" t nil :start 2) *→* 3, 5\n (read-from-string \"(a b c)\") *→* (A B C), 7\n\\endcode","\\(read-from-string[\\n\\s]*\"[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\"[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*:start[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3,[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(read-from-string[\\n\\s]*\"\\(a[\\n\\s]*b[\\n\\s]*c\\)\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\),[\\n\\s]*7"],["\\code\n (readtablep *readtable*) *→ true*\n (readtablep (copy-readtable)) *→ true*\n (readtablep '*readtable*) *→ false*\n\\endcode","\\(readtablep[\\n\\s]*\\*readtable\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(readtablep[\\n\\s]*\\(copy-readtable\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(readtablep[\\n\\s]*'\\*readtable\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (readtablep \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'readtable) \n\\endcode","\\(readtablep[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'readtable\\)"],["\\code\n (get-dispatch-macro-character #\\\\# #\\\\\\&#123;) *→* NIL\n (set-dispatch-macro-character #\\\\# #\\\\\\&#123;        ;dispatch on #\\&#123;\n    #'(lambda(s c n)\n        (let ((list (read s nil (values) t)))  ;list is object after #n\\&#123;\n          (when (consp list)                   ;return nth element of list\n            (unless (and n (&#60; 0 n (length list))) (setq n 0))\n            (setq list (nth n list)))\n         list))) *→* T\n #\\&#123;(1 2 3 4) *→* 1\n #3\\&#123;(0 1 2 3) *→* 3\n #\\&#123;123 *→* 123\n\\endcode","\\(get-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(set-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;dispatch[\\n\\s]*on[\\n\\s]*#\\\\&#123;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda\\(s[\\n\\s]*c[\\n\\s]*n\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(list[\\n\\s]*\\(read[\\n\\s]*s[\\n\\s]*nil[\\n\\s]*\\(values\\)[\\n\\s]*t\\)\\)\\)[\\n\\s]*[\\n\\s]*;list[\\n\\s]*is[\\n\\s]*object[\\n\\s]*after[\\n\\s]*#n\\\\&#123;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\(consp[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;return[\\n\\s]*nth[\\n\\s]*element[\\n\\s]*of[\\n\\s]*list[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(and[\\n\\s]*n[\\n\\s]*\\(&#60;[\\n\\s]*0[\\n\\s]*n[\\n\\s]*\\(length[\\n\\s]*list\\)\\)\\)[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*list[\\n\\s]*\\(nth[\\n\\s]*n[\\n\\s]*list\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*list\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*#\\\\&#123;\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*#3\\\\&#123;\\(0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*#\\\\&#123;123[\\n\\s]*\\*\\→\\*[\\n\\s]*123"],["\\code\n(defun |#$-reader| (stream subchar arg)\n   (declare (ignore subchar arg))\n   (list 'dollars (read stream t nil t))) *→* |#$-reader|\n (set-dispatch-macro-character #\\\\# #\\\\\\$ #'|#\\$-reader|) *→* T\n\\endcode","\\(defun[\\n\\s]*|#$-reader|[\\n\\s]*\\(stream[\\n\\s]*subchar[\\n\\s]*arg\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*subchar[\\n\\s]*arg\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'dollars[\\n\\s]*\\(read[\\n\\s]*stream[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*|#$-reader|[\\n\\s]*[\\n\\s]*\\(set-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\$[\\n\\s]*#'|#\\\\$-reader|\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n% (get-dispatch-macro-character #\\\\# #\\\\\\&#123;) *→* NIL \n% (unless (get-dispatch-macro-character #\\\\# #\\\\x)\n%      (warn \"Hexadecimal input (#x&#60;ddd&#62;) is disabled\")) *→* NIL \n% (let ((previous-fun (get-dispatch-macro-character #\\\\# #\\\\\\&#123;)))\n%      (when previous-fun\n%        (set-dispatch-macro-character #\\\\# #\\\\\\&#123;\n%          #'(lambda (stream char arg)\n%               (setq stream *debug-io*)\n%               (when *debug-macro-chars*\n%                  (format *trace-output* \n%                         \"~&Occurrence of ~C~C on stream ~S\"\n%                                         #\\\\# #\\\\\\&#123; stream))\n%              (list (funcall previous-fun stream char)))))) *→* NIL \n%\\endcode","%[\\n\\s]*\\(get-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*%[\\n\\s]*\\(unless[\\n\\s]*\\(get-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\x\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"Hexadecimal[\\n\\s]*input[\\n\\s]*\\(#x&#60;ddd&#62;\\)[\\n\\s]*is[\\n\\s]*disabled\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*%[\\n\\s]*\\(let[\\n\\s]*\\(\\(previous-fun[\\n\\s]*\\(get-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*previous-fun[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set-dispatch-macro-character[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(stream[\\n\\s]*char[\\n\\s]*arg\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*stream[\\n\\s]*\\*debug-io\\*\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*\\*debug-macro-chars\\*[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*\\*trace-output\\*[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"~&Occurrence[\\n\\s]*of[\\n\\s]*~C~C[\\n\\s]*on[\\n\\s]*stream[\\n\\s]*~S\"[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#\\\\\\\\#[\\n\\s]*#\\\\\\\\\\\\&#123;[\\n\\s]*stream\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(funcall[\\n\\s]*previous-fun[\\n\\s]*stream[\\n\\s]*char\\)\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*%"],["\\code\n (get-macro-character #\\\\\\lbr) *→* NIL, false\n (not (get-macro-character #\\\\;)) *→ false*\n\\endcode","\\(get-macro-character[\\n\\s]*#\\\\\\\\\\\\lbr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(get-macro-character[\\n\\s]*#\\\\\\\\;\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (defun single-quote-reader (stream char)\n   (declare (ignore char))\n   (list 'quote (read stream t nil t))) *→* SINGLE-QUOTE-READER\n (set-macro-character #\\\\' #'single-quote-reader) *→* T\n\\endcode","\\(defun[\\n\\s]*single-quote-reader[\\n\\s]*\\(stream[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*'quote[\\n\\s]*\\(read[\\n\\s]*stream[\\n\\s]*t[\\n\\s]*nil[\\n\\s]*t\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SINGLE-QUOTE-READER[\\n\\s]*[\\n\\s]*\\(set-macro-character[\\n\\s]*#\\\\\\\\'[\\n\\s]*#'single-quote-reader\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n (defun semicolon-reader (stream char)\n   (declare (ignore char))\n   ;; First swallow the rest of the current input line.\n   ;; End-of-file is acceptable for terminating the comment.\n   (do () ((char= (read-char stream nil #\\\\Newline t) #\\\\Newline)))\n   ;; Return zero values.\n   (values)) *→* SEMICOLON-READER\n (set-macro-character #\\\\; #'semicolon-reader) *→* T\n\\endcode","\\(defun[\\n\\s]*semicolon-reader[\\n\\s]*\\(stream[\\n\\s]*char\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(ignore[\\n\\s]*char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*First[\\n\\s]*swallow[\\n\\s]*the[\\n\\s]*rest[\\n\\s]*of[\\n\\s]*the[\\n\\s]*current[\\n\\s]*input[\\n\\s]*line\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*End-of-file[\\n\\s]*is[\\n\\s]*acceptable[\\n\\s]*for[\\n\\s]*terminating[\\n\\s]*the[\\n\\s]*comment\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\)[\\n\\s]*\\(\\(char=[\\n\\s]*\\(read-char[\\n\\s]*stream[\\n\\s]*nil[\\n\\s]*#\\\\\\\\Newline[\\n\\s]*t\\)[\\n\\s]*#\\\\\\\\Newline\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Return[\\n\\s]*zero[\\n\\s]*values\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SEMICOLON-READER[\\n\\s]*[\\n\\s]*\\(set-macro-character[\\n\\s]*#\\\\\\\\;[\\n\\s]*#'semicolon-reader\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n (set-syntax-from-char #\\\\7 #\\\\;) *→* T\n 123579 *→* 1235\n\\endcode","\\(set-syntax-from-char[\\n\\s]*#\\\\\\\\7[\\n\\s]*#\\\\\\\\;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*123579[\\n\\s]*\\*\\→\\*[\\n\\s]*1235"],["\\code\n (with-open-file (file pathname :direction :output)\n   (with-standard-io-syntax\n     (print data file)))\n\n;;; ... Later, in another Lisp:\n\n (with-open-file (file pathname :direction :input)\n   (with-standard-io-syntax\n     (setq data (read file))))\n\\endcode","\\(with-open-file[\\n\\s]*\\(file[\\n\\s]*pathname[\\n\\s]*:direction[\\n\\s]*:output\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-standard-io-syntax[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*data[\\n\\s]*file\\)\\)\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*\\.\\.\\.[\\n\\s]*Later,[\\n\\s]*in[\\n\\s]*another[\\n\\s]*Lisp:[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(file[\\n\\s]*pathname[\\n\\s]*:direction[\\n\\s]*:input\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-standard-io-syntax[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*data[\\n\\s]*\\(read[\\n\\s]*file\\)\\)\\)\\)"],["\\code\n (dotimes (i 6)\n   (let ((*read-base* (+ 10. i)))\n     (let ((object (read-from-string \"(\\\\\\\\DAD DAD |BEE| BEE 123. 123)\")))\n       (print (list *read-base* object)))))\n\\OUT (10 (DAD DAD BEE BEE 123 123))\n\\OUT (11 (DAD DAD BEE BEE 123 146))\n\\OUT (12 (DAD DAD BEE BEE 123 171))\n\\OUT (13 (DAD DAD BEE BEE 123 198))\n\\OUT (14 (DAD 2701 BEE BEE 123 227))\n\\OUT (15 (DAD 3088 BEE 2699 123 258))\n*→* NIL\n\\endcode","\\(dotimes[\\n\\s]*\\(i[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*read-base\\*[\\n\\s]*\\(\\+[\\n\\s]*10\\.[\\n\\s]*i\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(object[\\n\\s]*\\(read-from-string[\\n\\s]*\"\\(\\\\\\\\\\\\\\\\DAD[\\n\\s]*DAD[\\n\\s]*|BEE|[\\n\\s]*BEE[\\n\\s]*123\\.[\\n\\s]*123\\)\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\\(list[\\n\\s]*\\*read-base\\*[\\n\\s]*object\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(10[\\n\\s]*\\(DAD[\\n\\s]*DAD[\\n\\s]*BEE[\\n\\s]*BEE[\\n\\s]*123[\\n\\s]*123\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(11[\\n\\s]*\\(DAD[\\n\\s]*DAD[\\n\\s]*BEE[\\n\\s]*BEE[\\n\\s]*123[\\n\\s]*146\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(12[\\n\\s]*\\(DAD[\\n\\s]*DAD[\\n\\s]*BEE[\\n\\s]*BEE[\\n\\s]*123[\\n\\s]*171\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(13[\\n\\s]*\\(DAD[\\n\\s]*DAD[\\n\\s]*BEE[\\n\\s]*BEE[\\n\\s]*123[\\n\\s]*198\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(14[\\n\\s]*\\(DAD[\\n\\s]*2701[\\n\\s]*BEE[\\n\\s]*BEE[\\n\\s]*123[\\n\\s]*227\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(15[\\n\\s]*\\(DAD[\\n\\s]*3088[\\n\\s]*BEE[\\n\\s]*2699[\\n\\s]*123[\\n\\s]*258\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (let ((*read-default-float-format* 'double-float))\n   (read-from-string \"(1.0 1.0e0 1.0s0 1.0f0 1.0d0 1.0L0)\"))\n*→* (1.0   1.0   1.0   1.0 1.0   1.0)   ;Implementation has float format F.\n*→* (1.0   1.0   1.0s0 1.0 1.0   1.0)   ;Implementation has float formats S and F.\n*→* (1.0d0 1.0d0 1.0   1.0 1.0d0 1.0d0) ;Implementation has float formats F and D.\n*→* (1.0d0 1.0d0 1.0s0 1.0 1.0d0 1.0d0) ;Implementation has float formats S, F, D.\n*→* (1.0d0 1.0d0 1.0   1.0 1.0d0 1.0L0) ;Implementation has float formats F, D, L.\n*→* (1.0d0 1.0d0 1.0s0 1.0 1.0d0 1.0L0) ;Implementation has formats S, F, D, L.\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*read-default-float-format\\*[\\n\\s]*'double-float\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-from-string[\\n\\s]*\"\\(1\\.0[\\n\\s]*1\\.0e0[\\n\\s]*1\\.0s0[\\n\\s]*1\\.0f0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0L0\\)\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Implementation[\\n\\s]*has[\\n\\s]*float[\\n\\s]*format[\\n\\s]*F\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0s0[\\n\\s]*1\\.0[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*;Implementation[\\n\\s]*has[\\n\\s]*float[\\n\\s]*formats[\\n\\s]*S[\\n\\s]*and[\\n\\s]*F\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0d0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0d0\\)[\\n\\s]*;Implementation[\\n\\s]*has[\\n\\s]*float[\\n\\s]*formats[\\n\\s]*F[\\n\\s]*and[\\n\\s]*D\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0d0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0s0[\\n\\s]*1\\.0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0d0\\)[\\n\\s]*;Implementation[\\n\\s]*has[\\n\\s]*float[\\n\\s]*formats[\\n\\s]*S,[\\n\\s]*F,[\\n\\s]*D\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0d0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0[\\n\\s]*[\\n\\s]*[\\n\\s]*1\\.0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0L0\\)[\\n\\s]*;Implementation[\\n\\s]*has[\\n\\s]*float[\\n\\s]*formats[\\n\\s]*F,[\\n\\s]*D,[\\n\\s]*L\\.[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1\\.0d0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0s0[\\n\\s]*1\\.0[\\n\\s]*1\\.0d0[\\n\\s]*1\\.0L0\\)[\\n\\s]*;Implementation[\\n\\s]*has[\\n\\s]*formats[\\n\\s]*S,[\\n\\s]*F,[\\n\\s]*D,[\\n\\s]*L\\."],["\\code\n%  (let ((*read-suppress* t))\n%    (dotimes (i 4)\n%      (format t \"~&input here&#62; \")\n%      (format t \"~&parsed as: ~S~%\" (read))))\n% \\OUT input here&#62; 101\n% \\OUT parsed as: NIL\n% \\OUT input here&#62; (#\\\\a :test)\n% \\OUT parsed as: (NIL NIL)\n% \\OUT input here&#62; '(\"xyz\" #(a b c))\n% \\OUT parsed as: (QUOTE (\"xyz\" #(NIL NIL NIL)))\n% \\OUT input here&#62; (list 1 2 '3)\n% \\OUT parsed as: (NIL NIL NIL (QUOTE NIL))\n% *→* NIL\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*read-suppress\\*[\\n\\s]*t\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*4\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&input[\\n\\s]*here&#62;[\\n\\s]*\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&parsed[\\n\\s]*as:[\\n\\s]*~S~%\"[\\n\\s]*\\(read\\)\\)\\)\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*input[\\n\\s]*here&#62;[\\n\\s]*101[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*parsed[\\n\\s]*as:[\\n\\s]*NIL[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*input[\\n\\s]*here&#62;[\\n\\s]*\\(#\\\\\\\\a[\\n\\s]*:test\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*parsed[\\n\\s]*as:[\\n\\s]*\\(NIL[\\n\\s]*NIL\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*input[\\n\\s]*here&#62;[\\n\\s]*'\\(\"xyz\"[\\n\\s]*#\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*parsed[\\n\\s]*as:[\\n\\s]*\\(QUOTE[\\n\\s]*\\(\"xyz\"[\\n\\s]*#\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)\\)\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*input[\\n\\s]*here&#62;[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*'3\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*parsed[\\n\\s]*as:[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*\\(QUOTE[\\n\\s]*NIL\\)\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*%"],["\\code\n (let ((*read-suppress* t))\n   (mapcar #'read-from-string\n           '(\"#(foo bar baz)\" \"#P(:type :lisp)\" \"#c1.2\"\n             \"#.(PRINT 'FOO)\" \"#3AHELLO\" \"#S(INTEGER)\"\n             \"#*ABC\" \"#\\\\GARBAGE\" \"#RALPHA\" \"#3R444\")))\n*→* (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)\n\\endcode","\\(let[\\n\\s]*\\(\\(\\*read-suppress\\*[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'read-from-string[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(\"#\\(foo[\\n\\s]*bar[\\n\\s]*baz\\)\"[\\n\\s]*\"#P\\(:type[\\n\\s]*:lisp\\)\"[\\n\\s]*\"#c1\\.2\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"#\\.\\(PRINT[\\n\\s]*'FOO\\)\"[\\n\\s]*\"#3AHELLO\"[\\n\\s]*\"#S\\(INTEGER\\)\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"#\\*ABC\"[\\n\\s]*\"#\\\\\\\\GARBAGE\"[\\n\\s]*\"#RALPHA\"[\\n\\s]*\"#3R444\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)"],["\\code\n (readtablep *readtable*) *→ true*\n (setq zvar 123) *→* 123\n (set-syntax-from-char #\\\\z #\\\\' (setq table2 (copy-readtable))) *→* T\n zvar *→* 123\n (setq *readtable* table2) *→* #&#60;READTABLE&#62;\n zvar *→* VAR\n (setq *readtable* (copy-readtable nil)) *→* #&#60;READTABLE&#62;\n zvar *→* 123\n\\endcode","\\(readtablep[\\n\\s]*\\*readtable\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*zvar[\\n\\s]*123\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*123[\\n\\s]*[\\n\\s]*\\(set-syntax-from-char[\\n\\s]*#\\\\\\\\z[\\n\\s]*#\\\\\\\\'[\\n\\s]*\\(setq[\\n\\s]*table2[\\n\\s]*\\(copy-readtable\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*123[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*readtable\\*[\\n\\s]*table2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;READTABLE&#62;[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*VAR[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*readtable\\*[\\n\\s]*\\(copy-readtable[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;READTABLE&#62;[\\n\\s]*[\\n\\s]*zvar[\\n\\s]*\\*\\→\\*[\\n\\s]*123"],["\\code\n (setq str \"a string\") *→* \"a string\"\n (equalp str (copy-seq str)) *→ true*\n (eql str (copy-seq str)) *→ false*\n\\endcode","\\(setq[\\n\\s]*str[\\n\\s]*\"a[\\n\\s]*string\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"a[\\n\\s]*string\"[\\n\\s]*[\\n\\s]*\\(equalp[\\n\\s]*str[\\n\\s]*\\(copy-seq[\\n\\s]*str\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(eql[\\n\\s]*str[\\n\\s]*\\(copy-seq[\\n\\s]*str\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (copy-seq x) \\EQ (subseq x 0)\n\\endcode","\\(copy-seq[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(subseq[\\n\\s]*x[\\n\\s]*0\\)"],["\\code\n (setq str (copy-seq \"0123456789\")) *→* \"0123456789\"\n (elt str 6) *→* #\\\\6\n (setf (elt str 0) #\\\\#) *→* #\\\\#\n str *→* \"#123456789\"\n\\endcode","\\(setq[\\n\\s]*str[\\n\\s]*\\(copy-seq[\\n\\s]*\"0123456789\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0123456789\"[\\n\\s]*[\\n\\s]*\\(elt[\\n\\s]*str[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\6[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(elt[\\n\\s]*str[\\n\\s]*0\\)[\\n\\s]*#\\\\\\\\#\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\#[\\n\\s]*[\\n\\s]*str[\\n\\s]*\\*\\→\\*[\\n\\s]*\"#123456789\""],["\\code\n (fill (list 0 1 2 3 4 5) '(444)) *→* ((444) (444) (444) (444) (444) (444))\n (fill (copy-seq \"01234\") #\\\\e :start 3) *→* \"012ee\"\n (setq x (vector 'a 'b 'c 'd 'e)) *→* #(A B C D E)\n (fill x 'z :start 1 :end 3) *→* #(A Z Z D E)\n x *→* #(A Z Z D E)\n (fill x 'p) *→* #(P P P P P)\n x *→* #(P P P P P)\n\\endcode","\\(fill[\\n\\s]*\\(list[\\n\\s]*0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*'\\(444\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(444\\)[\\n\\s]*\\(444\\)[\\n\\s]*\\(444\\)[\\n\\s]*\\(444\\)[\\n\\s]*\\(444\\)[\\n\\s]*\\(444\\)\\)[\\n\\s]*[\\n\\s]*\\(fill[\\n\\s]*\\(copy-seq[\\n\\s]*\"01234\"\\)[\\n\\s]*#\\\\\\\\e[\\n\\s]*:start[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"012ee\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(vector[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c[\\n\\s]*'d[\\n\\s]*'e\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*[\\n\\s]*\\(fill[\\n\\s]*x[\\n\\s]*'z[\\n\\s]*:start[\\n\\s]*1[\\n\\s]*:end[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(A[\\n\\s]*Z[\\n\\s]*Z[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(A[\\n\\s]*Z[\\n\\s]*Z[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*[\\n\\s]*\\(fill[\\n\\s]*x[\\n\\s]*'p\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(P[\\n\\s]*P[\\n\\s]*P[\\n\\s]*P[\\n\\s]*P\\)[\\n\\s]*[\\n\\s]*x[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(P[\\n\\s]*P[\\n\\s]*P[\\n\\s]*P[\\n\\s]*P\\)"],["\\code\n (make-sequence 'list 0) *→* ()\n (make-sequence 'string 26 :initial-element #\\\\.) \n*→* \"..........................\"\n (make-sequence '(vector double-float) 2\n                :initial-element 1d0)\n*→* #(1.0d0 1.0d0)\n\\endcode","\\(make-sequence[\\n\\s]*'list[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(make-sequence[\\n\\s]*'string[\\n\\s]*26[\\n\\s]*:initial-element[\\n\\s]*#\\\\\\\\\\.\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\"[\\n\\s]*[\\n\\s]*\\(make-sequence[\\n\\s]*'\\(vector[\\n\\s]*double-float\\)[\\n\\s]*2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-element[\\n\\s]*1d0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(1\\.0d0[\\n\\s]*1\\.0d0\\)"],["\\code\n (make-sequence '(vector * 2) 3) should signal an error\n (make-sequence '(vector * 4) 3) should signal an error\n\\endcode","\\(make-sequence[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*2\\)[\\n\\s]*3\\)[\\n\\s]*should[\\n\\s]*signal[\\n\\s]*an[\\n\\s]*error[\\n\\s]*[\\n\\s]*\\(make-sequence[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*4\\)[\\n\\s]*3\\)[\\n\\s]*should[\\n\\s]*signal[\\n\\s]*an[\\n\\s]*error"],["\\code\n (make-sequence 'string 5) \\EQ (make-string 5)               \n\\endcode","\\(make-sequence[\\n\\s]*'string[\\n\\s]*5\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(make-string[\\n\\s]*5\\)"],["\\code\n (setq str \"012345\") *→* \"012345\"\n (subseq str 2) *→* \"2345\"\n (subseq str 3 5) *→* \"34\"\n (setf (subseq str 4) \"abc\") *→* \"abc\"\n str *→* \"0123ab\"\n (setf (subseq str 0 2) \"A\") *→* \"A\"\n str *→* \"A123ab\"\n\\endcode","\\(setq[\\n\\s]*str[\\n\\s]*\"012345\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"012345\"[\\n\\s]*[\\n\\s]*\\(subseq[\\n\\s]*str[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"2345\"[\\n\\s]*[\\n\\s]*\\(subseq[\\n\\s]*str[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"34\"[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(subseq[\\n\\s]*str[\\n\\s]*4\\)[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abc\"[\\n\\s]*[\\n\\s]*str[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0123ab\"[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(subseq[\\n\\s]*str[\\n\\s]*0[\\n\\s]*2\\)[\\n\\s]*\"A\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"A\"[\\n\\s]*[\\n\\s]*str[\\n\\s]*\\*\\→\\*[\\n\\s]*\"A123ab\""],["\\code\n (map 'string #'(lambda (x y)\n                  (char \"01234567890ABCDEF\" (mod (+ x y) 16)))\n       '(1 2 3 4)\n       '(10 9 8 7)) *→* \"AAAA\"\n (setq seq '(\"lower\" \"UPPER\" \"\" \"123\")) *→* (\"lower\" \"UPPER\" \"\" \"123\")\n (map nil #'nstring-upcase seq) *→* NIL\n seq *→* (\"LOWER\" \"UPPER\" \"\" \"123\")\n (map 'list #'- '(1 2 3 4)) *→* (-1 -2 -3 -4)\n (map 'string\n      #'(lambda (x) (if (oddp x) #\\\\1 #\\\\0))\n      '(1 2 3 4)) *→* \"1010\"\n\\endcode","\\(map[\\n\\s]*'string[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(char[\\n\\s]*\"01234567890ABCDEF\"[\\n\\s]*\\(mod[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*16\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(10[\\n\\s]*9[\\n\\s]*8[\\n\\s]*7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"AAAA\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*seq[\\n\\s]*'\\(\"lower\"[\\n\\s]*\"UPPER\"[\\n\\s]*\"\"[\\n\\s]*\"123\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"lower\"[\\n\\s]*\"UPPER\"[\\n\\s]*\"\"[\\n\\s]*\"123\"\\)[\\n\\s]*[\\n\\s]*\\(map[\\n\\s]*nil[\\n\\s]*#'nstring-upcase[\\n\\s]*seq\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*seq[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\"LOWER\"[\\n\\s]*\"UPPER\"[\\n\\s]*\"\"[\\n\\s]*\"123\"\\)[\\n\\s]*[\\n\\s]*\\(map[\\n\\s]*'list[\\n\\s]*#'-[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(-1[\\n\\s]*-2[\\n\\s]*-3[\\n\\s]*-4\\)[\\n\\s]*[\\n\\s]*\\(map[\\n\\s]*'string[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(if[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*#\\\\\\\\1[\\n\\s]*#\\\\\\\\0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"1010\""],["\\code\n (map '(vector * 4) #'cons \"abc\" \"de\") should signal an error\n\\endcode","\\(map[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*4\\)[\\n\\s]*#'cons[\\n\\s]*\"abc\"[\\n\\s]*\"de\"\\)[\\n\\s]*should[\\n\\s]*signal[\\n\\s]*an[\\n\\s]*error"],["\\code\n (setq a (list 1 2 3 4) b (list 10 10 10 10)) *→* (10 10 10 10)\n (map-into a #'+ a b) *→* (11 12 13 14)\n a *→* (11 12 13 14)\n b *→* (10 10 10 10)\n (setq k '(one two three)) *→* (ONE TWO THREE)\n (map-into a #'cons k a) *→* ((ONE . 11) (TWO . 12) (THREE . 13) 14)\n (map-into a #'gensym) *→* (#:G9090 #:G9091 #:G9092 #:G9093)\n a *→* (#:G9090 #:G9091 #:G9092 #:G9093)\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*b[\\n\\s]*\\(list[\\n\\s]*10[\\n\\s]*10[\\n\\s]*10[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(10[\\n\\s]*10[\\n\\s]*10[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*\\(map-into[\\n\\s]*a[\\n\\s]*#'\\+[\\n\\s]*a[\\n\\s]*b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(11[\\n\\s]*12[\\n\\s]*13[\\n\\s]*14\\)[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(11[\\n\\s]*12[\\n\\s]*13[\\n\\s]*14\\)[\\n\\s]*[\\n\\s]*b[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(10[\\n\\s]*10[\\n\\s]*10[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*k[\\n\\s]*'\\(one[\\n\\s]*two[\\n\\s]*three\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ONE[\\n\\s]*TWO[\\n\\s]*THREE\\)[\\n\\s]*[\\n\\s]*\\(map-into[\\n\\s]*a[\\n\\s]*#'cons[\\n\\s]*k[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(ONE[\\n\\s]*\\.[\\n\\s]*11\\)[\\n\\s]*\\(TWO[\\n\\s]*\\.[\\n\\s]*12\\)[\\n\\s]*\\(THREE[\\n\\s]*\\.[\\n\\s]*13\\)[\\n\\s]*14\\)[\\n\\s]*[\\n\\s]*\\(map-into[\\n\\s]*a[\\n\\s]*#'gensym\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#:G9090[\\n\\s]*#:G9091[\\n\\s]*#:G9092[\\n\\s]*#:G9093\\)[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#:G9090[\\n\\s]*#:G9091[\\n\\s]*#:G9092[\\n\\s]*#:G9093\\)"],["\\code\n (defun map-into (result-sequence function &rest sequences)\n   (loop for index below (apply #'min \n                                (length result-sequence)\n                                (mapcar #'length sequences))\n         do (setf (elt result-sequence index)\n                  (apply function\n                         (mapcar #'(lambda (seq) (elt seq index))\n                                 sequences))))\n   result-sequence)\n\\endcode","\\(defun[\\n\\s]*map-into[\\n\\s]*\\(result-sequence[\\n\\s]*function[\\n\\s]*&rest[\\n\\s]*sequences\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(loop[\\n\\s]*for[\\n\\s]*index[\\n\\s]*below[\\n\\s]*\\(apply[\\n\\s]*#'min[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*result-sequence\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'length[\\n\\s]*sequences\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*do[\\n\\s]*\\(setf[\\n\\s]*\\(elt[\\n\\s]*result-sequence[\\n\\s]*index\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*function[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(seq\\)[\\n\\s]*\\(elt[\\n\\s]*seq[\\n\\s]*index\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*sequences\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*result-sequence\\)"],["\\code\n (reduce #'* '(1 2 3 4 5)) *→* 120\n (reduce #'append '((1) (2)) :initial-value '(i n i t)) *→* (I N I T 1 2)\n (reduce #'append '((1) (2)) :from-end t                  \n                             :initial-value '(i n i t)) *→* (1 2 I N I T) \n (reduce #'- '(1 2 3 4)) \\EQ (- (- (- 1 2) 3) 4) *→* -8\n (reduce #'- '(1 2 3 4) :from-end t)    ;Alternating sum.\n\\EQ (- 1 (- 2 (- 3 4))) *→* -2\n (reduce #'+ '()) *→* 0\n (reduce #'+ '(3)) *→* 3\n (reduce #'+ '(foo)) *→* FOO\n (reduce #'list '(1 2 3 4)) *→* (((1 2) 3) 4)\n (reduce #'list '(1 2 3 4) :from-end t) *→* (1 (2 (3 4)))\n (reduce #'list '(1 2 3 4) :initial-value 'foo) *→* ((((foo 1) 2) 3) 4)\n (reduce #'list '(1 2 3 4)\n        :from-end t :initial-value 'foo) *→* (1 (2 (3 (4 foo))))\n\\endcode","\\(reduce[\\n\\s]*#'\\*[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*120[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'append[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)\\)[\\n\\s]*:initial-value[\\n\\s]*'\\(i[\\n\\s]*n[\\n\\s]*i[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(I[\\n\\s]*N[\\n\\s]*I[\\n\\s]*T[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'append[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)\\)[\\n\\s]*:from-end[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-value[\\n\\s]*'\\(i[\\n\\s]*n[\\n\\s]*i[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*I[\\n\\s]*N[\\n\\s]*I[\\n\\s]*T\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'-[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(-[\\n\\s]*\\(-[\\n\\s]*\\(-[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*3\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-8[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'-[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;Alternating[\\n\\s]*sum\\.[\\n\\s]*\\\\EQ[\\n\\s]*\\(-[\\n\\s]*1[\\n\\s]*\\(-[\\n\\s]*2[\\n\\s]*\\(-[\\n\\s]*3[\\n\\s]*4\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*-2[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'\\+[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'\\+[\\n\\s]*'\\(3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'\\+[\\n\\s]*'\\(foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\\(1[\\n\\s]*2\\)[\\n\\s]*3\\)[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*4\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*:initial-value[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(\\(\\(foo[\\n\\s]*1\\)[\\n\\s]*2\\)[\\n\\s]*3\\)[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(reduce[\\n\\s]*#'list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:from-end[\\n\\s]*t[\\n\\s]*:initial-value[\\n\\s]*'foo\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\(2[\\n\\s]*\\(3[\\n\\s]*\\(4[\\n\\s]*foo\\)\\)\\)\\)"],["\\code\n (count #\\\\a \"how many A's are there in here?\") *→* 2\n (count-if-not #'oddp '((1) (2) (3) (4)) :key #'car) *→* 2\n (count-if #'upper-case-p \"The Crying of Lot 49\" :start 4) *→* 2 \n\\endcode","\\(count[\\n\\s]*#\\\\\\\\a[\\n\\s]*\"how[\\n\\s]*many[\\n\\s]*A's[\\n\\s]*are[\\n\\s]*there[\\n\\s]*in[\\n\\s]*here\\?\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(count-if-not[\\n\\s]*#'oddp[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(3\\)[\\n\\s]*\\(4\\)\\)[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(count-if[\\n\\s]*#'upper-case-p[\\n\\s]*\"The[\\n\\s]*Crying[\\n\\s]*of[\\n\\s]*Lot[\\n\\s]*49\"[\\n\\s]*:start[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (length \"abc\") *→* 3\n (setq str (make-array '(3) :element-type 'character \n                            :initial-contents \"abc\"\n                            :fill-pointer t)) *→* \"abc\"\n (length str) *→* 3\n (setf (fill-pointer str) 2) *→* 2\n (length str) *→* 2\n\\endcode","\\(length[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*str[\\n\\s]*\\(make-array[\\n\\s]*'\\(3\\)[\\n\\s]*:element-type[\\n\\s]*'character[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*\"abc\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abc\"[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*str\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(fill-pointer[\\n\\s]*str\\)[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*str\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (setq str \"abc\") *→* \"abc\"\n (reverse str) *→* \"cba\"\n str *→* \"abc\"\n (setq str (copy-seq str)) *→* \"abc\"\n (nreverse str) *→* \"cba\"\n str *→* \\term&#123;implementation-dependent&#125;\n (setq l (list 1 2 3)) *→* (1 2 3)\n (nreverse l) *→* (3 2 1)\n l *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(setq[\\n\\s]*str[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abc\"[\\n\\s]*[\\n\\s]*\\(reverse[\\n\\s]*str\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"cba\"[\\n\\s]*[\\n\\s]*str[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abc\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*str[\\n\\s]*\\(copy-seq[\\n\\s]*str\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abc\"[\\n\\s]*[\\n\\s]*\\(nreverse[\\n\\s]*str\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"cba\"[\\n\\s]*[\\n\\s]*str[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*l[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(nreverse[\\n\\s]*l\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(3[\\n\\s]*2[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*l[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (setq tester (copy-seq \"lkjashd\")) *→* \"lkjashd\"\n (sort tester #'char-lessp) *→* \"adhjkls\"\n (setq tester (list '(1 2 3) '(4 5 6) '(7 8 9))) *→* ((1 2 3) (4 5 6) (7 8 9))\n (sort tester #'&#62; :key #'car)  *→* ((7 8 9) (4 5 6) (1 2 3)) \n (setq tester (list 1 2 3 4 5 6 7 8 9 0)) *→* (1 2 3 4 5 6 7 8 9 0)\n (stable-sort tester #'(lambda (x y) (and (oddp x) (evenp y))))\n*→* (1 3 5 7 9 2 4 6 8 0)\n (sort (setq committee-data\n             (vector (list (list \"JonL\" \"White\") \"Iteration\")\n                     (list (list \"Dick\" \"Waters\") \"Iteration\")\n                     (list (list \"Dick\" \"Gabriel\") \"Objects\")\n                     (list (list \"Kent\" \"Pitman\") \"Conditions\")\n                     (list (list \"Gregor\" \"Kiczales\") \"Objects\")\n                     (list (list \"David\" \"Moon\") \"Objects\")\n                     (list (list \"Kathy\" \"Chapman\") \"Editorial\")\n                     (list (list \"Larry\" \"Masinter\") \"Cleanup\")\n                     (list (list \"Sandra\" \"Loosemore\") \"Compiler\")))\n       #'string-lessp :key #'cadar)\n*→* #(((\"Kathy\" \"Chapman\") \"Editorial\")\n     ((\"Dick\" \"Gabriel\") \"Objects\")\n     ((\"Gregor\" \"Kiczales\") \"Objects\")\n     ((\"Sandra\" \"Loosemore\") \"Compiler\")\n     ((\"Larry\" \"Masinter\") \"Cleanup\")\n     ((\"David\" \"Moon\") \"Objects\")\n     ((\"Kent\" \"Pitman\") \"Conditions\")\n     ((\"Dick\" \"Waters\") \"Iteration\")\n     ((\"JonL\" \"White\") \"Iteration\"))\n ;; Note that individual alphabetical order within `committees'\n ;; is preserved.\n (setq committee-data \n       (stable-sort committee-data #'string-lessp :key #'cadr))\n*→* #(((\"Larry\" \"Masinter\") \"Cleanup\")\n     ((\"Sandra\" \"Loosemore\") \"Compiler\")\n     ((\"Kent\" \"Pitman\") \"Conditions\")\n     ((\"Kathy\" \"Chapman\") \"Editorial\")\n     ((\"Dick\" \"Waters\") \"Iteration\")\n     ((\"JonL\" \"White\") \"Iteration\")\n     ((\"Dick\" \"Gabriel\") \"Objects\")\n     ((\"Gregor\" \"Kiczales\") \"Objects\")\n     ((\"David\" \"Moon\") \"Objects\"))\n\\endcode","\\(setq[\\n\\s]*tester[\\n\\s]*\\(copy-seq[\\n\\s]*\"lkjashd\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"lkjashd\"[\\n\\s]*[\\n\\s]*\\(sort[\\n\\s]*tester[\\n\\s]*#'char-lessp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"adhjkls\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*'\\(7[\\n\\s]*8[\\n\\s]*9\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\(7[\\n\\s]*8[\\n\\s]*9\\)\\)[\\n\\s]*[\\n\\s]*\\(sort[\\n\\s]*tester[\\n\\s]*#'&#62;[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(7[\\n\\s]*8[\\n\\s]*9\\)[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(stable-sort[\\n\\s]*tester[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x[\\n\\s]*y\\)[\\n\\s]*\\(and[\\n\\s]*\\(oddp[\\n\\s]*x\\)[\\n\\s]*\\(evenp[\\n\\s]*y\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*7[\\n\\s]*9[\\n\\s]*2[\\n\\s]*4[\\n\\s]*6[\\n\\s]*8[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(sort[\\n\\s]*\\(setq[\\n\\s]*committee-data[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(vector[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"JonL\"[\\n\\s]*\"White\"\\)[\\n\\s]*\"Iteration\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Dick\"[\\n\\s]*\"Waters\"\\)[\\n\\s]*\"Iteration\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Dick\"[\\n\\s]*\"Gabriel\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Kent\"[\\n\\s]*\"Pitman\"\\)[\\n\\s]*\"Conditions\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Gregor\"[\\n\\s]*\"Kiczales\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"David\"[\\n\\s]*\"Moon\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Kathy\"[\\n\\s]*\"Chapman\"\\)[\\n\\s]*\"Editorial\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Larry\"[\\n\\s]*\"Masinter\"\\)[\\n\\s]*\"Cleanup\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(list[\\n\\s]*\"Sandra\"[\\n\\s]*\"Loosemore\"\\)[\\n\\s]*\"Compiler\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*#'string-lessp[\\n\\s]*:key[\\n\\s]*#'cadar\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(\\(\\(\"Kathy\"[\\n\\s]*\"Chapman\"\\)[\\n\\s]*\"Editorial\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Dick\"[\\n\\s]*\"Gabriel\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Gregor\"[\\n\\s]*\"Kiczales\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Sandra\"[\\n\\s]*\"Loosemore\"\\)[\\n\\s]*\"Compiler\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Larry\"[\\n\\s]*\"Masinter\"\\)[\\n\\s]*\"Cleanup\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"David\"[\\n\\s]*\"Moon\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Kent\"[\\n\\s]*\"Pitman\"\\)[\\n\\s]*\"Conditions\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Dick\"[\\n\\s]*\"Waters\"\\)[\\n\\s]*\"Iteration\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"JonL\"[\\n\\s]*\"White\"\\)[\\n\\s]*\"Iteration\"\\)\\)[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*individual[\\n\\s]*alphabetical[\\n\\s]*order[\\n\\s]*within[\\n\\s]*`committees'[\\n\\s]*[\\n\\s]*;;[\\n\\s]*is[\\n\\s]*preserved\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*committee-data[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(stable-sort[\\n\\s]*committee-data[\\n\\s]*#'string-lessp[\\n\\s]*:key[\\n\\s]*#'cadr\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(\\(\\(\"Larry\"[\\n\\s]*\"Masinter\"\\)[\\n\\s]*\"Cleanup\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Sandra\"[\\n\\s]*\"Loosemore\"\\)[\\n\\s]*\"Compiler\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Kent\"[\\n\\s]*\"Pitman\"\\)[\\n\\s]*\"Conditions\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Kathy\"[\\n\\s]*\"Chapman\"\\)[\\n\\s]*\"Editorial\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Dick\"[\\n\\s]*\"Waters\"\\)[\\n\\s]*\"Iteration\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"JonL\"[\\n\\s]*\"White\"\\)[\\n\\s]*\"Iteration\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Dick\"[\\n\\s]*\"Gabriel\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"Gregor\"[\\n\\s]*\"Kiczales\"\\)[\\n\\s]*\"Objects\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(\"David\"[\\n\\s]*\"Moon\"\\)[\\n\\s]*\"Objects\"\\)\\)"],["\\code\n (find #\\\\d \"here are some letters that can be looked at\" :test #'char&#62;)\n*→* #\\\\Space \n (find-if #'oddp '(1 2 3 4 5) :end 3 :from-end t) *→* 3\n (find-if-not #'complexp                                    \n             '#(3.5 2 #C(1.0 0.0) #C(0.0 1.0))\n             :start 2) *→* NIL \n\\endcode","\\(find[\\n\\s]*#\\\\\\\\d[\\n\\s]*\"here[\\n\\s]*are[\\n\\s]*some[\\n\\s]*letters[\\n\\s]*that[\\n\\s]*can[\\n\\s]*be[\\n\\s]*looked[\\n\\s]*at\"[\\n\\s]*:test[\\n\\s]*#'char&#62;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\Space[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(find-if[\\n\\s]*#'oddp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:end[\\n\\s]*3[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(find-if-not[\\n\\s]*#'complexp[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*'#\\(3\\.5[\\n\\s]*2[\\n\\s]*#C\\(1\\.0[\\n\\s]*0\\.0\\)[\\n\\s]*#C\\(0\\.0[\\n\\s]*1\\.0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:start[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n% (find item sequence ...)\n%  \\EQ (elt sequence (position item sequence ...))\n% \\endcode","%[\\n\\s]*\\(find[\\n\\s]*item[\\n\\s]*sequence[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\\\EQ[\\n\\s]*\\(elt[\\n\\s]*sequence[\\n\\s]*\\(position[\\n\\s]*item[\\n\\s]*sequence[\\n\\s]*\\.\\.\\.\\)\\)[\\n\\s]*%"],["\\code\n (position #\\\\a \"baobab\" :from-end t) *→* 4\n (position-if #'oddp '((1) (2) (3) (4)) :start 1 :key #'car) *→* 2\n (position 595 '()) *→* NIL\n (position-if-not #'integerp '(1 2 3 4 5.0)) *→* 4 \n\\endcode","\\(position[\\n\\s]*#\\\\\\\\a[\\n\\s]*\"baobab\"[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(position-if[\\n\\s]*#'oddp[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(3\\)[\\n\\s]*\\(4\\)\\)[\\n\\s]*:start[\\n\\s]*1[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(position[\\n\\s]*595[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(position-if-not[\\n\\s]*#'integerp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\.0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4"],["\\code\n (search \"dog\" \"it's a dog's life\") *→* 7\n (search '(0 1) '(2 4 6 1 3 5) :key #'oddp) *→* 2\n\\endcode","\\(search[\\n\\s]*\"dog\"[\\n\\s]*\"it's[\\n\\s]*a[\\n\\s]*dog's[\\n\\s]*life\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7[\\n\\s]*[\\n\\s]*\\(search[\\n\\s]*'\\(0[\\n\\s]*1\\)[\\n\\s]*'\\(2[\\n\\s]*4[\\n\\s]*6[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*:key[\\n\\s]*#'oddp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2"],["\\code\n (mismatch \"abcd\" \"ABCDE\" :test #'char-equal) *→* 4\n (mismatch '(3 2 1 1 2 3) '(1 2 3) :from-end t) *→* 3\n (mismatch '(1 2 3) '(2 3 4) :test-not #'eq :key #'oddp) *→* NIL\n (mismatch '(1 2 3 4 5 6) '(3 4 5 6 7) :start1 2 :end2 4) *→* NIL \n\\endcode","\\(mismatch[\\n\\s]*\"abcd\"[\\n\\s]*\"ABCDE\"[\\n\\s]*:test[\\n\\s]*#'char-equal\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(mismatch[\\n\\s]*'\\(3[\\n\\s]*2[\\n\\s]*1[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(mismatch[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*'\\(2[\\n\\s]*3[\\n\\s]*4\\)[\\n\\s]*:test-not[\\n\\s]*#'eq[\\n\\s]*:key[\\n\\s]*#'oddp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(mismatch[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*'\\(3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7\\)[\\n\\s]*:start1[\\n\\s]*2[\\n\\s]*:end2[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (min (- \\i&#123;end1&#125; \\i&#123;start1&#125;) (- \\i&#123;end2&#125; \\i&#123;start2&#125;))\n\\endcode","\\(min[\\n\\s]*\\(-[\\n\\s]*\\\\i&#123;end1&#125;[\\n\\s]*\\\\i&#123;start1&#125;\\)[\\n\\s]*\\(-[\\n\\s]*\\\\i&#123;end2&#125;[\\n\\s]*\\\\i&#123;start2&#125;\\)\\)"],["\\code\n (replace \"abcdefghij\" \"0123456789\" :start1 4 :end1 7 :start2 4) \n*→* \"abcd456hij\"\n (setq lst \"012345678\") *→* \"012345678\"\n (replace lst lst :start1 2 :start2 0) *→* \"010123456\"\n lst *→* \"010123456\"\n\\endcode","\\(replace[\\n\\s]*\"abcdefghij\"[\\n\\s]*\"0123456789\"[\\n\\s]*:start1[\\n\\s]*4[\\n\\s]*:end1[\\n\\s]*7[\\n\\s]*:start2[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abcd456hij\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst[\\n\\s]*\"012345678\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"012345678\"[\\n\\s]*[\\n\\s]*\\(replace[\\n\\s]*lst[\\n\\s]*lst[\\n\\s]*:start1[\\n\\s]*2[\\n\\s]*:start2[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"010123456\"[\\n\\s]*[\\n\\s]*lst[\\n\\s]*\\*\\→\\*[\\n\\s]*\"010123456\""],["\\code\n (substitute #\\\\. #\\\\SPACE \"0 2 4 6\") *→* \"0.2.4.6\"\n (substitute 9 4 '(1 2 4 1 3 4 5)) *→* (1 2 9 1 3 9 5)\n (substitute 9 4 '(1 2 4 1 3 4 5) :count 1) *→* (1 2 9 1 3 4 5)\n (substitute 9 4 '(1 2 4 1 3 4 5) :count 1 :from-end t)\n*→* (1 2 4 1 3 9 5)\n (substitute 9 3 '(1 2 4 1 3 4 5) :test #'&#62;) *→* (9 9 4 9 3 4 5)\n\n (substitute-if 0 #'evenp '((1) (2) (3) (4)) :start 2 :key #'car)\n*→* ((1) (2) (3) 0)\n (substitute-if 9 #'oddp '(1 2 4 1 3 4 5)) *→* (9 2 4 9 9 4 9)\n (substitute-if 9 #'evenp '(1 2 4 1 3 4 5) :count 1 :from-end t)\n*→* (1 2 4 1 3 9 5)\n\n (setq some-things (list 'a 'car 'b 'cdr 'c)) *→* (A CAR B CDR C)\n (nsubstitute-if \"function was here\" #'fboundp some-things\n                 :count 1 :from-end t) *→* (A CAR B \"function was here\" C)\n some-things *→* (A CAR B \"function was here\" C)\n (setq alpha-tester (copy-seq \"ab \")) *→* \"ab \"\n (nsubstitute-if-not #\\\\z #'alpha-char-p alpha-tester) *→* \"abz\"\n alpha-tester *→* \"abz\"\n\\endcode","\\(substitute[\\n\\s]*#\\\\\\\\\\.[\\n\\s]*#\\\\\\\\SPACE[\\n\\s]*\"0[\\n\\s]*2[\\n\\s]*4[\\n\\s]*6\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0\\.2\\.4\\.6\"[\\n\\s]*[\\n\\s]*\\(substitute[\\n\\s]*9[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*9[\\n\\s]*1[\\n\\s]*3[\\n\\s]*9[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(substitute[\\n\\s]*9[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:count[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*9[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(substitute[\\n\\s]*9[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*9[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(substitute[\\n\\s]*9[\\n\\s]*3[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:test[\\n\\s]*#'&#62;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(9[\\n\\s]*9[\\n\\s]*4[\\n\\s]*9[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(substitute-if[\\n\\s]*0[\\n\\s]*#'evenp[\\n\\s]*'\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(3\\)[\\n\\s]*\\(4\\)\\)[\\n\\s]*:start[\\n\\s]*2[\\n\\s]*:key[\\n\\s]*#'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(1\\)[\\n\\s]*\\(2\\)[\\n\\s]*\\(3\\)[\\n\\s]*0\\)[\\n\\s]*[\\n\\s]*\\(substitute-if[\\n\\s]*9[\\n\\s]*#'oddp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(9[\\n\\s]*2[\\n\\s]*4[\\n\\s]*9[\\n\\s]*9[\\n\\s]*4[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*\\(substitute-if[\\n\\s]*9[\\n\\s]*#'evenp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*9[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*some-things[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'car[\\n\\s]*'b[\\n\\s]*'cdr[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*CAR[\\n\\s]*B[\\n\\s]*CDR[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(nsubstitute-if[\\n\\s]*\"function[\\n\\s]*was[\\n\\s]*here\"[\\n\\s]*#'fboundp[\\n\\s]*some-things[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*CAR[\\n\\s]*B[\\n\\s]*\"function[\\n\\s]*was[\\n\\s]*here\"[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*some-things[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*CAR[\\n\\s]*B[\\n\\s]*\"function[\\n\\s]*was[\\n\\s]*here\"[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*alpha-tester[\\n\\s]*\\(copy-seq[\\n\\s]*\"ab[\\n\\s]*\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"ab[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(nsubstitute-if-not[\\n\\s]*#\\\\\\\\z[\\n\\s]*#'alpha-char-p[\\n\\s]*alpha-tester\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abz\"[\\n\\s]*[\\n\\s]*alpha-tester[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abz\""],["\\code\n (defun test-it (fn)\n   (let ((x (cons 'b nil)))\n     (rplacd x x)\n     (funcall fn 'a 'b x :count 1)))\n (test-it #'substitute) *→* (A . #1=(B . #1#))\n (test-it #'nsubstitute) *→* (A . #1#)\n\\endcode","\\(defun[\\n\\s]*test-it[\\n\\s]*\\(fn\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*\\(cons[\\n\\s]*'b[\\n\\s]*nil\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(rplacd[\\n\\s]*x[\\n\\s]*x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*fn[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*x[\\n\\s]*:count[\\n\\s]*1\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(test-it[\\n\\s]*#'substitute\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\.[\\n\\s]*#1=\\(B[\\n\\s]*\\.[\\n\\s]*#1#\\)\\)[\\n\\s]*[\\n\\s]*\\(test-it[\\n\\s]*#'nsubstitute\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*\\.[\\n\\s]*#1#\\)"],["\\code\n(concatenate 'string \"all\" \" \" \"together\" \" \" \"now\") *→* \"all together now\"\n(concatenate 'list \"ABC\" '(d e f) #(1 2 3) #*1011)\n*→* (#\\\\A #\\\\B #\\\\C D E F 1 2 3 1 0 1 1)\n(concatenate 'list) *→* NIL\n\\endcode","\\(concatenate[\\n\\s]*'string[\\n\\s]*\"all\"[\\n\\s]*\"[\\n\\s]*\"[\\n\\s]*\"together\"[\\n\\s]*\"[\\n\\s]*\"[\\n\\s]*\"now\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"all[\\n\\s]*together[\\n\\s]*now\"[\\n\\s]*\\(concatenate[\\n\\s]*'list[\\n\\s]*\"ABC\"[\\n\\s]*'\\(d[\\n\\s]*e[\\n\\s]*f\\)[\\n\\s]*#\\(1[\\n\\s]*2[\\n\\s]*3\\)[\\n\\s]*#\\*1011\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\A[\\n\\s]*#\\\\\\\\B[\\n\\s]*#\\\\\\\\C[\\n\\s]*D[\\n\\s]*E[\\n\\s]*F[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*1[\\n\\s]*0[\\n\\s]*1[\\n\\s]*1\\)[\\n\\s]*\\(concatenate[\\n\\s]*'list\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n  (concatenate '(vector * 2) \"a\" \"bc\") should signal an error\n\\endcode","\\(concatenate[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*2\\)[\\n\\s]*\"a\"[\\n\\s]*\"bc\"\\)[\\n\\s]*should[\\n\\s]*signal[\\n\\s]*an[\\n\\s]*error"],["\\code\n (setq test1 (list 1 3 4 6 7))\n (setq test2 (list 2 5 8))\n (merge 'list test1 test2 #'&#60;) *→* (1 2 3 4 5 6 7 8)\n (setq test1 (copy-seq \"BOY\"))\n (setq test2 (copy-seq :nosy\"))\n (merge 'string test1 test2 #'char-lessp) *→* \"BnOosYy\"\n (setq test1 (vector ((red . 1) (blue . 4))))\n (setq test2 (vector ((yellow . 2) (green . 7))))\n (merge 'vector test1 test2 #'&#60; :key #'cdr) \n*→* #((RED . 1) (YELLOW . 2) (BLUE . 4) (GREEN . 7)) \n\\endcode","\\(setq[\\n\\s]*test1[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*6[\\n\\s]*7\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*test2[\\n\\s]*\\(list[\\n\\s]*2[\\n\\s]*5[\\n\\s]*8\\)\\)[\\n\\s]*[\\n\\s]*\\(merge[\\n\\s]*'list[\\n\\s]*test1[\\n\\s]*test2[\\n\\s]*#'&#60;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*test1[\\n\\s]*\\(copy-seq[\\n\\s]*\"BOY\"\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*test2[\\n\\s]*\\(copy-seq[\\n\\s]*:nosy\"\\)\\)[\\n\\s]*[\\n\\s]*\\(merge[\\n\\s]*'string[\\n\\s]*test1[\\n\\s]*test2[\\n\\s]*#'char-lessp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"BnOosYy\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*test1[\\n\\s]*\\(vector[\\n\\s]*\\(\\(red[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(blue[\\n\\s]*\\.[\\n\\s]*4\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*test2[\\n\\s]*\\(vector[\\n\\s]*\\(\\(yellow[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(green[\\n\\s]*\\.[\\n\\s]*7\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(merge[\\n\\s]*'vector[\\n\\s]*test1[\\n\\s]*test2[\\n\\s]*#'&#60;[\\n\\s]*:key[\\n\\s]*#'cdr\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(\\(RED[\\n\\s]*\\.[\\n\\s]*1\\)[\\n\\s]*\\(YELLOW[\\n\\s]*\\.[\\n\\s]*2\\)[\\n\\s]*\\(BLUE[\\n\\s]*\\.[\\n\\s]*4\\)[\\n\\s]*\\(GREEN[\\n\\s]*\\.[\\n\\s]*7\\)\\)"],["\\code\n (merge '(vector * 4) '(1 5) '(2 4 6) #'&#60;) should signal an error\n\\endcode","\\(merge[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*4\\)[\\n\\s]*'\\(1[\\n\\s]*5\\)[\\n\\s]*'\\(2[\\n\\s]*4[\\n\\s]*6\\)[\\n\\s]*#'&#60;\\)[\\n\\s]*should[\\n\\s]*signal[\\n\\s]*an[\\n\\s]*error"],["\\code\n (delete nil \\i&#123;sequence&#125;\n             :test #'(lambda (ignore \\i&#123;item&#125;) (funcall \\i&#123;test&#125; \\i&#123;item&#125;))\n             ...)\n\\endcode","\\(delete[\\n\\s]*nil[\\n\\s]*\\\\i&#123;sequence&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'\\(lambda[\\n\\s]*\\(ignore[\\n\\s]*\\\\i&#123;item&#125;\\)[\\n\\s]*\\(funcall[\\n\\s]*\\\\i&#123;test&#125;[\\n\\s]*\\\\i&#123;item&#125;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (remove 4 '(1 3 4 5 9)) *→* (1 3 5 9)\n (remove 4 '(1 2 4 1 3 4 5)) *→* (1 2 1 3 5)\n (remove 4 '(1 2 4 1 3 4 5) :count 1) *→* (1 2 1 3 4 5)\n (remove 4 '(1 2 4 1 3 4 5) :count 1 :from-end t) *→* (1 2 4 1 3 5)\n (remove 3 '(1 2 4 1 3 4 5) :test #'&#62;) *→* (4 3 4 5)\n (setq lst '(list of four elements)) *→* (LIST OF FOUR ELEMENTS)\n (setq lst2 (copy-seq lst)) *→* (LIST OF FOUR ELEMENTS)\n (setq lst3 (delete 'four lst)) *→* (LIST OF ELEMENTS)\n (equal lst lst2) *→ false*\n (remove-if #'oddp '(1 2 4 1 3 4 5)) *→* (2 4 4)\n (remove-if #'evenp '(1 2 4 1 3 4 5) :count 1 :from-end t) \n*→* (1 2 4 1 3 5)\n (remove-if-not #'evenp '(1 2 3 4 5 6 7 8 9) :count 2 :from-end t)\n*→* (1 2 3 4 5 6 8)\n (setq tester (list 1 2 4 1 3 4 5)) *→* (1 2 4 1 3 4 5)\n (delete 4 tester) *→* (1 2 1 3 5)\n (setq tester (list 1 2 4 1 3 4 5)) *→* (1 2 4 1 3 4 5)\n (delete 4 tester :count 1) *→* (1 2 1 3 4 5)\n (setq tester (list 1 2 4 1 3 4 5)) *→* (1 2 4 1 3 4 5)\n (delete 4 tester :count 1 :from-end t) *→* (1 2 4 1 3 5)\n (setq tester (list 1 2 4 1 3 4 5)) *→* (1 2 4 1 3 4 5)\n (delete 3 tester :test #'&#62;) *→* (4 3 4 5)\n (setq tester (list 1 2 4 1 3 4 5)) *→* (1 2 4 1 3 4 5)\n (delete-if #'oddp tester) *→* (2 4 4)\n (setq tester (list 1 2 4 1 3 4 5)) *→* (1 2 4 1 3 4 5)\n (delete-if #'evenp tester :count 1 :from-end t) *→* (1 2 4 1 3 5)    \n (setq tester (list 1 2 3 4 5 6)) *→* (1 2 3 4 5 6) \n (delete-if #'evenp tester) *→* (1 3 5) \n tester *→* \\term&#123;implementation-dependent&#125;\n\\endcode","\\(remove[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*9\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*5[\\n\\s]*9\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:count[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*4[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(remove[\\n\\s]*3[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:test[\\n\\s]*#'&#62;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst[\\n\\s]*'\\(list[\\n\\s]*of[\\n\\s]*four[\\n\\s]*elements\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LIST[\\n\\s]*OF[\\n\\s]*FOUR[\\n\\s]*ELEMENTS\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst2[\\n\\s]*\\(copy-seq[\\n\\s]*lst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LIST[\\n\\s]*OF[\\n\\s]*FOUR[\\n\\s]*ELEMENTS\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*lst3[\\n\\s]*\\(delete[\\n\\s]*'four[\\n\\s]*lst\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(LIST[\\n\\s]*OF[\\n\\s]*ELEMENTS\\)[\\n\\s]*[\\n\\s]*\\(equal[\\n\\s]*lst[\\n\\s]*lst2\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(remove-if[\\n\\s]*#'oddp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*4[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(remove-if[\\n\\s]*#'evenp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(remove-if-not[\\n\\s]*#'evenp[\\n\\s]*'\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7[\\n\\s]*8[\\n\\s]*9\\)[\\n\\s]*:count[\\n\\s]*2[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(delete[\\n\\s]*4[\\n\\s]*tester\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(delete[\\n\\s]*4[\\n\\s]*tester[\\n\\s]*:count[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(delete[\\n\\s]*4[\\n\\s]*tester[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(delete[\\n\\s]*3[\\n\\s]*tester[\\n\\s]*:test[\\n\\s]*#'&#62;\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(delete-if[\\n\\s]*#'oddp[\\n\\s]*tester\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(2[\\n\\s]*4[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(delete-if[\\n\\s]*#'evenp[\\n\\s]*tester[\\n\\s]*:count[\\n\\s]*1[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*4[\\n\\s]*1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(delete-if[\\n\\s]*#'evenp[\\n\\s]*tester\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*3[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*tester[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;"],["\\code\n (setq foo (list 'a 'b 'c)) *→* (A B C)\n (setq bar (cdr foo)) *→* (B C)\n (setq foo (delete 'b foo)) *→* (A C)\n bar *→* ((C)) or ...\n (eq (cdr foo) (car bar)) *→* T or ...\n\\endcode","\\(setq[\\n\\s]*foo[\\n\\s]*\\(list[\\n\\s]*'a[\\n\\s]*'b[\\n\\s]*'c\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*bar[\\n\\s]*\\(cdr[\\n\\s]*foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*foo[\\n\\s]*\\(delete[\\n\\s]*'b[\\n\\s]*foo\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*bar[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(C\\)\\)[\\n\\s]*or[\\n\\s]*\\.\\.\\.[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(cdr[\\n\\s]*foo\\)[\\n\\s]*\\(car[\\n\\s]*bar\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*or[\\n\\s]*\\.\\.\\."],["\\code\n (remove-duplicates \"aBcDAbCd\" :test #'char-equal :from-end t) *→* \"aBcD\"\n (remove-duplicates '(a b c b d d e)) *→* (A C B D E)\n (remove-duplicates '(a b c b d d e) :from-end t) *→* (A B C D E)\n (remove-duplicates '((foo #\\\\a) (bar #\\\\%) (baz #\\\\A))\n     :test #'char-equal :key #'cadr) *→* ((BAR #\\\\%) (BAZ #\\\\A))\n (remove-duplicates '((foo #\\\\a) (bar #\\\\%) (baz #\\\\A)) \n     :test #'char-equal :key #'cadr :from-end t) *→* ((FOO #\\\\a) (BAR #\\\\%))\n (setq tester (list 0 1 2 3 4 5 6))\n (delete-duplicates tester :key #'oddp :start 1 :end 6) *→* (0 4 5 6)\n\\endcode","\\(remove-duplicates[\\n\\s]*\"aBcDAbCd\"[\\n\\s]*:test[\\n\\s]*#'char-equal[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"aBcD\"[\\n\\s]*[\\n\\s]*\\(remove-duplicates[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*b[\\n\\s]*d[\\n\\s]*d[\\n\\s]*e\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*C[\\n\\s]*B[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*[\\n\\s]*\\(remove-duplicates[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*b[\\n\\s]*d[\\n\\s]*d[\\n\\s]*e\\)[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(A[\\n\\s]*B[\\n\\s]*C[\\n\\s]*D[\\n\\s]*E\\)[\\n\\s]*[\\n\\s]*\\(remove-duplicates[\\n\\s]*'\\(\\(foo[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\(bar[\\n\\s]*#\\\\\\\\%\\)[\\n\\s]*\\(baz[\\n\\s]*#\\\\\\\\A\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'char-equal[\\n\\s]*:key[\\n\\s]*#'cadr\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(BAR[\\n\\s]*#\\\\\\\\%\\)[\\n\\s]*\\(BAZ[\\n\\s]*#\\\\\\\\A\\)\\)[\\n\\s]*[\\n\\s]*\\(remove-duplicates[\\n\\s]*'\\(\\(foo[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\(bar[\\n\\s]*#\\\\\\\\%\\)[\\n\\s]*\\(baz[\\n\\s]*#\\\\\\\\A\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:test[\\n\\s]*#'char-equal[\\n\\s]*:key[\\n\\s]*#'cadr[\\n\\s]*:from-end[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(FOO[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\(BAR[\\n\\s]*#\\\\\\\\%\\)\\)[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*tester[\\n\\s]*\\(list[\\n\\s]*0[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*[\\n\\s]*\\(delete-duplicates[\\n\\s]*tester[\\n\\s]*:key[\\n\\s]*#'oddp[\\n\\s]*:start[\\n\\s]*1[\\n\\s]*:end[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(0[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)"],["\\code\n (input-stream-p *standard-input*) *→ true*\n (input-stream-p *terminal-io*) *→ true*\n (input-stream-p (make-string-output-stream)) *→ false*\n\n (output-stream-p *standard-output*) *→ true*\n (output-stream-p *terminal-io*) *→ true*\n (output-stream-p (make-string-input-stream \"jr\")) *→ false*\n\\endcode","\\(input-stream-p[\\n\\s]*\\*standard-input\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(input-stream-p[\\n\\s]*\\*terminal-io\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(input-stream-p[\\n\\s]*\\(make-string-output-stream\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(output-stream-p[\\n\\s]*\\*standard-output\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(output-stream-p[\\n\\s]*\\*terminal-io\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(output-stream-p[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"jr\"\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (when (&#62; measured limit)\n   (let ((error (round (* (- measured limit) 100)\n                       limit)))\n     (unless (if (interactive-stream-p *query-io*)\n                 (yes-or-no-p \"The frammis is out of tolerance by ~D%.~@\n                               Is it safe to proceed? \" error)\n                 (&#60; error 15))  ;15% is acceptable\n       (error \"The frammis is out of tolerance by ~D%.\" error))))\n\\endcode","\\(when[\\n\\s]*\\(&#62;[\\n\\s]*measured[\\n\\s]*limit\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(error[\\n\\s]*\\(round[\\n\\s]*\\(\\*[\\n\\s]*\\(-[\\n\\s]*measured[\\n\\s]*limit\\)[\\n\\s]*100\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*limit\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unless[\\n\\s]*\\(if[\\n\\s]*\\(interactive-stream-p[\\n\\s]*\\*query-io\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(yes-or-no-p[\\n\\s]*\"The[\\n\\s]*frammis[\\n\\s]*is[\\n\\s]*out[\\n\\s]*of[\\n\\s]*tolerance[\\n\\s]*by[\\n\\s]*~D%\\.~@[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*Is[\\n\\s]*it[\\n\\s]*safe[\\n\\s]*to[\\n\\s]*proceed\\?[\\n\\s]*\"[\\n\\s]*error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(&#60;[\\n\\s]*error[\\n\\s]*15\\)\\)[\\n\\s]*[\\n\\s]*;15%[\\n\\s]*is[\\n\\s]*acceptable[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(error[\\n\\s]*\"The[\\n\\s]*frammis[\\n\\s]*is[\\n\\s]*out[\\n\\s]*of[\\n\\s]*tolerance[\\n\\s]*by[\\n\\s]*~D%\\.\"[\\n\\s]*error\\)\\)\\)\\)"],["\\code\n (open-stream-p *standard-input*) *→ true*\n\\endcode","\\(open-stream-p[\\n\\s]*\\*standard-input\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n;; Note that the stream must accomodate at least the specified type,\n;; but might accomodate other types.  Further note that even if it does\n;; accomodate exactly the specified type, the type might be specified in\n;; any of several ways.\n (with-open-file (s \"test\" :element-type '(integer 0 1)\n                           :if-exists :error\n                           :direction :output)\n   (stream-element-type s))\n*→* INTEGER\n\\OV (UNSIGNED-BYTE 16)\n\\OV (UNSIGNED-BYTE 8)\n\\OV BIT\n\\OV (UNSIGNED-BYTE 1)\n\\OV (INTEGER 0 1)\n\\OV (INTEGER 0 (2))\n\\endcode",";;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*the[\\n\\s]*stream[\\n\\s]*must[\\n\\s]*accomodate[\\n\\s]*at[\\n\\s]*least[\\n\\s]*the[\\n\\s]*specified[\\n\\s]*type,[\\n\\s]*;;[\\n\\s]*but[\\n\\s]*might[\\n\\s]*accomodate[\\n\\s]*other[\\n\\s]*types\\.[\\n\\s]*[\\n\\s]*Further[\\n\\s]*note[\\n\\s]*that[\\n\\s]*even[\\n\\s]*if[\\n\\s]*it[\\n\\s]*does[\\n\\s]*;;[\\n\\s]*accomodate[\\n\\s]*exactly[\\n\\s]*the[\\n\\s]*specified[\\n\\s]*type,[\\n\\s]*the[\\n\\s]*type[\\n\\s]*might[\\n\\s]*be[\\n\\s]*specified[\\n\\s]*in[\\n\\s]*;;[\\n\\s]*any[\\n\\s]*of[\\n\\s]*several[\\n\\s]*ways\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"test\"[\\n\\s]*:element-type[\\n\\s]*'\\(integer[\\n\\s]*0[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:if-exists[\\n\\s]*:error[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(stream-element-type[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*INTEGER[\\n\\s]*\\\\OV[\\n\\s]*\\(UNSIGNED-BYTE[\\n\\s]*16\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(UNSIGNED-BYTE[\\n\\s]*8\\)[\\n\\s]*\\\\OV[\\n\\s]*BIT[\\n\\s]*\\\\OV[\\n\\s]*\\(UNSIGNED-BYTE[\\n\\s]*1\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(INTEGER[\\n\\s]*0[\\n\\s]*1\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(INTEGER[\\n\\s]*0[\\n\\s]*\\(2\\)\\)"],["\\code\n (streamp *terminal-io*) *→ true*\n (streamp 1) *→ false*\n\\endcode","\\(streamp[\\n\\s]*\\*terminal-io\\*\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(streamp[\\n\\s]*1\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (streamp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'stream)\n\\endcode","\\(streamp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'stream\\)"],["\\code\n (with-open-file (s \"temp-bytes\" \n                     :direction :output\n                     :element-type 'unsigned-byte)\n    (write-byte 101 s)) *→* 101\n (with-open-file (s \"temp-bytes\" :element-type 'unsigned-byte)\n    (format t \"~S ~S\" (read-byte s) (read-byte s nil 'eof)))\n\\OUT 101 EOF\n*→* NIL\n\\endcode","\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"temp-bytes\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'unsigned-byte\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-byte[\\n\\s]*101[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*101[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"temp-bytes\"[\\n\\s]*:element-type[\\n\\s]*'unsigned-byte\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~S[\\n\\s]*~S\"[\\n\\s]*\\(read-byte[\\n\\s]*s\\)[\\n\\s]*\\(read-byte[\\n\\s]*s[\\n\\s]*nil[\\n\\s]*'eof\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*101[\\n\\s]*EOF[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (with-open-file (s \"temp-bytes\" \n                    :direction :output\n                    :element-type 'unsigned-byte)\n    (write-byte 101 s)) *→* 101\n\\endcode","\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"temp-bytes\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'unsigned-byte\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-byte[\\n\\s]*101[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*101"],["\\code\n (with-input-from-string (input-stream \"    1 2 3 4 5\")\n    (format t \"~S ~S ~S\" \n            (peek-char t input-stream)\n            (peek-char #\\\\4 input-stream)\n            (peek-char nil input-stream)))\n\\OUT #\\\\1 #\\\\4 #\\\\4\n*→* NIL\n\\endcode","\\(with-input-from-string[\\n\\s]*\\(input-stream[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~S[\\n\\s]*~S[\\n\\s]*~S\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(peek-char[\\n\\s]*t[\\n\\s]*input-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(peek-char[\\n\\s]*#\\\\\\\\4[\\n\\s]*input-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(peek-char[\\n\\s]*nil[\\n\\s]*input-stream\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\1[\\n\\s]*#\\\\\\\\4[\\n\\s]*#\\\\\\\\4[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (with-input-from-string (is \"0123\")\n    (do ((c (read-char is) (read-char is nil 'the-end)))\n        ((not (characterp c)))\n     (format t \"~S \" c)))\n\\OUT #\\\\0 #\\\\1 #\\\\2 #\\\\3\n*→* NIL\n\\endcode","\\(with-input-from-string[\\n\\s]*\\(is[\\n\\s]*\"0123\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(c[\\n\\s]*\\(read-char[\\n\\s]*is\\)[\\n\\s]*\\(read-char[\\n\\s]*is[\\n\\s]*nil[\\n\\s]*'the-end\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(not[\\n\\s]*\\(characterp[\\n\\s]*c\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~S[\\n\\s]*\"[\\n\\s]*c\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*#\\\\\\\\0[\\n\\s]*#\\\\\\\\1[\\n\\s]*#\\\\\\\\2[\\n\\s]*#\\\\\\\\3[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n;; This code assumes an implementation in which a newline is not\n;; required to terminate input from the console.\n (defun test-it ()\n   (unread-char (read-char))\n   (list (read-char-no-hang) \n         (read-char-no-hang) \n         (read-char-no-hang)))\n*→* TEST-IT\n;; Implementation A, where a Newline is not required to terminate\n;; interactive input on the console.\n (test-it)\n\\OUT \\IN&#123;a&#125;\n*→* (#\\\\a NIL NIL)\n;; Implementation B, where a Newline is required to terminate\n;; interactive input on the console, and where that Newline remains\n;; on the input stream.\n (test-it)\n\\OUT \\IN&#123;a\\CRLF&#125;\n*→* (#\\\\a #\\\\Newline NIL)\n\\endcode",";;[\\n\\s]*This[\\n\\s]*code[\\n\\s]*assumes[\\n\\s]*an[\\n\\s]*implementation[\\n\\s]*in[\\n\\s]*which[\\n\\s]*a[\\n\\s]*newline[\\n\\s]*is[\\n\\s]*not[\\n\\s]*;;[\\n\\s]*required[\\n\\s]*to[\\n\\s]*terminate[\\n\\s]*input[\\n\\s]*from[\\n\\s]*the[\\n\\s]*console\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*test-it[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(unread-char[\\n\\s]*\\(read-char\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(read-char-no-hang\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-char-no-hang\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read-char-no-hang\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEST-IT[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*A,[\\n\\s]*where[\\n\\s]*a[\\n\\s]*Newline[\\n\\s]*is[\\n\\s]*not[\\n\\s]*required[\\n\\s]*to[\\n\\s]*terminate[\\n\\s]*;;[\\n\\s]*interactive[\\n\\s]*input[\\n\\s]*on[\\n\\s]*the[\\n\\s]*console\\.[\\n\\s]*[\\n\\s]*\\(test-it\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\\\IN&#123;a&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\a[\\n\\s]*NIL[\\n\\s]*NIL\\)[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*B,[\\n\\s]*where[\\n\\s]*a[\\n\\s]*Newline[\\n\\s]*is[\\n\\s]*required[\\n\\s]*to[\\n\\s]*terminate[\\n\\s]*;;[\\n\\s]*interactive[\\n\\s]*input[\\n\\s]*on[\\n\\s]*the[\\n\\s]*console,[\\n\\s]*and[\\n\\s]*where[\\n\\s]*that[\\n\\s]*Newline[\\n\\s]*remains[\\n\\s]*;;[\\n\\s]*on[\\n\\s]*the[\\n\\s]*input[\\n\\s]*stream\\.[\\n\\s]*[\\n\\s]*\\(test-it\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\\\IN&#123;a\\\\CRLF&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(#\\\\\\\\a[\\n\\s]*#\\\\\\\\Newline[\\n\\s]*NIL\\)"],["\\code\n (with-output-to-string (s)\n    (write-string \"some text\" s)\n    (terpri s)\n    (terpri s)\n    (write-string \"more text\" s))\n*→* \"some text\n\nmore text\"\n (with-output-to-string (s)\n    (write-string \"some text\" s)\n    (fresh-line s)\n    (fresh-line s)\n    (write-string \"more text\" s))\n*→* \"some text\nmore text\"\n\\endcode","\\(with-output-to-string[\\n\\s]*\\(s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*\"some[\\n\\s]*text\"[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(terpri[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(terpri[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*\"more[\\n\\s]*text\"[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"some[\\n\\s]*text[\\n\\s]*[\\n\\s]*more[\\n\\s]*text\"[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*\"some[\\n\\s]*text\"[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fresh-line[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*\"more[\\n\\s]*text\"[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"some[\\n\\s]*text[\\n\\s]*more[\\n\\s]*text\""],["\\code\n (write-char #\\\\Newline output-stream)\n\\endcode","\\(write-char[\\n\\s]*#\\\\\\\\Newline[\\n\\s]*output-stream\\)"],["\\code\n (with-input-from-string (is \"0123\")\n    (dotimes (i 6)\n      (let ((c (read-char is)))\n        (if (evenp i) (format t \"~&~S ~S~%\" i c) (unread-char c is)))))\n\\OUT 0 #\\\\0\n\\OUT 2 #\\\\1\n\\OUT 4 #\\\\2\n*→* NIL\n\\endcode","\\(with-input-from-string[\\n\\s]*\\(is[\\n\\s]*\"0123\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(c[\\n\\s]*\\(read-char[\\n\\s]*is\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(evenp[\\n\\s]*i\\)[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&~S[\\n\\s]*~S~%\"[\\n\\s]*i[\\n\\s]*c\\)[\\n\\s]*\\(unread-char[\\n\\s]*c[\\n\\s]*is\\)\\)\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*0[\\n\\s]*#\\\\\\\\0[\\n\\s]*\\\\OUT[\\n\\s]*2[\\n\\s]*#\\\\\\\\1[\\n\\s]*\\\\OUT[\\n\\s]*4[\\n\\s]*#\\\\\\\\2[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (write-char #\\\\a)\n\\OUT a\n*→* #\\\\a\n (with-output-to-string (s) \n   (write-char #\\\\a s)\n   (write-char #\\\\Space s)\n   (write-char #\\\\b s))\n*→* \"a b\"\n\\endcode","\\(write-char[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\\\OUT[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\a[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\a[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\Space[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\b[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"a[\\n\\s]*b\""],["\\code\n (setq a \"line 1\n line2\")\n*→* \"line 1\n line2\"\n (read-line (setq input-stream (make-string-input-stream a)))\n*→* \"line 1\", false\n (read-line input-stream)\n*→* \"line2\", true\n (read-line input-stream nil nil)\n*→* NIL, true\n\\endcode","\\(setq[\\n\\s]*a[\\n\\s]*\"line[\\n\\s]*1[\\n\\s]*[\\n\\s]*line2\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"line[\\n\\s]*1[\\n\\s]*[\\n\\s]*line2\"[\\n\\s]*[\\n\\s]*\\(read-line[\\n\\s]*\\(setq[\\n\\s]*input-stream[\\n\\s]*\\(make-string-input-stream[\\n\\s]*a\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"line[\\n\\s]*1\",[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(read-line[\\n\\s]*input-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"line2\",[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(read-line[\\n\\s]*input-stream[\\n\\s]*nil[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*true"],["\\code\n (prog1 (write-string \"books\" nil :end 4) (write-string \"worms\"))\n\\OUT bookworms\n*→* \"books\"\n (progn (write-char #\\\\*)\n        (write-line \"test12\" *standard-output* :end 5) \n        (write-line \"*test2\")\n        (write-char #\\\\*)\n        nil)\n\\OUT *test1\n\\OUT *test2\n\\OUT *\n*→* NIL\n\\endcode","\\(prog1[\\n\\s]*\\(write-string[\\n\\s]*\"books\"[\\n\\s]*nil[\\n\\s]*:end[\\n\\s]*4\\)[\\n\\s]*\\(write-string[\\n\\s]*\"worms\"\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*bookworms[\\n\\s]*\\*\\→\\*[\\n\\s]*\"books\"[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-line[\\n\\s]*\"test12\"[\\n\\s]*\\*standard-output\\*[\\n\\s]*:end[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-line[\\n\\s]*\"\\*test2\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*#\\\\\\\\\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nil\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\*test1[\\n\\s]*\\\\OUT[\\n\\s]*\\*test2[\\n\\s]*\\\\OUT[\\n\\s]*\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (write-string string)\n\\EQ (dotimes (i (length string)\n      (write-char (char string i)))\n\n (write-line string)\n\\EQ (prog1 (write-string string) (terpri))\n\\endcode","\\(write-string[\\n\\s]*string\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*\\(length[\\n\\s]*string\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-char[\\n\\s]*\\(char[\\n\\s]*string[\\n\\s]*i\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-line[\\n\\s]*string\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(prog1[\\n\\s]*\\(write-string[\\n\\s]*string\\)[\\n\\s]*\\(terpri\\)\\)"],["\\code\n (defvar *data* (make-array 15 :initial-element nil))\n (values (read-sequence *data* (make-string-input-stream \"test string\")) *data*)\n *→* 11, #(#\\\\t #\\\\e #\\\\s #\\\\t #\\\\Space #\\\\s #\\\\t #\\\\r #\\\\i #\\\\n #\\\\g NIL NIL NIL NIL)\n\\endcode","\\(defvar[\\n\\s]*\\*data\\*[\\n\\s]*\\(make-array[\\n\\s]*15[\\n\\s]*:initial-element[\\n\\s]*nil\\)\\)[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*\\(read-sequence[\\n\\s]*\\*data\\*[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"test[\\n\\s]*string\"\\)\\)[\\n\\s]*\\*data\\*\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*11,[\\n\\s]*#\\(#\\\\\\\\t[\\n\\s]*#\\\\\\\\e[\\n\\s]*#\\\\\\\\s[\\n\\s]*#\\\\\\\\t[\\n\\s]*#\\\\\\\\Space[\\n\\s]*#\\\\\\\\s[\\n\\s]*#\\\\\\\\t[\\n\\s]*#\\\\\\\\r[\\n\\s]*#\\\\\\\\i[\\n\\s]*#\\\\\\\\n[\\n\\s]*#\\\\\\\\g[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)"],["\\code\n (write-sequence \"bookworms\" *standard-output* :end 4)\n \\OUT book\n *→* \"bookworms\"\n\\endcode","\\(write-sequence[\\n\\s]*\"bookworms\"[\\n\\s]*\\*standard-output\\*[\\n\\s]*:end[\\n\\s]*4\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*book[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"bookworms\""],["\\code\n (with-open-file (s \"decimal-digits.text\" \n                    :direction :output :if-exists :error)\n   (princ \"0123456789\" s)\n   (truename s))\n*→* #P\"A:&#62;Joe&#62;decimal-digits.text.1\"\n (with-open-file (s \"decimal-digits.text\")\n   (file-length s))\n*→* 10\n\\endcode","\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"decimal-digits\\.text\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(princ[\\n\\s]*\"0123456789\"[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#P\"A:&#62;Joe&#62;decimal-digits\\.text\\.1\"[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"decimal-digits\\.text\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(file-length[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n (defun tester ()\n   (let ((noticed '()) file-written)\n     (flet ((notice (x) (push x noticed) x))\n       (with-open-file (s \"test.bin\" \n                          :element-type '(unsigned-byte 8)\n                          :direction :output\n                          :if-exists :error)\n          (notice (file-position s)) ;1\n          (write-byte 5 s) \n          (write-byte 6 s)\n          (let ((p (file-position s)))\n            (notice p) ;2\n            (notice (when p (file-position s (1- p))))) ;3\n          (write-byte 7 s)\n          (notice (file-position s)) ;4\n          (setq file-written (truename s)))\n        (with-open-file (s file-written\n                           :element-type '(unsigned-byte 8)\n                           :direction :input)\n          (notice (file-position s)) ;5\n          (let ((length (file-length s)))\n            (notice length) ;6\n            (when length\n              (dotimes (i length)\n                (notice (read-byte s)))))) ;7,...\n        (nreverse noticed))))\n*→* tester\n (tester)\n*→* (0 2 T 2 0 2 5 7)\n\\OV (0 2 NIL 3 0 3 5 6 7)\n\\OV (NIL NIL NIL NIL NIL NIL)\n\\endcode","\\(defun[\\n\\s]*tester[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(noticed[\\n\\s]*'\\(\\)\\)[\\n\\s]*file-written\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(notice[\\n\\s]*\\(x\\)[\\n\\s]*\\(push[\\n\\s]*x[\\n\\s]*noticed\\)[\\n\\s]*x\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*\"test\\.bin\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:if-exists[\\n\\s]*:error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*\\(file-position[\\n\\s]*s\\)\\)[\\n\\s]*;1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-byte[\\n\\s]*5[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-byte[\\n\\s]*6[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(p[\\n\\s]*\\(file-position[\\n\\s]*s\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*p\\)[\\n\\s]*;2[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*\\(when[\\n\\s]*p[\\n\\s]*\\(file-position[\\n\\s]*s[\\n\\s]*\\(1-[\\n\\s]*p\\)\\)\\)\\)\\)[\\n\\s]*;3[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-byte[\\n\\s]*7[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*\\(file-position[\\n\\s]*s\\)\\)[\\n\\s]*;4[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*file-written[\\n\\s]*\\(truename[\\n\\s]*s\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*file-written[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'\\(unsigned-byte[\\n\\s]*8\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:input\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*\\(file-position[\\n\\s]*s\\)\\)[\\n\\s]*;5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(length[\\n\\s]*\\(file-length[\\n\\s]*s\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*length\\)[\\n\\s]*;6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(when[\\n\\s]*length[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dotimes[\\n\\s]*\\(i[\\n\\s]*length\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(notice[\\n\\s]*\\(read-byte[\\n\\s]*s\\)\\)\\)\\)\\)\\)[\\n\\s]*;7,\\.\\.\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nreverse[\\n\\s]*noticed\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*tester[\\n\\s]*[\\n\\s]*\\(tester\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(0[\\n\\s]*2[\\n\\s]*T[\\n\\s]*2[\\n\\s]*0[\\n\\s]*2[\\n\\s]*5[\\n\\s]*7\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(0[\\n\\s]*2[\\n\\s]*NIL[\\n\\s]*3[\\n\\s]*0[\\n\\s]*3[\\n\\s]*5[\\n\\s]*6[\\n\\s]*7\\)[\\n\\s]*\\\\OV[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL\\)"],["\\code\n%  (open \\i&#123;filespec&#125; :direction :probe)  *→* #&#60;Closed Probe File Stream...&#62;\n%  (setq q (merge-pathnames (user-homedir-pathname) \"test\"))\n% *→* #&#60;PATHNAME :HOST NIL :DEVICE \\i&#123;device-name&#125; :DIRECTORY \\i&#123;directory-name&#125;\n%     :NAME \"test\" :TYPE NIL :VERSION :NEWEST&#62;\n%  (open \\i&#123;filespec&#125; :if-does-not-exist :create) *→* #&#60;Input File Stream...&#62;\n%  (setq s (open \\i&#123;filespec&#125; :direction :probe)) *→* #&#60;Closed Probe File Stream...&#62;\n%  (truename s) *→* #&#60;PATHNAME :HOST NIL :DEVICE \\i&#123;device-name&#125; :DIRECTORY\n%     \\i&#123;directory-name&#125; :NAME \\i&#123;filespec&#125; :TYPE \\i&#123;extension&#125; :VERSION 1&#62;\n%  (open s :direction :output :if-exists nil) *→* NIL \n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(open[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:direction[\\n\\s]*:probe\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Closed[\\n\\s]*Probe[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*q[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(user-homedir-pathname\\)[\\n\\s]*\"test\"\\)\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*\\\\i&#123;device-name&#125;[\\n\\s]*:DIRECTORY[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:NAME[\\n\\s]*\"test\"[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*:NEWEST&#62;[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(open[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:if-does-not-exist[\\n\\s]*:create\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Input[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*s[\\n\\s]*\\(open[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:direction[\\n\\s]*:probe\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Closed[\\n\\s]*Probe[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*s\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*\\\\i&#123;device-name&#125;[\\n\\s]*:DIRECTORY[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*:NAME[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:TYPE[\\n\\s]*\\\\i&#123;extension&#125;[\\n\\s]*:VERSION[\\n\\s]*1&#62;[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(open[\\n\\s]*s[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*%"],["\\code\n (open \\i&#123;filespec&#125; :direction :probe)  *→* #&#60;Closed Probe File Stream...&#62;\n (setq q (merge-pathnames (user-homedir-pathname) \"test\"))\n*→* #&#60;PATHNAME :HOST NIL :DEVICE \\i&#123;device-name&#125; :DIRECTORY \\i&#123;directory-name&#125;\n    :NAME \"test\" :TYPE NIL :VERSION :NEWEST&#62;\n (open \\i&#123;filespec&#125; :if-does-not-exist :create) *→* #&#60;Input File Stream...&#62;\n (setq s (open \\i&#123;filespec&#125; :direction :probe)) *→* #&#60;Closed Probe File Stream...&#62;\n (truename s) *→* #&#60;PATHNAME :HOST NIL :DEVICE \\i&#123;device-name&#125; :DIRECTORY\n    \\i&#123;directory-name&#125; :NAME \\i&#123;filespec&#125; :TYPE \\i&#123;extension&#125; :VERSION 1&#62;\n (open s :direction :output :if-exists nil) *→* NIL \n\\endcode","\\(open[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:direction[\\n\\s]*:probe\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Closed[\\n\\s]*Probe[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*q[\\n\\s]*\\(merge-pathnames[\\n\\s]*\\(user-homedir-pathname\\)[\\n\\s]*\"test\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*\\\\i&#123;device-name&#125;[\\n\\s]*:DIRECTORY[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:NAME[\\n\\s]*\"test\"[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*:NEWEST&#62;[\\n\\s]*[\\n\\s]*\\(open[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:if-does-not-exist[\\n\\s]*:create\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Input[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*s[\\n\\s]*\\(open[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:direction[\\n\\s]*:probe\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;Closed[\\n\\s]*Probe[\\n\\s]*File[\\n\\s]*Stream\\.\\.\\.&#62;[\\n\\s]*[\\n\\s]*\\(truename[\\n\\s]*s\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*\\\\i&#123;device-name&#125;[\\n\\s]*:DIRECTORY[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*:NAME[\\n\\s]*\\\\i&#123;filespec&#125;[\\n\\s]*:TYPE[\\n\\s]*\\\\i&#123;extension&#125;[\\n\\s]*:VERSION[\\n\\s]*1&#62;[\\n\\s]*[\\n\\s]*\\(open[\\n\\s]*s[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (with-open-file (stream \"test\" :direction :output)\n   (stream-external-format stream))\n*→* :DEFAULT\n\\OV :ISO8859/1-1987\n\\OV (:ASCII :SAIL)\n\\OV ACME::PROPRIETARY-FILE-FORMAT-17\n\\OV #&#60;FILE-FORMAT :ISO646-1983 2343673&#62;\n\\endcode","\\(with-open-file[\\n\\s]*\\(stream[\\n\\s]*\"test\"[\\n\\s]*:direction[\\n\\s]*:output\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(stream-external-format[\\n\\s]*stream\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:DEFAULT[\\n\\s]*\\\\OV[\\n\\s]*:ISO8859/1-1987[\\n\\s]*\\\\OV[\\n\\s]*\\(:ASCII[\\n\\s]*:SAIL\\)[\\n\\s]*\\\\OV[\\n\\s]*ACME::PROPRIETARY-FILE-FORMAT-17[\\n\\s]*\\\\OV[\\n\\s]*#&#60;FILE-FORMAT[\\n\\s]*:ISO646-1983[\\n\\s]*2343673&#62;"],["\\code\n (setq p (merge-pathnames \"test\"))\n*→* #&#60;PATHNAME :HOST NIL :DEVICE \\i&#123;device-name&#125; :DIRECTORY \\i&#123;directory-name&#125;\n    :NAME \"test\" :TYPE NIL :VERSION :NEWEST&#62;\n (with-open-file (s p :direction :output :if-exists :supersede)\n    (format s \"Here are a couple~%of test data lines~%\")) *→* NIL\n (with-open-file (s p)\n    (do ((l (read-line s) (read-line s nil 'eof)))\n        ((eq l 'eof) \"Reached end of file.\")\n     (format t \"~&*** ~A~%\" l)))\n\\OUT *** Here are a couple\n\\OUT *** of test data lines\n*→* \"Reached end of file.\"\n\\endcode","\\(setq[\\n\\s]*p[\\n\\s]*\\(merge-pathnames[\\n\\s]*\"test\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PATHNAME[\\n\\s]*:HOST[\\n\\s]*NIL[\\n\\s]*:DEVICE[\\n\\s]*\\\\i&#123;device-name&#125;[\\n\\s]*:DIRECTORY[\\n\\s]*\\\\i&#123;directory-name&#125;[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:NAME[\\n\\s]*\"test\"[\\n\\s]*:TYPE[\\n\\s]*NIL[\\n\\s]*:VERSION[\\n\\s]*:NEWEST&#62;[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*p[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:supersede\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*s[\\n\\s]*\"Here[\\n\\s]*are[\\n\\s]*a[\\n\\s]*couple~%of[\\n\\s]*test[\\n\\s]*data[\\n\\s]*lines~%\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(s[\\n\\s]*p\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(do[\\n\\s]*\\(\\(l[\\n\\s]*\\(read-line[\\n\\s]*s\\)[\\n\\s]*\\(read-line[\\n\\s]*s[\\n\\s]*nil[\\n\\s]*'eof\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\(eq[\\n\\s]*l[\\n\\s]*'eof\\)[\\n\\s]*\"Reached[\\n\\s]*end[\\n\\s]*of[\\n\\s]*file\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"~&\\*\\*\\*[\\n\\s]*~A~%\"[\\n\\s]*l\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\*\\*\\*[\\n\\s]*Here[\\n\\s]*are[\\n\\s]*a[\\n\\s]*couple[\\n\\s]*\\\\OUT[\\n\\s]*\\*\\*\\*[\\n\\s]*of[\\n\\s]*test[\\n\\s]*data[\\n\\s]*lines[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Reached[\\n\\s]*end[\\n\\s]*of[\\n\\s]*file\\.\""],["\\code\n% (with-open-file (ifile name :direction :input)\n%   (with-open-file (ofile (merge-pathname-defaults ifile\n%                                                   nil\n%                                                   \"out\")\n%                          :direction :output\n%                          :if-exists :supersede)\n%     (transduce-file ifile ofile)))\n%\\endcode","%[\\n\\s]*\\(with-open-file[\\n\\s]*\\(ifile[\\n\\s]*name[\\n\\s]*:direction[\\n\\s]*:input\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(ofile[\\n\\s]*\\(merge-pathname-defaults[\\n\\s]*ifile[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nil[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"out\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:if-exists[\\n\\s]*:supersede\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(transduce-file[\\n\\s]*ifile[\\n\\s]*ofile\\)\\)\\)[\\n\\s]*%"],["\\code\n;; Normally one would not do this intentionally because it is\n;; not perspicuous, but beware when using :IF-DOES-NOT-EXIST NIL\n;; that this doesn't happen to you accidentally...\n (with-open-file (foo \"no-such-file\" :if-does-not-exist nil)\n   (read foo))\n\\OUT \\IN&#123;hello?&#125;\n*→* HELLO? ;This value was read from the terminal, not a file!\n\n;; Here's another bug to avoid...\n (with-open-file (foo \"no-such-file\" :direction :output :if-does-not-exist nil)\n   (format foo \"Hello\"))\n*→* \"Hello\" ;FORMAT got an argument of NIL!\n\\endcode",";;[\\n\\s]*Normally[\\n\\s]*one[\\n\\s]*would[\\n\\s]*not[\\n\\s]*do[\\n\\s]*this[\\n\\s]*intentionally[\\n\\s]*because[\\n\\s]*it[\\n\\s]*is[\\n\\s]*;;[\\n\\s]*not[\\n\\s]*perspicuous,[\\n\\s]*but[\\n\\s]*beware[\\n\\s]*when[\\n\\s]*using[\\n\\s]*:IF-DOES-NOT-EXIST[\\n\\s]*NIL[\\n\\s]*;;[\\n\\s]*that[\\n\\s]*this[\\n\\s]*doesn't[\\n\\s]*happen[\\n\\s]*to[\\n\\s]*you[\\n\\s]*accidentally\\.\\.\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(foo[\\n\\s]*\"no-such-file\"[\\n\\s]*:if-does-not-exist[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*foo\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\\\IN&#123;hello\\?&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*HELLO\\?[\\n\\s]*;This[\\n\\s]*value[\\n\\s]*was[\\n\\s]*read[\\n\\s]*from[\\n\\s]*the[\\n\\s]*terminal,[\\n\\s]*not[\\n\\s]*a[\\n\\s]*file![\\n\\s]*[\\n\\s]*;;[\\n\\s]*Here's[\\n\\s]*another[\\n\\s]*bug[\\n\\s]*to[\\n\\s]*avoid\\.\\.\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(foo[\\n\\s]*\"no-such-file\"[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-does-not-exist[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*foo[\\n\\s]*\"Hello\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Hello\"[\\n\\s]*;FORMAT[\\n\\s]*got[\\n\\s]*an[\\n\\s]*argument[\\n\\s]*of[\\n\\s]*NIL!"],["\\code\n (setq s (make-broadcast-stream)) *→* #&#60;BROADCAST-STREAM&#62;\n (close s) *→* T\n (output-stream-p s) *→ true*\n\\endcode","\\(setq[\\n\\s]*s[\\n\\s]*\\(make-broadcast-stream\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;BROADCAST-STREAM&#62;[\\n\\s]*[\\n\\s]*\\(close[\\n\\s]*s\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(output-stream-p[\\n\\s]*s\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (with-open-stream (s (make-string-input-stream \"1 2 3 4\"))\n    (+ (read s) (read s) (read s))) *→* 6\n\\endcode","\\(with-open-stream[\\n\\s]*\\(s[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*\\(read[\\n\\s]*s\\)[\\n\\s]*\\(read[\\n\\s]*s\\)[\\n\\s]*\\(read[\\n\\s]*s\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6"],["\\code\n (progn (unread-char (read-char)) (list (listen) (read-char)))\n\\OUT \\IN&#123;1&#125;\n*→* (T #\\\\1)\n (progn (clear-input) (listen))\n*→* NIL ;Unless you're a very fast typist!\n\\endcode","\\(progn[\\n\\s]*\\(unread-char[\\n\\s]*\\(read-char\\)\\)[\\n\\s]*\\(list[\\n\\s]*\\(listen\\)[\\n\\s]*\\(read-char\\)\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\\\IN&#123;1&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(T[\\n\\s]*#\\\\\\\\1\\)[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(clear-input\\)[\\n\\s]*\\(listen\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*;Unless[\\n\\s]*you're[\\n\\s]*a[\\n\\s]*very[\\n\\s]*fast[\\n\\s]*typist!"],["\\code\n;; The exact I/O behavior of this example might vary from implementation\n;; to implementation depending on the kind of interactive buffering that\n;; occurs.  (The call to SLEEP here is intended to help even out the \n;; differences in implementations which do not do line-at-a-time buffering.)\n\n(defun read-sleepily (&optional (clear-p nil) (zzz 0))\n  (list (progn (print '&#62;) (read))\n        ;; Note that input typed within the first ZZZ seconds \n        ;; will be discarded.\n        (progn (print '&#62;) \n               (if zzz (sleep zzz))\n               (print '&#62;&#62;)\n               (if clear-p (clear-input))\n               (read))))\n\n(read-sleepily)\n\\OUT &#62; \\IN&#123;10&#125;\n\\OUT &#62;\n\\OUT &#62;&#62; \\IN&#123;20&#125;\n*→* (10 20)\n\n(read-sleepily t)\n\\OUT &#62; \\IN&#123;10&#125;\n\\OUT &#62;\n\\OUT &#62;&#62; \\IN&#123;20&#125;\n*→* (10 20)\n\n(read-sleepily t 10)\n\\OUT &#62; \\IN&#123;10&#125;\n\\OUT &#62; \\IN&#123;20&#125;  ; Some implementations won't echo typeahead here.\n\\OUT &#62;&#62; \\IN&#123;30&#125;\n*→* (10 30)\n\\endcode",";;[\\n\\s]*The[\\n\\s]*exact[\\n\\s]*I/O[\\n\\s]*behavior[\\n\\s]*of[\\n\\s]*this[\\n\\s]*example[\\n\\s]*might[\\n\\s]*vary[\\n\\s]*from[\\n\\s]*implementation[\\n\\s]*;;[\\n\\s]*to[\\n\\s]*implementation[\\n\\s]*depending[\\n\\s]*on[\\n\\s]*the[\\n\\s]*kind[\\n\\s]*of[\\n\\s]*interactive[\\n\\s]*buffering[\\n\\s]*that[\\n\\s]*;;[\\n\\s]*occurs\\.[\\n\\s]*[\\n\\s]*\\(The[\\n\\s]*call[\\n\\s]*to[\\n\\s]*SLEEP[\\n\\s]*here[\\n\\s]*is[\\n\\s]*intended[\\n\\s]*to[\\n\\s]*help[\\n\\s]*even[\\n\\s]*out[\\n\\s]*the[\\n\\s]*[\\n\\s]*;;[\\n\\s]*differences[\\n\\s]*in[\\n\\s]*implementations[\\n\\s]*which[\\n\\s]*do[\\n\\s]*not[\\n\\s]*do[\\n\\s]*line-at-a-time[\\n\\s]*buffering\\.\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*read-sleepily[\\n\\s]*\\(&optional[\\n\\s]*\\(clear-p[\\n\\s]*nil\\)[\\n\\s]*\\(zzz[\\n\\s]*0\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(progn[\\n\\s]*\\(print[\\n\\s]*'&#62;\\)[\\n\\s]*\\(read\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Note[\\n\\s]*that[\\n\\s]*input[\\n\\s]*typed[\\n\\s]*within[\\n\\s]*the[\\n\\s]*first[\\n\\s]*ZZZ[\\n\\s]*seconds[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;;[\\n\\s]*will[\\n\\s]*be[\\n\\s]*discarded\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(print[\\n\\s]*'&#62;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*zzz[\\n\\s]*\\(sleep[\\n\\s]*zzz\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*'&#62;&#62;\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*clear-p[\\n\\s]*\\(clear-input\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(read-sleepily\\)[\\n\\s]*\\\\OUT[\\n\\s]*&#62;[\\n\\s]*\\\\IN&#123;10&#125;[\\n\\s]*\\\\OUT[\\n\\s]*&#62;[\\n\\s]*\\\\OUT[\\n\\s]*&#62;&#62;[\\n\\s]*\\\\IN&#123;20&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(10[\\n\\s]*20\\)[\\n\\s]*[\\n\\s]*\\(read-sleepily[\\n\\s]*t\\)[\\n\\s]*\\\\OUT[\\n\\s]*&#62;[\\n\\s]*\\\\IN&#123;10&#125;[\\n\\s]*\\\\OUT[\\n\\s]*&#62;[\\n\\s]*\\\\OUT[\\n\\s]*&#62;&#62;[\\n\\s]*\\\\IN&#123;20&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(10[\\n\\s]*20\\)[\\n\\s]*[\\n\\s]*\\(read-sleepily[\\n\\s]*t[\\n\\s]*10\\)[\\n\\s]*\\\\OUT[\\n\\s]*&#62;[\\n\\s]*\\\\IN&#123;10&#125;[\\n\\s]*\\\\OUT[\\n\\s]*&#62;[\\n\\s]*\\\\IN&#123;20&#125;[\\n\\s]*[\\n\\s]*;[\\n\\s]*Some[\\n\\s]*implementations[\\n\\s]*won't[\\n\\s]*echo[\\n\\s]*typeahead[\\n\\s]*here\\.[\\n\\s]*\\\\OUT[\\n\\s]*&#62;&#62;[\\n\\s]*\\\\IN&#123;30&#125;[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(10[\\n\\s]*30\\)"],["\\code\n;; Implementation A\n (progn (princ \"am i seen?\") (clear-output))\n*→* NIL\n\n;; Implementation B\n (progn (princ \"am i seen?\") (clear-output))\n\\OUT am i seen?\n*→* NIL\n\\endcode",";;[\\n\\s]*Implementation[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(princ[\\n\\s]*\"am[\\n\\s]*i[\\n\\s]*seen\\?\"\\)[\\n\\s]*\\(clear-output\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Implementation[\\n\\s]*B[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(princ[\\n\\s]*\"am[\\n\\s]*i[\\n\\s]*seen\\?\"\\)[\\n\\s]*\\(clear-output\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*am[\\n\\s]*i[\\n\\s]*seen\\?[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n (y-or-n-p \"(t or nil) given by\")\n\\OUT (t or nil) given by (Y or N) \\IN&#123;Y&#125;\n*→ true*\n (yes-or-no-p \"a ~S message\" 'frightening) \n\\OUT a FRIGHTENING message (Yes or No) \\IN&#123;no&#125;\n*→ false*\n (y-or-n-p \"Produce listing file?\") \n\\OUT Produce listing file?\n\\OUT Please respond with Y or N. \\IN&#123;n&#125;\n*→ false*\n\\endcode","\\(y-or-n-p[\\n\\s]*\"\\(t[\\n\\s]*or[\\n\\s]*nil\\)[\\n\\s]*given[\\n\\s]*by\"\\)[\\n\\s]*\\\\OUT[\\n\\s]*\\(t[\\n\\s]*or[\\n\\s]*nil\\)[\\n\\s]*given[\\n\\s]*by[\\n\\s]*\\(Y[\\n\\s]*or[\\n\\s]*N\\)[\\n\\s]*\\\\IN&#123;Y&#125;[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(yes-or-no-p[\\n\\s]*\"a[\\n\\s]*~S[\\n\\s]*message\"[\\n\\s]*'frightening\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*a[\\n\\s]*FRIGHTENING[\\n\\s]*message[\\n\\s]*\\(Yes[\\n\\s]*or[\\n\\s]*No\\)[\\n\\s]*\\\\IN&#123;no&#125;[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(y-or-n-p[\\n\\s]*\"Produce[\\n\\s]*listing[\\n\\s]*file\\?\"\\)[\\n\\s]*[\\n\\s]*\\\\OUT[\\n\\s]*Produce[\\n\\s]*listing[\\n\\s]*file\\?[\\n\\s]*\\\\OUT[\\n\\s]*Please[\\n\\s]*respond[\\n\\s]*with[\\n\\s]*Y[\\n\\s]*or[\\n\\s]*N\\.[\\n\\s]*\\\\IN&#123;n&#125;[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (setq a-stream (make-string-input-stream \"a-stream\")\n        b-stream (make-string-input-stream \"b-stream\"))\n*→* #&#60;String Input Stream&#62; \n (setq s-stream (make-synonym-stream 'c-stream))\n*→* #&#60;SYNONYM-STREAM for C-STREAM&#62; \n (setq c-stream a-stream)\n*→* #&#60;String Input Stream&#62; \n (read s-stream) *→* A-STREAM\n (setq c-stream b-stream)\n*→* #&#60;String Input Stream&#62; \n (read s-stream) *→* B-STREAM\n\\endcode","\\(setq[\\n\\s]*a-stream[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"a-stream\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*b-stream[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"b-stream\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;String[\\n\\s]*Input[\\n\\s]*Stream&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*s-stream[\\n\\s]*\\(make-synonym-stream[\\n\\s]*'c-stream\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;SYNONYM-STREAM[\\n\\s]*for[\\n\\s]*C-STREAM&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*c-stream[\\n\\s]*a-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;String[\\n\\s]*Input[\\n\\s]*Stream&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*s-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A-STREAM[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*c-stream[\\n\\s]*b-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;String[\\n\\s]*Input[\\n\\s]*Stream&#62;[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*s-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*B-STREAM"],["\\code\n (setq a-stream (make-string-output-stream)\n        b-stream (make-string-output-stream)) *→* #&#60;String Output Stream&#62;\n (format (make-broadcast-stream a-stream b-stream)\n          \"this will go to both streams\") *→* NIL\n (get-output-stream-string a-stream) *→* \"this will go to both streams\"\n (get-output-stream-string b-stream) *→* \"this will go to both streams\"\n\\endcode","\\(setq[\\n\\s]*a-stream[\\n\\s]*\\(make-string-output-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*b-stream[\\n\\s]*\\(make-string-output-stream\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;String[\\n\\s]*Output[\\n\\s]*Stream&#62;[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*\\(make-broadcast-stream[\\n\\s]*a-stream[\\n\\s]*b-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"this[\\n\\s]*will[\\n\\s]*go[\\n\\s]*to[\\n\\s]*both[\\n\\s]*streams\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(get-output-stream-string[\\n\\s]*a-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"this[\\n\\s]*will[\\n\\s]*go[\\n\\s]*to[\\n\\s]*both[\\n\\s]*streams\"[\\n\\s]*[\\n\\s]*\\(get-output-stream-string[\\n\\s]*b-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"this[\\n\\s]*will[\\n\\s]*go[\\n\\s]*to[\\n\\s]*both[\\n\\s]*streams\""],["\\code\n (with-output-to-string (out)\n    (with-input-from-string (in \"input...\")\n      (let ((two (make-two-way-stream in out)))\n        (format two \"output...\")\n        (setq what-is-read (read two))))) *→* \"output...\"\n what-is-read *→* INPUT... \n\\endcode","\\(with-output-to-string[\\n\\s]*\\(out\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(in[\\n\\s]*\"input\\.\\.\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(two[\\n\\s]*\\(make-two-way-stream[\\n\\s]*in[\\n\\s]*out\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*two[\\n\\s]*\"output\\.\\.\\.\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*what-is-read[\\n\\s]*\\(read[\\n\\s]*two\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"output\\.\\.\\.\"[\\n\\s]*[\\n\\s]*what-is-read[\\n\\s]*\\*\\→\\*[\\n\\s]*INPUT\\.\\.\\."],["\\code\n (let ((out (make-string-output-stream)))\n    (with-open-stream \n        (s (make-echo-stream\n            (make-string-input-stream \"this-is-read-and-echoed\")\n            out))\n      (read s)\n      (format s \" * this-is-direct-output\")\n      (get-output-stream-string out)))\n*→* \"this-is-read-and-echoed * this-is-direct-output\"\n\\endcode","\\(let[\\n\\s]*\\(\\(out[\\n\\s]*\\(make-string-output-stream\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-open-stream[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(s[\\n\\s]*\\(make-echo-stream[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"this-is-read-and-echoed\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*out\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*s[\\n\\s]*\"[\\n\\s]*\\*[\\n\\s]*this-is-direct-output\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(get-output-stream-string[\\n\\s]*out\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"this-is-read-and-echoed[\\n\\s]*\\*[\\n\\s]*this-is-direct-output\""],["\\code\n (read (make-concatenated-stream\n         (make-string-input-stream \"1\")\n         (make-string-input-stream \"2\"))) *→* 12\n\\endcode","\\(read[\\n\\s]*\\(make-concatenated-stream[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"1\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"2\"\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*12"],["\\code\n (setq a-stream (make-string-output-stream)\n        a-string \"abcdefghijklm\") *→* \"abcdefghijklm\"\n (write-string a-string a-stream) *→* \"abcdefghijklm\"\n (get-output-stream-string a-stream) *→* \"abcdefghijklm\"\n (get-output-stream-string a-stream) *→* \"\"\n\\endcode","\\(setq[\\n\\s]*a-stream[\\n\\s]*\\(make-string-output-stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a-string[\\n\\s]*\"abcdefghijklm\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abcdefghijklm\"[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*a-string[\\n\\s]*a-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abcdefghijklm\"[\\n\\s]*[\\n\\s]*\\(get-output-stream-string[\\n\\s]*a-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"abcdefghijklm\"[\\n\\s]*[\\n\\s]*\\(get-output-stream-string[\\n\\s]*a-stream\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\""],["\\code\n (let ((string-stream (make-string-input-stream \"1 one \")))\n   (list (read string-stream nil nil)\n         (read string-stream nil nil)\n         (read string-stream nil nil)))\n*→* (1 ONE NIL)\n\n (read (make-string-input-stream \"prefixtargetsuffix\" 6 12)) *→* TARGET\n\\endcode","\\(let[\\n\\s]*\\(\\(string-stream[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"1[\\n\\s]*one[\\n\\s]*\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(read[\\n\\s]*string-stream[\\n\\s]*nil[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*string-stream[\\n\\s]*nil[\\n\\s]*nil\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*string-stream[\\n\\s]*nil[\\n\\s]*nil\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*ONE[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*\\(make-string-input-stream[\\n\\s]*\"prefixtargetsuffix\"[\\n\\s]*6[\\n\\s]*12\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TARGET"],["\\code\n (let ((s (make-string-output-stream)))\n   (write-string \"testing... \" s)\n   (prin1 1234 s)\n   (get-output-stream-string s))\n*→* \"testing... 1234\"\n\\endcode","\\(let[\\n\\s]*\\(\\(s[\\n\\s]*\\(make-string-output-stream\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(write-string[\\n\\s]*\"testing\\.\\.\\.[\\n\\s]*\"[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*1234[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(get-output-stream-string[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"testing\\.\\.\\.[\\n\\s]*1234\""],["\\code\n (with-input-from-string (s \"XXX1 2 3 4xxx\"\n                             :index ind\n                             :start 3 :end 10)\n    (+ (read s) (read s) (read s))) *→* 6\n ind *→* 9\n (with-input-from-string (s \"Animal Crackers\" :index j :start 6)\n   (read s)) *→* CRACKERS\n\\endcode","\\(with-input-from-string[\\n\\s]*\\(s[\\n\\s]*\"XXX1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4xxx\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:index[\\n\\s]*ind[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:start[\\n\\s]*3[\\n\\s]*:end[\\n\\s]*10\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*\\(read[\\n\\s]*s\\)[\\n\\s]*\\(read[\\n\\s]*s\\)[\\n\\s]*\\(read[\\n\\s]*s\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*ind[\\n\\s]*\\*\\→\\*[\\n\\s]*9[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(s[\\n\\s]*\"Animal[\\n\\s]*Crackers\"[\\n\\s]*:index[\\n\\s]*j[\\n\\s]*:start[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(read[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CRACKERS"],["\\code\n (setq fstr (make-array '(0) :element-type 'base-char\n                             :fill-pointer 0 :adjustable t)) *→* \"\"\n (with-output-to-string (s fstr)\n    (format s \"here's some output\")\n    (input-stream-p s)) *→ false*\n fstr *→* \"here's some output\"\n\\endcode","\\(setq[\\n\\s]*fstr[\\n\\s]*\\(make-array[\\n\\s]*'\\(0\\)[\\n\\s]*:element-type[\\n\\s]*'base-char[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*0[\\n\\s]*:adjustable[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\"[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(s[\\n\\s]*fstr\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*s[\\n\\s]*\"here's[\\n\\s]*some[\\n\\s]*output\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(input-stream-p[\\n\\s]*s\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*fstr[\\n\\s]*\\*\\→\\*[\\n\\s]*\"here's[\\n\\s]*some[\\n\\s]*output\""],["\\code\n% %  (with-output-to-string (out)\n% %    (with-input-from-string (in \"enter &#62; \")\n% %      (let ((two-way (make-two-way-stream in out)))\n% %        (setq *debug-io* two-way)))) *→* \"\"           \n% %  *debug-io* *→* #&#60;TWO-WAY-STREAM&#62;\n% % \\endcode","%[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(out\\)[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(in[\\n\\s]*\"enter[\\n\\s]*&#62;[\\n\\s]*\"\\)[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(two-way[\\n\\s]*\\(make-two-way-stream[\\n\\s]*in[\\n\\s]*out\\)\\)\\)[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*debug-io\\*[\\n\\s]*two-way\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*%[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\*debug-io\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;TWO-WAY-STREAM&#62;[\\n\\s]*%[\\n\\s]*%"],["\\code\n%  (with-output-to-string (*error-output*)\n%    (warn \"this string is sent to *error-output*\"))\n%  *→* \"Warning: this string is sent to *error-output*\n% \" ;The exact format of this string is \\term&#123;implementation-dependent&#125;.\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*error-output\\*\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"this[\\n\\s]*string[\\n\\s]*is[\\n\\s]*sent[\\n\\s]*to[\\n\\s]*\\*error-output\\*\"\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Warning:[\\n\\s]*this[\\n\\s]*string[\\n\\s]*is[\\n\\s]*sent[\\n\\s]*to[\\n\\s]*\\*error-output\\*[\\n\\s]*%[\\n\\s]*\"[\\n\\s]*;The[\\n\\s]*exact[\\n\\s]*format[\\n\\s]*of[\\n\\s]*this[\\n\\s]*string[\\n\\s]*is[\\n\\s]*\\\\term&#123;implementation-dependent&#125;\\.[\\n\\s]*%"],["\\code\n%  (with-input-from-string (*standard-input* \"1001\")\n%     (+ 990 (read))) *→* 1991                       \n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(\\*standard-input\\*[\\n\\s]*\"1001\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*990[\\n\\s]*\\(read\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1991[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*%"],["\\code\n%  (progn (setq out (with-output-to-string (*standard-output*)\n%                      (print \"print and format t send things to\")\n%                      (format t \"*standard-output* now going to a string\")))\n%         :done)\n% *→* :DONE\n%  out\n% *→* \"\n% \\\\\"print and format t send things to\\\\\" *standard-output* now going to a string\"\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*out[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*standard-output\\*\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\"print[\\n\\s]*and[\\n\\s]*format[\\n\\s]*t[\\n\\s]*send[\\n\\s]*things[\\n\\s]*to\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"\\*standard-output\\*[\\n\\s]*now[\\n\\s]*going[\\n\\s]*to[\\n\\s]*a[\\n\\s]*string\"\\)\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:done\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*:DONE[\\n\\s]*%[\\n\\s]*[\\n\\s]*out[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*%[\\n\\s]*\\\\\\\\\"print[\\n\\s]*and[\\n\\s]*format[\\n\\s]*t[\\n\\s]*send[\\n\\s]*things[\\n\\s]*to\\\\\\\\\"[\\n\\s]*\\*standard-output\\*[\\n\\s]*now[\\n\\s]*going[\\n\\s]*to[\\n\\s]*a[\\n\\s]*string\"[\\n\\s]*%"],["\\code\n%  (defun fact (n) (if (&#60; n 2) 1 (* n (fact (- n 1)))))\n% *→* FACT\n%  (trace fact)\n% *→* (FACT)\n% ;; Of course, the format of traced output is implementation-dependent.\n%  (with-output-to-string (*trace-output*)\n%    (fact 3)) \n% *→* \"\n% 1 Enter FACT 3\n% | 2 Enter FACT 2\n% |   3 Enter FACT 1\n% |   3 Exit FACT 1\n% | 2 Exit FACT 2\n% 1 Exit FACT 6\"\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*fact[\\n\\s]*\\(n\\)[\\n\\s]*\\(if[\\n\\s]*\\(&#60;[\\n\\s]*n[\\n\\s]*2\\)[\\n\\s]*1[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*\\(fact[\\n\\s]*\\(-[\\n\\s]*n[\\n\\s]*1\\)\\)\\)\\)\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*FACT[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(trace[\\n\\s]*fact\\)[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FACT\\)[\\n\\s]*%[\\n\\s]*;;[\\n\\s]*Of[\\n\\s]*course,[\\n\\s]*the[\\n\\s]*format[\\n\\s]*of[\\n\\s]*traced[\\n\\s]*output[\\n\\s]*is[\\n\\s]*implementation-dependent\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*trace-output\\*\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fact[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*%[\\n\\s]*1[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*3[\\n\\s]*%[\\n\\s]*|[\\n\\s]*2[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*2[\\n\\s]*%[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*%[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*%[\\n\\s]*|[\\n\\s]*2[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*2[\\n\\s]*%[\\n\\s]*1[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*6\"[\\n\\s]*%"],["\\code\n%  (progn (prin1 'foo) (prin1 'bar *terminal-io*))\n% \\OUT FOOBAR\n% *→* BAR\n%  (with-output-to-string (*standard-output*)\n%    (prin1 'foo) \n%    (prin1 'bar *terminal-io*))\n% \\OUT BAR\n% *→* \"FOO\"\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(prin1[\\n\\s]*'foo\\)[\\n\\s]*\\(prin1[\\n\\s]*'bar[\\n\\s]*\\*terminal-io\\*\\)\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*FOOBAR[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*BAR[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*standard-output\\*\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*'foo\\)[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*'bar[\\n\\s]*\\*terminal-io\\*\\)\\)[\\n\\s]*%[\\n\\s]*\\\\OUT[\\n\\s]*BAR[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO\"[\\n\\s]*%"],["\\code\n (with-output-to-string (*error-output*)\n   (warn \"this string is sent to *error-output*\"))\n *→* \"Warning: this string is sent to *error-output*\n\" ;The exact format of this string is \\term&#123;implementation-dependent&#125;.\n\\medbreak\n (with-input-from-string (*standard-input* \"1001\")\n    (+ 990 (read))) *→* 1991                       \n\\medbreak\n (progn (setq out (with-output-to-string (*standard-output*)\n                     (print \"print and format t send things to\")\n                     (format t \"*standard-output* now going to a string\")))\n        :done)\n*→* :DONE\n out\n*→* \"\n\\\\\"print and format t send things to\\\\\" *standard-output* now going to a string\"\n\\medbreak\n (defun fact (n) (if (&#60; n 2) 1 (* n (fact (- n 1)))))\n*→* FACT\n (trace fact)\n*→* (FACT)\n;; Of course, the format of traced output is implementation-dependent.\n (with-output-to-string (*trace-output*)\n   (fact 3)) \n*→* \"\n1 Enter FACT 3\n| 2 Enter FACT 2\n|   3 Enter FACT 1\n|   3 Exit FACT 1\n| 2 Exit FACT 2\n1 Exit FACT 6\"\n\\endcode","\\(with-output-to-string[\\n\\s]*\\(\\*error-output\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(warn[\\n\\s]*\"this[\\n\\s]*string[\\n\\s]*is[\\n\\s]*sent[\\n\\s]*to[\\n\\s]*\\*error-output\\*\"\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Warning:[\\n\\s]*this[\\n\\s]*string[\\n\\s]*is[\\n\\s]*sent[\\n\\s]*to[\\n\\s]*\\*error-output\\*[\\n\\s]*\"[\\n\\s]*;The[\\n\\s]*exact[\\n\\s]*format[\\n\\s]*of[\\n\\s]*this[\\n\\s]*string[\\n\\s]*is[\\n\\s]*\\\\term&#123;implementation-dependent&#125;\\.[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(with-input-from-string[\\n\\s]*\\(\\*standard-input\\*[\\n\\s]*\"1001\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*990[\\n\\s]*\\(read\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1991[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(progn[\\n\\s]*\\(setq[\\n\\s]*out[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*standard-output\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*\"print[\\n\\s]*and[\\n\\s]*format[\\n\\s]*t[\\n\\s]*send[\\n\\s]*things[\\n\\s]*to\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*t[\\n\\s]*\"\\*standard-output\\*[\\n\\s]*now[\\n\\s]*going[\\n\\s]*to[\\n\\s]*a[\\n\\s]*string\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:done\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:DONE[\\n\\s]*[\\n\\s]*out[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*\\\\\\\\\"print[\\n\\s]*and[\\n\\s]*format[\\n\\s]*t[\\n\\s]*send[\\n\\s]*things[\\n\\s]*to\\\\\\\\\"[\\n\\s]*\\*standard-output\\*[\\n\\s]*now[\\n\\s]*going[\\n\\s]*to[\\n\\s]*a[\\n\\s]*string\"[\\n\\s]*\\\\medbreak[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*fact[\\n\\s]*\\(n\\)[\\n\\s]*\\(if[\\n\\s]*\\(&#60;[\\n\\s]*n[\\n\\s]*2\\)[\\n\\s]*1[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*\\(fact[\\n\\s]*\\(-[\\n\\s]*n[\\n\\s]*1\\)\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FACT[\\n\\s]*[\\n\\s]*\\(trace[\\n\\s]*fact\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(FACT\\)[\\n\\s]*;;[\\n\\s]*Of[\\n\\s]*course,[\\n\\s]*the[\\n\\s]*format[\\n\\s]*of[\\n\\s]*traced[\\n\\s]*output[\\n\\s]*is[\\n\\s]*implementation-dependent\\.[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*trace-output\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(fact[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*1[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*3[\\n\\s]*|[\\n\\s]*2[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*2[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*Enter[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*|[\\n\\s]*[\\n\\s]*[\\n\\s]*3[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*1[\\n\\s]*|[\\n\\s]*2[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*2[\\n\\s]*1[\\n\\s]*Exit[\\n\\s]*FACT[\\n\\s]*6\""],["\\code\n (progn (prin1 'foo) (prin1 'bar *terminal-io*))\n\\OUT FOOBAR\n*→* BAR\n (with-output-to-string (*standard-output*)\n   (prin1 'foo) \n   (prin1 'bar *terminal-io*))\n\\OUT BAR\n*→* \"FOO\"\n\\endcode","\\(progn[\\n\\s]*\\(prin1[\\n\\s]*'foo\\)[\\n\\s]*\\(prin1[\\n\\s]*'bar[\\n\\s]*\\*terminal-io\\*\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*FOOBAR[\\n\\s]*\\*\\→\\*[\\n\\s]*BAR[\\n\\s]*[\\n\\s]*\\(with-output-to-string[\\n\\s]*\\(\\*standard-output\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*'foo\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(prin1[\\n\\s]*'bar[\\n\\s]*\\*terminal-io\\*\\)\\)[\\n\\s]*\\\\OUT[\\n\\s]*BAR[\\n\\s]*\\*\\→\\*[\\n\\s]*\"FOO\""],["\\code\n (with-input-from-string (s \"(FOO\")\n   (handler-case (read s)\n     (end-of-file (c)\n       (format nil \"~&End of file on ~S.\" (stream-error-stream c)))))\n\"End of file on #&#60;String Stream&#62;.\"\n\\endcode","\\(with-input-from-string[\\n\\s]*\\(s[\\n\\s]*\"\\(FOO\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-case[\\n\\s]*\\(read[\\n\\s]*s\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(end-of-file[\\n\\s]*\\(c\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(format[\\n\\s]*nil[\\n\\s]*\"~&End[\\n\\s]*of[\\n\\s]*file[\\n\\s]*on[\\n\\s]*~S\\.\"[\\n\\s]*\\(stream-error-stream[\\n\\s]*c\\)\\)\\)\\)\\)[\\n\\s]*\"End[\\n\\s]*of[\\n\\s]*file[\\n\\s]*on[\\n\\s]*#&#60;String[\\n\\s]*Stream&#62;\\.\""],["\\code\n (simple-string-p \"aaaaaa\") *→ true*\n (simple-string-p (make-array 6 \n                              :element-type 'character \n                              :fill-pointer t)) *→ false*\n\\endcode","\\(simple-string-p[\\n\\s]*\"aaaaaa\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(simple-string-p[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:element-type[\\n\\s]*'character[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (simple-string-p \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'simple-string)\n\\endcode","\\(simple-string-p[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'simple-string\\)"],["\\code\n (setq my-simple-string (make-string 6 :initial-element #\\\\A)) *→* \"AAAAAA\"\n (schar my-simple-string 4) *→* #\\\\A\n (setf (schar my-simple-string 4) #\\\\B) *→* #\\\\B\n my-simple-string *→* \"AAAABA\"\n (setq my-filled-string\n       (make-array 6 :element-type 'character\n                     :fill-pointer 5\n                     :initial-contents my-simple-string))\n*→* \"AAAAB\"\n (char my-filled-string 4) *→* #\\\\B\n (char my-filled-string 5) *→* #\\\\A\n (setf (char my-filled-string 3) #\\\\C) *→* #\\\\C\n (setf (char my-filled-string 5) #\\\\D) *→* #\\\\D\n (setf (fill-pointer my-filled-string) 6) *→* 6\n my-filled-string *→* \"AAACBD\"\n\\endcode","\\(setq[\\n\\s]*my-simple-string[\\n\\s]*\\(make-string[\\n\\s]*6[\\n\\s]*:initial-element[\\n\\s]*#\\\\\\\\A\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"AAAAAA\"[\\n\\s]*[\\n\\s]*\\(schar[\\n\\s]*my-simple-string[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(schar[\\n\\s]*my-simple-string[\\n\\s]*4\\)[\\n\\s]*#\\\\\\\\B\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\B[\\n\\s]*[\\n\\s]*my-simple-string[\\n\\s]*\\*\\→\\*[\\n\\s]*\"AAAABA\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*my-filled-string[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-array[\\n\\s]*6[\\n\\s]*:element-type[\\n\\s]*'character[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:fill-pointer[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:initial-contents[\\n\\s]*my-simple-string\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"AAAAB\"[\\n\\s]*[\\n\\s]*\\(char[\\n\\s]*my-filled-string[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\B[\\n\\s]*[\\n\\s]*\\(char[\\n\\s]*my-filled-string[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(char[\\n\\s]*my-filled-string[\\n\\s]*3\\)[\\n\\s]*#\\\\\\\\C\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\C[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(char[\\n\\s]*my-filled-string[\\n\\s]*5\\)[\\n\\s]*#\\\\\\\\D\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\D[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(fill-pointer[\\n\\s]*my-filled-string\\)[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*my-filled-string[\\n\\s]*\\*\\→\\*[\\n\\s]*\"AAACBD\""],["\\code\n (char s j) \\EQ (aref (the string s) j)\n\\endcode","\\(char[\\n\\s]*s[\\n\\s]*j\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(aref[\\n\\s]*\\(the[\\n\\s]*string[\\n\\s]*s\\)[\\n\\s]*j\\)"],["\\code\n (string \"already a string\") *→* \"already a string\"\n (string 'elm) *→* \"ELM\"\n (string #\\\\c) *→* \"c\"\n\\endcode","\\(string[\\n\\s]*\"already[\\n\\s]*a[\\n\\s]*string\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"already[\\n\\s]*a[\\n\\s]*string\"[\\n\\s]*[\\n\\s]*\\(string[\\n\\s]*'elm\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"ELM\"[\\n\\s]*[\\n\\s]*\\(string[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"c\""],["\\code\n (string-upcase \"abcde\") *→* \"ABCDE\"\n (string-upcase \"Dr. Livingston, I presume?\")\n*→* \"DR. LIVINGSTON, I PRESUME?\"\n (string-upcase \"Dr. Livingston, I presume?\" :start 6 :end 10)\n*→* \"Dr. LiVINGston, I presume?\"\n (string-downcase \"Dr. Livingston, I presume?\")\n*→* \"dr. livingston, i presume?\"\n\n (string-capitalize \"elm 13c arthur;fig don't\") *→* \"Elm 13c Arthur;Fig Don'T\"\n (string-capitalize \" hello \") *→* \" Hello \"\n (string-capitalize \"occlUDeD cASEmenTs FOreSTAll iNADVertent DEFenestraTION\")\n*→*  \"Occluded Casements Forestall Inadvertent Defenestration\"\n (string-capitalize 'kludgy-hash-search) *→* \"Kludgy-Hash-Search\"\n (string-capitalize \"DON'T!\") *→* \"Don'T!\"    ;not \"Don't!\"\n (string-capitalize \"pipe 13a, foo16c\") *→* \"Pipe 13a, Foo16c\"\n\n (setq str (copy-seq \"0123ABCD890a\")) *→* \"0123ABCD890a\"\n (nstring-downcase str :start 5 :end 7) *→* \"0123AbcD890a\"\n str *→* \"0123AbcD890a\"\n\\endcode","\\(string-upcase[\\n\\s]*\"abcde\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"ABCDE\"[\\n\\s]*[\\n\\s]*\\(string-upcase[\\n\\s]*\"Dr\\.[\\n\\s]*Livingston,[\\n\\s]*I[\\n\\s]*presume\\?\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"DR\\.[\\n\\s]*LIVINGSTON,[\\n\\s]*I[\\n\\s]*PRESUME\\?\"[\\n\\s]*[\\n\\s]*\\(string-upcase[\\n\\s]*\"Dr\\.[\\n\\s]*Livingston,[\\n\\s]*I[\\n\\s]*presume\\?\"[\\n\\s]*:start[\\n\\s]*6[\\n\\s]*:end[\\n\\s]*10\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Dr\\.[\\n\\s]*LiVINGston,[\\n\\s]*I[\\n\\s]*presume\\?\"[\\n\\s]*[\\n\\s]*\\(string-downcase[\\n\\s]*\"Dr\\.[\\n\\s]*Livingston,[\\n\\s]*I[\\n\\s]*presume\\?\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"dr\\.[\\n\\s]*livingston,[\\n\\s]*i[\\n\\s]*presume\\?\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(string-capitalize[\\n\\s]*\"elm[\\n\\s]*13c[\\n\\s]*arthur;fig[\\n\\s]*don't\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Elm[\\n\\s]*13c[\\n\\s]*Arthur;Fig[\\n\\s]*Don'T\"[\\n\\s]*[\\n\\s]*\\(string-capitalize[\\n\\s]*\"[\\n\\s]*hello[\\n\\s]*\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*Hello[\\n\\s]*\"[\\n\\s]*[\\n\\s]*\\(string-capitalize[\\n\\s]*\"occlUDeD[\\n\\s]*cASEmenTs[\\n\\s]*FOreSTAll[\\n\\s]*iNADVertent[\\n\\s]*DEFenestraTION\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*[\\n\\s]*\"Occluded[\\n\\s]*Casements[\\n\\s]*Forestall[\\n\\s]*Inadvertent[\\n\\s]*Defenestration\"[\\n\\s]*[\\n\\s]*\\(string-capitalize[\\n\\s]*'kludgy-hash-search\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Kludgy-Hash-Search\"[\\n\\s]*[\\n\\s]*\\(string-capitalize[\\n\\s]*\"DON'T!\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Don'T!\"[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;not[\\n\\s]*\"Don't!\"[\\n\\s]*[\\n\\s]*\\(string-capitalize[\\n\\s]*\"pipe[\\n\\s]*13a,[\\n\\s]*foo16c\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Pipe[\\n\\s]*13a,[\\n\\s]*Foo16c\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*str[\\n\\s]*\\(copy-seq[\\n\\s]*\"0123ABCD890a\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0123ABCD890a\"[\\n\\s]*[\\n\\s]*\\(nstring-downcase[\\n\\s]*str[\\n\\s]*:start[\\n\\s]*5[\\n\\s]*:end[\\n\\s]*7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0123AbcD890a\"[\\n\\s]*[\\n\\s]*str[\\n\\s]*\\*\\→\\*[\\n\\s]*\"0123AbcD890a\""],["\\code\n (string-trim \"abc\" \"abcaakaaakabcaaa\") *→* \"kaaak\"\n (string-trim '(#\\\\Space #\\\\Tab #\\\\Newline) \" garbanzo beans\n        \") *→* \"garbanzo beans\"\n (string-trim \" (*)\" \" ( *three (silly) words* ) \")\n*→* \"three (silly) words\"\n\n (string-left-trim \"abc\" \"labcabcabc\") *→* \"labcabcabc\"\n (string-left-trim \" (*)\" \" ( *three (silly) words* ) \")\n*→* \"three (silly) words* ) \"\n\n (string-right-trim \" (*)\" \" ( *three (silly) words* ) \") \n*→* \" ( *three (silly) words\"\n\\endcode","\\(string-trim[\\n\\s]*\"abc\"[\\n\\s]*\"abcaakaaakabcaaa\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"kaaak\"[\\n\\s]*[\\n\\s]*\\(string-trim[\\n\\s]*'\\(#\\\\\\\\Space[\\n\\s]*#\\\\\\\\Tab[\\n\\s]*#\\\\\\\\Newline\\)[\\n\\s]*\"[\\n\\s]*garbanzo[\\n\\s]*beans[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"garbanzo[\\n\\s]*beans\"[\\n\\s]*[\\n\\s]*\\(string-trim[\\n\\s]*\"[\\n\\s]*\\(\\*\\)\"[\\n\\s]*\"[\\n\\s]*\\([\\n\\s]*\\*three[\\n\\s]*\\(silly\\)[\\n\\s]*words\\*[\\n\\s]*\\)[\\n\\s]*\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"three[\\n\\s]*\\(silly\\)[\\n\\s]*words\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(string-left-trim[\\n\\s]*\"abc\"[\\n\\s]*\"labcabcabc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"labcabcabc\"[\\n\\s]*[\\n\\s]*\\(string-left-trim[\\n\\s]*\"[\\n\\s]*\\(\\*\\)\"[\\n\\s]*\"[\\n\\s]*\\([\\n\\s]*\\*three[\\n\\s]*\\(silly\\)[\\n\\s]*words\\*[\\n\\s]*\\)[\\n\\s]*\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"three[\\n\\s]*\\(silly\\)[\\n\\s]*words\\*[\\n\\s]*\\)[\\n\\s]*\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(string-right-trim[\\n\\s]*\"[\\n\\s]*\\(\\*\\)\"[\\n\\s]*\"[\\n\\s]*\\([\\n\\s]*\\*three[\\n\\s]*\\(silly\\)[\\n\\s]*words\\*[\\n\\s]*\\)[\\n\\s]*\"\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\"[\\n\\s]*\\([\\n\\s]*\\*three[\\n\\s]*\\(silly\\)[\\n\\s]*words\""],["\\code\n%  (not (= (- end1 start1) (- end2 start2)))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(=[\\n\\s]*\\(-[\\n\\s]*end1[\\n\\s]*start1\\)[\\n\\s]*\\(-[\\n\\s]*end2[\\n\\s]*start2\\)\\)\\)[\\n\\s]*%"],["\\code\n (string= \"foo\" \"foo\") *→ true*\n (string= \"foo\" \"Foo\") *→ false*\n (string= \"foo\" \"bar\") *→ false*\n (string= \"together\" \"frog\" :start1 1 :end1 3 :start2 2) *→ true*\n (string-equal \"foo\" \"Foo\") *→ true*\n (string= \"abcd\" \"01234abcd9012\" :start2 5 :end2 9) *→ true*\n (string&#60; \"aaaa\" \"aaab\") *→* 3\n (string&#62;= \"aaaaa\" \"aaaa\") *→* 4\n (string-not-greaterp \"Abcde\" \"abcdE\") *→* 5\n (string-lessp \"012AAAA789\" \"01aaab6\" :start1 3 :end1 7\n                                      :start2 2 :end2 6) *→* 6\n (string-not-equal \"AAAA\" \"aaaA\") *→ false*\n\\endcode","\\(string=[\\n\\s]*\"foo\"[\\n\\s]*\"foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(string=[\\n\\s]*\"foo\"[\\n\\s]*\"Foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(string=[\\n\\s]*\"foo\"[\\n\\s]*\"bar\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(string=[\\n\\s]*\"together\"[\\n\\s]*\"frog\"[\\n\\s]*:start1[\\n\\s]*1[\\n\\s]*:end1[\\n\\s]*3[\\n\\s]*:start2[\\n\\s]*2\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(string-equal[\\n\\s]*\"foo\"[\\n\\s]*\"Foo\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(string=[\\n\\s]*\"abcd\"[\\n\\s]*\"01234abcd9012\"[\\n\\s]*:start2[\\n\\s]*5[\\n\\s]*:end2[\\n\\s]*9\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(string&#60;[\\n\\s]*\"aaaa\"[\\n\\s]*\"aaab\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(string&#62;=[\\n\\s]*\"aaaaa\"[\\n\\s]*\"aaaa\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(string-not-greaterp[\\n\\s]*\"Abcde\"[\\n\\s]*\"abcdE\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5[\\n\\s]*[\\n\\s]*\\(string-lessp[\\n\\s]*\"012AAAA789\"[\\n\\s]*\"01aaab6\"[\\n\\s]*:start1[\\n\\s]*3[\\n\\s]*:end1[\\n\\s]*7[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:start2[\\n\\s]*2[\\n\\s]*:end2[\\n\\s]*6\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\(string-not-equal[\\n\\s]*\"AAAA\"[\\n\\s]*\"aaaA\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (stringp \"aaaaaa\") *→ true*\n (stringp #\\\\a) *→ false*\n\\endcode","\\(stringp[\\n\\s]*\"aaaaaa\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(stringp[\\n\\s]*#\\\\\\\\a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (stringp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'string)\n\\endcode","\\(stringp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'string\\)"],["\\code\n (make-string 10 :initial-element #\\\\5) *→* \"5555555555\"\n (length (make-string 10)) *→* 10\n\\endcode","\\(make-string[\\n\\s]*10[\\n\\s]*:initial-element[\\n\\s]*#\\\\\\\\5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"5555555555\"[\\n\\s]*[\\n\\s]*\\(length[\\n\\s]*\\(make-string[\\n\\s]*10\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code\n (defstruct person (name 007 :type string)) \n (make-person :name \"James\")\n (make-person)\n\\endcode","\\(defstruct[\\n\\s]*person[\\n\\s]*\\(name[\\n\\s]*007[\\n\\s]*:type[\\n\\s]*string\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-person[\\n\\s]*:name[\\n\\s]*\"James\"\\)[\\n\\s]*[\\n\\s]*\\(make-person\\)"],["\\code\n (defstruct ship\n   (x-position 0.0 :type short-float)\n   (y-position 0.0 :type short-float)\n   (x-velocity 0.0 :type short-float)\n   (y-velocity 0.0 :type short-float)\n   (mass *default-ship-mass* :type short-float :read-only t))\n\\endcode","\\(defstruct[\\n\\s]*ship[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x-position[\\n\\s]*0\\.0[\\n\\s]*:type[\\n\\s]*short-float\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y-position[\\n\\s]*0\\.0[\\n\\s]*:type[\\n\\s]*short-float\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(x-velocity[\\n\\s]*0\\.0[\\n\\s]*:type[\\n\\s]*short-float\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(y-velocity[\\n\\s]*0\\.0[\\n\\s]*:type[\\n\\s]*short-float\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mass[\\n\\s]*\\*default-ship-mass\\*[\\n\\s]*:type[\\n\\s]*short-float[\\n\\s]*:read-only[\\n\\s]*t\\)\\)"],["\\code\n%  (defstruct door knob-color width material) *→* DOOR\n%  (setq my-door (make-door :knob-color 'red :width 5.0)) \n% *→* #S(DOOR :KNOB-COLOR RED :WIDTH 5.0 :MATERIAL NIL)\n%  (door-width my-door) *→* 5.0\n%  (setf (door-width my-door) 43.7)\n%  (door-width my-door) *→* 43.7\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*door[\\n\\s]*knob-color[\\n\\s]*width[\\n\\s]*material\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DOOR[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*my-door[\\n\\s]*\\(make-door[\\n\\s]*:knob-color[\\n\\s]*'red[\\n\\s]*:width[\\n\\s]*5\\.0\\)\\)[\\n\\s]*[\\n\\s]*%[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(DOOR[\\n\\s]*:KNOB-COLOR[\\n\\s]*RED[\\n\\s]*:WIDTH[\\n\\s]*5\\.0[\\n\\s]*:MATERIAL[\\n\\s]*NIL\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(door-width[\\n\\s]*my-door\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5\\.0[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(door-width[\\n\\s]*my-door\\)[\\n\\s]*43\\.7\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(door-width[\\n\\s]*my-door\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*43\\.7[\\n\\s]*%"],["\\code\n (defstruct (door (:conc-name dr-)) knob-color width material) *→* DOOR\n (setq my-door (make-door :knob-color 'red :width 5.0)) \n*→* #S(DOOR :KNOB-COLOR RED :WIDTH 5.0 :MATERIAL NIL)\n (dr-width my-door) *→* 5.0\n (setf (dr-width my-door) 43.7) *→* 43.7\n (dr-width my-door) *→* 43.7\n\\endcode","\\(defstruct[\\n\\s]*\\(door[\\n\\s]*\\(:conc-name[\\n\\s]*dr-\\)\\)[\\n\\s]*knob-color[\\n\\s]*width[\\n\\s]*material\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DOOR[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*my-door[\\n\\s]*\\(make-door[\\n\\s]*:knob-color[\\n\\s]*'red[\\n\\s]*:width[\\n\\s]*5\\.0\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(DOOR[\\n\\s]*:KNOB-COLOR[\\n\\s]*RED[\\n\\s]*:WIDTH[\\n\\s]*5\\.0[\\n\\s]*:MATERIAL[\\n\\s]*NIL\\)[\\n\\s]*[\\n\\s]*\\(dr-width[\\n\\s]*my-door\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5\\.0[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(dr-width[\\n\\s]*my-door\\)[\\n\\s]*43\\.7\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*43\\.7[\\n\\s]*[\\n\\s]*\\(dr-width[\\n\\s]*my-door\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*43\\.7"],["\\code\n (\\param&#123;copier-name&#125; x) = (copy-structure (the \\param&#123;structure-name&#125; x))\n\\endcode","\\(\\\\param&#123;copier-name&#125;[\\n\\s]*x\\)[\\n\\s]*=[\\n\\s]*\\(copy-structure[\\n\\s]*\\(the[\\n\\s]*\\\\param&#123;structure-name&#125;[\\n\\s]*x\\)\\)"],["\\code\n (defstruct person name age sex)\n\\endcode","\\(defstruct[\\n\\s]*person[\\n\\s]*name[\\n\\s]*age[\\n\\s]*sex\\)"],["\\code\n (defstruct (astronaut (:include person)\n                       (:conc-name astro-))\n    helmet-size\n    (favorite-beverage 'tang))\n\\endcode","\\(defstruct[\\n\\s]*\\(astronaut[\\n\\s]*\\(:include[\\n\\s]*person\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:conc-name[\\n\\s]*astro-\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*helmet-size[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(favorite-beverage[\\n\\s]*'tang\\)\\)"],["\\code\n (setq x (make-astronaut :name 'buzz\n                         :age 45.\n                         :sex t\n                         :helmet-size 17.5))\n (person-name x) *→* BUZZ\n (astro-name x) *→* BUZZ\n (astro-favorite-beverage x) *→* TANG\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*\\(make-astronaut[\\n\\s]*:name[\\n\\s]*'buzz[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:age[\\n\\s]*45\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:sex[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:helmet-size[\\n\\s]*17\\.5\\)\\)[\\n\\s]*[\\n\\s]*\\(person-name[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BUZZ[\\n\\s]*[\\n\\s]*\\(astro-name[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BUZZ[\\n\\s]*[\\n\\s]*\\(astro-favorite-beverage[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TANG"],["\\code\n (reduce #'+ astros :key #'person-age) ; obtains the total of the ages \n                                       ; of the possibly empty\n                                       ; sequence of astros\n\\endcode","\\(reduce[\\n\\s]*#'\\+[\\n\\s]*astros[\\n\\s]*:key[\\n\\s]*#'person-age\\)[\\n\\s]*;[\\n\\s]*obtains[\\n\\s]*the[\\n\\s]*total[\\n\\s]*of[\\n\\s]*the[\\n\\s]*ages[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*of[\\n\\s]*the[\\n\\s]*possibly[\\n\\s]*empty[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*sequence[\\n\\s]*of[\\n\\s]*astros"],["\\code\n (typep (make-astronaut) 'person) *→ true*\n\\endcode","\\(typep[\\n\\s]*\\(make-astronaut\\)[\\n\\s]*'person\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (:include \\param&#123;included-structure-name&#125; \\starparam&#123;slot-description&#125;)\n\\endcode","\\(:include[\\n\\s]*\\\\param&#123;included-structure-name&#125;[\\n\\s]*\\\\starparam&#123;slot-description&#125;\\)"],["\\code\n (defstruct (astronaut (:include person (age 45)))\n    helmet-size\n    (favorite-beverage 'tang))\n\\endcode","\\(defstruct[\\n\\s]*\\(astronaut[\\n\\s]*\\(:include[\\n\\s]*person[\\n\\s]*\\(age[\\n\\s]*45\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*helmet-size[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(favorite-beverage[\\n\\s]*'tang\\)\\)"],["\\code\n (defstruct (binop (:type list) :named (:initial-offset 2))\n   (operator '? :type symbol)   \n   operand-1\n   operand-2) *→* BINOP\n (defstruct (annotated-binop (:type list)\n                             (:initial-offset 3)\n                             (:include binop))\n  commutative associative identity) *→* ANNOTATED-BINOP\n (make-annotated-binop :operator '*\n                       :operand-1 'x\n                       :operand-2 5\n                       :commutative t\n                       :associative t\n                       :identity 1)\n   *→* (NIL NIL BINOP * X 5 NIL NIL NIL T T 1)\n\\endcode","\\(defstruct[\\n\\s]*\\(binop[\\n\\s]*\\(:type[\\n\\s]*list\\)[\\n\\s]*:named[\\n\\s]*\\(:initial-offset[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(operator[\\n\\s]*'\\?[\\n\\s]*:type[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BINOP[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*\\(annotated-binop[\\n\\s]*\\(:type[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:initial-offset[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:include[\\n\\s]*binop\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*commutative[\\n\\s]*associative[\\n\\s]*identity\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ANNOTATED-BINOP[\\n\\s]*[\\n\\s]*\\(make-annotated-binop[\\n\\s]*:operator[\\n\\s]*'\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:operand-1[\\n\\s]*'x[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:operand-2[\\n\\s]*5[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:commutative[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:associative[\\n\\s]*t[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:identity[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*BINOP[\\n\\s]*\\*[\\n\\s]*X[\\n\\s]*5[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*NIL[\\n\\s]*T[\\n\\s]*T[\\n\\s]*1\\)"],["\\code\n (defstruct (binop (:type list) (:initial-offset 2))\n   (operator '? :type symbol)\n   operand-1\n   operand-2) *→* BINOP\n\\endcode","\\(defstruct[\\n\\s]*\\(binop[\\n\\s]*\\(:type[\\n\\s]*list\\)[\\n\\s]*\\(:initial-offset[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(operator[\\n\\s]*'\\?[\\n\\s]*:type[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BINOP"],["\\code\n (make-binop :operator '+ :operand-1 'x :operand-2 5)\n*→* (NIL NIL + X 5)\n (make-binop :operand-2 4 :operator '*)\n*→* (NIL NIL * NIL 4)\n\\endcode","\\(make-binop[\\n\\s]*:operator[\\n\\s]*'\\+[\\n\\s]*:operand-1[\\n\\s]*'x[\\n\\s]*:operand-2[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*\\+[\\n\\s]*X[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(make-binop[\\n\\s]*:operand-2[\\n\\s]*4[\\n\\s]*:operator[\\n\\s]*'\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*\\*[\\n\\s]*NIL[\\n\\s]*4\\)"],["\\code\n (defstruct (binop (:type list) :named (:initial-offset 2))\n   (operator '? :type symbol)\n   operand-1\n   operand-2) *→* BINOP\n\\endcode","\\(defstruct[\\n\\s]*\\(binop[\\n\\s]*\\(:type[\\n\\s]*list\\)[\\n\\s]*:named[\\n\\s]*\\(:initial-offset[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(operator[\\n\\s]*'\\?[\\n\\s]*:type[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BINOP"],["\\code\n (make-binop :operator '+ :operand-1 'x :operand-2 5) *→* (NIL NIL BINOP + X 5)\n (make-binop :operand-2 4 :operator '*) *→* (NIL NIL BINOP * NIL 4)\n\\endcode","\\(make-binop[\\n\\s]*:operator[\\n\\s]*'\\+[\\n\\s]*:operand-1[\\n\\s]*'x[\\n\\s]*:operand-2[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*BINOP[\\n\\s]*\\+[\\n\\s]*X[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(make-binop[\\n\\s]*:operand-2[\\n\\s]*4[\\n\\s]*:operator[\\n\\s]*'\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(NIL[\\n\\s]*NIL[\\n\\s]*BINOP[\\n\\s]*\\*[\\n\\s]*NIL[\\n\\s]*4\\)"],["\\code\n (defstruct (binop (:type list))\n   (operator '? :type symbol)\n   operand-1\n   operand-2) *→* BINOP\n\\endcode","\\(defstruct[\\n\\s]*\\(binop[\\n\\s]*\\(:type[\\n\\s]*list\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(operator[\\n\\s]*'\\?[\\n\\s]*:type[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BINOP"],["\\code\n (make-binop :operator '+ :operand-1 'x :operand-2 5) *→* (+ X 5)  \n (make-binop :operand-2 4 :operator '*) *→* (* NIL 4)\n\\endcode","\\(make-binop[\\n\\s]*:operator[\\n\\s]*'\\+[\\n\\s]*:operand-1[\\n\\s]*'x[\\n\\s]*:operand-2[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\+[\\n\\s]*X[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(make-binop[\\n\\s]*:operand-2[\\n\\s]*4[\\n\\s]*:operator[\\n\\s]*'\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\*[\\n\\s]*NIL[\\n\\s]*4\\)"],["\\code\n (defstruct (binop (:type list) :named)\n   (operator '? :type symbol)\n   operand-1\n   operand-2) *→* BINOP\n\\endcode","\\(defstruct[\\n\\s]*\\(binop[\\n\\s]*\\(:type[\\n\\s]*list\\)[\\n\\s]*:named\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(operator[\\n\\s]*'\\?[\\n\\s]*:type[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-1[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*operand-2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BINOP"],["\\code\n (make-binop :operator '+ :operand-1 'x :operand-2 5) *→* (BINOP + X 5)\n (make-binop :operand-2 4 :operator '*) *→* (BINOP * NIL 4)\n\\endcode","\\(make-binop[\\n\\s]*:operator[\\n\\s]*'\\+[\\n\\s]*:operand-1[\\n\\s]*'x[\\n\\s]*:operand-2[\\n\\s]*5\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BINOP[\\n\\s]*\\+[\\n\\s]*X[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*\\(make-binop[\\n\\s]*:operand-2[\\n\\s]*4[\\n\\s]*:operator[\\n\\s]*'\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(BINOP[\\n\\s]*\\*[\\n\\s]*NIL[\\n\\s]*4\\)"],["\\code\n (defun binop-p (x)\n   (and (consp x) (eq (car x) 'binop))) *→* BINOP-P\n\\endcode","\\(defun[\\n\\s]*binop-p[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*\\(consp[\\n\\s]*x\\)[\\n\\s]*\\(eq[\\n\\s]*\\(car[\\n\\s]*x\\)[\\n\\s]*'binop\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BINOP-P"],["\\code\n (defmethod print-object ((object \\param&#123;structure-name&#125;) stream)\n   (funcall (function \\param&#123;printer-name&#125;) object stream \\metaparam&#123;current-print-depth&#125;))\n\\endcode","\\(defmethod[\\n\\s]*print-object[\\n\\s]*\\(\\(object[\\n\\s]*\\\\param&#123;structure-name&#125;\\)[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(function[\\n\\s]*\\\\param&#123;printer-name&#125;\\)[\\n\\s]*object[\\n\\s]*stream[\\n\\s]*\\\\metaparam&#123;current-print-depth&#125;\\)\\)"],["\\code\n (defmethod print-object ((object \\param&#123;structure-name&#125;) stream)\n   (funcall (function \\param&#123;printer-name&#125;) object stream))\n\\endcode","\\(defmethod[\\n\\s]*print-object[\\n\\s]*\\(\\(object[\\n\\s]*\\\\param&#123;structure-name&#125;\\)[\\n\\s]*stream\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(function[\\n\\s]*\\\\param&#123;printer-name&#125;\\)[\\n\\s]*object[\\n\\s]*stream\\)\\)"],["\\code\n (defstruct (quux (:type list) :named) x y)\n\\endcode","\\(defstruct[\\n\\s]*\\(quux[\\n\\s]*\\(:type[\\n\\s]*list\\)[\\n\\s]*:named\\)[\\n\\s]*x[\\n\\s]*y\\)"],["\\code\n (deftype quux () '(satisfies quux-p))\n\\endcode","\\(deftype[\\n\\s]*quux[\\n\\s]*\\(\\)[\\n\\s]*'\\(satisfies[\\n\\s]*quux-p\\)\\)"],["\\code\n (typep (make-quux) 'quux)\n\\endcode","\\(typep[\\n\\s]*\\(make-quux\\)[\\n\\s]*'quux\\)"],["\\code\n (typep (list 'quux nil nil) 'quux)\n\\endcode","\\(typep[\\n\\s]*\\(list[\\n\\s]*'quux[\\n\\s]*nil[\\n\\s]*nil\\)[\\n\\s]*'quux\\)"],["\\code\n (defstruct ship\n   x-position\n   y-position\n   x-velocity\n   y-velocity\n   mass)\n\\endcode","\\(defstruct[\\n\\s]*ship[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x-position[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*y-position[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*x-velocity[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*y-velocity[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*mass\\)"],["\\code\n (setq ship2 (make-ship))\n\\endcode","\\(setq[\\n\\s]*ship2[\\n\\s]*\\(make-ship\\)\\)"],["\\code\n (setq ship2 (make-ship :mass *default-ship-mass*\n                        :x-position 0\n                        :y-position 0))\n\\endcode","\\(setq[\\n\\s]*ship2[\\n\\s]*\\(make-ship[\\n\\s]*:mass[\\n\\s]*\\*default-ship-mass\\*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:x-position[\\n\\s]*0[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*:y-position[\\n\\s]*0\\)\\)"],["\\code\n (setf (ship-x-position ship2) 100)\n\\endcode","\\(setf[\\n\\s]*\\(ship-x-position[\\n\\s]*ship2\\)[\\n\\s]*100\\)"],["\\code\n;;;\n;;; Example 1\n;;; define town structure type\n;;; area, watertowers, firetrucks, population, elevation are its components\n;;;\n (defstruct town\n             area\n             watertowers\n             (firetrucks 1 :type fixnum)    ;an initialized slot\n             population \n             (elevation 5128 :read-only t)) ;a slot that can't be changed\n*→* TOWN\n;create a town instance\n (setq town1 (make-town :area 0 :watertowers 0)) *→* #S(TOWN...)\n;town's predicate recognizes the new instance\n (town-p town1) *→ true*\n;new town's area is as specified by make-town\n (town-area town1) *→* 0\n;new town's elevation has initial value\n (town-elevation town1) *→* 5128\n;setf recognizes reader function\n (setf (town-population town1) 99) *→* 99\n (town-population town1) *→* 99\n;copier function makes a copy of town1\n (setq town2 (copy-town town1)) *→* #S(TOWN...)\n (= (town-population town1) (town-population town2))  *→ true*\n;since elevation is a read-only slot, its value can be set only\n;when the structure is created\n (setq town3 (make-town :area 0 :watertowers 3 :elevation 1200))\n*→* #S(TOWN...)\n;;;\n;;; Example 2\n;;; define clown structure type\n;;; this structure uses a nonstandard prefix\n;;;\n (defstruct (clown (:conc-name bozo-))\n             (nose-color 'red)         \n             frizzy-hair-p polkadots) *→* CLOWN\n (setq funny-clown (make-clown)) *→* #S(CLOWN)\n;use non-default reader name\n (bozo-nose-color funny-clown) *→* RED        \n (defstruct (klown (:constructor make-up-klown) ;similar def using other\n             (:copier clone-klown)              ;customizing keywords\n             (:predicate is-a-bozo-p))\n             nose-color frizzy-hair-p polkadots) *→* klown\n;custom constructor now exists\n (fboundp 'make-up-klown) *→ true*\n;;;\n;;; Example 3\n;;; define a vehicle structure type\n;;; then define a truck structure type that includes \n;;; the vehicle structure\n;;;\n (defstruct vehicle name year (diesel t :read-only t)) *→* VEHICLE\n (defstruct (truck (:include vehicle (year 79)))\n             load-limit                          \n             (axles 6)) *→* TRUCK\n (setq x (make-truck :name 'mac :diesel t :load-limit 17))\n*→* #S(TRUCK...)\n;vehicle readers work on trucks\n (vehicle-name x)\n*→* MAC\n;default taken from :include clause \n (vehicle-year x)\n*→* 79 \n (defstruct (pickup (:include truck))     ;pickup type includes truck\n             camper long-bed four-wheel-drive) *→* PICKUP\n (setq x (make-pickup :name 'king :long-bed t)) *→* #S(PICKUP...)\n;:include default inherited\n (pickup-year x) *→* 79\n;;;\n;;; Example 4\n;;; use of BOA constructors\n;;;\n (defstruct (dfs-boa                      ;BOA constructors\n               (:constructor make-dfs-boa (a b c)) \n               (:constructor create-dfs-boa\n                 (a &optional b (c 'cc) &rest d &aux e (f 'ff))))\n             a b c d e f) *→* DFS-BOA\n;a, b, and c set by position, and the rest are uninitialized\n (setq x (make-dfs-boa 1 2 3)) *→* #(DFS-BOA...)\n (dfs-boa-a x) *→* 1\n;a and b set, c and f defaulted\n (setq x (create-dfs-boa 1 2)) *→* #(DFS-BOA...)\n (dfs-boa-b x) *→* 2\n (eq (dfs-boa-c x) 'cc) *→ true*\n;a, b, and c set, and the rest are collected into d\n (setq x (create-dfs-boa 1 2 3 4 5 6)) *→* #(DFS-BOA...)\n (dfs-boa-d x) *→* (4 5 6)\n\\endcode",";;;[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*1[\\n\\s]*;;;[\\n\\s]*define[\\n\\s]*town[\\n\\s]*structure[\\n\\s]*type[\\n\\s]*;;;[\\n\\s]*area,[\\n\\s]*watertowers,[\\n\\s]*firetrucks,[\\n\\s]*population,[\\n\\s]*elevation[\\n\\s]*are[\\n\\s]*its[\\n\\s]*components[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*town[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*area[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*watertowers[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(firetrucks[\\n\\s]*1[\\n\\s]*:type[\\n\\s]*fixnum\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;an[\\n\\s]*initialized[\\n\\s]*slot[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*population[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(elevation[\\n\\s]*5128[\\n\\s]*:read-only[\\n\\s]*t\\)\\)[\\n\\s]*;a[\\n\\s]*slot[\\n\\s]*that[\\n\\s]*can't[\\n\\s]*be[\\n\\s]*changed[\\n\\s]*\\*\\→\\*[\\n\\s]*TOWN[\\n\\s]*;create[\\n\\s]*a[\\n\\s]*town[\\n\\s]*instance[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*town1[\\n\\s]*\\(make-town[\\n\\s]*:area[\\n\\s]*0[\\n\\s]*:watertowers[\\n\\s]*0\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(TOWN\\.\\.\\.\\)[\\n\\s]*;town's[\\n\\s]*predicate[\\n\\s]*recognizes[\\n\\s]*the[\\n\\s]*new[\\n\\s]*instance[\\n\\s]*[\\n\\s]*\\(town-p[\\n\\s]*town1\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;new[\\n\\s]*town's[\\n\\s]*area[\\n\\s]*is[\\n\\s]*as[\\n\\s]*specified[\\n\\s]*by[\\n\\s]*make-town[\\n\\s]*[\\n\\s]*\\(town-area[\\n\\s]*town1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0[\\n\\s]*;new[\\n\\s]*town's[\\n\\s]*elevation[\\n\\s]*has[\\n\\s]*initial[\\n\\s]*value[\\n\\s]*[\\n\\s]*\\(town-elevation[\\n\\s]*town1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5128[\\n\\s]*;setf[\\n\\s]*recognizes[\\n\\s]*reader[\\n\\s]*function[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(town-population[\\n\\s]*town1\\)[\\n\\s]*99\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*99[\\n\\s]*[\\n\\s]*\\(town-population[\\n\\s]*town1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*99[\\n\\s]*;copier[\\n\\s]*function[\\n\\s]*makes[\\n\\s]*a[\\n\\s]*copy[\\n\\s]*of[\\n\\s]*town1[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*town2[\\n\\s]*\\(copy-town[\\n\\s]*town1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(TOWN\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(=[\\n\\s]*\\(town-population[\\n\\s]*town1\\)[\\n\\s]*\\(town-population[\\n\\s]*town2\\)\\)[\\n\\s]*[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;since[\\n\\s]*elevation[\\n\\s]*is[\\n\\s]*a[\\n\\s]*read-only[\\n\\s]*slot,[\\n\\s]*its[\\n\\s]*value[\\n\\s]*can[\\n\\s]*be[\\n\\s]*set[\\n\\s]*only[\\n\\s]*;when[\\n\\s]*the[\\n\\s]*structure[\\n\\s]*is[\\n\\s]*created[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*town3[\\n\\s]*\\(make-town[\\n\\s]*:area[\\n\\s]*0[\\n\\s]*:watertowers[\\n\\s]*3[\\n\\s]*:elevation[\\n\\s]*1200\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(TOWN\\.\\.\\.\\)[\\n\\s]*;;;[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*2[\\n\\s]*;;;[\\n\\s]*define[\\n\\s]*clown[\\n\\s]*structure[\\n\\s]*type[\\n\\s]*;;;[\\n\\s]*this[\\n\\s]*structure[\\n\\s]*uses[\\n\\s]*a[\\n\\s]*nonstandard[\\n\\s]*prefix[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*\\(clown[\\n\\s]*\\(:conc-name[\\n\\s]*bozo-\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(nose-color[\\n\\s]*'red\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*frizzy-hair-p[\\n\\s]*polkadots\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CLOWN[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*funny-clown[\\n\\s]*\\(make-clown\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(CLOWN\\)[\\n\\s]*;use[\\n\\s]*non-default[\\n\\s]*reader[\\n\\s]*name[\\n\\s]*[\\n\\s]*\\(bozo-nose-color[\\n\\s]*funny-clown\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*RED[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*\\(klown[\\n\\s]*\\(:constructor[\\n\\s]*make-up-klown\\)[\\n\\s]*;similar[\\n\\s]*def[\\n\\s]*using[\\n\\s]*other[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:copier[\\n\\s]*clone-klown\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;customizing[\\n\\s]*keywords[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:predicate[\\n\\s]*is-a-bozo-p\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nose-color[\\n\\s]*frizzy-hair-p[\\n\\s]*polkadots\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*klown[\\n\\s]*;custom[\\n\\s]*constructor[\\n\\s]*now[\\n\\s]*exists[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'make-up-klown\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;;;[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*3[\\n\\s]*;;;[\\n\\s]*define[\\n\\s]*a[\\n\\s]*vehicle[\\n\\s]*structure[\\n\\s]*type[\\n\\s]*;;;[\\n\\s]*then[\\n\\s]*define[\\n\\s]*a[\\n\\s]*truck[\\n\\s]*structure[\\n\\s]*type[\\n\\s]*that[\\n\\s]*includes[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*the[\\n\\s]*vehicle[\\n\\s]*structure[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*vehicle[\\n\\s]*name[\\n\\s]*year[\\n\\s]*\\(diesel[\\n\\s]*t[\\n\\s]*:read-only[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VEHICLE[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*\\(truck[\\n\\s]*\\(:include[\\n\\s]*vehicle[\\n\\s]*\\(year[\\n\\s]*79\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*load-limit[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(axles[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TRUCK[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(make-truck[\\n\\s]*:name[\\n\\s]*'mac[\\n\\s]*:diesel[\\n\\s]*t[\\n\\s]*:load-limit[\\n\\s]*17\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(TRUCK\\.\\.\\.\\)[\\n\\s]*;vehicle[\\n\\s]*readers[\\n\\s]*work[\\n\\s]*on[\\n\\s]*trucks[\\n\\s]*[\\n\\s]*\\(vehicle-name[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MAC[\\n\\s]*;default[\\n\\s]*taken[\\n\\s]*from[\\n\\s]*:include[\\n\\s]*clause[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(vehicle-year[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*79[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*\\(pickup[\\n\\s]*\\(:include[\\n\\s]*truck\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;pickup[\\n\\s]*type[\\n\\s]*includes[\\n\\s]*truck[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*camper[\\n\\s]*long-bed[\\n\\s]*four-wheel-drive\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*PICKUP[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(make-pickup[\\n\\s]*:name[\\n\\s]*'king[\\n\\s]*:long-bed[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#S\\(PICKUP\\.\\.\\.\\)[\\n\\s]*;:include[\\n\\s]*default[\\n\\s]*inherited[\\n\\s]*[\\n\\s]*\\(pickup-year[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*79[\\n\\s]*;;;[\\n\\s]*;;;[\\n\\s]*Example[\\n\\s]*4[\\n\\s]*;;;[\\n\\s]*use[\\n\\s]*of[\\n\\s]*BOA[\\n\\s]*constructors[\\n\\s]*;;;[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*\\(dfs-boa[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;BOA[\\n\\s]*constructors[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:constructor[\\n\\s]*make-dfs-boa[\\n\\s]*\\(a[\\n\\s]*b[\\n\\s]*c\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(:constructor[\\n\\s]*create-dfs-boa[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(a[\\n\\s]*&optional[\\n\\s]*b[\\n\\s]*\\(c[\\n\\s]*'cc\\)[\\n\\s]*&rest[\\n\\s]*d[\\n\\s]*&aux[\\n\\s]*e[\\n\\s]*\\(f[\\n\\s]*'ff\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a[\\n\\s]*b[\\n\\s]*c[\\n\\s]*d[\\n\\s]*e[\\n\\s]*f\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*DFS-BOA[\\n\\s]*;a,[\\n\\s]*b,[\\n\\s]*and[\\n\\s]*c[\\n\\s]*set[\\n\\s]*by[\\n\\s]*position,[\\n\\s]*and[\\n\\s]*the[\\n\\s]*rest[\\n\\s]*are[\\n\\s]*uninitialized[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(make-dfs-boa[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(DFS-BOA\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(dfs-boa-a[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*;a[\\n\\s]*and[\\n\\s]*b[\\n\\s]*set,[\\n\\s]*c[\\n\\s]*and[\\n\\s]*f[\\n\\s]*defaulted[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(create-dfs-boa[\\n\\s]*1[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(DFS-BOA\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(dfs-boa-b[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(dfs-boa-c[\\n\\s]*x\\)[\\n\\s]*'cc\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;a,[\\n\\s]*b,[\\n\\s]*and[\\n\\s]*c[\\n\\s]*set,[\\n\\s]*and[\\n\\s]*the[\\n\\s]*rest[\\n\\s]*are[\\n\\s]*collected[\\n\\s]*into[\\n\\s]*d[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*x[\\n\\s]*\\(create-dfs-boa[\\n\\s]*1[\\n\\s]*2[\\n\\s]*3[\\n\\s]*4[\\n\\s]*5[\\n\\s]*6\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(DFS-BOA\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*\\(dfs-boa-d[\\n\\s]*x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(4[\\n\\s]*5[\\n\\s]*6\\)"],["\\code\n (symbolp 'elephant) *→ true*\n (symbolp 12) *→ false*\n (symbolp nil) *→ true*\n (symbolp '()) *→ true*\n (symbolp :test) *→ true*\n (symbolp \"hello\") *→ false*\n\\endcode","\\(symbolp[\\n\\s]*'elephant\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(symbolp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(symbolp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(symbolp[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(symbolp[\\n\\s]*:test\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(symbolp[\\n\\s]*\"hello\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (symbolp \\param&#123;object&#125;) \\EQ (typep \\param&#123;object&#125; 'symbol)\n\\endcode","\\(symbolp[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(typep[\\n\\s]*\\\\param&#123;object&#125;[\\n\\s]*'symbol\\)"],["\\code\n (keywordp 'elephant) *→ false*\n (keywordp 12) *→ false*\n (keywordp :test) *→ true*\n (keywordp ':test) *→ true*\n (keywordp nil) *→ false*\n (keywordp :nil) *→ true*\n (keywordp '(:test)) *→ false*\n (keywordp \"hello\") *→ false*\n (keywordp \":hello\") *→ false*\n (keywordp '&optional) *→ false*\n\\endcode","\\(keywordp[\\n\\s]*'elephant\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*12\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*:test\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*':test\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*:nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*'\\(:test\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*\"hello\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*\":hello\"\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(keywordp[\\n\\s]*'&optional\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (setq temp-string \"temp\") *→* \"temp\"\n (setq temp-symbol (make-symbol temp-string)) *→* #:|temp|\n (symbol-name temp-symbol) *→* \"temp\"\n (eq (symbol-name temp-symbol) temp-string) *→* \\term&#123;implementation-dependent&#125;\n (find-symbol \"temp\") *→* NIL, NIL\n (eq (make-symbol temp-string) (make-symbol temp-string)) *→ false*\n\\endcode","\\(setq[\\n\\s]*temp-string[\\n\\s]*\"temp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"temp\"[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*temp-symbol[\\n\\s]*\\(make-symbol[\\n\\s]*temp-string\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:|temp|[\\n\\s]*[\\n\\s]*\\(symbol-name[\\n\\s]*temp-symbol\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"temp\"[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(symbol-name[\\n\\s]*temp-symbol\\)[\\n\\s]*temp-string\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"temp\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*\\(make-symbol[\\n\\s]*temp-string\\)[\\n\\s]*\\(make-symbol[\\n\\s]*temp-string\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (setq fred 'fred-smith) *→* FRED-SMITH\n (setf (symbol-value fred) 3) *→* 3\n (setq fred-clone-1a (copy-symbol fred nil)) *→* #:FRED-SMITH\n (setq fred-clone-1b (copy-symbol fred nil)) *→* #:FRED-SMITH\n (setq fred-clone-2a (copy-symbol fred t))   *→* #:FRED-SMITH\n (setq fred-clone-2b (copy-symbol fred t))   *→* #:FRED-SMITH\n (eq fred fred-clone-1a) *→ false*\n (eq fred-clone-1a fred-clone-1b) *→ false*\n (eq fred-clone-2a fred-clone-2b) *→ false*\n (eq fred-clone-1a fred-clone-2a) *→ false*\n (symbol-value fred) *→* 3\n (boundp fred-clone-1a) *→ false*\n (symbol-value fred-clone-2a) *→* 3\n (setf (symbol-value fred-clone-2a) 4) *→* 4\n (symbol-value fred) *→* 3\n (symbol-value fred-clone-2a) *→* 4\n (symbol-value fred-clone-2b) *→* 3\n (boundp fred-clone-1a) *→ false*\n (setf (symbol-function fred) #'(lambda (x) x)) *→* #&#60;FUNCTION anonymous&#62;\n (fboundp fred) *→ true*\n (fboundp fred-clone-1a) *→ false*\n (fboundp fred-clone-2a) *→ false*\n\\endcode","\\(setq[\\n\\s]*fred[\\n\\s]*'fred-smith\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FRED-SMITH[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*fred\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*fred-clone-1a[\\n\\s]*\\(copy-symbol[\\n\\s]*fred[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:FRED-SMITH[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*fred-clone-1b[\\n\\s]*\\(copy-symbol[\\n\\s]*fred[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:FRED-SMITH[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*fred-clone-2a[\\n\\s]*\\(copy-symbol[\\n\\s]*fred[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#:FRED-SMITH[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*fred-clone-2b[\\n\\s]*\\(copy-symbol[\\n\\s]*fred[\\n\\s]*t\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*#:FRED-SMITH[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*fred[\\n\\s]*fred-clone-1a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*fred-clone-1a[\\n\\s]*fred-clone-1b\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*fred-clone-2a[\\n\\s]*fred-clone-2b\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*fred-clone-1a[\\n\\s]*fred-clone-2a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*fred\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(boundp[\\n\\s]*fred-clone-1a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*fred-clone-2a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*fred-clone-2a\\)[\\n\\s]*4\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*fred\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*fred-clone-2a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*fred-clone-2b\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(boundp[\\n\\s]*fred-clone-1a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*fred\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*x\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FUNCTION[\\n\\s]*anonymous&#62;[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*fred\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*fred-clone-1a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*fred-clone-2a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n% (copy-symbol \\param&#123;x&#125; nil) \\EQ (make-symbol (symbol-name \\param&#123;x&#125;))\n% \\endcode","%[\\n\\s]*\\(copy-symbol[\\n\\s]*\\\\param&#123;x&#125;[\\n\\s]*nil\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(make-symbol[\\n\\s]*\\(symbol-name[\\n\\s]*\\\\param&#123;x&#125;\\)\\)[\\n\\s]*%"],["\\code\n (setq sym1 (gensym)) *→* #:G3142\n (symbol-package sym1) *→* NIL\n (setq sym2 (gensym 100)) *→* #:G100\n (setq sym3 (gensym 100)) *→* #:G100\n (eq sym2 sym3) *→ false*\n (find-symbol \"G100\") *→* NIL, NIL\n (gensym \"T\") *→* #:T3143\n (gensym) *→* #:G3144\n\\endcode","\\(setq[\\n\\s]*sym1[\\n\\s]*\\(gensym\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G3142[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*sym1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*sym2[\\n\\s]*\\(gensym[\\n\\s]*100\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G100[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*sym3[\\n\\s]*\\(gensym[\\n\\s]*100\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G100[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*sym2[\\n\\s]*sym3\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"G100\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(gensym[\\n\\s]*\"T\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:T3143[\\n\\s]*[\\n\\s]*\\(gensym\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G3144"],["\\code\n (gentemp) *→* T1298\n (gentemp \"FOO\") *→* FOO1299\n (find-symbol \"FOO1300\") *→* NIL, NIL\n (gentemp \"FOO\") *→* FOO1300\n (find-symbol \"FOO1300\") *→* FOO1300, :INTERNAL\n (intern \"FOO1301\") *→* FOO1301, :INTERNAL\n (gentemp \"FOO\") *→* FOO1302\n (gentemp) *→* T1303\n\\endcode","\\(gentemp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T1298[\\n\\s]*[\\n\\s]*\\(gentemp[\\n\\s]*\"FOO\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO1299[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"FOO1300\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(gentemp[\\n\\s]*\"FOO\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO1300[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"FOO1300\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO1300,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"FOO1301\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO1301,[\\n\\s]*:INTERNAL[\\n\\s]*[\\n\\s]*\\(gentemp[\\n\\s]*\"FOO\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*FOO1302[\\n\\s]*[\\n\\s]*\\(gentemp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T1303"],["\\code\n (symbol-function 'car) *→* #&#60;FUNCTION CAR&#62;\n (symbol-function 'twice) is an error   ;because TWICE isn't defined.\n (defun twice (n) (* n 2)) *→* TWICE\n (symbol-function 'twice) *→* #&#60;FUNCTION TWICE&#62;\n (list (twice 3)\n       (funcall (function twice) 3)\n       (funcall (symbol-function 'twice) 3))\n*→* (6 6 6)\n (flet ((twice (x) (list x x)))\n   (list (twice 3)\n         (funcall (function twice) 3)\n         (funcall (symbol-function 'twice) 3)))\n*→* ((3 3) (3 3) 6)   \n (setf (symbol-function 'twice) #'(lambda (x) (list x x)))\n*→* #&#60;FUNCTION anonymous&#62;\n (list (twice 3)\n       (funcall (function twice) 3)\n       (funcall (symbol-function 'twice) 3))\n*→* ((3 3) (3 3) (3 3))\n (fboundp 'defun) *→ true*\n (symbol-function 'defun)\n*→* \\term&#123;implementation-dependent&#125;\n (functionp (symbol-function 'defun))\n*→* \\term&#123;implementation-dependent&#125;\n (defun symbol-function-or-nil (symbol)\n   (if (and (fboundp symbol) \n            (not (macro-function symbol))\n            (not (special-operator-p symbol)))\n       (symbol-function symbol)\n       nil)) *→* SYMBOL-FUNCTION-OR-NIL\n (symbol-function-or-nil 'car) *→* #&#60;FUNCTION CAR&#62;\n (symbol-function-or-nil 'defun) *→* NIL\n\\endcode","\\(symbol-function[\\n\\s]*'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FUNCTION[\\n\\s]*CAR&#62;[\\n\\s]*[\\n\\s]*\\(symbol-function[\\n\\s]*'twice\\)[\\n\\s]*is[\\n\\s]*an[\\n\\s]*error[\\n\\s]*[\\n\\s]*[\\n\\s]*;because[\\n\\s]*TWICE[\\n\\s]*isn't[\\n\\s]*defined\\.[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*twice[\\n\\s]*\\(n\\)[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TWICE[\\n\\s]*[\\n\\s]*\\(symbol-function[\\n\\s]*'twice\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FUNCTION[\\n\\s]*TWICE&#62;[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(twice[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(function[\\n\\s]*twice\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(symbol-function[\\n\\s]*'twice\\)[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(6[\\n\\s]*6[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*\\(flet[\\n\\s]*\\(\\(twice[\\n\\s]*\\(x\\)[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*x\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(twice[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(function[\\n\\s]*twice\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(symbol-function[\\n\\s]*'twice\\)[\\n\\s]*3\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(3[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*3\\)[\\n\\s]*6\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-function[\\n\\s]*'twice\\)[\\n\\s]*#'\\(lambda[\\n\\s]*\\(x\\)[\\n\\s]*\\(list[\\n\\s]*x[\\n\\s]*x\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FUNCTION[\\n\\s]*anonymous&#62;[\\n\\s]*[\\n\\s]*\\(list[\\n\\s]*\\(twice[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(function[\\n\\s]*twice\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(funcall[\\n\\s]*\\(symbol-function[\\n\\s]*'twice\\)[\\n\\s]*3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\(3[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*3\\)[\\n\\s]*\\(3[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*\\(fboundp[\\n\\s]*'defun\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(symbol-function[\\n\\s]*'defun\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(functionp[\\n\\s]*\\(symbol-function[\\n\\s]*'defun\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*symbol-function-or-nil[\\n\\s]*\\(symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(and[\\n\\s]*\\(fboundp[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(macro-function[\\n\\s]*symbol\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(not[\\n\\s]*\\(special-operator-p[\\n\\s]*symbol\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-function[\\n\\s]*symbol\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*nil\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SYMBOL-FUNCTION-OR-NIL[\\n\\s]*[\\n\\s]*\\(symbol-function-or-nil[\\n\\s]*'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;FUNCTION[\\n\\s]*CAR&#62;[\\n\\s]*[\\n\\s]*\\(symbol-function-or-nil[\\n\\s]*'defun\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL"],["\\code\n(symbol-function \\param&#123;symbol&#125;) \\EQ (fdefinition \\param&#123;symbol&#125;)\n\\endcode","\\(symbol-function[\\n\\s]*\\\\param&#123;symbol&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(fdefinition[\\n\\s]*\\\\param&#123;symbol&#125;\\)"],["\\code\n (symbol-name 'temp) *→* \"TEMP\" \n (symbol-name :start) *→* \"START\"\n (symbol-name (gensym)) *→* \"G1234\" ;for example\n\\endcode","\\(symbol-name[\\n\\s]*'temp\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"TEMP\"[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-name[\\n\\s]*:start\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"START\"[\\n\\s]*[\\n\\s]*\\(symbol-name[\\n\\s]*\\(gensym\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"G1234\"[\\n\\s]*;for[\\n\\s]*example"],["\\code\n (in-package \"CL-USER\") *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (symbol-package 'car) *→* #&#60;PACKAGE \"COMMON-LISP\"&#62;\n (symbol-package 'bus) *→* #&#60;PACKAGE \"COMMON-LISP-USER\"&#62;\n (symbol-package :optional) *→* #&#60;PACKAGE \"KEYWORD\"&#62;\n ;; Gensyms are uninterned, so have no home package.\n (symbol-package (gensym)) *→* NIL\n (make-package 'pk1) *→* #&#60;PACKAGE \"PK1\"&#62;\n (intern \"SAMPLE1\" \"PK1\") *→* PK1::SAMPLE1, NIL\n (export (find-symbol \"SAMPLE1\" \"PK1\") \"PK1\") *→* T\n (make-package 'pk2 :use '(pk1)) *→* #&#60;PACKAGE \"PK2\"&#62;\n (find-symbol \"SAMPLE1\" \"PK2\") *→* PK1:SAMPLE1, :INHERITED\n (symbol-package 'pk1::sample1) *→* #&#60;PACKAGE \"PK1\"&#62;\n (symbol-package 'pk2::sample1) *→* #&#60;PACKAGE \"PK1\"&#62;\n (symbol-package 'pk1::sample2) *→* #&#60;PACKAGE \"PK1\"&#62;\n (symbol-package 'pk2::sample2) *→* #&#60;PACKAGE \"PK2\"&#62;\n ;; The next several forms create a scenario in which a symbol\n ;; is not really uninterned, but is \"apparently uninterned\",\n ;; and so SYMBOL-PACKAGE still returns NIL.\n (setq s3 'pk1::sample3) *→* PK1::SAMPLE3\n (import s3 'pk2) *→* T\n (unintern s3 'pk1) *→* T\n (symbol-package s3) *→* NIL\n (eq s3 'pk2::sample3) *→* T\n\\endcode","\\(in-package[\\n\\s]*\"CL-USER\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*'car\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*'bus\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"COMMON-LISP-USER\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*:optional\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"KEYWORD\"&#62;[\\n\\s]*[\\n\\s]*;;[\\n\\s]*Gensyms[\\n\\s]*are[\\n\\s]*uninterned,[\\n\\s]*so[\\n\\s]*have[\\n\\s]*no[\\n\\s]*home[\\n\\s]*package\\.[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*\\(gensym\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*'pk1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"PK1\"&#62;[\\n\\s]*[\\n\\s]*\\(intern[\\n\\s]*\"SAMPLE1\"[\\n\\s]*\"PK1\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*PK1::SAMPLE1,[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(export[\\n\\s]*\\(find-symbol[\\n\\s]*\"SAMPLE1\"[\\n\\s]*\"PK1\"\\)[\\n\\s]*\"PK1\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(make-package[\\n\\s]*'pk2[\\n\\s]*:use[\\n\\s]*'\\(pk1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"PK2\"&#62;[\\n\\s]*[\\n\\s]*\\(find-symbol[\\n\\s]*\"SAMPLE1\"[\\n\\s]*\"PK2\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*PK1:SAMPLE1,[\\n\\s]*:INHERITED[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*'pk1::sample1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"PK1\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*'pk2::sample1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"PK1\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*'pk1::sample2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"PK1\"&#62;[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*'pk2::sample2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#&#60;PACKAGE[\\n\\s]*\"PK2\"&#62;[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*next[\\n\\s]*several[\\n\\s]*forms[\\n\\s]*create[\\n\\s]*a[\\n\\s]*scenario[\\n\\s]*in[\\n\\s]*which[\\n\\s]*a[\\n\\s]*symbol[\\n\\s]*[\\n\\s]*;;[\\n\\s]*is[\\n\\s]*not[\\n\\s]*really[\\n\\s]*uninterned,[\\n\\s]*but[\\n\\s]*is[\\n\\s]*\"apparently[\\n\\s]*uninterned\",[\\n\\s]*[\\n\\s]*;;[\\n\\s]*and[\\n\\s]*so[\\n\\s]*SYMBOL-PACKAGE[\\n\\s]*still[\\n\\s]*returns[\\n\\s]*NIL\\.[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*s3[\\n\\s]*'pk1::sample3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*PK1::SAMPLE3[\\n\\s]*[\\n\\s]*\\(import[\\n\\s]*s3[\\n\\s]*'pk2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(unintern[\\n\\s]*s3[\\n\\s]*'pk1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(symbol-package[\\n\\s]*s3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(eq[\\n\\s]*s3[\\n\\s]*'pk2::sample3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T"],["\\code\n (setq sym (gensym)) *→* #:G9723\n (symbol-plist sym) *→* ()\n (setf (get sym 'prop1) 'val1) *→* VAL1\n (symbol-plist sym) *→* (PROP1 VAL1)\n (setf (get sym 'prop2) 'val2) *→* VAL2\n (symbol-plist sym) *→* (PROP2 VAL2 PROP1 VAL1)\n (setf (symbol-plist sym) (list 'prop3 'val3)) *→* (PROP3 VAL3)\n (symbol-plist sym) *→* (PROP3 VAL3)\n\\endcode","\\(setq[\\n\\s]*sym[\\n\\s]*\\(gensym\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:G9723[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*sym\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'prop1\\)[\\n\\s]*'val1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL1[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*sym\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP1[\\n\\s]*VAL1\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'prop2\\)[\\n\\s]*'val2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VAL2[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*sym\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP2[\\n\\s]*VAL2[\\n\\s]*PROP1[\\n\\s]*VAL1\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-plist[\\n\\s]*sym\\)[\\n\\s]*\\(list[\\n\\s]*'prop3[\\n\\s]*'val3\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP3[\\n\\s]*VAL3\\)[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*sym\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(PROP3[\\n\\s]*VAL3\\)"],["\\code\n (setf (symbol-value 'a) 1) *→* 1\n (symbol-value 'a) *→* 1\n ;; SYMBOL-VALUE cannot see lexical variables.\n (let ((a 2)) (symbol-value 'a)) *→* 1\n (let ((a 2)) (setq a 3) (symbol-value 'a)) *→* 1\n ;; SYMBOL-VALUE can see dynamic variables.\n (let ((a 2)) \n   (declare (special a)) \n   (symbol-value 'a)) *→* 2\n (let ((a 2)) \n   (declare (special a)) \n   (setq a 3)\n   (symbol-value 'a)) *→* 3\n (let ((a 2))\n   (setf (symbol-value 'a) 3)\n   a) *→* 2\n a *→* 3\n (symbol-value 'a) *→* 3\n (let ((a 4))\n   (declare (special a))\n   (let ((b (symbol-value 'a)))\n     (setf (symbol-value 'a) 5)\n     (values a b))) *→* 5, 4\n a *→* 3\n (symbol-value :any-keyword) *→* :ANY-KEYWORD\n (symbol-value 'nil) *→* NIL\n (symbol-value '()) *→* NIL\n ;; The precision of this next one is \\term&#123;implementation-dependent&#125;.\n (symbol-value 'pi) *→* 3.141592653589793d0  \n\\endcode","\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*;;[\\n\\s]*SYMBOL-VALUE[\\n\\s]*cannot[\\n\\s]*see[\\n\\s]*lexical[\\n\\s]*variables\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*2\\)\\)[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*2\\)\\)[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*3\\)[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*;;[\\n\\s]*SYMBOL-VALUE[\\n\\s]*can[\\n\\s]*see[\\n\\s]*dynamic[\\n\\s]*variables\\.[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*a[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(a[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*a\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(b[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)[\\n\\s]*5\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(values[\\n\\s]*a[\\n\\s]*b\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*5,[\\n\\s]*4[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*:any-keyword\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*:ANY-KEYWORD[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'\\(\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*;;[\\n\\s]*The[\\n\\s]*precision[\\n\\s]*of[\\n\\s]*this[\\n\\s]*next[\\n\\s]*one[\\n\\s]*is[\\n\\s]*\\\\term&#123;implementation-dependent&#125;\\.[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'pi\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.141592653589793d0"],["\\code\n (defun make-person (first-name last-name)\n   (let ((person (gensym \"PERSON\")))\n     (setf (get person 'first-name) first-name)\n     (setf (get person 'last-name) last-name)\n     person)) *→* MAKE-PERSON\n (defvar *john* (make-person \"John\" \"Dow\")) *→* *JOHN*\n *john* *→* #:PERSON4603\n (defvar *sally* (make-person \"Sally\" \"Jones\")) *→* *SALLY*\n (get *john* 'first-name) *→* \"John\"\n (get *sally* 'last-name) *→* \"Jones\"\n (defun marry (man woman married-name)\n   (setf (get man 'wife) woman)\n   (setf (get woman 'husband) man)\n   (setf (get man 'last-name) married-name)\n   (setf (get woman 'last-name) married-name)\n   married-name) *→* MARRY\n (marry *john* *sally* \"Dow-Jones\") *→* \"Dow-Jones\"\n (get *john* 'last-name) *→* \"Dow-Jones\"\n (get (get *john* 'wife) 'first-name) *→* \"Sally\"\n (symbol-plist *john*)\n*→* (WIFE #:PERSON4604 LAST-NAME \"Dow-Jones\" FIRST-NAME \"John\")\n (defmacro age (person &optional (default ''thirty-something)) \n   `(get ,person 'age ,default)) *→* AGE\n (age *john*) *→* THIRTY-SOMETHING\n (age *john* 20) *→* 20\n (setf (age *john*) 25) *→* 25\n (age *john*) *→* 25\n (age *john* 20) *→* 25\n\\endcode","\\(defun[\\n\\s]*make-person[\\n\\s]*\\(first-name[\\n\\s]*last-name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(person[\\n\\s]*\\(gensym[\\n\\s]*\"PERSON\"\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*person[\\n\\s]*'first-name\\)[\\n\\s]*first-name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*person[\\n\\s]*'last-name\\)[\\n\\s]*last-name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*person\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MAKE-PERSON[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*john\\*[\\n\\s]*\\(make-person[\\n\\s]*\"John\"[\\n\\s]*\"Dow\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*JOHN\\*[\\n\\s]*[\\n\\s]*\\*john\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*#:PERSON4603[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*sally\\*[\\n\\s]*\\(make-person[\\n\\s]*\"Sally\"[\\n\\s]*\"Jones\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*SALLY\\*[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*\\*john\\*[\\n\\s]*'first-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"John\"[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*\\*sally\\*[\\n\\s]*'last-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Jones\"[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*marry[\\n\\s]*\\(man[\\n\\s]*woman[\\n\\s]*married-name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*man[\\n\\s]*'wife\\)[\\n\\s]*woman\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*woman[\\n\\s]*'husband\\)[\\n\\s]*man\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*man[\\n\\s]*'last-name\\)[\\n\\s]*married-name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*woman[\\n\\s]*'last-name\\)[\\n\\s]*married-name\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*married-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*MARRY[\\n\\s]*[\\n\\s]*\\(marry[\\n\\s]*\\*john\\*[\\n\\s]*\\*sally\\*[\\n\\s]*\"Dow-Jones\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Dow-Jones\"[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*\\*john\\*[\\n\\s]*'last-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Dow-Jones\"[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*\\(get[\\n\\s]*\\*john\\*[\\n\\s]*'wife\\)[\\n\\s]*'first-name\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\"Sally\"[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*\\*john\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(WIFE[\\n\\s]*#:PERSON4604[\\n\\s]*LAST-NAME[\\n\\s]*\"Dow-Jones\"[\\n\\s]*FIRST-NAME[\\n\\s]*\"John\"\\)[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*age[\\n\\s]*\\(person[\\n\\s]*&optional[\\n\\s]*\\(default[\\n\\s]*''thirty-something\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(get[\\n\\s]*,person[\\n\\s]*'age[\\n\\s]*,default\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*AGE[\\n\\s]*[\\n\\s]*\\(age[\\n\\s]*\\*john\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*THIRTY-SOMETHING[\\n\\s]*[\\n\\s]*\\(age[\\n\\s]*\\*john\\*[\\n\\s]*20\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*20[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(age[\\n\\s]*\\*john\\*\\)[\\n\\s]*25\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*25[\\n\\s]*[\\n\\s]*\\(age[\\n\\s]*\\*john\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*25[\\n\\s]*[\\n\\s]*\\(age[\\n\\s]*\\*john\\*[\\n\\s]*20\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*25"],["\\code\n (get x y) \\EQ (getf (symbol-plist x) y)\n\\endcode","\\(get[\\n\\s]*x[\\n\\s]*y\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(getf[\\n\\s]*\\(symbol-plist[\\n\\s]*x\\)[\\n\\s]*y\\)"],["\\code\n%  (get 'clyde 'species) *→* NIL\n%  (setf (get 'clyde 'species) 'elephant) *→* elephant\n%  (get 'clyde 'species) *→* ELEPHANT\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*'clyde[\\n\\s]*'species\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*'clyde[\\n\\s]*'species\\)[\\n\\s]*'elephant\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*elephant[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*'clyde[\\n\\s]*'species\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ELEPHANT[\\n\\s]*%"],["\\code\n%  (push item (get sym 'token-stack '(initial-item)))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(push[\\n\\s]*item[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'token-stack[\\n\\s]*'\\(initial-item\\)\\)\\)[\\n\\s]*%"],["\\code\n%  (setf (get sym 'token-stack '(initial-item))\n%        (cons item (get sym 'token-stack '(initial-item))))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'token-stack[\\n\\s]*'\\(initial-item\\)\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*item[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'token-stack[\\n\\s]*'\\(initial-item\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n%  (setf (get sym 'token-stack)\n%        (cons item (get sym 'token-stack '(initial-item))))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'token-stack\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(cons[\\n\\s]*item[\\n\\s]*\\(get[\\n\\s]*sym[\\n\\s]*'token-stack[\\n\\s]*'\\(initial-item\\)\\)\\)\\)[\\n\\s]*%"],["\\code\n (remprop \\i&#123;x&#125; \\i&#123;y&#125;) \\EQ (remf (symbol-plist \\i&#123;x&#125;) \\i&#123;y&#125;)\n\\endcode","\\(remprop[\\n\\s]*\\\\i&#123;x&#125;[\\n\\s]*\\\\i&#123;y&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(remf[\\n\\s]*\\(symbol-plist[\\n\\s]*\\\\i&#123;x&#125;\\)[\\n\\s]*\\\\i&#123;y&#125;\\)"],["\\code\n (setq test (make-symbol \"PSEUDO-PI\")) *→* #:PSEUDO-PI\n (symbol-plist test) *→* ()\n (setf (get test 'constant) t) *→* T\n (setf (get test 'approximation) 3.14) *→* 3.14\n (setf (get test 'error-range) 'noticeable) *→* NOTICEABLE\n (symbol-plist test) \n*→* (ERROR-RANGE NOTICEABLE APPROXIMATION 3.14 CONSTANT T)\n (setf (get test 'approximation) nil) *→* NIL\n (symbol-plist test) \n*→* (ERROR-RANGE NOTICEABLE APPROXIMATION NIL CONSTANT T)\n (get test 'approximation) *→* NIL\n (remprop test 'approximation) *→ true*\n (get test 'approximation) *→* NIL\n (symbol-plist test)\n*→* (ERROR-RANGE NOTICEABLE CONSTANT T)\n (remprop test 'approximation) *→* NIL\n (symbol-plist test)\n*→* (ERROR-RANGE NOTICEABLE CONSTANT T)\n (remprop test 'error-range) *→ true*\n (setf (get test 'approximation) 3) *→* 3\n (symbol-plist test)\n*→* (APPROXIMATION 3 CONSTANT T)\n\\endcode","\\(setq[\\n\\s]*test[\\n\\s]*\\(make-symbol[\\n\\s]*\"PSEUDO-PI\"\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#:PSEUDO-PI[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*test\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'constant\\)[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*3\\.14\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.14[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'error-range\\)[\\n\\s]*'noticeable\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NOTICEABLE[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*test\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ERROR-RANGE[\\n\\s]*NOTICEABLE[\\n\\s]*APPROXIMATION[\\n\\s]*3\\.14[\\n\\s]*CONSTANT[\\n\\s]*T\\)[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*test\\)[\\n\\s]*[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ERROR-RANGE[\\n\\s]*NOTICEABLE[\\n\\s]*APPROXIMATION[\\n\\s]*NIL[\\n\\s]*CONSTANT[\\n\\s]*T\\)[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(remprop[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*test\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ERROR-RANGE[\\n\\s]*NOTICEABLE[\\n\\s]*CONSTANT[\\n\\s]*T\\)[\\n\\s]*[\\n\\s]*\\(remprop[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*test\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(ERROR-RANGE[\\n\\s]*NOTICEABLE[\\n\\s]*CONSTANT[\\n\\s]*T\\)[\\n\\s]*[\\n\\s]*\\(remprop[\\n\\s]*test[\\n\\s]*'error-range\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(get[\\n\\s]*test[\\n\\s]*'approximation\\)[\\n\\s]*3\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3[\\n\\s]*[\\n\\s]*\\(symbol-plist[\\n\\s]*test\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(APPROXIMATION[\\n\\s]*3[\\n\\s]*CONSTANT[\\n\\s]*T\\)"],["\\code\n (setq x 1) *→* 1\n (boundp 'x) *→ true*\n (makunbound 'x) *→* X\n (boundp 'x) *→ false*\n (let ((x 2)) (boundp 'x)) *→ false*\n (let ((x 2)) (declare (special x)) (boundp 'x)) *→ true*\n\\endcode","\\(setq[\\n\\s]*x[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(boundp[\\n\\s]*'x\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(makunbound[\\n\\s]*'x\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*X[\\n\\s]*[\\n\\s]*\\(boundp[\\n\\s]*'x\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*\\(boundp[\\n\\s]*'x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(x[\\n\\s]*2\\)\\)[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*x\\)\\)[\\n\\s]*\\(boundp[\\n\\s]*'x\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (setf (symbol-value 'a) 1)\n (boundp 'a) *→ true*\n a *→* 1\n (makunbound 'a) *→* A\n (boundp 'a) *→ false*\n\\endcode","\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'a\\)[\\n\\s]*1\\)[\\n\\s]*[\\n\\s]*\\(boundp[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(makunbound[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*A[\\n\\s]*[\\n\\s]*\\(boundp[\\n\\s]*'a\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n(set \\param&#123;symbol&#125; \\param&#123;value&#125;) \\EQ (setf (symbol-value \\param&#123;symbol&#125;) \\param&#123;value&#125;)\n\\endcode","\\(set[\\n\\s]*\\\\param&#123;symbol&#125;[\\n\\s]*\\\\param&#123;value&#125;\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*\\\\param&#123;symbol&#125;\\)[\\n\\s]*\\\\param&#123;value&#125;\\)"],["\\code\n (setf (symbol-value 'n) 1) *→* 1\n (set 'n 2) *→* 2\n (symbol-value 'n) *→* 2\n (let ((n 3))\n   (declare (special n))\n   (setq n (+ n 1))\n   (setf (symbol-value 'n) (* n 10))\n   (set 'n (+ (symbol-value 'n) n))\n   n) *→* 80\n n *→* 2\n (let ((n 3))\n   (setq n (+ n 1))\n   (setf (symbol-value 'n) (* n 10))\n   (set 'n (+ (symbol-value 'n) n))\n   n) *→* 4\n n *→* 44\n (defvar *n* 2)\n (let ((*n* 3))\n   (setq *n* (+ *n* 1))\n   (setf (symbol-value '*n*) (* *n* 10))\n   (set '*n* (+ (symbol-value '*n*) *n*))\n   *n*) *→* 80\n  *n* *→* 2\n (defvar *even-count* 0) *→* *EVEN-COUNT*\n (defvar *odd-count* 0) *→* *ODD-COUNT*\n (defun tally-list (list)\n   (dolist (element list)\n     (set (if (evenp element) '*even-count* '*odd-count*)\n          (+ element (if (evenp element) *even-count* *odd-count*)))))\n (tally-list '(1 9 4 3 2 7)) *→* NIL\n *even-count* *→* 6\n *odd-count* *→* 20\n\\endcode","\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'n\\)[\\n\\s]*1\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*1[\\n\\s]*[\\n\\s]*\\(set[\\n\\s]*'n[\\n\\s]*2\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(symbol-value[\\n\\s]*'n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(declare[\\n\\s]*\\(special[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'n\\)[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*10\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set[\\n\\s]*'n[\\n\\s]*\\(\\+[\\n\\s]*\\(symbol-value[\\n\\s]*'n\\)[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*80[\\n\\s]*[\\n\\s]*n[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(n[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*n[\\n\\s]*\\(\\+[\\n\\s]*n[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'n\\)[\\n\\s]*\\(\\*[\\n\\s]*n[\\n\\s]*10\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set[\\n\\s]*'n[\\n\\s]*\\(\\+[\\n\\s]*\\(symbol-value[\\n\\s]*'n\\)[\\n\\s]*n\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*n\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*4[\\n\\s]*[\\n\\s]*n[\\n\\s]*\\*\\→\\*[\\n\\s]*44[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*n\\*[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*\\(let[\\n\\s]*\\(\\(\\*n\\*[\\n\\s]*3\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setq[\\n\\s]*\\*n\\*[\\n\\s]*\\(\\+[\\n\\s]*\\*n\\*[\\n\\s]*1\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(setf[\\n\\s]*\\(symbol-value[\\n\\s]*'\\*n\\*\\)[\\n\\s]*\\(\\*[\\n\\s]*\\*n\\*[\\n\\s]*10\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set[\\n\\s]*'\\*n\\*[\\n\\s]*\\(\\+[\\n\\s]*\\(symbol-value[\\n\\s]*'\\*n\\*\\)[\\n\\s]*\\*n\\*\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*n\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*80[\\n\\s]*[\\n\\s]*[\\n\\s]*\\*n\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*2[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*even-count\\*[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*EVEN-COUNT\\*[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*odd-count\\*[\\n\\s]*0\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*ODD-COUNT\\*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*tally-list[\\n\\s]*\\(list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(element[\\n\\s]*list\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(set[\\n\\s]*\\(if[\\n\\s]*\\(evenp[\\n\\s]*element\\)[\\n\\s]*'\\*even-count\\*[\\n\\s]*'\\*odd-count\\*\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*element[\\n\\s]*\\(if[\\n\\s]*\\(evenp[\\n\\s]*element\\)[\\n\\s]*\\*even-count\\*[\\n\\s]*\\*odd-count\\*\\)\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*\\(tally-list[\\n\\s]*'\\(1[\\n\\s]*9[\\n\\s]*4[\\n\\s]*3[\\n\\s]*2[\\n\\s]*7\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*NIL[\\n\\s]*[\\n\\s]*\\*even-count\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*6[\\n\\s]*[\\n\\s]*\\*odd-count\\*[\\n\\s]*\\*\\→\\*[\\n\\s]*20"],["\\code\n;Establish a data file...\n (with-open-file (str \"data.in\" :direction :output :if-exists :error)\n   (print 1 str) (print '(setq a 888) str) t)\n*→* T\n (load \"data.in\") *→ true*\n a *→* 888\n (load (setq p (merge-pathnames \"data.in\")) :verbose t)\n; Loading contents of file /fred/data.in\n; Finished loading /fred/data.in\n*→ true*\n (load p :print t) \n; Loading contents of file /fred/data.in\n;  1\n;  888\n; Finished loading /fred/data.in\n*→ true*\n\\endcode",";Establish[\\n\\s]*a[\\n\\s]*data[\\n\\s]*file\\.\\.\\.[\\n\\s]*[\\n\\s]*\\(with-open-file[\\n\\s]*\\(str[\\n\\s]*\"data\\.in\"[\\n\\s]*:direction[\\n\\s]*:output[\\n\\s]*:if-exists[\\n\\s]*:error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(print[\\n\\s]*1[\\n\\s]*str\\)[\\n\\s]*\\(print[\\n\\s]*'\\(setq[\\n\\s]*a[\\n\\s]*888\\)[\\n\\s]*str\\)[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*T[\\n\\s]*[\\n\\s]*\\(load[\\n\\s]*\"data\\.in\"\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*a[\\n\\s]*\\*\\→\\*[\\n\\s]*888[\\n\\s]*[\\n\\s]*\\(load[\\n\\s]*\\(setq[\\n\\s]*p[\\n\\s]*\\(merge-pathnames[\\n\\s]*\"data\\.in\"\\)\\)[\\n\\s]*:verbose[\\n\\s]*t\\)[\\n\\s]*;[\\n\\s]*Loading[\\n\\s]*contents[\\n\\s]*of[\\n\\s]*file[\\n\\s]*/fred/data\\.in[\\n\\s]*;[\\n\\s]*Finished[\\n\\s]*loading[\\n\\s]*/fred/data\\.in[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(load[\\n\\s]*p[\\n\\s]*:print[\\n\\s]*t\\)[\\n\\s]*[\\n\\s]*;[\\n\\s]*Loading[\\n\\s]*contents[\\n\\s]*of[\\n\\s]*file[\\n\\s]*/fred/data\\.in[\\n\\s]*;[\\n\\s]*[\\n\\s]*1[\\n\\s]*;[\\n\\s]*[\\n\\s]*888[\\n\\s]*;[\\n\\s]*Finished[\\n\\s]*loading[\\n\\s]*/fred/data\\.in[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n ;----[Begin file SETUP]----\n (in-package \"MY-STUFF\")\n (defmacro compile-truename () `',*compile-file-truename*)\n (defvar *my-compile-truename* (compile-truename) \"Just for debugging.\")\n (defvar *my-load-pathname* *load-pathname*)\n (defun load-my-system ()\n   (dolist (module-name '(\"FOO\" \"BAR\" \"BAZ\"))\n     (load (merge-pathnames module-name *my-load-pathname*))))\n ;----[End of file SETUP]----\n\n \n (load \"SETUP\")\n (load-my-system)\n\\endcode",";----\\[Begin[\\n\\s]*file[\\n\\s]*SETUP\\]----[\\n\\s]*[\\n\\s]*\\(in-package[\\n\\s]*\"MY-STUFF\"\\)[\\n\\s]*[\\n\\s]*\\(defmacro[\\n\\s]*compile-truename[\\n\\s]*\\(\\)[\\n\\s]*`',\\*compile-file-truename\\*\\)[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*my-compile-truename\\*[\\n\\s]*\\(compile-truename\\)[\\n\\s]*\"Just[\\n\\s]*for[\\n\\s]*debugging\\.\"\\)[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*my-load-pathname\\*[\\n\\s]*\\*load-pathname\\*\\)[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*load-my-system[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(dolist[\\n\\s]*\\(module-name[\\n\\s]*'\\(\"FOO\"[\\n\\s]*\"BAR\"[\\n\\s]*\"BAZ\"\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(load[\\n\\s]*\\(merge-pathnames[\\n\\s]*module-name[\\n\\s]*\\*my-load-pathname\\*\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*;----\\[End[\\n\\s]*of[\\n\\s]*file[\\n\\s]*SETUP\\]----[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(load[\\n\\s]*\"SETUP\"\\)[\\n\\s]*[\\n\\s]*\\(load-my-system\\)"],["\\code\n (with-compilation-unit (:override nil) ...)\n\\endcode","\\(with-compilation-unit[\\n\\s]*\\(:override[\\n\\s]*nil\\)[\\n\\s]*\\.\\.\\.\\)"],["\\code\n (defun compile-files (&rest files)\n   (with-compilation-unit ()\n     (mapcar #'(lambda (file) (compile-file file)) files)))\n\n (compile-files \"A\" \"B\" \"C\")\n\\endcode","\\(defun[\\n\\s]*compile-files[\\n\\s]*\\(&rest[\\n\\s]*files\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(with-compilation-unit[\\n\\s]*\\(\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(mapcar[\\n\\s]*#'\\(lambda[\\n\\s]*\\(file\\)[\\n\\s]*\\(compile-file[\\n\\s]*file\\)\\)[\\n\\s]*files\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(compile-files[\\n\\s]*\"A\"[\\n\\s]*\"B\"[\\n\\s]*\"C\"\\)"],["\\code\n%  ;;;; New and improved lisp init file for I. Newton\n% \n%  ;;; Set up the CL-USER package the way I like it.\n%  (require \"CALCULUS\")     ; I use CALCULUS a lot. Load it.\n%  (use-package \"CALCULUS\") ; Get easy access to exported symbols.\n% \n%  (require \"NEWTONIAN-MECHANICS\") ;Ditto for NEWTONIAN-MECHANICS\n%  (use-package \"NEWTONIAN-MECHANICS\")\n% \n%  ;;; Ignore that Relativity stuff until they've got it debugged better.\n%  ;(require \"RELATIVITY\")\n% \n%  ;;; These are worth loading, but I'll use qualified names, such\n%  ;;; as PHLOGISTON:MAKE-FIRE-BOTTLE, to get any symbols I might need.\n%  (require \"PHLOGISTON\")\n%  (require \"ALCHEMY\")\n% \n%  (provide \"NEWTON-PERSONAL-PREFERENCES\")\n% \\endcode","%[\\n\\s]*[\\n\\s]*;;;;[\\n\\s]*New[\\n\\s]*and[\\n\\s]*improved[\\n\\s]*lisp[\\n\\s]*init[\\n\\s]*file[\\n\\s]*for[\\n\\s]*I\\.[\\n\\s]*Newton[\\n\\s]*%[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Set[\\n\\s]*up[\\n\\s]*the[\\n\\s]*CL-USER[\\n\\s]*package[\\n\\s]*the[\\n\\s]*way[\\n\\s]*I[\\n\\s]*like[\\n\\s]*it\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"CALCULUS\"\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*;[\\n\\s]*I[\\n\\s]*use[\\n\\s]*CALCULUS[\\n\\s]*a[\\n\\s]*lot\\.[\\n\\s]*Load[\\n\\s]*it\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*\"CALCULUS\"\\)[\\n\\s]*;[\\n\\s]*Get[\\n\\s]*easy[\\n\\s]*access[\\n\\s]*to[\\n\\s]*exported[\\n\\s]*symbols\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"NEWTONIAN-MECHANICS\"\\)[\\n\\s]*;Ditto[\\n\\s]*for[\\n\\s]*NEWTONIAN-MECHANICS[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(use-package[\\n\\s]*\"NEWTONIAN-MECHANICS\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Ignore[\\n\\s]*that[\\n\\s]*Relativity[\\n\\s]*stuff[\\n\\s]*until[\\n\\s]*they've[\\n\\s]*got[\\n\\s]*it[\\n\\s]*debugged[\\n\\s]*better\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*;\\(require[\\n\\s]*\"RELATIVITY\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*These[\\n\\s]*are[\\n\\s]*worth[\\n\\s]*loading,[\\n\\s]*but[\\n\\s]*I'll[\\n\\s]*use[\\n\\s]*qualified[\\n\\s]*names,[\\n\\s]*such[\\n\\s]*%[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*as[\\n\\s]*PHLOGISTON:MAKE-FIRE-BOTTLE,[\\n\\s]*to[\\n\\s]*get[\\n\\s]*any[\\n\\s]*symbols[\\n\\s]*I[\\n\\s]*might[\\n\\s]*need\\.[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"PHLOGISTON\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"ALCHEMY\"\\)[\\n\\s]*%[\\n\\s]*[\\n\\s]*%[\\n\\s]*[\\n\\s]*\\(provide[\\n\\s]*\"NEWTON-PERSONAL-PREFERENCES\"\\)[\\n\\s]*%"],["\\code\n;;; This illustrates a nonportable use of REQUIRE, because it\n;;; depends on the implementation-dependent file-loading mechanism.\n\n(require \"CALCULUS\")\n\n;;; This use of REQUIRE is nonportable because of the literal \n;;; physical pathname.  \n\n(require \"CALCULUS\" \"/usr/lib/lisp/calculus\")\n\n;;; One form of portable usage involves supplying a logical pathname,\n;;; with appropriate translations defined elsewhere.\n\n(require \"CALCULUS\" \"lib:calculus\")\n\n;;; Another form of portable usage involves using a variable or\n;;; table lookup function to determine the pathname, which again\n;;; must be initialized elsewhere.\n\n(require \"CALCULUS\" *calculus-module-pathname*)\n\\endcode",";;;[\\n\\s]*This[\\n\\s]*illustrates[\\n\\s]*a[\\n\\s]*nonportable[\\n\\s]*use[\\n\\s]*of[\\n\\s]*REQUIRE,[\\n\\s]*because[\\n\\s]*it[\\n\\s]*;;;[\\n\\s]*depends[\\n\\s]*on[\\n\\s]*the[\\n\\s]*implementation-dependent[\\n\\s]*file-loading[\\n\\s]*mechanism\\.[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"CALCULUS\"\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*This[\\n\\s]*use[\\n\\s]*of[\\n\\s]*REQUIRE[\\n\\s]*is[\\n\\s]*nonportable[\\n\\s]*because[\\n\\s]*of[\\n\\s]*the[\\n\\s]*literal[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*physical[\\n\\s]*pathname\\.[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"CALCULUS\"[\\n\\s]*\"/usr/lib/lisp/calculus\"\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*One[\\n\\s]*form[\\n\\s]*of[\\n\\s]*portable[\\n\\s]*usage[\\n\\s]*involves[\\n\\s]*supplying[\\n\\s]*a[\\n\\s]*logical[\\n\\s]*pathname,[\\n\\s]*;;;[\\n\\s]*with[\\n\\s]*appropriate[\\n\\s]*translations[\\n\\s]*defined[\\n\\s]*elsewhere\\.[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"CALCULUS\"[\\n\\s]*\"lib:calculus\"\\)[\\n\\s]*[\\n\\s]*;;;[\\n\\s]*Another[\\n\\s]*form[\\n\\s]*of[\\n\\s]*portable[\\n\\s]*usage[\\n\\s]*involves[\\n\\s]*using[\\n\\s]*a[\\n\\s]*variable[\\n\\s]*or[\\n\\s]*;;;[\\n\\s]*table[\\n\\s]*lookup[\\n\\s]*function[\\n\\s]*to[\\n\\s]*determine[\\n\\s]*the[\\n\\s]*pathname,[\\n\\s]*which[\\n\\s]*again[\\n\\s]*;;;[\\n\\s]*must[\\n\\s]*be[\\n\\s]*initialized[\\n\\s]*elsewhere\\.[\\n\\s]*[\\n\\s]*\\(require[\\n\\s]*\"CALCULUS\"[\\n\\s]*\\*calculus-module-pathname\\*\\)"],["\\code\n (function ((integer 0) &key (:initial-element t)) list)\n\\endcode","\\(function[\\n\\s]*\\(\\(integer[\\n\\s]*0\\)[\\n\\s]*&key[\\n\\s]*\\(:initial-element[\\n\\s]*t\\)\\)[\\n\\s]*list\\)"],["\\code\n (ftype (function (arg0-type arg1-type ...) val-type) f))\n\\endcode","\\(ftype[\\n\\s]*\\(function[\\n\\s]*\\(arg0-type[\\n\\s]*arg1-type[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*val-type\\)[\\n\\s]*f\\)\\)"],["\\code\n (the val-type (f (the arg0-type arg0) (the arg1-type arg1) ...))\n\\endcode","\\(the[\\n\\s]*val-type[\\n\\s]*\\(f[\\n\\s]*\\(the[\\n\\s]*arg0-type[\\n\\s]*arg0\\)[\\n\\s]*\\(the[\\n\\s]*arg1-type[\\n\\s]*arg1\\)[\\n\\s]*\\.\\.\\.\\)\\)"],["\\code\n (type (function (arg0-type arg1-type ...) val-type) fn-valued-variable)\n\\endcode","\\(type[\\n\\s]*\\(function[\\n\\s]*\\(arg0-type[\\n\\s]*arg1-type[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*val-type\\)[\\n\\s]*fn-valued-variable\\)"],["\\code\n (ftype (function (arg0-type1 arg1-type1 ...) val-type1) f))\n\\endcode","\\(ftype[\\n\\s]*\\(function[\\n\\s]*\\(arg0-type1[\\n\\s]*arg1-type1[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*val-type1\\)[\\n\\s]*f\\)\\)"],["\\code\n (ftype (function (arg0-type2 arg1-type2 ...) val-type2) f))\n\\endcode","\\(ftype[\\n\\s]*\\(function[\\n\\s]*\\(arg0-type2[\\n\\s]*arg1-type2[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*val-type2\\)[\\n\\s]*f\\)\\)"],["\\code\n (ftype (function ((and arg0-type1 arg0-type2) (and arg1-type1 arg1-type2 ...) ...)\n                  (and val-type1 val-type2)) \n        f))\n\\endcode","\\(ftype[\\n\\s]*\\(function[\\n\\s]*\\(\\(and[\\n\\s]*arg0-type1[\\n\\s]*arg0-type2\\)[\\n\\s]*\\(and[\\n\\s]*arg1-type1[\\n\\s]*arg1-type2[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*\\.\\.\\.\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(and[\\n\\s]*val-type1[\\n\\s]*val-type2\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*f\\)\\)"],["\\code\n%  (deftype standard-char () '(and character (satisfies standard-char-p)))\n% \\endcode","%[\\n\\s]*[\\n\\s]*\\(deftype[\\n\\s]*standard-char[\\n\\s]*\\(\\)[\\n\\s]*'\\(and[\\n\\s]*character[\\n\\s]*\\(satisfies[\\n\\s]*standard-char-p\\)\\)\\)[\\n\\s]*%"],["\\code\n (coerce '(a b c) 'vector) *→* #(A B C)\n (coerce 'a 'character) *→* #\\\\A\n (coerce 4.56 'complex) *→* #C(4.56 0.0)\n (coerce 4.5s0 'complex) *→* #C(4.5s0 0.0s0)\n (coerce 7/2 'complex) *→* 7/2\n (coerce 0 'short-float) *→* 0.0s0\n (coerce 3.5L0 'float) *→* 3.5L0\n (coerce 7/2 'float) *→* 3.5\n (coerce (cons 1 2) t) *→* (1 . 2)\n\\endcode","\\(coerce[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'vector\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\(A[\\n\\s]*B[\\n\\s]*C\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*'a[\\n\\s]*'character\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#\\\\\\\\A[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*4\\.56[\\n\\s]*'complex\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(4\\.56[\\n\\s]*0\\.0\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*4\\.5s0[\\n\\s]*'complex\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*#C\\(4\\.5s0[\\n\\s]*0\\.0s0\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*7/2[\\n\\s]*'complex\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*7/2[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*0[\\n\\s]*'short-float\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*0\\.0s0[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*3\\.5L0[\\n\\s]*'float\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.5L0[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*7/2[\\n\\s]*'float\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*3\\.5[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*\\(cons[\\n\\s]*1[\\n\\s]*2\\)[\\n\\s]*t\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\(1[\\n\\s]*\\.[\\n\\s]*2\\)"],["\\code\n (coerce '(a b c) '(vector * 4))\n (coerce #(a b c) '(vector * 4))\n (coerce '(a b c) '(vector * 2))\n (coerce #(a b c) '(vector * 2))\n (coerce \"foo\" '(string 2))\n (coerce #(#\\\\a #\\\\b #\\\\c) '(string 2))\n (coerce '(0 1) '(simple-bit-vector 3))\n\\endcode","\\(coerce[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*#\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*4\\)\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*'\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*#\\(a[\\n\\s]*b[\\n\\s]*c\\)[\\n\\s]*'\\(vector[\\n\\s]*\\*[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*\"foo\"[\\n\\s]*'\\(string[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*#\\(#\\\\\\\\a[\\n\\s]*#\\\\\\\\b[\\n\\s]*#\\\\\\\\c\\)[\\n\\s]*'\\(string[\\n\\s]*2\\)\\)[\\n\\s]*[\\n\\s]*\\(coerce[\\n\\s]*'\\(0[\\n\\s]*1\\)[\\n\\s]*'\\(simple-bit-vector[\\n\\s]*3\\)\\)"],["\\code\n (coerce x 't) \\EQ (identity x) \\EQ x\n\\endcode","\\(coerce[\\n\\s]*x[\\n\\s]*'t\\)[\\n\\s]*\\\\EQ[\\n\\s]*\\(identity[\\n\\s]*x\\)[\\n\\s]*\\\\EQ[\\n\\s]*x"],["\\code\n (defun equidimensional (a)\n   (or (&#60; (array-rank a) 2)\n       (apply #'= (array-dimensions a)))) *→* EQUIDIMENSIONAL\n (deftype square-matrix (&optional type size)\n   `(and (array ,type (,size ,size))\n         (satisfies equidimensional))) *→* SQUARE-MATRIX\n\\endcode","\\(defun[\\n\\s]*equidimensional[\\n\\s]*\\(a\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(or[\\n\\s]*\\(&#60;[\\n\\s]*\\(array-rank[\\n\\s]*a\\)[\\n\\s]*2\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(apply[\\n\\s]*#'=[\\n\\s]*\\(array-dimensions[\\n\\s]*a\\)\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*EQUIDIMENSIONAL[\\n\\s]*[\\n\\s]*\\(deftype[\\n\\s]*square-matrix[\\n\\s]*\\(&optional[\\n\\s]*type[\\n\\s]*size\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*`\\(and[\\n\\s]*\\(array[\\n\\s]*,type[\\n\\s]*\\(,size[\\n\\s]*,size\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(satisfies[\\n\\s]*equidimensional\\)\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SQUARE-MATRIX"],["\\code\n (subtypep '(array T1) '(array T2)) *→ true*\n\\endcode","\\(subtypep[\\n\\s]*'\\(array[\\n\\s]*T1\\)[\\n\\s]*'\\(array[\\n\\s]*T2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n (upgraded-array-element-type 'T1)  and\n (upgraded-array-element-type 'T2)  \n\\endcode","\\(upgraded-array-element-type[\\n\\s]*'T1\\)[\\n\\s]*[\\n\\s]*and[\\n\\s]*[\\n\\s]*\\(upgraded-array-element-type[\\n\\s]*'T2\\)"],["\\code\n (subtypep '(complex T1) '(complex T2)) *→ true*, true\n\\endcode","\\(subtypep[\\n\\s]*'\\(complex[\\n\\s]*T1\\)[\\n\\s]*'\\(complex[\\n\\s]*T2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true"],["\\code\n (subtypep '(complex single-float) '(complex float))\n\\endcode","\\(subtypep[\\n\\s]*'\\(complex[\\n\\s]*single-float\\)[\\n\\s]*'\\(complex[\\n\\s]*float\\)\\)"],["\\code\n (subtypep '(array single-float) '(array float))\n\\endcode","\\(subtypep[\\n\\s]*'\\(array[\\n\\s]*single-float\\)[\\n\\s]*'\\(array[\\n\\s]*float\\)\\)"],["\\code\n (subtypep 'compiled-function 'function) *→ true*, true\n (subtypep 'null 'list) *→ true*, true\n (subtypep 'null 'symbol) *→ true*, true\n (subtypep 'integer 'string) *→ false*, true\n (subtypep '(satisfies dummy) nil) *→ false*, \\term&#123;implementation-dependent&#125;\n (subtypep '(integer 1 3) '(integer 1 4)) *→ true*, true\n (subtypep '(integer (0) (0)) 'nil) *→ true*, true\n (subtypep 'nil '(integer (0) (0))) *→ true*, true\n (subtypep '(integer (0) (0)) '(member)) *→ true*, true ;or false, false\n (subtypep '(member) 'nil) *→ true*, true ;or false, false\n (subtypep 'nil '(member)) *→ true*, true ;or false, false\n\\endcode","\\(subtypep[\\n\\s]*'compiled-function[\\n\\s]*'function\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'null[\\n\\s]*'list\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'null[\\n\\s]*'symbol\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'integer[\\n\\s]*'string\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'\\(satisfies[\\n\\s]*dummy\\)[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*,[\\n\\s]*\\\\term&#123;implementation-dependent&#125;[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'\\(integer[\\n\\s]*1[\\n\\s]*3\\)[\\n\\s]*'\\(integer[\\n\\s]*1[\\n\\s]*4\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'\\(integer[\\n\\s]*\\(0\\)[\\n\\s]*\\(0\\)\\)[\\n\\s]*'nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'nil[\\n\\s]*'\\(integer[\\n\\s]*\\(0\\)[\\n\\s]*\\(0\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'\\(integer[\\n\\s]*\\(0\\)[\\n\\s]*\\(0\\)\\)[\\n\\s]*'\\(member\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*;or[\\n\\s]*false,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'\\(member\\)[\\n\\s]*'nil\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*;or[\\n\\s]*false,[\\n\\s]*false[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'nil[\\n\\s]*'\\(member\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*;or[\\n\\s]*false,[\\n\\s]*false"],["\\code\n  (subtypep (array-element-type (make-array 0 :element-type '&#60;aet-x&#62;))\n            (array-element-type (make-array 0 :element-type '&#60;aet-y&#62;)))\n*→ true*, true\n \n  (subtypep (array-element-type (make-array 0 :element-type '&#60;aet-y&#62;))\n            (array-element-type (make-array 0 :element-type '&#60;aet-x&#62;)))\n*→ true*, true\n\\endcode","\\(subtypep[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'&#60;aet-x&#62;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'&#60;aet-y&#62;\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'&#60;aet-y&#62;\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(array-element-type[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'&#60;aet-x&#62;\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true"],["\\code\n (subtypep '(array &#60;aet-x&#62;) '(array &#60;aet-y&#62;)) *→ true*, true\n (subtypep '(array &#60;aet-y&#62;) '(array &#60;aet-x&#62;)) *→ true*, true\n\\endcode","\\(subtypep[\\n\\s]*'\\(array[\\n\\s]*&#60;aet-x&#62;\\)[\\n\\s]*'\\(array[\\n\\s]*&#60;aet-y&#62;\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*'\\(array[\\n\\s]*&#60;aet-y&#62;\\)[\\n\\s]*'\\(array[\\n\\s]*&#60;aet-x&#62;\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true"],["\\code\n (subtypep (type-of \\param&#123;object&#125;) (class-of \\param&#123;object&#125;)) *→ true*, true\n\\endcode","\\(subtypep[\\n\\s]*\\(type-of[\\n\\s]*\\\\param&#123;object&#125;\\)[\\n\\s]*\\(class-of[\\n\\s]*\\\\param&#123;object&#125;\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true"],["\\code\n% (type-of \"abc\") *→* SIMPLE-STRING\n% (type-of \"abc\") *→* STRING\n% (type-of \"abc\") *→* ARRAY\n%\\endcode","%[\\n\\s]*\\(type-of[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SIMPLE-STRING[\\n\\s]*%[\\n\\s]*\\(type-of[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*STRING[\\n\\s]*%[\\n\\s]*\\(type-of[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*ARRAY[\\n\\s]*%"],["\\code\n\\endcode",""],["\\code\n (type-of 'a) *→* SYMBOL          \n (type-of '(1 . 2))\n*→* CONS\n\\OV (CONS FIXNUM FIXNUM)\n (type-of #c(0 1))\n*→* COMPLEX\n\\OV (COMPLEX INTEGER)\n (defstruct temp-struct x y z) *→* TEMP-STRUCT\n (type-of (make-temp-struct)) *→* TEMP-STRUCT\n (type-of \"abc\")\n*→* STRING\n\\OV (STRING 3)\n (subtypep (type-of \"abc\") 'string) *→ true*, true\n (type-of (expt 2 40))\n*→* BIGNUM\n\\OV INTEGER\n\\OV (INTEGER 1099511627776 1099511627776)\n\\OV SYSTEM::TWO-WORD-BIGNUM\n\\OV FIXNUM\n (subtypep (type-of 112312) 'integer) *→ true*, true\n (defvar *foo* (make-array 5 :element-type t)) *→* *FOO*\n (class-name (class-of *foo*)) *→* VECTOR\n (type-of *foo*)\n*→* VECTOR\n\\OV (VECTOR T 5)\n\\endcode","\\(type-of[\\n\\s]*'a\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*SYMBOL[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(type-of[\\n\\s]*'\\(1[\\n\\s]*\\.[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*CONS[\\n\\s]*\\\\OV[\\n\\s]*\\(CONS[\\n\\s]*FIXNUM[\\n\\s]*FIXNUM\\)[\\n\\s]*[\\n\\s]*\\(type-of[\\n\\s]*#c\\(0[\\n\\s]*1\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*COMPLEX[\\n\\s]*\\\\OV[\\n\\s]*\\(COMPLEX[\\n\\s]*INTEGER\\)[\\n\\s]*[\\n\\s]*\\(defstruct[\\n\\s]*temp-struct[\\n\\s]*x[\\n\\s]*y[\\n\\s]*z\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP-STRUCT[\\n\\s]*[\\n\\s]*\\(type-of[\\n\\s]*\\(make-temp-struct\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*TEMP-STRUCT[\\n\\s]*[\\n\\s]*\\(type-of[\\n\\s]*\"abc\"\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*STRING[\\n\\s]*\\\\OV[\\n\\s]*\\(STRING[\\n\\s]*3\\)[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*\\(type-of[\\n\\s]*\"abc\"\\)[\\n\\s]*'string\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(type-of[\\n\\s]*\\(expt[\\n\\s]*2[\\n\\s]*40\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*BIGNUM[\\n\\s]*\\\\OV[\\n\\s]*INTEGER[\\n\\s]*\\\\OV[\\n\\s]*\\(INTEGER[\\n\\s]*1099511627776[\\n\\s]*1099511627776\\)[\\n\\s]*\\\\OV[\\n\\s]*SYSTEM::TWO-WORD-BIGNUM[\\n\\s]*\\\\OV[\\n\\s]*FIXNUM[\\n\\s]*[\\n\\s]*\\(subtypep[\\n\\s]*\\(type-of[\\n\\s]*112312\\)[\\n\\s]*'integer\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*,[\\n\\s]*true[\\n\\s]*[\\n\\s]*\\(defvar[\\n\\s]*\\*foo\\*[\\n\\s]*\\(make-array[\\n\\s]*5[\\n\\s]*:element-type[\\n\\s]*t\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*\\*FOO\\*[\\n\\s]*[\\n\\s]*\\(class-name[\\n\\s]*\\(class-of[\\n\\s]*\\*foo\\*\\)\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VECTOR[\\n\\s]*[\\n\\s]*\\(type-of[\\n\\s]*\\*foo\\*\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*VECTOR[\\n\\s]*\\\\OV[\\n\\s]*\\(VECTOR[\\n\\s]*T[\\n\\s]*5\\)"],["\\code\n (typep realpart 'type-specifier)\n (typep imagpart 'type-specifier)\n\\endcode","\\(typep[\\n\\s]*realpart[\\n\\s]*'type-specifier\\)[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*imagpart[\\n\\s]*'type-specifier\\)"],["\\code\n (typep 12 'integer) *→ true*\n (typep (1+ most-positive-fixnum) 'fixnum) *→ false*\n (typep nil t) *→ true*\n (typep nil nil) *→ false*\n (typep 1 '(mod 2)) *→ true*\n (typep #c(1 1) '(complex (eql 1))) *→ true*\n;; To understand this next example, you might need to refer to\n;; \\secref\\RuleOfCanonRepForComplexRationals.\n (typep #c(0 0) '(complex (eql 0))) *→ false*\n\\endcode","\\(typep[\\n\\s]*12[\\n\\s]*'integer\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*\\(1\\+[\\n\\s]*most-positive-fixnum\\)[\\n\\s]*'fixnum\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*nil[\\n\\s]*t\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*nil[\\n\\s]*nil\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*1[\\n\\s]*'\\(mod[\\n\\s]*2\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*#c\\(1[\\n\\s]*1\\)[\\n\\s]*'\\(complex[\\n\\s]*\\(eql[\\n\\s]*1\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*;;[\\n\\s]*To[\\n\\s]*understand[\\n\\s]*this[\\n\\s]*next[\\n\\s]*example,[\\n\\s]*you[\\n\\s]*might[\\n\\s]*need[\\n\\s]*to[\\n\\s]*refer[\\n\\s]*to[\\n\\s]*;;[\\n\\s]*\\\\secref\\\\RuleOfCanonRepForComplexRationals\\.[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*#c\\(0[\\n\\s]*0\\)[\\n\\s]*'\\(complex[\\n\\s]*\\(eql[\\n\\s]*0\\)\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*false\\*"],["\\code\n (upgraded-array-element-type 'A\\sssx)\n\\endcode","\\(upgraded-array-element-type[\\n\\s]*'A\\\\sssx\\)"],["\\code\n (upgraded-array-element-type 'A\\sssy)\n\\endcode","\\(upgraded-array-element-type[\\n\\s]*'A\\\\sssy\\)"],["\\code\n (typep (make-array 0 :element-type 'A\\sssx) '(array A\\sssx)) *→ true*\n (typep (make-array 0 :element-type 'A\\sssy) '(array A\\sssy)) *→ true*\n (typep (make-array 0 :element-type 'A\\sssx) '(array A\\sssy)) *→ true*\n (typep (make-array 0 :element-type 'A\\sssy) '(array A\\sssx)) *→ true*\n\\endcode","\\(typep[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'A\\\\sssx\\)[\\n\\s]*'\\(array[\\n\\s]*A\\\\sssx\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'A\\\\sssy\\)[\\n\\s]*'\\(array[\\n\\s]*A\\\\sssy\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'A\\\\sssx\\)[\\n\\s]*'\\(array[\\n\\s]*A\\\\sssy\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*[\\n\\s]*[\\n\\s]*\\(typep[\\n\\s]*\\(make-array[\\n\\s]*0[\\n\\s]*:element-type[\\n\\s]*'A\\\\sssy\\)[\\n\\s]*'\\(array[\\n\\s]*A\\\\sssx\\)\\)[\\n\\s]*\\*\\→[\\n\\s]*true\\*"],["\\code\n\n\\endcode",""],["\\code\n (defun fix-digits (condition)\n   (check-type condition type-error)\n   (let* ((digits '(zero one two three four\n                   five six seven eight nine))\n         (val (position (type-error-datum condition) digits)))\n     (if (and val (subtypep 'fixnum (type-error-expected-type condition)))\n         (store-value 7))))\n \n (defun foo (x)\n   (handler-bind ((type-error #'fix-digits))\n     (check-type x number)\n     (+ x 3)))\n \n (foo 'seven)\n*→* 10\n\\endcode","\\(defun[\\n\\s]*fix-digits[\\n\\s]*\\(condition\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*condition[\\n\\s]*type-error\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(let\\*[\\n\\s]*\\(\\(digits[\\n\\s]*'\\(zero[\\n\\s]*one[\\n\\s]*two[\\n\\s]*three[\\n\\s]*four[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*five[\\n\\s]*six[\\n\\s]*seven[\\n\\s]*eight[\\n\\s]*nine\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(val[\\n\\s]*\\(position[\\n\\s]*\\(type-error-datum[\\n\\s]*condition\\)[\\n\\s]*digits\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(if[\\n\\s]*\\(and[\\n\\s]*val[\\n\\s]*\\(subtypep[\\n\\s]*'fixnum[\\n\\s]*\\(type-error-expected-type[\\n\\s]*condition\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(store-value[\\n\\s]*7\\)\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(defun[\\n\\s]*foo[\\n\\s]*\\(x\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(handler-bind[\\n\\s]*\\(\\(type-error[\\n\\s]*#'fix-digits\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(check-type[\\n\\s]*x[\\n\\s]*number\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(\\+[\\n\\s]*x[\\n\\s]*3\\)\\)\\)[\\n\\s]*[\\n\\s]*[\\n\\s]*[\\n\\s]*\\(foo[\\n\\s]*'seven\\)[\\n\\s]*\\*\\→\\*[\\n\\s]*10"],["\\code...\\endcode","\\.\\.\\."],["\\code&#123;\\screen!&#125;\n\\def\\endcode","&#123;\\\\screen!&#125;[\\n\\s]*\\\\def"]]